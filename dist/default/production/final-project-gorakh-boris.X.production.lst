

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 06 13:54:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 18/08/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataCOMRAM
    98   001A6E                     __pidataCOMRAM:
    99                           	callstack 0
   100                           
   101                           ;initializer for _timer_high_pointer
   102   001A6E  CC                 	db	low _trail_timer_high
   103   001A6F  01                 	db	high _trail_timer_high
   104                           
   105                           	psect	idataBANK0
   106   0019E6                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _manoeuvre_pointer
   110   0019E6  A4                 	db	low _trail_manoeuvre
   111   0019E7  01                 	db	high _trail_manoeuvre
   112                           
   113                           ;initializer for _timer_low_pointer
   114   0019E8  B8                 	db	low _trail_timer_low
   115   0019E9  01                 	db	high _trail_timer_low
   116                           
   117                           ;initializer for _squareDelay
   118   0019EA  012C               	dw	300
   119                           
   120                           ;initializer for _headbuttDelay
   121   0019EC  0046               	dw	70
   122                           
   123                           ;initializer for _turn180Delay
   124   0019EE  01FE               	dw	510
   125                           
   126                           ;initializer for _turnRight135Delay
   127   0019F0  012C               	dw	300
   128                           
   129                           ;initializer for _turnLeft135Delay
   130   0019F2  012C               	dw	300
   131                           
   132                           ;initializer for _turnRight90Delay
   133   0019F4  00AF               	dw	175
   134                           
   135                           ;initializer for _turnLeft90Delay
   136   0019F6  00AF               	dw	175
   137                           
   138                           ;initializer for _wall_threshold
   139   0019F8  012C               	dw	300
   140                           
   141                           ;initializer for _turningGear
   142   0019FA  2A                 	db	42
   143                           
   144                           ;initializer for _topGearRight
   145   0019FB  14                 	db	20
   146                           
   147                           ;initializer for _topGearLeft
   148   0019FC  14                 	db	20
   149                           
   150                           ;initializer for _rampDelay
   151   0019FD  08                 	db	8
   152   000000                     _TMR0H	set	4052
   153   000000                     _TX4REG	set	3812
   154   000000                     _RC4STAbits	set	3815
   155   000000                     _SP4BRGH	set	3814
   156   000000                     _LATEbits	set	3965
   157   000000                     _TRISEbits	set	3973
   158   000000                     _LATGbits	set	3967
   159   000000                     _TRISGbits	set	3975
   160   000000                     _LATFbits	set	3966
   161   000000                     _LATHbits	set	3968
   162   000000                     _TRISFbits	set	3974
   163   000000                     _TRISHbits	set	3976
   164   000000                     _SSP2CON2bits	set	3802
   165   000000                     _RX4PPS	set	3605
   166   000000                     _SSP2CLKPPS	set	3612
   167   000000                     _SSP2DATPPS	set	3613
   168   000000                     _RC7PPS	set	3689
   169   000000                     _RE2PPS	set	3700
   170   000000                     _LATAbits	set	3961
   171   000000                     _LATDbits	set	3964
   172   000000                     _TRISDbits	set	3972
   173   000000                     _T2PR	set	4028
   174   000000                     _T2CONbits	set	4029
   175   000000                     _CCPR2H	set	4006
   176   000000                     _CCPR1H	set	4010
   177   000000                     _TRISCbits	set	3971
   178   000000                     _TRISAbits	set	3969
   179   000000                     _LATCbits	set	3963
   180   000000                     _RE4PPS	set	3702
   181   000000                     _RG6PPS	set	3720
   182   000000                     _RD5PPS	set	3695
   183   000000                     _ANSELDbits	set	3751
   184   000000                     _SSP2ADD	set	3798
   185   000000                     _SSP2CON1bits	set	3801
   186   000000                     _CCPR4H	set	3873
   187   000000                     _CCPR3H	set	3877
   188   000000                     _TMR0L	set	4051
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _CCP2CONbits	set	4007
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _CCP4CONbits	set	3874
   198   000000                     _RC4REG	set	3811
   199   000000                     _SP4BRGL	set	3813
   200   000000                     _TX4STAbits	set	3816
   201   000000                     _BAUD4CONbits	set	3817
   202   000000                     _SSP2CON2	set	3802
   203   000000                     _SSP2STAT	set	3800
   204   000000                     _ANSELFbits	set	3764
   205   000000                     _SSP2BUF	set	3797
   206   000000                     _PIE0bits	set	3625
   207   000000                     _PIE4bits	set	3629
   208   000000                     _PIR4bits	set	3639
   209   000000                     _RC0PPS	set	3682
   210   000000                     _RD6PPS	set	3696
   211   000000                     _PIR0bits	set	3635
   212   000000                     _INTCONbits	set	4082
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_5:
   219                           
   220                           ; BSR set to: 14
   221   000E01  25                 	db	37
   222   000E02  64                 	db	100	;'d'
   223   000E03  20                 	db	32
   224   000E04  25                 	db	37
   225   000E05  64                 	db	100	;'d'
   226   000E06  20                 	db	32
   227   000E07  25                 	db	37
   228   000E08  64                 	db	100	;'d'
   229   000E09  20                 	db	32
   230   000E0A  25                 	db	37
   231   000E0B  64                 	db	100	;'d'
   232   000E0C  20                 	db	32
   233   000E0D  0D                 	db	13
   234   000E0E  00                 	db	0
   235   000E0F                     STR_2:
   236                           
   237                           ; BSR set to: 14
   238   000E0F  25                 	db	37
   239   000E10  64                 	db	100	;'d'
   240   000E11  20                 	db	32
   241   000E12  00                 	db	0
   242   000E13  00                 	db	0	; dummy byte at the end
   243   000000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247   00141A                     __pcinit:
   248                           	callstack 0
   249   00141A                     start_initialization:
   250                           	callstack 0
   251   00141A                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK0 (24 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256   00141A  0EE6               	movlw	low __pidataBANK0
   257   00141C  6EF6               	movwf	tblptrl,c
   258   00141E  0E19               	movlw	high __pidataBANK0
   259   001420  6EF7               	movwf	tblptrh,c
   260   001422  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261   001424  6EF8               	movwf	tblptru,c
   262   001426  EE00  F0E0         	lfsr	0,__pdataBANK0
   263   00142A  EE10 F018          	lfsr	1,24
   264   00142E                     copy_data0:
   265   00142E  0009               	tblrd		*+
   266   001430  CFF5 FFEE          	movff	tablat,postinc0
   267   001434  50E5               	movf	postdec1,w,c
   268   001436  50E1               	movf	fsr1l,w,c
   269   001438  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to COMRAM (2 bytes)
   272                           ; load TBLPTR registers with __pidataCOMRAM
   273   00143A  0E6E               	movlw	low __pidataCOMRAM
   274   00143C  6EF6               	movwf	tblptrl,c
   275   00143E  0E1A               	movlw	high __pidataCOMRAM
   276   001440  6EF7               	movwf	tblptrh,c
   277   001442  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   278   001444  6EF8               	movwf	tblptru,c
   279   001446  0009               	tblrd		*+	;fetch initializer
   280   001448  CFF5 F045          	movff	tablat,__pdataCOMRAM
   281   00144C  0009               	tblrd		*+	;fetch initializer
   282   00144E  CFF5 F046          	movff	tablat,__pdataCOMRAM+1
   283                           
   284                           ; Clear objects allocated to BANK2 (60 bytes)
   285   001452  EE02  F000         	lfsr	0,__pbssBANK2
   286   001456  0E3C               	movlw	60
   287   001458                     clear_0:
   288   001458  6AEE               	clrf	postinc0,c
   289   00145A  06E8               	decf	wreg,f,c
   290   00145C  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK1 (60 bytes)
   293   00145E  EE01  F0A4         	lfsr	0,__pbssBANK1
   294   001462  0E3C               	movlw	60
   295   001464                     clear_1:
   296   001464  6AEE               	clrf	postinc0,c
   297   001466  06E8               	decf	wreg,f,c
   298   001468  E1FD               	bnz	clear_1
   299                           
   300                           ; Clear objects allocated to BANK0 (61 bytes)
   301   00146A  EE00  F0A3         	lfsr	0,__pbssBANK0
   302   00146E  0E3D               	movlw	61
   303   001470                     clear_2:
   304   001470  6AEE               	clrf	postinc0,c
   305   001472  06E8               	decf	wreg,f,c
   306   001474  E1FD               	bnz	clear_2
   307                           
   308                           ; Clear objects allocated to COMRAM (5 bytes)
   309   001476  6A44               	clrf	(__pbssCOMRAM+4)& (0+255),c
   310   001478  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   311   00147A  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   312   00147C  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   313   00147E  6A40               	clrf	__pbssCOMRAM& (0+255),c
   314   001480                     end_of_initialization:
   315                           	callstack 0
   316   001480                     __end_of__initialization:
   317                           	callstack 0
   318   001480  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   319   001482  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   320   001484  0100               	movlb	0
   321   001486  EF05  F008         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324   000040                     __pbssCOMRAM:
   325                           	callstack 0
   326   000040                     _returning:
   327                           	callstack 0
   328   000040                     	ds	1
   329   000041                     _TxBufReadCnt:
   330                           	callstack 0
   331   000041                     	ds	1
   332   000042                     _TxBufWriteCnt:
   333                           	callstack 0
   334   000042                     	ds	1
   335   000043                     _RxBufReadCnt:
   336                           	callstack 0
   337   000043                     	ds	1
   338   000044                     _RxBufWriteCnt:
   339                           	callstack 0
   340   000044                     	ds	1
   341                           
   342                           	psect	dataCOMRAM
   343   000045                     __pdataCOMRAM:
   344                           	callstack 0
   345   000045                     _timer_high_pointer:
   346                           	callstack 0
   347   000045                     	ds	2
   348                           
   349                           	psect	bssBANK0
   350   0000A3                     __pbssBANK0:
   351                           	callstack 0
   352   0000A3                     _dbuf:
   353                           	callstack 0
   354   0000A3                     	ds	32
   355   0000C3                     _EUSART4RXbuf:
   356                           	callstack 0
   357   0000C3                     	ds	20
   358   0000D7                     _nout:
   359                           	callstack 0
   360   0000D7                     	ds	2
   361   0000D9                     _width:
   362                           	callstack 0
   363   0000D9                     	ds	2
   364   0000DB                     _prec:
   365                           	callstack 0
   366   0000DB                     	ds	2
   367   0000DD                     _flags:
   368                           	callstack 0
   369   0000DD                     	ds	1
   370   0000DE                     _manoeuvre_count:
   371                           	callstack 0
   372   0000DE                     	ds	1
   373   0000DF                     _return_flag:
   374                           	callstack 0
   375   0000DF                     	ds	1
   376                           
   377                           	psect	dataBANK0
   378   0000E0                     __pdataBANK0:
   379                           	callstack 0
   380   0000E0                     _manoeuvre_pointer:
   381                           	callstack 0
   382   0000E0                     	ds	2
   383   0000E2                     _timer_low_pointer:
   384                           	callstack 0
   385   0000E2                     	ds	2
   386   0000E4                     _squareDelay:
   387                           	callstack 0
   388   0000E4                     	ds	2
   389   0000E6                     _headbuttDelay:
   390                           	callstack 0
   391   0000E6                     	ds	2
   392   0000E8                     _turn180Delay:
   393                           	callstack 0
   394   0000E8                     	ds	2
   395   0000EA                     _turnRight135Delay:
   396                           	callstack 0
   397   0000EA                     	ds	2
   398   0000EC                     _turnLeft135Delay:
   399                           	callstack 0
   400   0000EC                     	ds	2
   401   0000EE                     _turnRight90Delay:
   402                           	callstack 0
   403   0000EE                     	ds	2
   404   0000F0                     _turnLeft90Delay:
   405                           	callstack 0
   406   0000F0                     	ds	2
   407   0000F2                     _wall_threshold:
   408                           	callstack 0
   409   0000F2                     	ds	2
   410   0000F4                     _turningGear:
   411                           	callstack 0
   412   0000F4                     	ds	1
   413   0000F5                     _topGearRight:
   414                           	callstack 0
   415   0000F5                     	ds	1
   416   0000F6                     _topGearLeft:
   417                           	callstack 0
   418   0000F6                     	ds	1
   419   0000F7                     _rampDelay:
   420                           	callstack 0
   421   0000F7                     	ds	1
   422                           
   423                           	psect	bssBANK1
   424   0001A4                     __pbssBANK1:
   425                           	callstack 0
   426   0001A4                     _trail_manoeuvre:
   427                           	callstack 0
   428   0001A4                     	ds	20
   429   0001B8                     _trail_timer_low:
   430                           	callstack 0
   431   0001B8                     	ds	20
   432   0001CC                     _trail_timer_high:
   433                           	callstack 0
   434   0001CC                     	ds	20
   435                           
   436                           	psect	bssBANK2
   437   000200                     __pbssBANK2:
   438                           	callstack 0
   439   000200                     _EUSART4TXbuf:
   440                           	callstack 0
   441   000200                     	ds	60
   442                           
   443                           	psect	cstackBANK1
   444   000100                     __pcstackBANK1:
   445                           	callstack 0
   446   000100                     sendArrayCharSerial4@tempStr:
   447                           	callstack 0
   448                           
   449                           ; 161 bytes @ 0x0
   450   000100                     	ds	161
   451   0001A1                     sendArrayCharSerial4@index:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xA1
   455   0001A1                     	ds	1
   456   0001A2                     sendArrayCharSerial4@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xA2
   460   0001A2                     	ds	2
   461                           
   462                           	psect	cstackBANK0
   463   000060                     __pcstackBANK0:
   464                           	callstack 0
   465   000060                     sendRGBCvalSerial4@tempStr:
   466                           	callstack 0
   467                           
   468                           ; 41 bytes @ 0x0
   469   000060                     	ds	41
   470   000089                     main@measured_colour:
   471                           	callstack 0
   472                           
   473                           ; 8 bytes @ 0x29
   474   000089                     	ds	8
   475   000091                     main@motorL:
   476                           	callstack 0
   477                           
   478                           ; 9 bytes @ 0x31
   479   000091                     	ds	9
   480   00009A                     main@motorR:
   481                           	callstack 0
   482                           
   483                           ; 9 bytes @ 0x3A
   484   00009A                     	ds	9
   485                           
   486                           	psect	cstackCOMRAM
   487   000001                     __pcstackCOMRAM:
   488                           	callstack 0
   489   000001                     ??_I2C_2_Master_Idle:
   490   000001                     ?___awdiv:
   491                           	callstack 0
   492   000001                     ?___awmod:
   493                           	callstack 0
   494   000001                     sendCharSerial4@charToSend:
   495                           	callstack 0
   496   000001                     read_timer@tH:
   497                           	callstack 0
   498   000001                     write_timer@tL:
   499                           	callstack 0
   500   000001                     write_trail@tL:
   501                           	callstack 0
   502   000001                     initDCmotorsPWM@PWMperiod:
   503                           	callstack 0
   504   000001                     ___awdiv@dividend:
   505                           	callstack 0
   506   000001                     ___awmod@dividend:
   507                           	callstack 0
   508   000001                     fputc@c:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x0
   512   000001                     	ds	1
   513   000002                     ??_I2C_2_Master_Read:
   514   000002                     I2C_2_Master_Write@data_byte:
   515                           	callstack 0
   516   000002                     read_timer@tL:
   517                           	callstack 0
   518   000002                     write_timer@tH:
   519                           	callstack 0
   520   000002                     write_trail@man:
   521                           	callstack 0
   522   000002                     sendStringSerial4@string:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1
   526   000002                     	ds	1
   527   000003                     color_writetoaddr@value:
   528                           	callstack 0
   529   000003                     I2C_2_Master_Read@ack:
   530                           	callstack 0
   531   000003                     write_trail@tH:
   532                           	callstack 0
   533   000003                     fputc@fp:
   534                           	callstack 0
   535   000003                     ___awdiv@divisor:
   536                           	callstack 0
   537   000003                     ___awmod@divisor:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2
   541   000003                     	ds	1
   542   000004                     ??_fputc:
   543   000004                     color_writetoaddr@address:
   544                           	callstack 0
   545   000004                     I2C_2_Master_Read@tmp:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x3
   549   000004                     	ds	1
   550   000005                     ??_color_click_init:
   551   000005                     ?_color_read_Red:
   552                           	callstack 0
   553   000005                     ?_color_read_Blue:
   554                           	callstack 0
   555   000005                     ?_color_read_Green:
   556                           	callstack 0
   557   000005                     ?_color_read_Clear:
   558                           	callstack 0
   559   000005                     ___awdiv@counter:
   560                           	callstack 0
   561   000005                     ___awmod@counter:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x4
   565   000005                     	ds	1
   566   000006                     ___awdiv@sign:
   567                           	callstack 0
   568   000006                     ___awmod@sign:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x5
   572   000006                     	ds	1
   573   000007                     ??_color_read_Red:
   574   000007                     ??_color_read_Blue:
   575   000007                     ??_color_read_Green:
   576   000007                     ??_color_read_Clear:
   577   000007                     ?_abs:
   578                           	callstack 0
   579   000007                     ___awdiv@quotient:
   580                           	callstack 0
   581   000007                     abs@a:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x6
   585   000007                     	ds	2
   586   000009                     ??_abs:
   587                           
   588                           ; 1 bytes @ 0x8
   589   000009                     	ds	1
   590   00000A                     color_read_Red@tmp:
   591                           	callstack 0
   592   00000A                     color_read_Blue@tmp:
   593                           	callstack 0
   594   00000A                     color_read_Green@tmp:
   595                           	callstack 0
   596   00000A                     color_read_Clear@tmp:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x9
   600   00000A                     	ds	1
   601   00000B                     ?_vfpfcnvrt:
   602                           	callstack 0
   603   00000B                     vfpfcnvrt@fp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xA
   607   00000B                     	ds	1
   608   00000C                     getRGBCval@p:
   609                           	callstack 0
   610   00000C                     vfpfcnvrt@fmt:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xB
   614   00000C                     	ds	1
   615   00000D                     wait_for_wall@p:
   616                           	callstack 0
   617   00000D                     vfpfcnvrt@ap:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0xC
   621   00000D                     	ds	1
   622   00000E                     ??_wait_for_wall:
   623   00000E                     ??_vfpfcnvrt:
   624                           
   625                           ; 1 bytes @ 0xD
   626   00000E                     	ds	1
   627   00000F                     vfpfcnvrt@done:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xE
   631   00000F                     	ds	1
   632   000010                     vfpfcnvrt@cnt:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xF
   636   000010                     	ds	2
   637   000012                     vfpfcnvrt@cp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x11
   641   000012                     	ds	1
   642   000013                     vfpfcnvrt@convarg:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x12
   646   000013                     	ds	4
   647   000017                     vfpfcnvrt@c:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x16
   651   000017                     	ds	1
   652   000018                     ?_vfprintf:
   653                           	callstack 0
   654   000018                     vfprintf@fp:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x17
   658   000018                     	ds	1
   659   000019                     vfprintf@fmt:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x18
   663   000019                     	ds	1
   664   00001A                     vfprintf@ap:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x19
   668   00001A                     	ds	1
   669   00001B                     vfprintf@cfmt:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x1A
   673   00001B                     	ds	1
   674   00001C                     ?_sprintf:
   675                           	callstack 0
   676   00001C                     sprintf@s:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x1B
   680   00001C                     	ds	2
   681   00001E                     sprintf@fmt:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x1D
   685   00001E                     	ds	9
   686   000027                     sprintf@ret:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x26
   690   000027                     	ds	2
   691   000029                     sprintf@ap:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x28
   695   000029                     	ds	1
   696   00002A                     sprintf@f:
   697                           	callstack 0
   698                           
   699                           ; 12 bytes @ 0x29
   700   00002A                     	ds	12
   701   000036                     sendRGBCvalSerial4@col_val:
   702                           	callstack 0
   703   000036                     sendArrayCharSerial4@arr:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x35
   707   000036                     	ds	1
   708   000037                     
   709                           ; 1 bytes @ 0x36
   710   000037                     	ds	1
   711   000038                     ??_sendArrayCharSerial4:
   712                           
   713                           ; 1 bytes @ 0x37
   714   000038                     	ds	1
   715   000039                     forward_navigation@mL:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x38
   719   000039                     	ds	1
   720   00003A                     forward_navigation@mR:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x39
   724   00003A                     	ds	1
   725   00003B                     forward_navigation@col:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x3A
   729   00003B                     	ds	1
   730   00003C                     forward_navigation@timerH:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x3B
   734   00003C                     	ds	1
   735   00003D                     forward_navigation@timerL:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x3C
   739   00003D                     	ds	1
   740   00003E                     ??_main:
   741                           
   742                           ; 1 bytes @ 0x3D
   743   00003E                     	ds	2
   744                           
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 27 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  motorR          9   58[BANK0 ] struct DC_motor
   755 ;;  motorL          9   49[BANK0 ] struct DC_motor
   756 ;;  measured_col    8   41[BANK0 ] struct RGBC_val
   757 ;;  PWMcycle        2    0        unsigned int 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;      Totals:         2      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   771 ;;Total ram usage:       28 bytes
   772 ;; Hardware stack levels required when called: 8
   773 ;; This function calls:
   774 ;;		_Timer0_init
   775 ;;		_buggy_lights_init
   776 ;;		_color_click_init
   777 ;;		_forward_navigation
   778 ;;		_getRGBCval
   779 ;;		_initDCmotorsPWM
   780 ;;		_initUSART4
   781 ;;		_sendRGBCvalSerial4
   782 ;; This function is called by:
   783 ;;		Startup code after reset
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text0
   788   00100A                     __ptext0:
   789                           	callstack 0
   790   00100A                     _main:
   791                           	callstack 23
   792   00100A                     
   793                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 33:     motorL.power = 0;
   794   00100A  0E00               	movlw	0
   795   00100C  0100               	movlb	0	; () banked
   796   00100E  6F91               	movwf	main@motorL& (0+255),b
   797                           
   798                           ;main.c: 34:     motorL.direction = 1;
   799   001010  0E01               	movlw	1
   800   001012  6F92               	movwf	(main@motorL+1)& (0+255),b
   801                           
   802                           ;main.c: 35:     motorL.brakemode = 1;
   803   001014  0E01               	movlw	1
   804   001016  6F93               	movwf	(main@motorL+2)& (0+255),b
   805   001018                     
   806                           ; BSR set to: 0
   807                           ;main.c: 36:     motorL.PWMperiod = PWMcycle;
   808   001018  0E00               	movlw	0
   809   00101A  6F95               	movwf	(main@motorL+4)& (0+255),b
   810   00101C  0E63               	movlw	99
   811   00101E  6F94               	movwf	(main@motorL+3)& (0+255),b
   812   001020                     
   813                           ; BSR set to: 0
   814                           ;main.c: 37:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   815   001020  0EAA               	movlw	170
   816   001022  6F96               	movwf	(main@motorL+5)& (0+255),b
   817   001024  0E0F               	movlw	15
   818   001026  6F97               	movwf	(main@motorL+6)& (0+255),b
   819   001028                     
   820                           ; BSR set to: 0
   821                           ;main.c: 38:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   822   001028  0EA6               	movlw	166
   823   00102A  6F98               	movwf	(main@motorL+7)& (0+255),b
   824   00102C  0E0F               	movlw	15
   825   00102E  6F99               	movwf	(main@motorL+8)& (0+255),b
   826                           
   827                           ;main.c: 40:     motorR.power = 0;
   828   001030  0E00               	movlw	0
   829   001032  6F9A               	movwf	main@motorR& (0+255),b
   830                           
   831                           ;main.c: 41:     motorR.direction = 1;
   832   001034  0E01               	movlw	1
   833   001036  6F9B               	movwf	(main@motorR+1)& (0+255),b
   834                           
   835                           ;main.c: 42:     motorR.brakemode = 1;
   836   001038  0E01               	movlw	1
   837   00103A  6F9C               	movwf	(main@motorR+2)& (0+255),b
   838   00103C                     
   839                           ; BSR set to: 0
   840                           ;main.c: 43:     motorR.PWMperiod = PWMcycle;
   841   00103C  0E00               	movlw	0
   842   00103E  6F9E               	movwf	(main@motorR+4)& (0+255),b
   843   001040  0E63               	movlw	99
   844   001042  6F9D               	movwf	(main@motorR+3)& (0+255),b
   845   001044                     
   846                           ; BSR set to: 0
   847                           ;main.c: 44:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   848   001044  0E25               	movlw	37
   849   001046  6F9F               	movwf	(main@motorR+5)& (0+255),b
   850   001048  0E0F               	movlw	15
   851   00104A  6FA0               	movwf	(main@motorR+6)& (0+255),b
   852   00104C                     
   853                           ; BSR set to: 0
   854                           ;main.c: 45:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   855   00104C  0E21               	movlw	33
   856   00104E  6FA1               	movwf	(main@motorR+7)& (0+255),b
   857   001050  0E0F               	movlw	15
   858   001052  6FA2               	movwf	(main@motorR+8)& (0+255),b
   859   001054                     
   860                           ; BSR set to: 0
   861                           ;main.c: 47:     initDCmotorsPWM(PWMcycle);
   862   001054  0E00               	movlw	0
   863   001056  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   864   001058  0E63               	movlw	99
   865   00105A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   866   00105C  EC8A  F009         	call	_initDCmotorsPWM	;wreg free
   867                           
   868                           ;main.c: 48:     buggy_lights_init();
   869   001060  EC82  F00C         	call	_buggy_lights_init	;wreg free
   870   001064                     
   871                           ;main.c: 49:     color_click_init();
   872   001064  EC68  F00C         	call	_color_click_init	;wreg free
   873   001068                     
   874                           ;main.c: 50:     initUSART4();
   875   001068  ECE4  F00C         	call	_initUSART4	;wreg free
   876   00106C                     
   877                           ;main.c: 51:     Timer0_init();
   878   00106C  ECC2  F00C         	call	_Timer0_init	;wreg free
   879   001070                     
   880                           ;main.c: 55:         TRISDbits.TRISD7 = 0;
   881   001070  9E84               	bcf	132,7,c	;volatile
   882   001072                     
   883                           ;main.c: 56:         TRISHbits.TRISH3 = 0;
   884   001072  9688               	bcf	136,3,c	;volatile
   885   001074                     
   886                           ;main.c: 58:         LATDbits.LATD7 = 0;
   887   001074  9E7C               	bcf	124,7,c	;volatile
   888   001076                     
   889                           ;main.c: 59:         LATHbits.LATH3 = 0;
   890   001076  9680               	bcf	128,3,c	;volatile
   891   001078                     
   892                           ;main.c: 63:         TRISFbits.TRISF2 = 1;
   893   001078  8486               	bsf	134,2,c	;volatile
   894   00107A                     
   895                           ;main.c: 64:         TRISFbits.TRISF3 = 1;
   896   00107A  8686               	bsf	134,3,c	;volatile
   897   00107C                     
   898                           ;main.c: 66:         ANSELFbits.ANSELF2 = 0;
   899   00107C  010E               	movlb	14	; () banked
   900   00107E  95B4               	bcf	180,2,b	;volatile
   901   001080                     
   902                           ; BSR set to: 14
   903                           ;main.c: 67:         ANSELFbits.ANSELF3 = 0;
   904   001080  97B4               	bcf	180,3,b	;volatile
   905                           
   906                           ;main.c: 72:     LATHbits.LATH3 = !LATHbits.LATH3;
   907   001082  A680               	btfss	128,3,c	;volatile
   908   001084  EF46  F008         	goto	u2521
   909   001088  EF4A  F008         	goto	u2520
   910   00108C                     u2521:
   911   00108C  6A3E               	clrf	??_main^0,c
   912   00108E  2A3E               	incf	??_main^0,f,c
   913   001090  EF4B  F008         	goto	u2538
   914   001094                     u2520:
   915   001094  6A3E               	clrf	??_main^0,c
   916   001096                     u2538:
   917   001096  463E               	rlncf	??_main^0,f,c
   918   001098  463E               	rlncf	??_main^0,f,c
   919   00109A  463E               	rlncf	??_main^0,f,c
   920   00109C  5080               	movf	128,w,c	;volatile
   921   00109E  183E               	xorwf	??_main^0,w,c
   922   0010A0  0BF7               	andlw	-9
   923   0010A2  183E               	xorwf	??_main^0,w,c
   924   0010A4  6E80               	movwf	128,c	;volatile
   925   0010A6                     
   926                           ;main.c: 74:     forward_navigation(&motorL, &motorR, &measured_colour);
   927   0010A6  0E91               	movlw	low main@motorL
   928   0010A8  6E39               	movwf	forward_navigation@mL^0,c
   929   0010AA  0E9A               	movlw	low main@motorR
   930   0010AC  6E3A               	movwf	forward_navigation@mR^0,c
   931   0010AE  0E89               	movlw	low main@measured_colour
   932   0010B0  6E3B               	movwf	forward_navigation@col^0,c
   933   0010B2  ECFB  F00A         	call	_forward_navigation	;wreg free
   934   0010B6                     l3839:
   935                           
   936                           ;main.c: 77:         getRGBCval(&measured_colour);
   937   0010B6  0E89               	movlw	low main@measured_colour
   938   0010B8  6E0C               	movwf	getRGBCval@p^0,c
   939   0010BA  ECA5  F00A         	call	_getRGBCval	;wreg free
   940   0010BE                     
   941                           ;main.c: 78:         sendRGBCvalSerial4(&measured_colour);
   942   0010BE  0E89               	movlw	low main@measured_colour
   943   0010C0  6E36               	movwf	sendRGBCvalSerial4@col_val^0,c
   944   0010C2  EC76  F00A         	call	_sendRGBCvalSerial4	;wreg free
   945   0010C6                     
   946                           ;main.c: 79:         _delay((unsigned long)((250)*(64000000/4000.0)));
   947   0010C6  0E15               	movlw	21
   948   0010C8  6E3F               	movwf	(??_main+1)^0,c
   949   0010CA  0E4B               	movlw	75
   950   0010CC  6E3E               	movwf	??_main^0,c
   951   0010CE  0EBE               	movlw	190
   952   0010D0                     u2577:
   953   0010D0  2EE8               	decfsz	wreg,f,c
   954   0010D2  D7FE               	bra	u2577
   955   0010D4  2E3E               	decfsz	??_main^0,f,c
   956   0010D6  D7FC               	bra	u2577
   957   0010D8  2E3F               	decfsz	(??_main+1)^0,f,c
   958   0010DA  D7FA               	bra	u2577
   959   0010DC  D000               	nop2	
   960   0010DE  EF5B  F008         	goto	l3839
   961   0010E2  EF1C  F000         	goto	start
   962   0010E6                     __end_of_main:
   963                           	callstack 0
   964                           
   965 ;; *************** function _sendRGBCvalSerial4 *****************
   966 ;; Defined at:
   967 ;;		line 62 in file "serial.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  col_val         1   53[COMRAM] PTR struct RGBC_val
   970 ;;		 -> main@measured_colour(8), 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  tempStr        41    0[BANK0 ] unsigned char [41]
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   982 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   985 ;;      Totals:         1      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;Total ram usage:       42 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 6
   989 ;; This function calls:
   990 ;;		_sendStringSerial4
   991 ;;		_sprintf
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text1
   998   0014EC                     __ptext1:
   999                           	callstack 0
  1000   0014EC                     _sendRGBCvalSerial4:
  1001                           	callstack 24
  1002   0014EC                     
  1003                           ;serial.c: 63:     char tempStr[41];;serial.c: 64:     sprintf(tempStr, "%d %d %d %d \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  1004   0014EC  0E60               	movlw	low sendRGBCvalSerial4@tempStr
  1005   0014EE  6E1C               	movwf	sprintf@s^0,c
  1006   0014F0  6A1D               	clrf	(sprintf@s+1)^0,c
  1007   0014F2  0E01               	movlw	low STR_5
  1008   0014F4  6E1E               	movwf	sprintf@fmt^0,c
  1009   0014F6  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1010   0014F8  6ED9               	movwf	fsr2l,c
  1011   0014FA  6ADA               	clrf	fsr2h,c
  1012   0014FC  CFDE F01F          	movff	postinc2,?_sprintf+3
  1013   001500  CFDD F020          	movff	postdec2,?_sprintf+4
  1014   001504  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1015   001506  6ED9               	movwf	fsr2l,c
  1016   001508  6ADA               	clrf	fsr2h,c
  1017   00150A  0E02               	movlw	2
  1018   00150C  26D9               	addwf	fsr2l,f,c
  1019   00150E  CFDE F021          	movff	postinc2,?_sprintf+5
  1020   001512  CFDD F022          	movff	postdec2,?_sprintf+6
  1021   001516  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1022   001518  6ED9               	movwf	fsr2l,c
  1023   00151A  6ADA               	clrf	fsr2h,c
  1024   00151C  0E04               	movlw	4
  1025   00151E  26D9               	addwf	fsr2l,f,c
  1026   001520  CFDE F023          	movff	postinc2,?_sprintf+7
  1027   001524  CFDD F024          	movff	postdec2,?_sprintf+8
  1028   001528  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
  1029   00152A  6ED9               	movwf	fsr2l,c
  1030   00152C  6ADA               	clrf	fsr2h,c
  1031   00152E  0E06               	movlw	6
  1032   001530  26D9               	addwf	fsr2l,f,c
  1033   001532  CFDE F025          	movff	postinc2,?_sprintf+9
  1034   001536  CFDD F026          	movff	postdec2,?_sprintf+10
  1035   00153A  ECEB  F00B         	call	_sprintf	;wreg free
  1036   00153E                     
  1037                           ;serial.c: 65:     sendStringSerial4(tempStr);
  1038   00153E  0E60               	movlw	low sendRGBCvalSerial4@tempStr
  1039   001540  6E02               	movwf	sendStringSerial4@string^0,c
  1040   001542  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1041   001544  EC45  F00A         	call	_sendStringSerial4	;wreg free
  1042   001548  0012               	return		;funcret
  1043   00154A                     __end_of_sendRGBCvalSerial4:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _initUSART4 *****************
  1047 ;; Defined at:
  1048 ;;		line 5 in file "serial.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text2
  1077   0019C8                     __ptext2:
  1078                           	callstack 0
  1079   0019C8                     _initUSART4:
  1080                           	callstack 29
  1081   0019C8                     
  1082                           ;serial.c: 9:     RC0PPS = 0x12;
  1083   0019C8  0E12               	movlw	18
  1084   0019CA  010E               	movlb	14	; () banked
  1085   0019CC  6F62               	movwf	98,b	;volatile
  1086                           
  1087                           ;serial.c: 10:     RX4PPS = 0x11;
  1088   0019CE  0E11               	movlw	17
  1089   0019D0  6F15               	movwf	21,b	;volatile
  1090   0019D2                     
  1091                           ; BSR set to: 14
  1092                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1093   0019D2  97E9               	bcf	233,3,b	;volatile
  1094   0019D4                     
  1095                           ; BSR set to: 14
  1096                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1097   0019D4  95E8               	bcf	232,2,b	;volatile
  1098                           
  1099                           ;serial.c: 14:     SP4BRGL = 51;
  1100   0019D6  0E33               	movlw	51
  1101   0019D8  6FE5               	movwf	229,b	;volatile
  1102                           
  1103                           ;serial.c: 15:     SP4BRGH = 0;
  1104   0019DA  0E00               	movlw	0
  1105   0019DC  6FE6               	movwf	230,b	;volatile
  1106   0019DE                     
  1107                           ; BSR set to: 14
  1108                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1109   0019DE  89E7               	bsf	231,4,b	;volatile
  1110   0019E0                     
  1111                           ; BSR set to: 14
  1112                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1113   0019E0  8BE8               	bsf	232,5,b	;volatile
  1114   0019E2                     
  1115                           ; BSR set to: 14
  1116                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1117   0019E2  8FE7               	bsf	231,7,b	;volatile
  1118   0019E4                     
  1119                           ; BSR set to: 14
  1120   0019E4  0012               	return		;funcret
  1121   0019E6                     __end_of_initUSART4:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _initDCmotorsPWM *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "dc_motor.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text3
  1155   001314                     __ptext3:
  1156                           	callstack 0
  1157   001314                     _initDCmotorsPWM:
  1158                           	callstack 29
  1159   001314                     
  1160                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  1161   001314  9485               	bcf	133,2,c	;volatile
  1162                           
  1163                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  1164   001316  9885               	bcf	133,4,c	;volatile
  1165                           
  1166                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  1167   001318  9E83               	bcf	131,7,c	;volatile
  1168                           
  1169                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  1170   00131A  9C87               	bcf	135,6,c	;volatile
  1171                           
  1172                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  1173   00131C  947D               	bcf	125,2,c	;volatile
  1174                           
  1175                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  1176   00131E  987D               	bcf	125,4,c	;volatile
  1177                           
  1178                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  1179   001320  9E7B               	bcf	123,7,c	;volatile
  1180                           
  1181                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  1182   001322  9C7F               	bcf	127,6,c	;volatile
  1183   001324                     
  1184                           ;dc_motor.c: 18:     RE2PPS=0x05;
  1185   001324  0E05               	movlw	5
  1186   001326  010E               	movlb	14	; () banked
  1187   001328  6F74               	movwf	116,b	;volatile
  1188                           
  1189                           ;dc_motor.c: 19:     RE4PPS=0x06;
  1190   00132A  0E06               	movlw	6
  1191   00132C  6F76               	movwf	118,b	;volatile
  1192                           
  1193                           ;dc_motor.c: 20:     RC7PPS=0x07;
  1194   00132E  0E07               	movlw	7
  1195   001330  6F69               	movwf	105,b	;volatile
  1196                           
  1197                           ;dc_motor.c: 21:     RG6PPS=0x08;
  1198   001332  0E08               	movlw	8
  1199   001334  6F88               	movwf	136,b	;volatile
  1200                           
  1201                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  1202   001336  50BD               	movf	189,w,c	;volatile
  1203   001338  0B8F               	andlw	-113
  1204   00133A  0940               	iorlw	64
  1205   00133C  6EBD               	movwf	189,c	;volatile
  1206                           
  1207                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1208   00133E  0EE0               	movlw	-32
  1209   001340  16BE               	andwf	190,f,c	;volatile
  1210                           
  1211                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1212   001342  50BF               	movf	191,w,c	;volatile
  1213   001344  0BF0               	andlw	-16
  1214   001346  0901               	iorlw	1
  1215   001348  6EBF               	movwf	191,c	;volatile
  1216   00134A                     
  1217                           ; BSR set to: 14
  1218                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  1219   00134A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1220   00134E                     
  1221                           ; BSR set to: 14
  1222                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1223   00134E  8EBD               	bsf	189,7,c	;volatile
  1224                           
  1225                           ;dc_motor.c: 35:     CCPR1H=0;
  1226   001350  0E00               	movlw	0
  1227   001352  6EAA               	movwf	170,c	;volatile
  1228                           
  1229                           ;dc_motor.c: 36:     CCPR2H=0;
  1230   001354  0E00               	movlw	0
  1231   001356  6EA6               	movwf	166,c	;volatile
  1232                           
  1233                           ;dc_motor.c: 37:     CCPR3H=0;
  1234   001358  0E00               	movlw	0
  1235   00135A  010F               	movlb	15	; () banked
  1236   00135C  6F25               	movwf	37,b	;volatile
  1237                           
  1238                           ;dc_motor.c: 38:     CCPR4H=0;
  1239   00135E  0E00               	movlw	0
  1240   001360  6F21               	movwf	33,b	;volatile
  1241                           
  1242                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1243   001362  0EFC               	movlw	-4
  1244   001364  16AD               	andwf	173,f,c	;volatile
  1245                           
  1246                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1247   001366  0EF3               	movlw	-13
  1248   001368  16AD               	andwf	173,f,c	;volatile
  1249                           
  1250                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1251   00136A  0ECF               	movlw	-49
  1252   00136C  16AD               	andwf	173,f,c	;volatile
  1253                           
  1254                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1255   00136E  0E3F               	movlw	-193
  1256   001370  16AD               	andwf	173,f,c	;volatile
  1257   001372                     
  1258                           ; BSR set to: 15
  1259                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  1260   001372  88AB               	bsf	171,4,c	;volatile
  1261                           
  1262                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  1263   001374  50AB               	movf	171,w,c	;volatile
  1264   001376  0BF0               	andlw	-16
  1265   001378  090C               	iorlw	12
  1266   00137A  6EAB               	movwf	171,c	;volatile
  1267   00137C                     
  1268                           ; BSR set to: 15
  1269                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  1270   00137C  8EAB               	bsf	171,7,c	;volatile
  1271   00137E                     
  1272                           ; BSR set to: 15
  1273                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  1274   00137E  88A7               	bsf	167,4,c	;volatile
  1275                           
  1276                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  1277   001380  50A7               	movf	167,w,c	;volatile
  1278   001382  0BF0               	andlw	-16
  1279   001384  090C               	iorlw	12
  1280   001386  6EA7               	movwf	167,c	;volatile
  1281   001388                     
  1282                           ; BSR set to: 15
  1283                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  1284   001388  8EA7               	bsf	167,7,c	;volatile
  1285   00138A                     
  1286                           ; BSR set to: 15
  1287                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  1288   00138A  8926               	bsf	38,4,b	;volatile
  1289                           
  1290                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  1291   00138C  5126               	movf	38,w,b	;volatile
  1292   00138E  0BF0               	andlw	-16
  1293   001390  090C               	iorlw	12
  1294   001392  6F26               	movwf	38,b	;volatile
  1295   001394                     
  1296                           ; BSR set to: 15
  1297                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  1298   001394  8F26               	bsf	38,7,b	;volatile
  1299   001396                     
  1300                           ; BSR set to: 15
  1301                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  1302   001396  8922               	bsf	34,4,b	;volatile
  1303                           
  1304                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  1305   001398  5122               	movf	34,w,b	;volatile
  1306   00139A  0BF0               	andlw	-16
  1307   00139C  090C               	iorlw	12
  1308   00139E  6F22               	movwf	34,b	;volatile
  1309   0013A0                     
  1310                           ; BSR set to: 15
  1311                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  1312   0013A0  8F22               	bsf	34,7,b	;volatile
  1313   0013A2                     
  1314                           ; BSR set to: 15
  1315   0013A2  0012               	return		;funcret
  1316   0013A4                     __end_of_initDCmotorsPWM:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _forward_navigation *****************
  1320 ;; Defined at:
  1321 ;;		line 75 in file "timers.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  mL              1   56[COMRAM] PTR struct DC_motor
  1324 ;;		 -> main@motorL(9), 
  1325 ;;  mR              1   57[COMRAM] PTR struct DC_motor
  1326 ;;		 -> main@motorR(9), 
  1327 ;;  col             1   58[COMRAM] PTR struct RGBC_val
  1328 ;;		 -> main@measured_colour(8), 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  timerL          1   60[COMRAM] unsigned char 
  1331 ;;  timerH          1   59[COMRAM] unsigned char 
  1332 ;;  mann            1    0        unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1342 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;Total ram usage:        5 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 7
  1349 ;; This function calls:
  1350 ;;		_read_timer
  1351 ;;		_reset_timer
  1352 ;;		_sendArrayCharSerial4
  1353 ;;		_wait_for_wall
  1354 ;;		_write_trail
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text4
  1361   0015F6                     __ptext4:
  1362                           	callstack 0
  1363   0015F6                     _forward_navigation:
  1364                           	callstack 23
  1365   0015F6                     
  1366                           ;timers.c: 75: void forward_navigation(DC_motor *mL, DC_motor *mR, RGBC_val *col);timers
      +                          .c: 76: {;timers.c: 77:     unsigned char timerH = 0;
  1367   0015F6  0E00               	movlw	0
  1368   0015F8  6E3C               	movwf	forward_navigation@timerH^0,c
  1369                           
  1370                           ;timers.c: 78:     unsigned char timerL = 0;
  1371   0015FA  0E00               	movlw	0
  1372   0015FC  6E3D               	movwf	forward_navigation@timerL^0,c
  1373   0015FE                     
  1374                           ;timers.c: 80:     reset_timer();
  1375   0015FE  EC1C  F00D         	call	_reset_timer	;wreg free
  1376   001602                     
  1377                           ;timers.c: 82:     wait_for_wall(col);
  1378   001602  C03B  F00D         	movff	forward_navigation@col,wait_for_wall@p
  1379   001606  ECC5  F00B         	call	_wait_for_wall	;wreg free
  1380   00160A                     
  1381                           ;timers.c: 83:     read_timer(&timerH, &timerL);
  1382   00160A  0E3C               	movlw	low forward_navigation@timerH
  1383   00160C  6E01               	movwf	read_timer@tH^0,c
  1384   00160E  0E3D               	movlw	low forward_navigation@timerL
  1385   001610  6E02               	movwf	read_timer@tL^0,c
  1386   001612  EC0B  F00D         	call	_read_timer	;wreg free
  1387   001616                     
  1388                           ;timers.c: 88:     write_trail(timerH, timerL, mann);
  1389   001616  C03D  F001         	movff	forward_navigation@timerL,write_trail@tL
  1390   00161A  0E00               	movlw	0
  1391   00161C  6E02               	movwf	write_trail@man^0,c
  1392   00161E  503C               	movf	forward_navigation@timerH^0,w,c
  1393   001620  EC32  F00C         	call	_write_trail
  1394   001624                     
  1395                           ;timers.c: 89:     sendArrayCharSerial4(trail_timer_high);
  1396   001624  0ECC               	movlw	low _trail_timer_high
  1397   001626  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1398   001628  0E01               	movlw	high _trail_timer_high
  1399   00162A  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1400   00162C  ECD2  F009         	call	_sendArrayCharSerial4	;wreg free
  1401   001630                     
  1402                           ;timers.c: 90:     sendArrayCharSerial4(trail_timer_low);
  1403   001630  0EB8               	movlw	low _trail_timer_low
  1404   001632  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1405   001634  0E01               	movlw	high _trail_timer_low
  1406   001636  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1407   001638  ECD2  F009         	call	_sendArrayCharSerial4	;wreg free
  1408   00163C                     
  1409                           ;timers.c: 91:     sendArrayCharSerial4(trail_manoeuvre);
  1410   00163C  0EA4               	movlw	low _trail_manoeuvre
  1411   00163E  6E36               	movwf	sendArrayCharSerial4@arr^0,c
  1412   001640  0E01               	movlw	high _trail_manoeuvre
  1413   001642  6E37               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1414   001644  ECD2  F009         	call	_sendArrayCharSerial4	;wreg free
  1415   001648  0012               	return		;funcret
  1416   00164A                     __end_of_forward_navigation:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _write_trail *****************
  1420 ;; Defined at:
  1421 ;;		line 62 in file "timers.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  tH              1    wreg     unsigned char 
  1424 ;;  tL              1    0[COMRAM] unsigned char 
  1425 ;;  man             1    1[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  tH              1    2[COMRAM] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;Total ram usage:        3 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_forward_navigation
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452   001864                     __ptext5:
  1453                           	callstack 0
  1454   001864                     _write_trail:
  1455                           	callstack 28
  1456                           
  1457                           ;incstack = 0
  1458                           ;write_trail@tH stored from wreg
  1459   001864  6E03               	movwf	write_trail@tH^0,c
  1460   001866                     
  1461                           ;timers.c: 62: void write_trail(unsigned char tH, unsigned char tL, unsigned char man);t
      +                          imers.c: 63: {;timers.c: 64:     *timer_high_pointer = tH;
  1462   001866  C045  FFD9         	movff	_timer_high_pointer,fsr2l
  1463   00186A  C046  FFDA         	movff	_timer_high_pointer+1,fsr2h
  1464   00186E  C003  FFDF         	movff	write_trail@tH,indf2
  1465   001872                     
  1466                           ;timers.c: 65:     *timer_low_pointer = tL;
  1467   001872  C0E2  FFD9         	movff	_timer_low_pointer,fsr2l
  1468   001876  C0E3  FFDA         	movff	_timer_low_pointer+1,fsr2h
  1469   00187A  C001  FFDF         	movff	write_trail@tL,indf2
  1470   00187E                     
  1471                           ;timers.c: 66:     *manoeuvre_pointer = man;
  1472   00187E  C0E0  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1473   001882  C0E1  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1474   001886  C002  FFDF         	movff	write_trail@man,indf2
  1475   00188A                     
  1476                           ;timers.c: 68:     timer_high_pointer ++;
  1477   00188A  4A45               	infsnz	_timer_high_pointer^0,f,c
  1478   00188C  2A46               	incf	(_timer_high_pointer+1)^0,f,c
  1479   00188E                     
  1480                           ;timers.c: 69:     timer_low_pointer ++;
  1481   00188E  0100               	movlb	0	; () banked
  1482   001890  4BE2               	infsnz	_timer_low_pointer& (0+255),f,b
  1483   001892  2BE3               	incf	(_timer_low_pointer+1)& (0+255),f,b
  1484   001894                     
  1485                           ; BSR set to: 0
  1486                           ;timers.c: 70:     manoeuvre_pointer ++;
  1487   001894  4BE0               	infsnz	_manoeuvre_pointer& (0+255),f,b
  1488   001896  2BE1               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
  1489   001898                     
  1490                           ; BSR set to: 0
  1491                           ;timers.c: 72:     manoeuvre_count ++;
  1492   001898  2BDE               	incf	_manoeuvre_count& (0+255),f,b
  1493   00189A                     
  1494                           ; BSR set to: 0
  1495   00189A  0012               	return		;funcret
  1496   00189C                     __end_of_write_trail:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _wait_for_wall *****************
  1500 ;; Defined at:
  1501 ;;		line 93 in file "color.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  p               1   12[COMRAM] PTR struct RGBC_val
  1504 ;;		 -> main@measured_colour(8), 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1516 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;Total ram usage:        3 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 5
  1523 ;; This function calls:
  1524 ;;		_getRGBCval
  1525 ;; This function is called by:
  1526 ;;		_forward_navigation
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text6
  1531   00178A                     __ptext6:
  1532                           	callstack 0
  1533   00178A                     _wait_for_wall:
  1534                           	callstack 24
  1535   00178A                     l86:
  1536   00178A                     
  1537                           ;color.c: 96:         getRGBCval(p);
  1538   00178A  C00D  F00C         	movff	wait_for_wall@p,getRGBCval@p
  1539   00178E  ECA5  F00A         	call	_getRGBCval	;wreg free
  1540   001792  500D               	movf	wait_for_wall@p^0,w,c
  1541   001794  6ED9               	movwf	fsr2l,c
  1542   001796  6ADA               	clrf	fsr2h,c
  1543   001798  0E06               	movlw	6
  1544   00179A  26D9               	addwf	fsr2l,f,c
  1545   00179C  0E2C               	movlw	44
  1546   00179E  5CDE               	subwf	postinc2,w,c
  1547   0017A0  0E01               	movlw	1
  1548   0017A2  58DE               	subwfb	postinc2,w,c
  1549   0017A4  B0D8               	btfsc	status,0,c
  1550   0017A6  EFD7  F00B         	goto	u2481
  1551   0017AA  EFD9  F00B         	goto	u2480
  1552   0017AE                     u2481:
  1553   0017AE  EFC5  F00B         	goto	l86
  1554   0017B2                     u2480:
  1555   0017B2                     
  1556                           ;color.c: 101:     LATDbits.LATD7 = !LATDbits.LATD7;
  1557   0017B2  AE7C               	btfss	124,7,c	;volatile
  1558   0017B4  EFDE  F00B         	goto	u2491
  1559   0017B8  EFE2  F00B         	goto	u2490
  1560   0017BC                     u2491:
  1561   0017BC  6A0E               	clrf	??_wait_for_wall^0,c
  1562   0017BE  2A0E               	incf	??_wait_for_wall^0,f,c
  1563   0017C0  EFE3  F00B         	goto	u2508
  1564   0017C4                     u2490:
  1565   0017C4  6A0E               	clrf	??_wait_for_wall^0,c
  1566   0017C6                     u2508:
  1567   0017C6  320E               	rrcf	??_wait_for_wall^0,f,c
  1568   0017C8  320E               	rrcf	??_wait_for_wall^0,f,c
  1569   0017CA  507C               	movf	124,w,c	;volatile
  1570   0017CC  180E               	xorwf	??_wait_for_wall^0,w,c
  1571   0017CE  0B7F               	andlw	-129
  1572   0017D0  180E               	xorwf	??_wait_for_wall^0,w,c
  1573   0017D2  6E7C               	movwf	124,c	;volatile
  1574   0017D4  0012               	return		;funcret
  1575   0017D6                     __end_of_wait_for_wall:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _getRGBCval *****************
  1579 ;; Defined at:
  1580 ;;		line 84 in file "color.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  1583 ;;		 -> main@measured_colour(8), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;Total ram usage:        1 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 4
  1602 ;; This function calls:
  1603 ;;		_color_read_Blue
  1604 ;;		_color_read_Clear
  1605 ;;		_color_read_Green
  1606 ;;		_color_read_Red
  1607 ;; This function is called by:
  1608 ;;		_wait_for_wall
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text7
  1614   00154A                     __ptext7:
  1615                           	callstack 0
  1616   00154A                     _getRGBCval:
  1617                           	callstack 26
  1618   00154A                     
  1619                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  1620   00154A  EC25  F00B         	call	_color_read_Red	;wreg free
  1621   00154E  500C               	movf	getRGBCval@p^0,w,c
  1622   001550  6ED9               	movwf	fsr2l,c
  1623   001552  6ADA               	clrf	fsr2h,c
  1624   001554  C005  FFDE         	movff	?_color_read_Red,postinc2
  1625   001558  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1626                           
  1627                           ;color.c: 87:     p->B = color_read_Blue();
  1628   00155C  EC9D  F00B         	call	_color_read_Blue	;wreg free
  1629   001560  500C               	movf	getRGBCval@p^0,w,c
  1630   001562  6ED9               	movwf	fsr2l,c
  1631   001564  6ADA               	clrf	fsr2h,c
  1632   001566  0E04               	movlw	4
  1633   001568  26D9               	addwf	fsr2l,f,c
  1634   00156A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1635   00156E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1636                           
  1637                           ;color.c: 88:     p->G = color_read_Green();
  1638   001572  EC4D  F00B         	call	_color_read_Green	;wreg free
  1639   001576  500C               	movf	getRGBCval@p^0,w,c
  1640   001578  6ED9               	movwf	fsr2l,c
  1641   00157A  6ADA               	clrf	fsr2h,c
  1642   00157C  0E02               	movlw	2
  1643   00157E  26D9               	addwf	fsr2l,f,c
  1644   001580  C005  FFDE         	movff	?_color_read_Green,postinc2
  1645   001584  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1646                           
  1647                           ;color.c: 89:     p->C = color_read_Clear();
  1648   001588  EC75  F00B         	call	_color_read_Clear	;wreg free
  1649   00158C  500C               	movf	getRGBCval@p^0,w,c
  1650   00158E  6ED9               	movwf	fsr2l,c
  1651   001590  6ADA               	clrf	fsr2h,c
  1652   001592  0E06               	movlw	6
  1653   001594  26D9               	addwf	fsr2l,f,c
  1654   001596  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1655   00159A  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1656   00159E  0012               	return		;funcret
  1657   0015A0                     __end_of_getRGBCval:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _color_read_Red *****************
  1661 ;; Defined at:
  1662 ;;		line 28 in file "color.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  tmp             2    9[COMRAM] unsigned int 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2    4[COMRAM] unsigned int 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;Total ram usage:        7 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 3
  1683 ;; This function calls:
  1684 ;;		_I2C_2_Master_Read
  1685 ;;		_I2C_2_Master_RepStart
  1686 ;;		_I2C_2_Master_Start
  1687 ;;		_I2C_2_Master_Stop
  1688 ;;		_I2C_2_Master_Write
  1689 ;; This function is called by:
  1690 ;;		_getRGBCval
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text8
  1695   00164A                     __ptext8:
  1696                           	callstack 0
  1697   00164A                     _color_read_Red:
  1698                           	callstack 26
  1699   00164A                     
  1700                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  1701   00164A  EC32  F00D         	call	_I2C_2_Master_Start	;wreg free
  1702                           
  1703                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  1704   00164E  0E52               	movlw	82
  1705   001650  EC16  F00D         	call	_I2C_2_Master_Write
  1706                           
  1707                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  1708   001654  0EB6               	movlw	182
  1709   001656  EC16  F00D         	call	_I2C_2_Master_Write
  1710                           
  1711                           ;color.c: 34:  I2C_2_Master_RepStart();
  1712   00165A  EC28  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1713                           
  1714                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  1715   00165E  0E53               	movlw	83
  1716   001660  EC16  F00D         	call	_I2C_2_Master_Write
  1717                           
  1718                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  1719   001664  0E01               	movlw	1
  1720   001666  EC11  F00C         	call	_I2C_2_Master_Read
  1721   00166A  6E07               	movwf	??_color_read_Red^0,c
  1722   00166C  5007               	movf	??_color_read_Red^0,w,c
  1723   00166E  6E0A               	movwf	color_read_Red@tmp^0,c
  1724   001670  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1725                           
  1726                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1727   001672  0E00               	movlw	0
  1728   001674  EC11  F00C         	call	_I2C_2_Master_Read
  1729   001678  6E07               	movwf	??_color_read_Red^0,c
  1730   00167A  5007               	movf	??_color_read_Red^0,w,c
  1731   00167C  6E09               	movwf	(??_color_read_Red+2)^0,c
  1732   00167E  6A08               	clrf	(??_color_read_Red+1)^0,c
  1733   001680  500A               	movf	color_read_Red@tmp^0,w,c
  1734   001682  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1735   001684  6E0A               	movwf	color_read_Red@tmp^0,c
  1736   001686  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1737   001688  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1738   00168A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1739                           
  1740                           ;color.c: 38:  I2C_2_Master_Stop();
  1741   00168C  EC2D  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1742   001690                     
  1743                           ;color.c: 39:  return tmp;
  1744   001690  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1745   001694  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1746   001698  0012               	return		;funcret
  1747   00169A                     __end_of_color_read_Red:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _color_read_Green *****************
  1751 ;; Defined at:
  1752 ;;		line 56 in file "color.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  tmp             2    9[COMRAM] unsigned int 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    4[COMRAM] unsigned int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;Total ram usage:        7 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		_I2C_2_Master_Read
  1775 ;;		_I2C_2_Master_RepStart
  1776 ;;		_I2C_2_Master_Start
  1777 ;;		_I2C_2_Master_Stop
  1778 ;;		_I2C_2_Master_Write
  1779 ;; This function is called by:
  1780 ;;		_getRGBCval
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text9
  1785   00169A                     __ptext9:
  1786                           	callstack 0
  1787   00169A                     _color_read_Green:
  1788                           	callstack 26
  1789   00169A                     
  1790                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  1791   00169A  EC32  F00D         	call	_I2C_2_Master_Start	;wreg free
  1792                           
  1793                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  1794   00169E  0E52               	movlw	82
  1795   0016A0  EC16  F00D         	call	_I2C_2_Master_Write
  1796                           
  1797                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  1798   0016A4  0EB8               	movlw	184
  1799   0016A6  EC16  F00D         	call	_I2C_2_Master_Write
  1800                           
  1801                           ;color.c: 62:  I2C_2_Master_RepStart();
  1802   0016AA  EC28  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1803                           
  1804                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  1805   0016AE  0E53               	movlw	83
  1806   0016B0  EC16  F00D         	call	_I2C_2_Master_Write
  1807                           
  1808                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  1809   0016B4  0E01               	movlw	1
  1810   0016B6  EC11  F00C         	call	_I2C_2_Master_Read
  1811   0016BA  6E07               	movwf	??_color_read_Green^0,c
  1812   0016BC  5007               	movf	??_color_read_Green^0,w,c
  1813   0016BE  6E0A               	movwf	color_read_Green@tmp^0,c
  1814   0016C0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1815                           
  1816                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1817   0016C2  0E00               	movlw	0
  1818   0016C4  EC11  F00C         	call	_I2C_2_Master_Read
  1819   0016C8  6E07               	movwf	??_color_read_Green^0,c
  1820   0016CA  5007               	movf	??_color_read_Green^0,w,c
  1821   0016CC  6E09               	movwf	(??_color_read_Green+2)^0,c
  1822   0016CE  6A08               	clrf	(??_color_read_Green+1)^0,c
  1823   0016D0  500A               	movf	color_read_Green@tmp^0,w,c
  1824   0016D2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1825   0016D4  6E0A               	movwf	color_read_Green@tmp^0,c
  1826   0016D6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1827   0016D8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1828   0016DA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1829                           
  1830                           ;color.c: 66:  I2C_2_Master_Stop();
  1831   0016DC  EC2D  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1832   0016E0                     
  1833                           ;color.c: 67:  return tmp;
  1834   0016E0  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1835   0016E4  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1836   0016E8  0012               	return		;funcret
  1837   0016EA                     __end_of_color_read_Green:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _color_read_Clear *****************
  1841 ;; Defined at:
  1842 ;;		line 70 in file "color.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  tmp             2    9[COMRAM] unsigned int 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    4[COMRAM] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;Total ram usage:        7 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 3
  1863 ;; This function calls:
  1864 ;;		_I2C_2_Master_Read
  1865 ;;		_I2C_2_Master_RepStart
  1866 ;;		_I2C_2_Master_Start
  1867 ;;		_I2C_2_Master_Stop
  1868 ;;		_I2C_2_Master_Write
  1869 ;; This function is called by:
  1870 ;;		_getRGBCval
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text10
  1875   0016EA                     __ptext10:
  1876                           	callstack 0
  1877   0016EA                     _color_read_Clear:
  1878                           	callstack 26
  1879   0016EA                     
  1880                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  1881   0016EA  EC32  F00D         	call	_I2C_2_Master_Start	;wreg free
  1882                           
  1883                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  1884   0016EE  0E52               	movlw	82
  1885   0016F0  EC16  F00D         	call	_I2C_2_Master_Write
  1886                           
  1887                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  1888   0016F4  0EB4               	movlw	180
  1889   0016F6  EC16  F00D         	call	_I2C_2_Master_Write
  1890                           
  1891                           ;color.c: 76:  I2C_2_Master_RepStart();
  1892   0016FA  EC28  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1893                           
  1894                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  1895   0016FE  0E53               	movlw	83
  1896   001700  EC16  F00D         	call	_I2C_2_Master_Write
  1897                           
  1898                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  1899   001704  0E01               	movlw	1
  1900   001706  EC11  F00C         	call	_I2C_2_Master_Read
  1901   00170A  6E07               	movwf	??_color_read_Clear^0,c
  1902   00170C  5007               	movf	??_color_read_Clear^0,w,c
  1903   00170E  6E0A               	movwf	color_read_Clear@tmp^0,c
  1904   001710  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1905                           
  1906                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1907   001712  0E00               	movlw	0
  1908   001714  EC11  F00C         	call	_I2C_2_Master_Read
  1909   001718  6E07               	movwf	??_color_read_Clear^0,c
  1910   00171A  5007               	movf	??_color_read_Clear^0,w,c
  1911   00171C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1912   00171E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1913   001720  500A               	movf	color_read_Clear@tmp^0,w,c
  1914   001722  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1915   001724  6E0A               	movwf	color_read_Clear@tmp^0,c
  1916   001726  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1917   001728  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1918   00172A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1919                           
  1920                           ;color.c: 80:  I2C_2_Master_Stop();
  1921   00172C  EC2D  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1922   001730                     
  1923                           ;color.c: 81:  return tmp;
  1924   001730  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1925   001734  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1926   001738  0012               	return		;funcret
  1927   00173A                     __end_of_color_read_Clear:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _color_read_Blue *****************
  1931 ;; Defined at:
  1932 ;;		line 42 in file "color.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  tmp             2    9[COMRAM] unsigned int 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    4[COMRAM] unsigned int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        7 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 3
  1953 ;; This function calls:
  1954 ;;		_I2C_2_Master_Read
  1955 ;;		_I2C_2_Master_RepStart
  1956 ;;		_I2C_2_Master_Start
  1957 ;;		_I2C_2_Master_Stop
  1958 ;;		_I2C_2_Master_Write
  1959 ;; This function is called by:
  1960 ;;		_getRGBCval
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text11
  1965   00173A                     __ptext11:
  1966                           	callstack 0
  1967   00173A                     _color_read_Blue:
  1968                           	callstack 26
  1969   00173A                     
  1970                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  1971   00173A  EC32  F00D         	call	_I2C_2_Master_Start	;wreg free
  1972                           
  1973                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  1974   00173E  0E52               	movlw	82
  1975   001740  EC16  F00D         	call	_I2C_2_Master_Write
  1976                           
  1977                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  1978   001744  0EBA               	movlw	186
  1979   001746  EC16  F00D         	call	_I2C_2_Master_Write
  1980                           
  1981                           ;color.c: 48:  I2C_2_Master_RepStart();
  1982   00174A  EC28  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1983                           
  1984                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  1985   00174E  0E53               	movlw	83
  1986   001750  EC16  F00D         	call	_I2C_2_Master_Write
  1987                           
  1988                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  1989   001754  0E01               	movlw	1
  1990   001756  EC11  F00C         	call	_I2C_2_Master_Read
  1991   00175A  6E07               	movwf	??_color_read_Blue^0,c
  1992   00175C  5007               	movf	??_color_read_Blue^0,w,c
  1993   00175E  6E0A               	movwf	color_read_Blue@tmp^0,c
  1994   001760  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1995                           
  1996                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1997   001762  0E00               	movlw	0
  1998   001764  EC11  F00C         	call	_I2C_2_Master_Read
  1999   001768  6E07               	movwf	??_color_read_Blue^0,c
  2000   00176A  5007               	movf	??_color_read_Blue^0,w,c
  2001   00176C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2002   00176E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2003   001770  500A               	movf	color_read_Blue@tmp^0,w,c
  2004   001772  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2005   001774  6E0A               	movwf	color_read_Blue@tmp^0,c
  2006   001776  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2007   001778  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2008   00177A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2009                           
  2010                           ;color.c: 52:  I2C_2_Master_Stop();
  2011   00177C  EC2D  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2012   001780                     
  2013                           ;color.c: 53:  return tmp;
  2014   001780  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2015   001784  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2016   001788  0012               	return		;funcret
  2017   00178A                     __end_of_color_read_Blue:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _I2C_2_Master_RepStart *****************
  2021 ;; Defined at:
  2022 ;;		line 33 in file "i2c.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		_I2C_2_Master_Idle
  2045 ;; This function is called by:
  2046 ;;		_color_read_Red
  2047 ;;		_color_read_Blue
  2048 ;;		_color_read_Green
  2049 ;;		_color_read_Clear
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text12
  2054   001A50                     __ptext12:
  2055                           	callstack 0
  2056   001A50                     _I2C_2_Master_RepStart:
  2057                           	callstack 26
  2058   001A50                     
  2059                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2060   001A50  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2061   001A54                     
  2062                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2063   001A54  010E               	movlb	14	; () banked
  2064   001A56  83DA               	bsf	218,1,b	;volatile
  2065   001A58                     
  2066                           ; BSR set to: 14
  2067   001A58  0012               	return		;funcret
  2068   001A5A                     __end_of_I2C_2_Master_RepStart:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _I2C_2_Master_Read *****************
  2072 ;; Defined at:
  2073 ;;		line 51 in file "i2c.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  ack             1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  ack             1    2[COMRAM] unsigned char 
  2078 ;;  tmp             1    3[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      unsigned char 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;Total ram usage:        3 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 2
  2095 ;; This function calls:
  2096 ;;		_I2C_2_Master_Idle
  2097 ;; This function is called by:
  2098 ;;		_color_read_Red
  2099 ;;		_color_read_Blue
  2100 ;;		_color_read_Green
  2101 ;;		_color_read_Clear
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text13
  2106   001822                     __ptext13:
  2107                           	callstack 0
  2108   001822                     _I2C_2_Master_Read:
  2109                           	callstack 26
  2110                           
  2111                           ; BSR set to: 14
  2112                           ;incstack = 0
  2113                           ;I2C_2_Master_Read@ack stored from wreg
  2114   001822  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2115   001824                     
  2116                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2117   001824  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2118   001828                     
  2119                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2120   001828  010E               	movlb	14	; () banked
  2121   00182A  87DA               	bsf	218,3,b	;volatile
  2122                           
  2123                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2124   00182C  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2125   001830                     
  2126                           ;i2c.c: 57:   tmp = SSP2BUF;
  2127   001830  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2128                           
  2129                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2130   001834  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2131   001838                     
  2132                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2133   001838  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2134   00183A  B4D8               	btfsc	status,2,c
  2135   00183C  EF22  F00C         	goto	u2311
  2136   001840  EF26  F00C         	goto	u2310
  2137   001844                     u2311:
  2138   001844  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2139   001846  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2140   001848  EF27  F00C         	goto	u2328
  2141   00184C                     u2310:
  2142   00184C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2143   00184E                     u2328:
  2144   00184E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2145   001850  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2146   001852  010E               	movlb	14	; () banked
  2147   001854  51DA               	movf	218,w,b	;volatile
  2148   001856  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2149   001858  0BDF               	andlw	-33
  2150   00185A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2151   00185C  6FDA               	movwf	218,b	;volatile
  2152   00185E                     
  2153                           ; BSR set to: 14
  2154                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2155   00185E  89DA               	bsf	218,4,b	;volatile
  2156   001860                     
  2157                           ; BSR set to: 14
  2158                           ;i2c.c: 61:   return tmp;
  2159   001860  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2160   001862                     
  2161                           ; BSR set to: 14
  2162   001862  0012               	return		;funcret
  2163   001864                     __end_of_I2C_2_Master_Read:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _sendArrayCharSerial4 *****************
  2167 ;; Defined at:
  2168 ;;		line 50 in file "serial.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  arr             2   53[COMRAM] PTR unsigned char 
  2171 ;;		 -> trail_manoeuvre(20), trail_timer_low(20), trail_timer_high(20), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  i               2  162[BANK1 ] unsigned int 
  2174 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
  2175 ;;  index           1  161[BANK1 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;Total ram usage:      167 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 6
  2192 ;; This function calls:
  2193 ;;		_sendStringSerial4
  2194 ;;		_sprintf
  2195 ;; This function is called by:
  2196 ;;		_forward_navigation
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text14
  2201   0013A4                     __ptext14:
  2202                           	callstack 0
  2203   0013A4                     _sendArrayCharSerial4:
  2204                           	callstack 23
  2205   0013A4                     
  2206                           ;serial.c: 51:     unsigned char index = 0;
  2207   0013A4  0E00               	movlw	0
  2208   0013A6  0101               	movlb	1	; () banked
  2209   0013A8  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
  2210                           
  2211                           ;serial.c: 53:     char tempStr[20 * 8 + 1];;serial.c: 54:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
  2212   0013AA  0E00               	movlw	0
  2213   0013AC  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
  2214   0013AE  0E00               	movlw	0
  2215   0013B0  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
  2216   0013B2                     l3689:
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;serial.c: 55:         index += sprintf(&tempStr[index], "%d ", arr[i]);
  2220   0013B2  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2221   0013B4  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
  2222   0013B6  6E1C               	movwf	sprintf@s^0,c
  2223   0013B8  6A1D               	clrf	(sprintf@s+1)^0,c
  2224   0013BA  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2225   0013BC  221D               	addwfc	(sprintf@s+1)^0,f,c
  2226   0013BE  0E0F               	movlw	low STR_2
  2227   0013C0  6E1E               	movwf	sprintf@fmt^0,c
  2228   0013C2  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
  2229   0013C4  2436               	addwf	sendArrayCharSerial4@arr^0,w,c
  2230   0013C6  6ED9               	movwf	fsr2l,c
  2231   0013C8  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2232   0013CA  2037               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
  2233   0013CC  6EDA               	movwf	fsr2h,c
  2234   0013CE  50DF               	movf	indf2,w,c
  2235   0013D0  6E38               	movwf	??_sendArrayCharSerial4^0,c
  2236   0013D2  5038               	movf	??_sendArrayCharSerial4^0,w,c
  2237   0013D4  6E1F               	movwf	(?_sprintf+3)^0,c
  2238   0013D6  6A20               	clrf	(?_sprintf+4)^0,c
  2239   0013D8  ECEB  F00B         	call	_sprintf	;wreg free
  2240   0013DC  501C               	movf	?_sprintf^0,w,c
  2241   0013DE  0101               	movlb	1	; () banked
  2242   0013E0  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
  2243   0013E2                     
  2244                           ; BSR set to: 1
  2245                           ;serial.c: 56:     }
  2246   0013E2  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
  2247   0013E4  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
  2248   0013E6                     
  2249                           ; BSR set to: 1
  2250   0013E6  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2251   0013E8  E109               	bnz	u2510
  2252   0013EA  0E14               	movlw	20
  2253   0013EC  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
  2254   0013EE  A0D8               	btfss	status,0,c
  2255   0013F0  EFFC  F009         	goto	u2511
  2256   0013F4  EFFE  F009         	goto	u2510
  2257   0013F8                     u2511:
  2258   0013F8  EFD9  F009         	goto	l3689
  2259   0013FC                     u2510:
  2260   0013FC                     
  2261                           ; BSR set to: 1
  2262                           ;serial.c: 57:     sendStringSerial4(tempStr);
  2263   0013FC  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2264   0013FE  6E02               	movwf	sendStringSerial4@string^0,c
  2265   001400  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2266   001402  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2267   001404  EC45  F00A         	call	_sendStringSerial4	;wreg free
  2268                           
  2269                           ;serial.c: 58:     sendStringSerial4(" \r");
  2270   001408  0E0C               	movlw	low (STR_5+11)
  2271   00140A  6E02               	movwf	sendStringSerial4@string^0,c
  2272   00140C  5002               	movf	sendStringSerial4@string^0,w,c
  2273   00140E  A4D8               	btfss	status,2,c
  2274   001410  0E0E               	movlw	high __smallconst
  2275   001412  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2276   001414  EC45  F00A         	call	_sendStringSerial4	;wreg free
  2277   001418  0012               	return		;funcret
  2278   00141A                     __end_of_sendArrayCharSerial4:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _sprintf *****************
  2282 ;; Defined at:
  2283 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  s               2   27[COMRAM] PTR unsigned char 
  2286 ;;		 -> sendRGBCvalSerial4@tempStr(41), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  2287 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
  2288 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  f              12   41[COMRAM] struct _IO_FILE
  2291 ;;  ret             2   38[COMRAM] int 
  2292 ;;  ap              1   40[COMRAM] PTR void [1]
  2293 ;;		 -> ?_sprintf(2), 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  2   27[COMRAM] int 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2303 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;Total ram usage:       26 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 5
  2310 ;; This function calls:
  2311 ;;		_vfprintf
  2312 ;; This function is called by:
  2313 ;;		_sendArrayCharSerial4
  2314 ;;		_sendRGBCvalSerial4
  2315 ;;		_sendIntSerial4
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text15
  2320   0017D6                     __ptext15:
  2321                           	callstack 0
  2322   0017D6                     _sprintf:
  2323                           	callstack 24
  2324   0017D6  0E1F               	movlw	low (?_sprintf+3)
  2325   0017D8  6E29               	movwf	sprintf@ap^0,c
  2326   0017DA  C01C  F02A         	movff	sprintf@s,sprintf@f
  2327   0017DE  C01D  F02B         	movff	sprintf@s+1,sprintf@f+1
  2328   0017E2  0E00               	movlw	0
  2329   0017E4  6E2E               	movwf	(sprintf@f+4)^0,c
  2330   0017E6  0E00               	movlw	0
  2331   0017E8  6E2D               	movwf	(sprintf@f+3)^0,c
  2332   0017EA  0E00               	movlw	0
  2333   0017EC  6E35               	movwf	(sprintf@f+11)^0,c
  2334   0017EE  0E00               	movlw	0
  2335   0017F0  6E34               	movwf	(sprintf@f+10)^0,c
  2336   0017F2  0E2A               	movlw	low sprintf@f
  2337   0017F4  6E18               	movwf	vfprintf@fp^0,c
  2338   0017F6  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
  2339   0017FA  0E29               	movlw	low sprintf@ap
  2340   0017FC  6E1A               	movwf	vfprintf@ap^0,c
  2341   0017FE  ECD0  F00A         	call	_vfprintf	;wreg free
  2342   001802  C018  F027         	movff	?_vfprintf,sprintf@ret
  2343   001806  C019  F028         	movff	?_vfprintf+1,sprintf@ret+1
  2344   00180A  502D               	movf	(sprintf@f+3)^0,w,c
  2345   00180C  241C               	addwf	sprintf@s^0,w,c
  2346   00180E  6ED9               	movwf	fsr2l,c
  2347   001810  502E               	movf	(sprintf@f+4)^0,w,c
  2348   001812  201D               	addwfc	(sprintf@s+1)^0,w,c
  2349   001814  6EDA               	movwf	fsr2h,c
  2350   001816  6ADF               	clrf	indf2,c
  2351   001818  C027  F01C         	movff	sprintf@ret,?_sprintf
  2352   00181C  C028  F01D         	movff	sprintf@ret+1,?_sprintf+1
  2353   001820  0012               	return		;funcret
  2354   001822                     __end_of_sprintf:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _vfprintf *****************
  2358 ;; Defined at:
  2359 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  2362 ;;		 -> sprintf@f(12), 
  2363 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  2364 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2365 ;;  ap              1   25[COMRAM] PTR PTR void 
  2366 ;;		 -> sprintf@ap(1), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  2369 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  2   23[COMRAM] int 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;Total ram usage:        4 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 4
  2386 ;; This function calls:
  2387 ;;		_vfpfcnvrt
  2388 ;; This function is called by:
  2389 ;;		_sprintf
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text16
  2394   0015A0                     __ptext16:
  2395                           	callstack 0
  2396   0015A0                     _vfprintf:
  2397                           	callstack 24
  2398   0015A0                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2400   0015A0  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  2401   0015A4                     
  2402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2403   0015A4  0E00               	movlw	0
  2404   0015A6  0100               	movlb	0	; () banked
  2405   0015A8  6FD8               	movwf	(_nout+1)& (0+255),b
  2406   0015AA  0E00               	movlw	0
  2407   0015AC  6FD7               	movwf	_nout& (0+255),b
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2410   0015AE  EFE6  F00A         	goto	l3631
  2411   0015B2                     l3629:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2415   0015B2  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2416   0015B6  0E1B               	movlw	low vfprintf@cfmt
  2417   0015B8  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2418   0015BA  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2419   0015BE  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  2420   0015C2  500B               	movf	?_vfpfcnvrt^0,w,c
  2421   0015C4  0100               	movlb	0	; () banked
  2422   0015C6  27D7               	addwf	_nout& (0+255),f,b
  2423   0015C8  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  2424   0015CA  23D8               	addwfc	(_nout+1)& (0+255),f,b
  2425   0015CC                     l3631:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2429   0015CC  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2430   0015D0                     	if	1	;There is more than 1 active tblptr byte
  2431   0015D0  0E0E               	movlw	high __smallconst
  2432   0015D2  6EF7               	movwf	tblptrh,c
  2433   0015D4                     	endif
  2434   0015D4                     	if	0	;tblptru may be non-zero
  2435   0015D4                     	endif
  2436   0015D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2437   0015D4  0E00               	movlw	low (__smallconst shr (0+16))
  2438   0015D6  6EF8               	movwf	tblptru,c
  2439   0015D8                     	endif
  2440   0015D8  0008               	tblrd		*
  2441   0015DA  50F5               	movf	tablat,w,c
  2442   0015DC  0900               	iorlw	0
  2443   0015DE  A4D8               	btfss	status,2,c
  2444   0015E0  EFF4  F00A         	goto	u2441
  2445   0015E4  EFF6  F00A         	goto	u2440
  2446   0015E8                     u2441:
  2447   0015E8  EFD9  F00A         	goto	l3629
  2448   0015EC                     u2440:
  2449   0015EC                     
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2452   0015EC  C0D7  F018         	movff	_nout,?_vfprintf
  2453   0015F0  C0D8  F019         	movff	_nout+1,?_vfprintf+1
  2454   0015F4                     
  2455                           ; BSR set to: 0
  2456   0015F4  0012               	return		;funcret
  2457   0015F6                     __end_of_vfprintf:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _vfpfcnvrt *****************
  2461 ;; Defined at:
  2462 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2465 ;;		 -> sprintf@f(12), 
  2466 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2467 ;;		 -> vfprintf@cfmt(1), 
  2468 ;;  ap              1   12[COMRAM] PTR PTR void 
  2469 ;;		 -> sprintf@ap(1), 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  convarg         4   18[COMRAM] struct .
  2472 ;;  cnt             2   15[COMRAM] int 
  2473 ;;  c               1   22[COMRAM] unsigned char 
  2474 ;;  cp              1   17[COMRAM] PTR unsigned char 
  2475 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  2476 ;;  done            1   14[COMRAM] _Bool 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2   10[COMRAM] int 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2486 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;Total ram usage:       13 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 3
  2493 ;; This function calls:
  2494 ;;		___awdiv
  2495 ;;		___awmod
  2496 ;;		_abs
  2497 ;;		_fputc
  2498 ;; This function is called by:
  2499 ;;		_vfprintf
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text17
  2504   000E14                     __ptext17:
  2505                           	callstack 0
  2506   000E14                     _vfpfcnvrt:
  2507                           	callstack 24
  2508   000E14                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  2510   000E14  0E00               	movlw	0
  2511   000E16  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  2512   000E18  0E00               	movlw	0
  2513   000E1A  6E10               	movwf	vfpfcnvrt@cnt^0,c
  2514   000E1C                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  2516   000E1C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2517   000E1E  6ED9               	movwf	fsr2l,c
  2518   000E20  6ADA               	clrf	fsr2h,c
  2519   000E22  CFDF FFF6          	movff	indf2,tblptrl
  2520   000E26                     	if	1	;There is more than 1 active tblptr byte
  2521   000E26  0E0E               	movlw	high __smallconst
  2522   000E28  6EF7               	movwf	tblptrh,c
  2523   000E2A                     	endif
  2524   000E2A                     	if	0	;tblptru may be non-zero
  2525   000E2A                     	endif
  2526   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2527   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  2528   000E2C  6EF8               	movwf	tblptru,c
  2529   000E2E                     	endif
  2530   000E2E  0008               	tblrd		*
  2531   000E30  50F5               	movf	tablat,w,c
  2532   000E32  0A25               	xorlw	37
  2533   000E34  A4D8               	btfss	status,2,c
  2534   000E36  EF1F  F007         	goto	u2331
  2535   000E3A  EF21  F007         	goto	u2330
  2536   000E3E                     u2331:
  2537   000E3E  EFEB  F007         	goto	l3589
  2538   000E42                     u2330:
  2539   000E42                     
  2540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2541   000E42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2542   000E44  6ED9               	movwf	fsr2l,c
  2543   000E46  6ADA               	clrf	fsr2h,c
  2544   000E48  2ADF               	incf	indf2,f,c
  2545   000E4A                     
  2546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2547   000E4A  0E00               	movlw	0
  2548   000E4C  0100               	movlb	0	; () banked
  2549   000E4E  6FDA               	movwf	(_width+1)& (0+255),b
  2550   000E50  0E00               	movlw	0
  2551   000E52  6FD9               	movwf	_width& (0+255),b
  2552   000E54  C0D9  F0DD         	movff	_width,_flags
  2553   000E58                     
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2556   000E58  69DB               	setf	_prec& (0+255),b
  2557   000E5A  69DC               	setf	(_prec+1)& (0+255),b
  2558   000E5C                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2561   000E5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2562   000E5E  6ED9               	movwf	fsr2l,c
  2563   000E60  6ADA               	clrf	fsr2h,c
  2564   000E62  50DF               	movf	indf2,w,c
  2565   000E64  6E12               	movwf	vfpfcnvrt@cp^0,c
  2566   000E66                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2569   000E66  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2570   000E6A                     	if	1	;There is more than 1 active tblptr byte
  2571   000E6A  0E0E               	movlw	high __smallconst
  2572   000E6C  6EF7               	movwf	tblptrh,c
  2573   000E6E                     	endif
  2574   000E6E                     	if	0	;tblptru may be non-zero
  2575   000E6E                     	endif
  2576   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2577   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  2578   000E70  6EF8               	movwf	tblptru,c
  2579   000E72                     	endif
  2580   000E72  0008               	tblrd		*
  2581   000E74  50F5               	movf	tablat,w,c
  2582   000E76  0A64               	xorlw	100
  2583   000E78  B4D8               	btfsc	status,2,c
  2584   000E7A  EF41  F007         	goto	u2341
  2585   000E7E  EF43  F007         	goto	u2340
  2586   000E82                     u2341:
  2587   000E82  EF53  F007         	goto	l3553
  2588   000E86                     u2340:
  2589   000E86                     
  2590                           ; BSR set to: 0
  2591   000E86  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2592   000E8A                     	if	1	;There is more than 1 active tblptr byte
  2593   000E8A  0E0E               	movlw	high __smallconst
  2594   000E8C  6EF7               	movwf	tblptrh,c
  2595   000E8E                     	endif
  2596   000E8E                     	if	0	;tblptru may be non-zero
  2597   000E8E                     	endif
  2598   000E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2599   000E8E  0E00               	movlw	low (__smallconst shr (0+16))
  2600   000E90  6EF8               	movwf	tblptru,c
  2601   000E92                     	endif
  2602   000E92  0008               	tblrd		*
  2603   000E94  50F5               	movf	tablat,w,c
  2604   000E96  0A69               	xorlw	105
  2605   000E98  A4D8               	btfss	status,2,c
  2606   000E9A  EF51  F007         	goto	u2351
  2607   000E9E  EF53  F007         	goto	u2350
  2608   000EA2                     u2351:
  2609   000EA2  EFE1  F007         	goto	l3583
  2610   000EA6                     u2350:
  2611   000EA6                     l3553:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2615   000EA6  500D               	movf	vfpfcnvrt@ap^0,w,c
  2616   000EA8  6ED9               	movwf	fsr2l,c
  2617   000EAA  6ADA               	clrf	fsr2h,c
  2618   000EAC  0E02               	movlw	2
  2619   000EAE  26DF               	addwf	indf2,f,c
  2620   000EB0  5CDF               	subwf	indf2,w,c
  2621   000EB2  6ED9               	movwf	fsr2l,c
  2622   000EB4  6ADA               	clrf	fsr2h,c
  2623   000EB6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2624   000EBA  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2625   000EBE                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2628   000EBE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2629   000EC0  6ED9               	movwf	fsr2l,c
  2630   000EC2  6ADA               	clrf	fsr2h,c
  2631   000EC4  2812               	incf	vfpfcnvrt@cp^0,w,c
  2632   000EC6  6EDF               	movwf	indf2,c
  2633   000EC8                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2636   000EC8  0E20               	movlw	32
  2637   000ECA  6E17               	movwf	vfpfcnvrt@c^0,c
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2640   000ECC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2641   000ECE  EF6B  F007         	goto	u2361
  2642   000ED2  EF6E  F007         	goto	u2360
  2643   000ED6                     u2361:
  2644   000ED6  0E01               	movlw	1
  2645   000ED8  EF6F  F007         	goto	u2370
  2646   000EDC                     u2360:
  2647   000EDC  0E00               	movlw	0
  2648   000EDE                     u2370:
  2649   000EDE  6E0F               	movwf	vfpfcnvrt@done^0,c
  2650   000EE0                     l3559:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2653   000EE0  0617               	decf	vfpfcnvrt@c^0,f,c
  2654   000EE2  5017               	movf	vfpfcnvrt@c^0,w,c
  2655   000EE4  0FA3               	addlw	low _dbuf
  2656   000EE6  6ED9               	movwf	fsr2l,c
  2657   000EE8  6ADA               	clrf	fsr2h,c
  2658   000EEA  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2659   000EEE  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2660   000EF2  0E00               	movlw	0
  2661   000EF4  6E04               	movwf	(___awmod@divisor+1)^0,c
  2662   000EF6  0E0A               	movlw	10
  2663   000EF8  6E03               	movwf	___awmod@divisor^0,c
  2664   000EFA  EC32  F009         	call	___awmod	;wreg free
  2665   000EFE  C001  F007         	movff	?___awmod,abs@a
  2666   000F02  C002  F008         	movff	?___awmod+1,abs@a+1
  2667   000F06  EC4E  F00C         	call	_abs	;wreg free
  2668   000F0A  5007               	movf	?_abs^0,w,c
  2669   000F0C  0F30               	addlw	48
  2670   000F0E  6EDF               	movwf	indf2,c
  2671   000F10                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2673   000F10  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2674   000F14  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2675   000F18  0E00               	movlw	0
  2676   000F1A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2677   000F1C  0E0A               	movlw	10
  2678   000F1E  6E03               	movwf	___awdiv@divisor^0,c
  2679   000F20  EC73  F008         	call	___awdiv	;wreg free
  2680   000F24  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  2681   000F28  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2682   000F2C                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  2684   000F2C  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  2685   000F2E  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2686   000F30                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2688   000F30  5013               	movf	vfpfcnvrt@convarg^0,w,c
  2689   000F32  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2690   000F34  B4D8               	btfsc	status,2,c
  2691   000F36  EF9F  F007         	goto	u2381
  2692   000F3A  EFA1  F007         	goto	u2380
  2693   000F3E                     u2381:
  2694   000F3E  EFA9  F007         	goto	l3569
  2695   000F42                     u2380:
  2696   000F42  5017               	movf	vfpfcnvrt@c^0,w,c
  2697   000F44  A4D8               	btfss	status,2,c
  2698   000F46  EFA7  F007         	goto	u2391
  2699   000F4A  EFA9  F007         	goto	u2390
  2700   000F4E                     u2391:
  2701   000F4E  EF70  F007         	goto	l3559
  2702   000F52                     u2390:
  2703   000F52                     l3569:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2706   000F52  5017               	movf	vfpfcnvrt@c^0,w,c
  2707   000F54  B4D8               	btfsc	status,2,c
  2708   000F56  EFAF  F007         	goto	u2401
  2709   000F5A  EFB1  F007         	goto	u2400
  2710   000F5E                     u2401:
  2711   000F5E  EFD2  F007         	goto	l3581
  2712   000F62                     u2400:
  2713   000F62  500F               	movf	vfpfcnvrt@done^0,w,c
  2714   000F64  B4D8               	btfsc	status,2,c
  2715   000F66  EFB7  F007         	goto	u2411
  2716   000F6A  EFB9  F007         	goto	u2410
  2717   000F6E                     u2411:
  2718   000F6E  EFD2  F007         	goto	l3581
  2719   000F72                     u2410:
  2720   000F72                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2722   000F72  0617               	decf	vfpfcnvrt@c^0,f,c
  2723   000F74  5017               	movf	vfpfcnvrt@c^0,w,c
  2724   000F76  0FA3               	addlw	low _dbuf
  2725   000F78  6ED9               	movwf	fsr2l,c
  2726   000F7A  6ADA               	clrf	fsr2h,c
  2727   000F7C  0E2D               	movlw	45
  2728   000F7E  6EDF               	movwf	indf2,c
  2729   000F80                     
  2730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  2731   000F80  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  2732   000F82  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2733   000F84  EFD2  F007         	goto	l3581
  2734   000F88                     l3577:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2737   000F88  5017               	movf	vfpfcnvrt@c^0,w,c
  2738   000F8A  0FA3               	addlw	low _dbuf
  2739   000F8C  6ED9               	movwf	fsr2l,c
  2740   000F8E  6ADA               	clrf	fsr2h,c
  2741   000F90  50DF               	movf	indf2,w,c
  2742   000F92  6E0E               	movwf	??_vfpfcnvrt^0,c
  2743   000F94  500E               	movf	??_vfpfcnvrt^0,w,c
  2744   000F96  6E01               	movwf	fputc@c^0,c
  2745   000F98  6A02               	clrf	(fputc@c+1)^0,c
  2746   000F9A  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2747   000F9E  ECD5  F008         	call	_fputc	;wreg free
  2748   000FA2  2A17               	incf	vfpfcnvrt@c^0,f,c
  2749   000FA4                     l3581:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2752   000FA4  0E20               	movlw	32
  2753   000FA6  1817               	xorwf	vfpfcnvrt@c^0,w,c
  2754   000FA8  A4D8               	btfss	status,2,c
  2755   000FAA  EFD9  F007         	goto	u2421
  2756   000FAE  EFDB  F007         	goto	u2420
  2757   000FB2                     u2421:
  2758   000FB2  EFC4  F007         	goto	l3577
  2759   000FB6                     u2420:
  2760   000FB6                     
  2761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  2762   000FB6  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  2763   000FBA  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  2764   000FBE  EF04  F008         	goto	l1451
  2765   000FC2                     l3583:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2769   000FC2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2770   000FC4  6ED9               	movwf	fsr2l,c
  2771   000FC6  6ADA               	clrf	fsr2h,c
  2772   000FC8  2ADF               	incf	indf2,f,c
  2773   000FCA                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2776   000FCA  0E00               	movlw	0
  2777   000FCC  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2778   000FCE  0E00               	movlw	0
  2779   000FD0  6E0B               	movwf	?_vfpfcnvrt^0,c
  2780   000FD2  EF04  F008         	goto	l1451
  2781   000FD6                     l3589:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2784   000FD6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2785   000FD8  6ED9               	movwf	fsr2l,c
  2786   000FDA  6ADA               	clrf	fsr2h,c
  2787   000FDC  CFDF FFF6          	movff	indf2,tblptrl
  2788   000FE0                     	if	1	;There is more than 1 active tblptr byte
  2789   000FE0  0E0E               	movlw	high __smallconst
  2790   000FE2  6EF7               	movwf	tblptrh,c
  2791   000FE4                     	endif
  2792   000FE4                     	if	0	;tblptru may be non-zero
  2793   000FE4                     	endif
  2794   000FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2795   000FE4  0E00               	movlw	low (__smallconst shr (0+16))
  2796   000FE6  6EF8               	movwf	tblptru,c
  2797   000FE8                     	endif
  2798   000FE8  0008               	tblrd		*
  2799   000FEA  50F5               	movf	tablat,w,c
  2800   000FEC  6E01               	movwf	fputc@c^0,c
  2801   000FEE  6A02               	clrf	(fputc@c+1)^0,c
  2802   000FF0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2803   000FF4  ECD5  F008         	call	_fputc	;wreg free
  2804   000FF8                     
  2805                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2806   000FF8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2807   000FFA  6ED9               	movwf	fsr2l,c
  2808   000FFC  6ADA               	clrf	fsr2h,c
  2809   000FFE  2ADF               	incf	indf2,f,c
  2810   001000                     
  2811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2812   001000  0E00               	movlw	0
  2813   001002  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2814   001004  0E01               	movlw	1
  2815   001006  6E0B               	movwf	?_vfpfcnvrt^0,c
  2816   001008                     l1451:
  2817   001008  0012               	return		;funcret
  2818   00100A                     __end_of_vfpfcnvrt:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _fputc *****************
  2822 ;; Defined at:
  2823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  c               2    0[COMRAM] int 
  2826 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2827 ;;		 -> sprintf@f(12), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  2    0[COMRAM] int 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2839 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2842 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;Total ram usage:        8 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 2
  2846 ;; This function calls:
  2847 ;;		_putch
  2848 ;; This function is called by:
  2849 ;;		_vfpfcnvrt
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text18
  2854   0011AA                     __ptext18:
  2855                           	callstack 0
  2856   0011AA                     _fputc:
  2857                           	callstack 24
  2858   0011AA  5003               	movf	fputc@fp^0,w,c
  2859   0011AC  B4D8               	btfsc	status,2,c
  2860   0011AE  EFDB  F008         	goto	u2261
  2861   0011B2  EFDD  F008         	goto	u2260
  2862   0011B6                     u2261:
  2863   0011B6  EFE5  F008         	goto	l3493
  2864   0011BA                     u2260:
  2865   0011BA  5003               	movf	fputc@fp^0,w,c
  2866   0011BC  A4D8               	btfss	status,2,c
  2867   0011BE  EFE3  F008         	goto	u2271
  2868   0011C2  EFE5  F008         	goto	u2270
  2869   0011C6                     u2271:
  2870   0011C6  EFEA  F008         	goto	l3495
  2871   0011CA                     u2270:
  2872   0011CA                     l3493:
  2873   0011CA  5001               	movf	fputc@c^0,w,c
  2874   0011CC  EC38  F00D         	call	_putch
  2875   0011D0  EF31  F009         	goto	l1476
  2876   0011D4                     l3495:
  2877   0011D4  5003               	movf	fputc@fp^0,w,c
  2878   0011D6  6ED9               	movwf	fsr2l,c
  2879   0011D8  6ADA               	clrf	fsr2h,c
  2880   0011DA  0E0A               	movlw	10
  2881   0011DC  26D9               	addwf	fsr2l,f,c
  2882   0011DE  50DE               	movf	postinc2,w,c
  2883   0011E0  10DE               	iorwf	postinc2,w,c
  2884   0011E2  B4D8               	btfsc	status,2,c
  2885   0011E4  EFF6  F008         	goto	u2281
  2886   0011E8  EFF8  F008         	goto	u2280
  2887   0011EC                     u2281:
  2888   0011EC  EF11  F009         	goto	l3499
  2889   0011F0                     u2280:
  2890   0011F0  5003               	movf	fputc@fp^0,w,c
  2891   0011F2  6ED9               	movwf	fsr2l,c
  2892   0011F4  6ADA               	clrf	fsr2h,c
  2893   0011F6  0E0A               	movlw	10
  2894   0011F8  26D9               	addwf	fsr2l,f,c
  2895   0011FA  5003               	movf	fputc@fp^0,w,c
  2896   0011FC  6EE1               	movwf	fsr1l,c
  2897   0011FE  6AE2               	clrf	fsr1h,c
  2898   001200  0E03               	movlw	3
  2899   001202  26E1               	addwf	fsr1l,f,c
  2900   001204  50DE               	movf	postinc2,w,c
  2901   001206  5CE6               	subwf	postinc1,w,c
  2902   001208  50E6               	movf	postinc1,w,c
  2903   00120A  0A80               	xorlw	128
  2904   00120C  6E08               	movwf	(??_fputc+4)^0,c
  2905   00120E  50DE               	movf	postinc2,w,c
  2906   001210  0A80               	xorlw	128
  2907   001212  5808               	subwfb	(??_fputc+4)^0,w,c
  2908   001214  B0D8               	btfsc	status,0,c
  2909   001216  EF0F  F009         	goto	u2291
  2910   00121A  EF11  F009         	goto	u2290
  2911   00121E                     u2291:
  2912   00121E  EF31  F009         	goto	l1476
  2913   001222                     u2290:
  2914   001222                     l3499:
  2915   001222  5003               	movf	fputc@fp^0,w,c
  2916   001224  6ED9               	movwf	fsr2l,c
  2917   001226  6ADA               	clrf	fsr2h,c
  2918   001228  0E03               	movlw	3
  2919   00122A  26D9               	addwf	fsr2l,f,c
  2920   00122C  CFDE F004          	movff	postinc2,??_fputc
  2921   001230  CFDD F005          	movff	postdec2,??_fputc+1
  2922   001234  5003               	movf	fputc@fp^0,w,c
  2923   001236  6ED9               	movwf	fsr2l,c
  2924   001238  6ADA               	clrf	fsr2h,c
  2925   00123A  CFDE F006          	movff	postinc2,??_fputc+2
  2926   00123E  CFDD F007          	movff	postdec2,??_fputc+3
  2927   001242  5004               	movf	??_fputc^0,w,c
  2928   001244  2406               	addwf	(??_fputc+2)^0,w,c
  2929   001246  6ED9               	movwf	fsr2l,c
  2930   001248  5005               	movf	(??_fputc+1)^0,w,c
  2931   00124A  2007               	addwfc	(??_fputc+3)^0,w,c
  2932   00124C  6EDA               	movwf	fsr2h,c
  2933   00124E  C001  FFDF         	movff	fputc@c,indf2
  2934   001252  5003               	movf	fputc@fp^0,w,c
  2935   001254  6ED9               	movwf	fsr2l,c
  2936   001256  6ADA               	clrf	fsr2h,c
  2937   001258  0E03               	movlw	3
  2938   00125A  26D9               	addwf	fsr2l,f,c
  2939   00125C  2ADE               	incf	postinc2,f,c
  2940   00125E  0E00               	movlw	0
  2941   001260  22DD               	addwfc	postdec2,f,c
  2942   001262                     l1476:
  2943   001262  0012               	return		;funcret
  2944   001264                     __end_of_fputc:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _putch *****************
  2948 ;; Defined at:
  2949 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  c               1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  c               1    0[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_fputc
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text19
  2978   001A70                     __ptext19:
  2979                           	callstack 0
  2980   001A70                     _putch:
  2981                           	callstack 24
  2982   001A70  0012               	return		;funcret
  2983   001A72                     __end_of_putch:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _abs *****************
  2987 ;; Defined at:
  2988 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  a               2    6[COMRAM] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2    6[COMRAM] int 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;Total ram usage:        4 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_vfpfcnvrt
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text20
  3017   00189C                     __ptext20:
  3018                           	callstack 0
  3019   00189C                     _abs:
  3020                           	callstack 25
  3021   00189C  BE08               	btfsc	(abs@a+1)^0,7,c
  3022   00189E  EF53  F00C         	goto	u2301
  3023   0018A2  EF55  F00C         	goto	u2300
  3024   0018A6                     u2301:
  3025   0018A6  EF5B  F00C         	goto	l1461
  3026   0018AA                     u2300:
  3027   0018AA  C007  F007         	movff	abs@a,?_abs
  3028   0018AE  C008  F008         	movff	abs@a+1,?_abs+1
  3029   0018B2  EF67  F00C         	goto	l1464
  3030   0018B6                     l1461:
  3031   0018B6  C007  F009         	movff	abs@a,??_abs
  3032   0018BA  C008  F00A         	movff	abs@a+1,??_abs+1
  3033   0018BE  1E09               	comf	??_abs^0,f,c
  3034   0018C0  1E0A               	comf	(??_abs+1)^0,f,c
  3035   0018C2  4A09               	infsnz	??_abs^0,f,c
  3036   0018C4  2A0A               	incf	(??_abs+1)^0,f,c
  3037   0018C6  C009  F007         	movff	??_abs,?_abs
  3038   0018CA  C00A  F008         	movff	??_abs+1,?_abs+1
  3039   0018CE                     l1464:
  3040   0018CE  0012               	return		;funcret
  3041   0018D0                     __end_of_abs:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function ___awmod *****************
  3045 ;; Defined at:
  3046 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  dividend        2    0[COMRAM] int 
  3049 ;;  divisor         2    2[COMRAM] int 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  sign            1    5[COMRAM] unsigned char 
  3052 ;;  counter         1    4[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2    0[COMRAM] int 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        6 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_vfpfcnvrt
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text21
  3077   001264                     __ptext21:
  3078                           	callstack 0
  3079   001264                     ___awmod:
  3080                           	callstack 25
  3081   001264  0E00               	movlw	0
  3082   001266  6E06               	movwf	___awmod@sign^0,c
  3083   001268  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3084   00126A  EF3B  F009         	goto	u2200
  3085   00126E  EF39  F009         	goto	u2201
  3086   001272                     u2201:
  3087   001272  EF41  F009         	goto	l3461
  3088   001276                     u2200:
  3089   001276  6C01               	negf	___awmod@dividend^0,c
  3090   001278  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3091   00127A  B0D8               	btfsc	status,0,c
  3092   00127C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3093   00127E  0E01               	movlw	1
  3094   001280  6E06               	movwf	___awmod@sign^0,c
  3095   001282                     l3461:
  3096   001282  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3097   001284  EF48  F009         	goto	u2210
  3098   001288  EF46  F009         	goto	u2211
  3099   00128C                     u2211:
  3100   00128C  EF4C  F009         	goto	l3465
  3101   001290                     u2210:
  3102   001290  6C03               	negf	___awmod@divisor^0,c
  3103   001292  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3104   001294  B0D8               	btfsc	status,0,c
  3105   001296  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3106   001298                     l3465:
  3107   001298  5003               	movf	___awmod@divisor^0,w,c
  3108   00129A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3109   00129C  B4D8               	btfsc	status,2,c
  3110   00129E  EF53  F009         	goto	u2221
  3111   0012A2  EF55  F009         	goto	u2220
  3112   0012A6                     u2221:
  3113   0012A6  EF79  F009         	goto	l3481
  3114   0012AA                     u2220:
  3115   0012AA  0E01               	movlw	1
  3116   0012AC  6E05               	movwf	___awmod@counter^0,c
  3117   0012AE  EF5D  F009         	goto	l3471
  3118   0012B2                     l3469:
  3119   0012B2  90D8               	bcf	status,0,c
  3120   0012B4  3603               	rlcf	___awmod@divisor^0,f,c
  3121   0012B6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3122   0012B8  2A05               	incf	___awmod@counter^0,f,c
  3123   0012BA                     l3471:
  3124   0012BA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3125   0012BC  EF62  F009         	goto	u2231
  3126   0012C0  EF64  F009         	goto	u2230
  3127   0012C4                     u2231:
  3128   0012C4  EF59  F009         	goto	l3469
  3129   0012C8                     u2230:
  3130   0012C8                     l3473:
  3131   0012C8  5003               	movf	___awmod@divisor^0,w,c
  3132   0012CA  5C01               	subwf	___awmod@dividend^0,w,c
  3133   0012CC  5004               	movf	(___awmod@divisor+1)^0,w,c
  3134   0012CE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3135   0012D0  A0D8               	btfss	status,0,c
  3136   0012D2  EF6D  F009         	goto	u2241
  3137   0012D6  EF6F  F009         	goto	u2240
  3138   0012DA                     u2241:
  3139   0012DA  EF73  F009         	goto	l3477
  3140   0012DE                     u2240:
  3141   0012DE  5003               	movf	___awmod@divisor^0,w,c
  3142   0012E0  5E01               	subwf	___awmod@dividend^0,f,c
  3143   0012E2  5004               	movf	(___awmod@divisor+1)^0,w,c
  3144   0012E4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3145   0012E6                     l3477:
  3146   0012E6  90D8               	bcf	status,0,c
  3147   0012E8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3148   0012EA  3203               	rrcf	___awmod@divisor^0,f,c
  3149   0012EC  2E05               	decfsz	___awmod@counter^0,f,c
  3150   0012EE  EF64  F009         	goto	l3473
  3151   0012F2                     l3481:
  3152   0012F2  5006               	movf	___awmod@sign^0,w,c
  3153   0012F4  B4D8               	btfsc	status,2,c
  3154   0012F6  EF7F  F009         	goto	u2251
  3155   0012FA  EF81  F009         	goto	u2250
  3156   0012FE                     u2251:
  3157   0012FE  EF85  F009         	goto	l3485
  3158   001302                     u2250:
  3159   001302  6C01               	negf	___awmod@dividend^0,c
  3160   001304  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3161   001306  B0D8               	btfsc	status,0,c
  3162   001308  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3163   00130A                     l3485:
  3164   00130A  C001  F001         	movff	___awmod@dividend,?___awmod
  3165   00130E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3166   001312  0012               	return		;funcret
  3167   001314                     __end_of___awmod:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function ___awdiv *****************
  3171 ;; Defined at:
  3172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  dividend        2    0[COMRAM] int 
  3175 ;;  divisor         2    2[COMRAM] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  quotient        2    6[COMRAM] int 
  3178 ;;  sign            1    5[COMRAM] unsigned char 
  3179 ;;  counter         1    4[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2    0[COMRAM] int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;Total ram usage:        8 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_vfpfcnvrt
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text22
  3204   0010E6                     __ptext22:
  3205                           	callstack 0
  3206   0010E6                     ___awdiv:
  3207                           	callstack 25
  3208   0010E6  0E00               	movlw	0
  3209   0010E8  6E06               	movwf	___awdiv@sign^0,c
  3210   0010EA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3211   0010EC  EF7C  F008         	goto	u2140
  3212   0010F0  EF7A  F008         	goto	u2141
  3213   0010F4                     u2141:
  3214   0010F4  EF82  F008         	goto	l3417
  3215   0010F8                     u2140:
  3216   0010F8  6C03               	negf	___awdiv@divisor^0,c
  3217   0010FA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3218   0010FC  B0D8               	btfsc	status,0,c
  3219   0010FE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3220   001100  0E01               	movlw	1
  3221   001102  6E06               	movwf	___awdiv@sign^0,c
  3222   001104                     l3417:
  3223   001104  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3224   001106  EF89  F008         	goto	u2150
  3225   00110A  EF87  F008         	goto	u2151
  3226   00110E                     u2151:
  3227   00110E  EF8F  F008         	goto	l3423
  3228   001112                     u2150:
  3229   001112  6C01               	negf	___awdiv@dividend^0,c
  3230   001114  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3231   001116  B0D8               	btfsc	status,0,c
  3232   001118  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3233   00111A  0E01               	movlw	1
  3234   00111C  1A06               	xorwf	___awdiv@sign^0,f,c
  3235   00111E                     l3423:
  3236   00111E  0E00               	movlw	0
  3237   001120  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3238   001122  0E00               	movlw	0
  3239   001124  6E07               	movwf	___awdiv@quotient^0,c
  3240   001126  5003               	movf	___awdiv@divisor^0,w,c
  3241   001128  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3242   00112A  B4D8               	btfsc	status,2,c
  3243   00112C  EF9A  F008         	goto	u2161
  3244   001130  EF9C  F008         	goto	u2160
  3245   001134                     u2161:
  3246   001134  EFC4  F008         	goto	l3445
  3247   001138                     u2160:
  3248   001138  0E01               	movlw	1
  3249   00113A  6E05               	movwf	___awdiv@counter^0,c
  3250   00113C  EFA4  F008         	goto	l3431
  3251   001140                     l3429:
  3252   001140  90D8               	bcf	status,0,c
  3253   001142  3603               	rlcf	___awdiv@divisor^0,f,c
  3254   001144  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3255   001146  2A05               	incf	___awdiv@counter^0,f,c
  3256   001148                     l3431:
  3257   001148  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3258   00114A  EFA9  F008         	goto	u2171
  3259   00114E  EFAB  F008         	goto	u2170
  3260   001152                     u2171:
  3261   001152  EFA0  F008         	goto	l3429
  3262   001156                     u2170:
  3263   001156                     l3433:
  3264   001156  90D8               	bcf	status,0,c
  3265   001158  3607               	rlcf	___awdiv@quotient^0,f,c
  3266   00115A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3267   00115C  5003               	movf	___awdiv@divisor^0,w,c
  3268   00115E  5C01               	subwf	___awdiv@dividend^0,w,c
  3269   001160  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3270   001162  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3271   001164  A0D8               	btfss	status,0,c
  3272   001166  EFB7  F008         	goto	u2181
  3273   00116A  EFB9  F008         	goto	u2180
  3274   00116E                     u2181:
  3275   00116E  EFBE  F008         	goto	l3441
  3276   001172                     u2180:
  3277   001172  5003               	movf	___awdiv@divisor^0,w,c
  3278   001174  5E01               	subwf	___awdiv@dividend^0,f,c
  3279   001176  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3280   001178  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3281   00117A  8007               	bsf	___awdiv@quotient^0,0,c
  3282   00117C                     l3441:
  3283   00117C  90D8               	bcf	status,0,c
  3284   00117E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3285   001180  3203               	rrcf	___awdiv@divisor^0,f,c
  3286   001182  2E05               	decfsz	___awdiv@counter^0,f,c
  3287   001184  EFAB  F008         	goto	l3433
  3288   001188                     l3445:
  3289   001188  5006               	movf	___awdiv@sign^0,w,c
  3290   00118A  B4D8               	btfsc	status,2,c
  3291   00118C  EFCA  F008         	goto	u2191
  3292   001190  EFCC  F008         	goto	u2190
  3293   001194                     u2191:
  3294   001194  EFD0  F008         	goto	l3449
  3295   001198                     u2190:
  3296   001198  6C07               	negf	___awdiv@quotient^0,c
  3297   00119A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3298   00119C  B0D8               	btfsc	status,0,c
  3299   00119E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3300   0011A0                     l3449:
  3301   0011A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3302   0011A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3303   0011A8  0012               	return		;funcret
  3304   0011AA                     __end_of___awdiv:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _sendStringSerial4 *****************
  3308 ;; Defined at:
  3309 ;;		line 35 in file "serial.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  string          2    1[COMRAM] PTR unsigned char 
  3312 ;;		 -> sendRGBCvalSerial4@tempStr(41), STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 2
  3331 ;; This function calls:
  3332 ;;		_sendCharSerial4
  3333 ;; This function is called by:
  3334 ;;		_sendArrayCharSerial4
  3335 ;;		_sendRGBCvalSerial4
  3336 ;;		_sendIntSerial4
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text23
  3341   00148A                     __ptext23:
  3342                           	callstack 0
  3343   00148A                     _sendStringSerial4:
  3344                           	callstack 27
  3345   00148A                     
  3346                           ;serial.c: 37:     while(*string != 0){
  3347   00148A  EF5C  F00A         	goto	l3641
  3348   00148E                     l3637:
  3349                           
  3350                           ;serial.c: 38:   sendCharSerial4(*string++);
  3351   00148E  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3352   001492  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3353   001496  0E00               	movlw	low (__smallconst shr (0+16))
  3354   001498  6EF8               	movwf	tblptru,c
  3355   00149A  0E0D               	movlw	(high __ramtop+-1)
  3356   00149C  64F7               	cpfsgt	tblptrh,c
  3357   00149E  D003               	bra	u2457
  3358   0014A0  0008               	tblrd		*
  3359   0014A2  50F5               	movf	tablat,w,c
  3360   0014A4  D005               	bra	u2450
  3361   0014A6                     u2457:
  3362   0014A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3363   0014AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3364   0014AE  50EF               	movf	indf0,w,c
  3365   0014B0                     u2450:
  3366   0014B0  ECFF  F00C         	call	_sendCharSerial4
  3367   0014B4  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3368   0014B6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3369   0014B8                     l3641:
  3370                           
  3371                           ;serial.c: 37:     while(*string != 0){
  3372   0014B8  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  3373   0014BC  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  3374   0014C0  0E00               	movlw	low (__smallconst shr (0+16))
  3375   0014C2  6EF8               	movwf	tblptru,c
  3376   0014C4  0E0D               	movlw	(high __ramtop+-1)
  3377   0014C6  64F7               	cpfsgt	tblptrh,c
  3378   0014C8  D003               	bra	u2467
  3379   0014CA  0008               	tblrd		*
  3380   0014CC  50F5               	movf	tablat,w,c
  3381   0014CE  D005               	bra	u2460
  3382   0014D0                     u2467:
  3383   0014D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3384   0014D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3385   0014D8  50EF               	movf	indf0,w,c
  3386   0014DA                     u2460:
  3387   0014DA  0900               	iorlw	0
  3388   0014DC  A4D8               	btfss	status,2,c
  3389   0014DE  EF73  F00A         	goto	u2471
  3390   0014E2  EF75  F00A         	goto	u2470
  3391   0014E6                     u2471:
  3392   0014E6  EF47  F00A         	goto	l3637
  3393   0014EA                     u2470:
  3394   0014EA  0012               	return		;funcret
  3395   0014EC                     __end_of_sendStringSerial4:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _sendCharSerial4 *****************
  3399 ;; Defined at:
  3400 ;;		line 29 in file "serial.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  charToSend      1    wreg     unsigned char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  charToSend      1    0[COMRAM] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;Total ram usage:        1 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_sendStringSerial4
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text24
  3429   0019FE                     __ptext24:
  3430                           	callstack 0
  3431   0019FE                     _sendCharSerial4:
  3432                           	callstack 27
  3433                           
  3434                           ;incstack = 0
  3435                           ;sendCharSerial4@charToSend stored from wreg
  3436   0019FE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3437   001A00                     l429:
  3438   001A00  010E               	movlb	14	; () banked
  3439   001A02  A537               	btfss	55,2,b	;volatile
  3440   001A04  EF06  F00D         	goto	u2431
  3441   001A08  EF08  F00D         	goto	u2430
  3442   001A0C                     u2431:
  3443   001A0C  EF00  F00D         	goto	l429
  3444   001A10                     u2430:
  3445   001A10                     
  3446                           ; BSR set to: 14
  3447                           ;serial.c: 31:     TX4REG = charToSend;
  3448   001A10  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3449   001A14                     
  3450                           ; BSR set to: 14
  3451   001A14  0012               	return		;funcret
  3452   001A16                     __end_of_sendCharSerial4:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _read_timer *****************
  3456 ;; Defined at:
  3457 ;;		line 26 in file "timers.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  tH              1    0[COMRAM] PTR unsigned char 
  3460 ;;		 -> forward_navigation@timerH(1), 
  3461 ;;  tL              1    1[COMRAM] PTR unsigned char 
  3462 ;;		 -> forward_navigation@timerL(1), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_forward_navigation
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text25
  3489   001A16                     __ptext25:
  3490                           	callstack 0
  3491   001A16                     _read_timer:
  3492                           	callstack 28
  3493   001A16                     
  3494                           ;timers.c: 26: void read_timer(unsigned char *tH, unsigned char *tL);timers.c: 27: {;tim
      +                          ers.c: 31:     *tL = TMR0L;
  3495   001A16  5002               	movf	read_timer@tL^0,w,c
  3496   001A18  6ED9               	movwf	fsr2l,c
  3497   001A1A  6ADA               	clrf	fsr2h,c
  3498   001A1C  CFD3 FFDF          	movff	4051,indf2	;volatile
  3499                           
  3500                           ;timers.c: 32:     *tH = TMR0H;
  3501   001A20  5001               	movf	read_timer@tH^0,w,c
  3502   001A22  6ED9               	movwf	fsr2l,c
  3503   001A24  6ADA               	clrf	fsr2h,c
  3504   001A26  CFD4 FFDF          	movff	4052,indf2	;volatile
  3505   001A2A  0012               	return		;funcret
  3506   001A2C                     __end_of_read_timer:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _color_click_init *****************
  3510 ;; Defined at:
  3511 ;;		line 4 in file "color.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 4
  3532 ;; This function calls:
  3533 ;;		_I2C_2_Master_Init
  3534 ;;		_color_writetoaddr
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text26
  3541   0018D0                     __ptext26:
  3542                           	callstack 0
  3543   0018D0                     _color_click_init:
  3544                           	callstack 26
  3545   0018D0                     
  3546                           ;color.c: 7:     I2C_2_Master_Init();
  3547   0018D0  EC99  F00C         	call	_I2C_2_Master_Init	;wreg free
  3548   0018D4                     
  3549                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3550   0018D4  0E01               	movlw	1
  3551   0018D6  6E03               	movwf	color_writetoaddr@value^0,c
  3552   0018D8  0E00               	movlw	0
  3553   0018DA  ECD4  F00C         	call	_color_writetoaddr
  3554   0018DE                     
  3555                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3556   0018DE  0E3F               	movlw	63
  3557   0018E0  6E05               	movwf	??_color_click_init^0,c
  3558   0018E2  0E55               	movlw	85
  3559   0018E4                     u2587:
  3560   0018E4  2EE8               	decfsz	wreg,f,c
  3561   0018E6  D7FE               	bra	u2587
  3562   0018E8  2E05               	decfsz	??_color_click_init^0,f,c
  3563   0018EA  D7FC               	bra	u2587
  3564   0018EC  0000               	nop	
  3565   0018EE                     
  3566                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  3567   0018EE  0E03               	movlw	3
  3568   0018F0  6E03               	movwf	color_writetoaddr@value^0,c
  3569   0018F2  0E00               	movlw	0
  3570   0018F4  ECD4  F00C         	call	_color_writetoaddr
  3571   0018F8                     
  3572                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  3573   0018F8  0ED5               	movlw	213
  3574   0018FA  6E03               	movwf	color_writetoaddr@value^0,c
  3575   0018FC  0E01               	movlw	1
  3576   0018FE  ECD4  F00C         	call	_color_writetoaddr
  3577   001902  0012               	return		;funcret
  3578   001904                     __end_of_color_click_init:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _color_writetoaddr *****************
  3582 ;; Defined at:
  3583 ;;		line 20 in file "color.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  address         1    wreg     unsigned char 
  3586 ;;  value           1    2[COMRAM] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  address         1    3[COMRAM] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3598 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 3
  3605 ;; This function calls:
  3606 ;;		_I2C_2_Master_Start
  3607 ;;		_I2C_2_Master_Stop
  3608 ;;		_I2C_2_Master_Write
  3609 ;; This function is called by:
  3610 ;;		_color_click_init
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text27
  3615   0019A8                     __ptext27:
  3616                           	callstack 0
  3617   0019A8                     _color_writetoaddr:
  3618                           	callstack 26
  3619                           
  3620                           ;incstack = 0
  3621                           ;color_writetoaddr@address stored from wreg
  3622   0019A8  6E04               	movwf	color_writetoaddr@address^0,c
  3623   0019AA                     
  3624                           ;color.c: 21:     I2C_2_Master_Start();
  3625   0019AA  EC32  F00D         	call	_I2C_2_Master_Start	;wreg free
  3626                           
  3627                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3628   0019AE  0E52               	movlw	82
  3629   0019B0  EC16  F00D         	call	_I2C_2_Master_Write
  3630                           
  3631                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3632   0019B4  5004               	movf	color_writetoaddr@address^0,w,c
  3633   0019B6  0980               	iorlw	128
  3634   0019B8  EC16  F00D         	call	_I2C_2_Master_Write
  3635                           
  3636                           ;color.c: 24:     I2C_2_Master_Write(value);
  3637   0019BC  5003               	movf	color_writetoaddr@value^0,w,c
  3638   0019BE  EC16  F00D         	call	_I2C_2_Master_Write
  3639                           
  3640                           ;color.c: 25:     I2C_2_Master_Stop();
  3641   0019C2  EC2D  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3642   0019C6  0012               	return		;funcret
  3643   0019C8                     __end_of_color_writetoaddr:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _I2C_2_Master_Write *****************
  3647 ;; Defined at:
  3648 ;;		line 45 in file "i2c.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  data_byte       1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  data_byte       1    1[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 2
  3669 ;; This function calls:
  3670 ;;		_I2C_2_Master_Idle
  3671 ;; This function is called by:
  3672 ;;		_color_writetoaddr
  3673 ;;		_color_read_Red
  3674 ;;		_color_read_Blue
  3675 ;;		_color_read_Green
  3676 ;;		_color_read_Clear
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text28
  3681   001A2C                     __ptext28:
  3682                           	callstack 0
  3683   001A2C                     _I2C_2_Master_Write:
  3684                           	callstack 26
  3685                           
  3686                           ;incstack = 0
  3687                           ;I2C_2_Master_Write@data_byte stored from wreg
  3688   001A2C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3689   001A2E                     
  3690                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3691   001A2E  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3692   001A32                     
  3693                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3694   001A32  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3695   001A36  0012               	return		;funcret
  3696   001A38                     __end_of_I2C_2_Master_Write:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _I2C_2_Master_Stop *****************
  3700 ;; Defined at:
  3701 ;;		line 39 in file "i2c.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 2
  3722 ;; This function calls:
  3723 ;;		_I2C_2_Master_Idle
  3724 ;; This function is called by:
  3725 ;;		_color_writetoaddr
  3726 ;;		_color_read_Red
  3727 ;;		_color_read_Blue
  3728 ;;		_color_read_Green
  3729 ;;		_color_read_Clear
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text29
  3734   001A5A                     __ptext29:
  3735                           	callstack 0
  3736   001A5A                     _I2C_2_Master_Stop:
  3737                           	callstack 26
  3738   001A5A                     
  3739                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3740   001A5A  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3741   001A5E                     
  3742                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3743   001A5E  010E               	movlb	14	; () banked
  3744   001A60  85DA               	bsf	218,2,b	;volatile
  3745   001A62                     
  3746                           ; BSR set to: 14
  3747   001A62  0012               	return		;funcret
  3748   001A64                     __end_of_I2C_2_Master_Stop:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _I2C_2_Master_Start *****************
  3752 ;; Defined at:
  3753 ;;		line 27 in file "i2c.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 2
  3774 ;; This function calls:
  3775 ;;		_I2C_2_Master_Idle
  3776 ;; This function is called by:
  3777 ;;		_color_writetoaddr
  3778 ;;		_color_read_Red
  3779 ;;		_color_read_Blue
  3780 ;;		_color_read_Green
  3781 ;;		_color_read_Clear
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text30
  3786   001A64                     __ptext30:
  3787                           	callstack 0
  3788   001A64                     _I2C_2_Master_Start:
  3789                           	callstack 26
  3790   001A64                     
  3791                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3792   001A64  ECAE  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3793   001A68                     
  3794                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3795   001A68  010E               	movlb	14	; () banked
  3796   001A6A  81DA               	bsf	218,0,b	;volatile
  3797   001A6C                     
  3798                           ; BSR set to: 14
  3799   001A6C  0012               	return		;funcret
  3800   001A6E                     __end_of_I2C_2_Master_Start:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _I2C_2_Master_Idle *****************
  3804 ;; Defined at:
  3805 ;;		line 22 in file "i2c.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;Total ram usage:        1 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_I2C_2_Master_Start
  3830 ;;		_I2C_2_Master_RepStart
  3831 ;;		_I2C_2_Master_Stop
  3832 ;;		_I2C_2_Master_Write
  3833 ;;		_I2C_2_Master_Read
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text31
  3838   00195C                     __ptext31:
  3839                           	callstack 0
  3840   00195C                     _I2C_2_Master_Idle:
  3841                           	callstack 26
  3842   00195C                     l261:
  3843   00195C  010E               	movlb	14	; () banked
  3844   00195E  B5D8               	btfsc	216,2,b	;volatile
  3845   001960  EFB4  F00C         	goto	u2121
  3846   001964  EFB6  F00C         	goto	u2120
  3847   001968                     u2121:
  3848   001968  EFAE  F00C         	goto	l261
  3849   00196C                     u2120:
  3850   00196C                     
  3851                           ; BSR set to: 14
  3852   00196C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3853   001970  0E1F               	movlw	31
  3854   001972  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3855   001974  A4D8               	btfss	status,2,c
  3856   001976  EFBF  F00C         	goto	u2131
  3857   00197A  EFC1  F00C         	goto	u2130
  3858   00197E                     u2131:
  3859   00197E  EFAE  F00C         	goto	l261
  3860   001982                     u2130:
  3861   001982                     
  3862                           ; BSR set to: 14
  3863   001982  0012               	return		;funcret
  3864   001984                     __end_of_I2C_2_Master_Idle:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _I2C_2_Master_Init *****************
  3868 ;; Defined at:
  3869 ;;		line 4 in file "i2c.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_color_click_init
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text32
  3898   001932                     __ptext32:
  3899                           	callstack 0
  3900   001932                     _I2C_2_Master_Init:
  3901                           	callstack 28
  3902   001932                     
  3903                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3904   001932  010E               	movlb	14	; () banked
  3905   001934  51D9               	movf	217,w,b	;volatile
  3906   001936  0BF0               	andlw	-16
  3907   001938  0908               	iorlw	8
  3908   00193A  6FD9               	movwf	217,b	;volatile
  3909   00193C                     
  3910                           ; BSR set to: 14
  3911                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3912   00193C  8BD9               	bsf	217,5,b	;volatile
  3913                           
  3914                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3915   00193E  0E9F               	movlw	159
  3916   001940  6FD6               	movwf	214,b	;volatile
  3917   001942                     
  3918                           ; BSR set to: 14
  3919                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3920   001942  8A84               	bsf	132,5,c	;volatile
  3921   001944                     
  3922                           ; BSR set to: 14
  3923                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3924   001944  8C84               	bsf	132,6,c	;volatile
  3925   001946                     
  3926                           ; BSR set to: 14
  3927                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3928   001946  9BA7               	bcf	167,5,b	;volatile
  3929   001948                     
  3930                           ; BSR set to: 14
  3931                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3932   001948  9DA7               	bcf	167,6,b	;volatile
  3933                           
  3934                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3935   00194A  0E1D               	movlw	29
  3936   00194C  6F1D               	movwf	29,b	;volatile
  3937                           
  3938                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3939   00194E  0E1E               	movlw	30
  3940   001950  6F1C               	movwf	28,b	;volatile
  3941                           
  3942                           ;i2c.c: 18:   RD5PPS=0x1C;
  3943   001952  0E1C               	movlw	28
  3944   001954  6F6F               	movwf	111,b	;volatile
  3945                           
  3946                           ;i2c.c: 19:   RD6PPS=0x1B;
  3947   001956  0E1B               	movlw	27
  3948   001958  6F70               	movwf	112,b	;volatile
  3949   00195A                     
  3950                           ; BSR set to: 14
  3951   00195A  0012               	return		;funcret
  3952   00195C                     __end_of_I2C_2_Master_Init:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _buggy_lights_init *****************
  3956 ;; Defined at:
  3957 ;;		line 4 in file "buggy_lights.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		None
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text33
  3986   001904                     __ptext33:
  3987                           	callstack 0
  3988   001904                     _buggy_lights_init:
  3989                           	callstack 29
  3990   001904                     
  3991                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3992   001904  9884               	bcf	132,4,c	;volatile
  3993                           
  3994                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3995   001906  9288               	bcf	136,1,c	;volatile
  3996                           
  3997                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3998   001908  9684               	bcf	132,3,c	;volatile
  3999                           
  4000                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  4001   00190A  9086               	bcf	134,0,c	;volatile
  4002                           
  4003                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  4004   00190C  9088               	bcf	136,0,c	;volatile
  4005                           
  4006                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  4007   00190E  987C               	bcf	124,4,c	;volatile
  4008                           
  4009                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  4010   001910  9280               	bcf	128,1,c	;volatile
  4011                           
  4012                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  4013   001912  967C               	bcf	124,3,c	;volatile
  4014                           
  4015                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  4016   001914  907E               	bcf	126,0,c	;volatile
  4017                           
  4018                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  4019   001916  9080               	bcf	128,0,c	;volatile
  4020                           
  4021                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  4022   001918  9287               	bcf	135,1,c	;volatile
  4023                           
  4024                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  4025   00191A  9881               	bcf	129,4,c	;volatile
  4026                           
  4027                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  4028   00191C  9E86               	bcf	134,7,c	;volatile
  4029                           
  4030                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  4031   00191E  927F               	bcf	127,1,c	;volatile
  4032                           
  4033                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  4034   001920  9879               	bcf	121,4,c	;volatile
  4035                           
  4036                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  4037   001922  9E7E               	bcf	126,7,c	;volatile
  4038                           
  4039                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  4040   001924  9087               	bcf	135,0,c	;volatile
  4041                           
  4042                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  4043   001926  9E85               	bcf	133,7,c	;volatile
  4044                           
  4045                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  4046   001928  9681               	bcf	129,3,c	;volatile
  4047                           
  4048                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  4049   00192A  907F               	bcf	127,0,c	;volatile
  4050                           
  4051                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  4052   00192C  9E7D               	bcf	125,7,c	;volatile
  4053                           
  4054                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  4055   00192E  9679               	bcf	121,3,c	;volatile
  4056   001930  0012               	return		;funcret
  4057   001932                     __end_of_buggy_lights_init:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _Timer0_init *****************
  4061 ;; Defined at:
  4062 ;;		line 7 in file "timers.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 3
  4083 ;; This function calls:
  4084 ;;		_reset_timer
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text34
  4091   001984                     __ptext34:
  4092                           	callstack 0
  4093   001984                     _Timer0_init:
  4094                           	callstack 27
  4095   001984                     
  4096                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4097   001984  50D6               	movf	214,w,c	;volatile
  4098   001986  0B1F               	andlw	-225
  4099   001988  0940               	iorlw	64
  4100   00198A  6ED6               	movwf	214,c	;volatile
  4101   00198C                     
  4102                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4103   00198C  88D6               	bsf	214,4,c	;volatile
  4104   00198E                     
  4105                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  4106   00198E  88D5               	bsf	213,4,c	;volatile
  4107                           
  4108                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  4109   001990  50D6               	movf	214,w,c	;volatile
  4110   001992  0BF0               	andlw	-16
  4111   001994  090E               	iorlw	14
  4112   001996  6ED6               	movwf	214,c	;volatile
  4113   001998                     
  4114                           ;timers.c: 18:     reset_timer();
  4115   001998  EC1C  F00D         	call	_reset_timer	;wreg free
  4116   00199C                     
  4117                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  4118   00199C  8ED5               	bsf	213,7,c	;volatile
  4119   00199E                     
  4120                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  4121   00199E  010E               	movlb	14	; () banked
  4122   0019A0  8B29               	bsf	41,5,b	;volatile
  4123   0019A2                     
  4124                           ; BSR set to: 14
  4125                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  4126   0019A2  8CF2               	bsf	242,6,c	;volatile
  4127   0019A4                     
  4128                           ; BSR set to: 14
  4129                           ;timers.c: 23:     INTCONbits.GIE = 1;
  4130   0019A4  8EF2               	bsf	242,7,c	;volatile
  4131   0019A6                     
  4132                           ; BSR set to: 14
  4133   0019A6  0012               	return		;funcret
  4134   0019A8                     __end_of_Timer0_init:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _reset_timer *****************
  4138 ;; Defined at:
  4139 ;;		line 44 in file "timers.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 2
  4160 ;; This function calls:
  4161 ;;		_write_timer
  4162 ;; This function is called by:
  4163 ;;		_Timer0_init
  4164 ;;		_forward_navigation
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text35
  4169   001A38                     __ptext35:
  4170                           	callstack 0
  4171   001A38                     _reset_timer:
  4172                           	callstack 27
  4173   001A38                     
  4174                           ;timers.c: 46:     write_timer(0, 0);
  4175   001A38  0E00               	movlw	0
  4176   001A3A  6E01               	movwf	write_timer@tL^0,c
  4177   001A3C  0E00               	movlw	0
  4178   001A3E  EC22  F00D         	call	_write_timer
  4179   001A42  0012               	return		;funcret
  4180   001A44                     __end_of_reset_timer:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _write_timer *****************
  4184 ;; Defined at:
  4185 ;;		line 35 in file "timers.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  tH              1    wreg     unsigned char 
  4188 ;;  tL              1    0[COMRAM] unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  tH              1    1[COMRAM] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_reset_timer
  4211 ;;		_return_to_sender
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text36
  4216   001A44                     __ptext36:
  4217                           	callstack 0
  4218   001A44                     _write_timer:
  4219                           	callstack 27
  4220                           
  4221                           ;incstack = 0
  4222                           ;write_timer@tH stored from wreg
  4223   001A44  6E02               	movwf	write_timer@tH^0,c
  4224   001A46                     
  4225                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  4226   001A46  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  4227   001A4A                     
  4228                           ;timers.c: 41:     TMR0L = tL;
  4229   001A4A  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  4230   001A4E  0012               	return		;funcret
  4231   001A50                     __end_of_write_timer:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _ISR *****************
  4235 ;; Defined at:
  4236 ;;		line 116 in file "timers.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		Interrupt level 2
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	intcode
  4264   000008                     __pintcode:
  4265                           	callstack 0
  4266   000008                     _ISR:
  4267                           	callstack 23
  4268                           
  4269                           ;incstack = 0
  4270   000008  8247               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4271   00000A                     
  4272                           ;timers.c: 119:     if (PIR0bits.TMR0IF) {
  4273   00000A  010E               	movlb	14	; () banked
  4274   00000C  AB33               	btfss	51,5,b	;volatile
  4275   00000E  EF0B  F000         	goto	i2u171_41
  4276   000012  EF0D  F000         	goto	i2u171_40
  4277   000016                     i2u171_41:
  4278   000016  EF1A  F000         	goto	i2l701
  4279   00001A                     i2u171_40:
  4280   00001A                     
  4281                           ; BSR set to: 14
  4282                           ;timers.c: 120:         if (returning) {
  4283   00001A  5040               	movf	_returning^0,w,c
  4284   00001C  B4D8               	btfsc	status,2,c
  4285   00001E  EF13  F000         	goto	i2u172_41
  4286   000022  EF15  F000         	goto	i2u172_40
  4287   000026                     i2u172_41:
  4288   000026  EF18  F000         	goto	i2l700
  4289   00002A                     i2u172_40:
  4290   00002A                     
  4291                           ; BSR set to: 14
  4292                           ;timers.c: 121:             return_flag = 1;
  4293   00002A  0E01               	movlw	1
  4294   00002C  0100               	movlb	0	; () banked
  4295   00002E  6FDF               	movwf	_return_flag& (0+255),b
  4296   000030                     i2l700:
  4297                           
  4298                           ;timers.c: 126:         PIR0bits.TMR0IF = 0;
  4299   000030  010E               	movlb	14	; () banked
  4300   000032  9B33               	bcf	51,5,b	;volatile
  4301   000034                     i2l701:
  4302                           
  4303                           ; BSR set to: 14
  4304   000034  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4305   000036  0011               	retfie		f
  4306   000038                     __end_of_ISR:
  4307                           	callstack 0
  4308                           
  4309                           	psect	rparam
  4310   000000                     
  4311                           	psect	temp
  4312   000047                     btemp:
  4313                           	callstack 0
  4314   000047                     	ds	1
  4315   000000                     int$flags	set	btemp
  4316   000000                     wtemp8	set	btemp+1
  4317   000000                     ttemp5	set	btemp+1
  4318   000000                     ttemp6	set	btemp+4
  4319   000000                     ttemp7	set	btemp+8
  4320                           
  4321                           	psect	idloc
  4322                           
  4323                           ;Config register IDLOC0 @ 0x200000
  4324                           ;	unspecified, using default values
  4325   200000                     	org	2097152
  4326   200000  FFFF               	dw	65535
  4327                           
  4328                           ;Config register IDLOC1 @ 0x200002
  4329                           ;	unspecified, using default values
  4330   200002                     	org	2097154
  4331   200002  FFFF               	dw	65535
  4332                           
  4333                           ;Config register IDLOC2 @ 0x200004
  4334                           ;	unspecified, using default values
  4335   200004                     	org	2097156
  4336   200004  FFFF               	dw	65535
  4337                           
  4338                           ;Config register IDLOC3 @ 0x200006
  4339                           ;	unspecified, using default values
  4340   200006                     	org	2097158
  4341   200006  FFFF               	dw	65535
  4342                           
  4343                           ;Config register IDLOC4 @ 0x200008
  4344                           ;	unspecified, using default values
  4345   200008                     	org	2097160
  4346   200008  FFFF               	dw	65535
  4347                           
  4348                           ;Config register IDLOC5 @ 0x20000A
  4349                           ;	unspecified, using default values
  4350   20000A                     	org	2097162
  4351   20000A  FFFF               	dw	65535
  4352                           
  4353                           ;Config register IDLOC6 @ 0x20000C
  4354                           ;	unspecified, using default values
  4355   20000C                     	org	2097164
  4356   20000C  FFFF               	dw	65535
  4357                           
  4358                           ;Config register IDLOC7 @ 0x20000E
  4359                           ;	unspecified, using default values
  4360   20000E                     	org	2097166
  4361   20000E  FFFF               	dw	65535
  4362                           
  4363                           	psect	config
  4364                           
  4365                           ;Config register CONFIG1L @ 0x300000
  4366                           ;	External Oscillator mode Selection bits
  4367                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4368                           ;	Power-up default value for COSC bits
  4369                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4370   300000                     	org	3145728
  4371   300000  AA                 	db	170
  4372                           
  4373                           ;Config register CONFIG1H @ 0x300001
  4374                           ;	unspecified, using default values
  4375                           ;	Clock Out Enable bit
  4376                           ;	CLKOUTEN = 0x1, unprogrammed default
  4377                           ;	Clock Switch Enable bit
  4378                           ;	CSWEN = 0x1, unprogrammed default
  4379                           ;	Fail-Safe Clock Monitor Enable bit
  4380                           ;	FCMEN = 0x1, unprogrammed default
  4381   300001                     	org	3145729
  4382   300001  FF                 	db	255
  4383                           
  4384                           ;Config register CONFIG2L @ 0x300002
  4385                           ;	unspecified, using default values
  4386                           ;	Master Clear Enable bit
  4387                           ;	MCLRE = 0x1, unprogrammed default
  4388                           ;	Power-up Timer Enable bit
  4389                           ;	PWRTE = 0x1, unprogrammed default
  4390                           ;	Low-power BOR enable bit
  4391                           ;	LPBOREN = 0x1, unprogrammed default
  4392                           ;	Brown-out Reset Enable bits
  4393                           ;	BOREN = 0x3, unprogrammed default
  4394   300002                     	org	3145730
  4395   300002  FF                 	db	255
  4396                           
  4397                           ;Config register CONFIG2H @ 0x300003
  4398                           ;	unspecified, using default values
  4399                           ;	Brown Out Reset Voltage selection bits
  4400                           ;	BORV = 0x3, unprogrammed default
  4401                           ;	ZCD Disable bit
  4402                           ;	ZCD = 0x1, unprogrammed default
  4403                           ;	PPSLOCK bit One-Way Set Enable bit
  4404                           ;	PPS1WAY = 0x1, unprogrammed default
  4405                           ;	Stack Full/Underflow Reset Enable bit
  4406                           ;	STVREN = 0x1, unprogrammed default
  4407                           ;	Debugger Enable bit
  4408                           ;	DEBUG = 0x1, unprogrammed default
  4409                           ;	Extended Instruction Set Enable bit
  4410                           ;	XINST = 0x1, unprogrammed default
  4411   300003                     	org	3145731
  4412   300003  FF                 	db	255
  4413                           
  4414                           ;Config register CONFIG3L @ 0x300004
  4415                           ;	WDT Period Select bits
  4416                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4417                           ;	WDT operating mode
  4418                           ;	WDTE = OFF, WDT Disabled
  4419   300004                     	org	3145732
  4420   300004  9F                 	db	159
  4421                           
  4422                           ;Config register CONFIG3H @ 0x300005
  4423                           ;	unspecified, using default values
  4424                           ;	WDT Window Select bits
  4425                           ;	WDTCWS = 0x7, unprogrammed default
  4426                           ;	WDT input clock selector
  4427                           ;	WDTCCS = 0x7, unprogrammed default
  4428   300005                     	org	3145733
  4429   300005  FF                 	db	255
  4430                           
  4431                           ;Config register CONFIG4L @ 0x300006
  4432                           ;	unspecified, using default values
  4433                           ;	Write Protection Block 0
  4434                           ;	WRT0 = 0x1, unprogrammed default
  4435                           ;	Write Protection Block 1
  4436                           ;	WRT1 = 0x1, unprogrammed default
  4437                           ;	Write Protection Block 2
  4438                           ;	WRT2 = 0x1, unprogrammed default
  4439                           ;	Write Protection Block 3
  4440                           ;	WRT3 = 0x1, unprogrammed default
  4441                           ;	Write Protection Block 3
  4442                           ;	WRT4 = 0x1, unprogrammed default
  4443                           ;	Write Protection Block 3
  4444                           ;	WRT5 = 0x1, unprogrammed default
  4445                           ;	Write Protection Block 3
  4446                           ;	WRT6 = 0x1, unprogrammed default
  4447                           ;	Write Protection Block 3
  4448                           ;	WRT7 = 0x1, unprogrammed default
  4449   300006                     	org	3145734
  4450   300006  FF                 	db	255
  4451                           
  4452                           ;Config register CONFIG4H @ 0x300007
  4453                           ;	unspecified, using default values
  4454                           ;	Configuration Register Write Protection bit
  4455                           ;	WRTC = 0x1, unprogrammed default
  4456                           ;	Boot Block Write Protection bit
  4457                           ;	WRTB = 0x1, unprogrammed default
  4458                           ;	Data EEPROM Write Protection bit
  4459                           ;	WRTD = 0x1, unprogrammed default
  4460                           ;	Scanner Enable bit
  4461                           ;	SCANE = 0x1, unprogrammed default
  4462                           ;	Low Voltage Programming Enable bit
  4463                           ;	LVP = 0x1, unprogrammed default
  4464   300007                     	org	3145735
  4465   300007  FF                 	db	255
  4466                           
  4467                           ;Config register CONFIG5L @ 0x300008
  4468                           ;	unspecified, using default values
  4469                           ;	UserNVM Program Memory Code Protection bit
  4470                           ;	CP = 0x1, unprogrammed default
  4471                           ;	DataNVM Memory Code Protection bit
  4472                           ;	CPD = 0x1, unprogrammed default
  4473   300008                     	org	3145736
  4474   300008  FF                 	db	255
  4475                           
  4476                           ;Config register CONFIG5H @ 0x300009
  4477                           ;	unspecified, using default values
  4478   300009                     	org	3145737
  4479   300009  FF                 	db	255
  4480                           
  4481                           ;Config register CONFIG6L @ 0x30000A
  4482                           ;	unspecified, using default values
  4483                           ;	Table Read Protection Block 0
  4484                           ;	EBTR0 = 0x1, unprogrammed default
  4485                           ;	Table Read Protection Block 1
  4486                           ;	EBTR1 = 0x1, unprogrammed default
  4487                           ;	Table Read Protection Block 2
  4488                           ;	EBTR2 = 0x1, unprogrammed default
  4489                           ;	Table Read Protection Block 3
  4490                           ;	EBTR3 = 0x1, unprogrammed default
  4491                           ;	Table Read Protection Block 4
  4492                           ;	EBTR4 = 0x1, unprogrammed default
  4493                           ;	Table Read Protection Block 5
  4494                           ;	EBTR5 = 0x1, unprogrammed default
  4495                           ;	Table Read Protection Block 6
  4496                           ;	EBTR6 = 0x1, unprogrammed default
  4497                           ;	Table Read Protection Block 7
  4498                           ;	EBTR7 = 0x1, unprogrammed default
  4499   30000A                     	org	3145738
  4500   30000A  FF                 	db	255
  4501                           
  4502                           ;Config register CONFIG6H @ 0x30000B
  4503                           ;	unspecified, using default values
  4504                           ;	Boot Block Table Read Protection bit
  4505                           ;	EBTRB = 0x1, unprogrammed default
  4506   30000B                     	org	3145739
  4507   30000B  FF                 	db	255
  4508                           tosu	equ	0xFFF
  4509                           tosh	equ	0xFFE
  4510                           tosl	equ	0xFFD
  4511                           stkptr	equ	0xFFC
  4512                           pclatu	equ	0xFFB
  4513                           pclath	equ	0xFFA
  4514                           pcl	equ	0xFF9
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           indf0	equ	0xFEF
  4522                           postinc0	equ	0xFEE
  4523                           postdec0	equ	0xFED
  4524                           preinc0	equ	0xFEC
  4525                           plusw0	equ	0xFEB
  4526                           fsr0h	equ	0xFEA
  4527                           fsr0l	equ	0xFE9
  4528                           wreg	equ	0xFE8
  4529                           indf1	equ	0xFE7
  4530                           postinc1	equ	0xFE6
  4531                           postdec1	equ	0xFE5
  4532                           preinc1	equ	0xFE4
  4533                           plusw1	equ	0xFE3
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           bsr	equ	0xFE0
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           postdec2	equ	0xFDD
  4540                           preinc2	equ	0xFDC
  4541                           plusw2	equ	0xFDB
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        26
    BSS         186
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      70
    BANK0           160     67     152
    BANK1           256    164     224
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward_navigation@col	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    forward_navigation@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward_navigation@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    read_timer@tH	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerH(COMRAM[1]), 

    read_timer@tL	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerL(COMRAM[1]), 

    S1091DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1091DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2699$buffer	PTR unsigned char  size(2) Largest target is 0

    S2699$source	PTR const unsigned char  size(2) Largest target is 0

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), trail_timer_high(BANK1[20]), trail_timer_low(BANK1[20]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    wait_for_wall@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_forward_navigation
    _sendRGBCvalSerial4->_sprintf
    _forward_navigation->_sendArrayCharSerial4
    _wait_for_wall->_getRGBCval
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _sendArrayCharSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sendRGBCvalSerial4

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _forward_navigation->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   15983
                                             61 COMRAM     2     2      0
                                             41 BANK0     26    26      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                 _forward_navigation
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                 _sendRGBCvalSerial4
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  42    41      1    5531
                                             53 COMRAM     1     0      1
                                              0 BANK0     41    41      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward_navigation                                   6     3      3    8100
                                             56 COMRAM     5     2      3
                         _read_timer
                        _reset_timer
               _sendArrayCharSerial4
                      _wait_for_wall
                        _write_trail
 ---------------------------------------------------------------------------------
 (2) _write_trail                                          3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _wait_for_wall                                        3     2      1    1112
                                             12 COMRAM     3     2      1
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     960
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _sendArrayCharSerial4                               167   165      2    5754
                                             53 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    4781
                                             27 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3911
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3450
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     456
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _read_timer                                           2     0      2     242
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     242
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     242
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     242
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _forward_navigation
     _read_timer
     _reset_timer
     _sendArrayCharSerial4
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _wait_for_wall
       _getRGBCval
         _color_read_Blue
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     _write_trail
   _getRGBCval
   _initDCmotorsPWM
   _initUSART4
   _sendRGBCvalSerial4
     _sendStringSerial4
     _sprintf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      E0       7       87.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      46       1       74.5%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FA      61        0.0%
DATA                 0      0     1FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 06 13:54:53 2024

                 _turn180Delay 00E8                ??_wait_for_wall 000E                 _color_read_Red 164A  
              _color_read_Blue 173A                _trail_timer_low 01B8         ??_sendArrayCharSerial4 0038  
                           l27 1930                             l71 1698                             l80 1738  
                           l65 1902                             l74 1788                             l90 17D4  
                           l83 159E                             l68 19C6                             l77 16E8  
                           l86 178A                   ___awdiv@sign 0006               _trail_timer_high 01CC  
             _color_read_Clear 16EA               _color_read_Green 169A                            l163 13A2  
                          l420 19E4                            l261 195C                            l270 1A58  
                          l264 1982                            l432 1A14                            l273 1A62  
                          l258 195A                            l267 1A6C                            l276 1A36  
                          l429 1A00                            l438 14EA                            l446 1418  
                          l279 1862                            l449 1548                            l671 1A4E  
                          l680 189A                            l665 19A6                            l674 1A42  
                          l683 1648                            l668 1A2A                            l962 11A8  
                          l975 1312                            _ISR 0008                            _abs 189C  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00E4  
                         ?_ISR 0001                           ?_abs 0007                           l1409 1820  
                         l1450 0FB6                           l1451 1008                           l1461 18B6  
                         l1464 18CE                           l1456 15EC                           l1457 15F4  
                         l3411 10EA                           l1476 1262                           l3405 195C  
                         l3421 111A                           l3413 10F8                           l3407 196C  
                         l3511 1A2E                           l3431 1148                           l3423 111E  
                         l3415 1100                           l3503 189C                           l1487 1A70  
                         l3513 1A32                           l3441 117C                           l3433 1156  
                         l3425 1126                           l3417 1104                           l3409 10E6  
                         l3505 18AA                           l3521 1A54                           l3507 1A64  
                         l3515 1A5A                           l3443 1182                           l3435 115C  
                         l3427 1138                           l3419 1112                           l3531 185E  
                         l3523 1824                           l3603 173A                           l3611 16E0  
                         l3509 1A68                           l3517 1A5E                           l3621 1A00  
                         l3437 1172                           l3429 1140                           l3445 1188  
                         l3461 1282                           l3453 1264                           l3541 0E42  
                         l3533 1860                           l3525 1828                           l3605 1780  
                         l3701 1866                           l3623 1A10                           l3447 1198  
                         l3439 117A                           l3471 12BA                           l3463 1290  
                         l3455 1268                           l3551 0E86                           l3543 0E4A  
                         l3631 15CC                           l3527 1830                           l3519 1A50  
                         l3615 16EA                           l3711 1894                           l3703 1872  
                         l3721 18DE                           l3641 14B8                           l3449 11A0  
                         l3473 12C8                           l3481 12F2                           l3465 1298  
                         l3457 1276                           l3561 0F10                           l3553 0EA6  
                         l3545 0E58                           l3537 0E14                           l3625 15A0  
                         l3529 1838                           l3617 1730                           l3609 169A  
                         l3633 154A                           l3713 1898                           l3705 187E  
                         l3801 1018                           l3715 1904                           l3723 18EE  
                         l3635 148A                           l3483 1302                           l3475 12DE  
                         l3467 12AA                           l3459 127E                           l3491 11BA  
                         l3571 0F62                           l3563 0F2C                           l3555 0EBE  
                         l3547 0E5C                           l3539 0E1C                           l3627 15A4  
                         l3651 180A                           l3643 17D6                           l3707 188A  
                         l3731 134A                           l3811 104C                           l3803 1020  
                         l3661 1932                           l3725 18F8                           l3717 18D0  
                         l3637 148E                           l3485 130A                           l3477 12E6  
                         l3469 12B2                           l3493 11CA                           l3573 0F72  
                         l3581 0FA4                           l3565 0F30                           l3557 0EC8  
                         l3549 0E66                           l3629 15B2                           l3653 1818  
                         l3645 17E2                           l3709 188E                           l3741 1388  
                         l3733 134E                           l3821 1070                           l3813 1054  
                         l3805 1028                           l3671 1948                           l3663 193C  
                         l3719 18D4                           l3639 14B4                           l3479 12EC  
                         l3495 11D4                           l3591 0FF8                           l3575 0F80  
                         l3567 0F42                           l3559 0EE0                           l3583 0FC2  
                         l3647 17EA                           l3743 138A                           l3735 1372  
                         l3727 1314                           l3751 19C8                           l3831 107A  
                         l3823 1072                           l3815 1064                           l3807 103C  
                         l3657 1A46                           l3665 1942                           l3673 19AA  
                         l3497 11F0                           l3489 11AA                           l3593 1000  
                         l3585 0FCA                           l3577 0F88                           l3569 0F52  
                         l3649 17F2                           l3681 17B2                           l3745 1394  
                         l3737 137C                           l3729 1324                           l3761 19E2  
                         l3753 19D2                           l3841 10BE                           l3833 107C  
                         l3825 1074                           l3817 1068                           l3809 1044  
                         l3659 1A4A                           l3771 199C                           l3763 1984  
                         l3667 1944                           l3499 1222                           l3579 0FA2  
                         l3691 13E2                           l3683 13A4                           l3675 178A  
                         l3747 1396                           l3739 137E                           l3755 19D4  
                         l3843 10C6                           l3835 1080                           l3827 1076  
                         l3819 106C                           l3773 199E                           l3765 198C  
                         l3669 1946                           l3589 0FD6                           l3693 13E6  
                         l3597 164A                           l3677 1792                           l3781 15FE  
                         l3749 13A0                           l3757 19DE                           l3837 10A6  
                         l3829 1078                           l3775 19A2                           l3767 198E  
                         l3695 13FC                           l3599 1690                           l3791 1630  
                         l3783 1602                           l3759 19E0                           l3839 10B6  
                         l3697 1A38                           l3777 19A4                           l3769 1998  
                         l3689 13B2                           l3793 163C                           l3785 160A  
                         l3699 1A16                           l3787 1616                           l3779 15F6  
                         l3795 14EC                           l3789 1624                           l3797 153E  
                         l3799 100A                           STR_2 0E0F                           STR_3 0E0F  
                         STR_4 0E0C                           STR_5 0E01                           u2120 196C  
                         u2200 1276                           u2121 1968                           u2201 1272  
                         u2130 1982                           u2210 1290                           u2131 197E  
                         u2211 128C                           u2140 10F8                           u2220 12AA  
                         u2300 18AA                           u2141 10F4                           u2221 12A6  
                         u2301 18A6                           u2150 1112                           u2230 12C8  
                         u2310 184C                           u2151 110E                           u2231 12C4  
                         u2311 1844                           u2160 1138                           u2240 12DE  
                         u2400 0F62                   _BAUD4CONbits 0EE9                           u2161 1134  
                         u2241 12DA                           u2401 0F5E                           u2170 1156  
                         u2250 1302                           u2410 0F72                           u2330 0E42  
                         u2171 1152                           u2251 12FE                           u2411 0F6E  
                         u2331 0E3E                           u2180 1172                           u2260 11BA  
                         u2420 0FB6                           u2340 0E86                           u2181 116E  
                         u2261 11B6                           u2421 0FB2                           u2341 0E82  
                         u2430 1A10                           u2190 1198                           u2270 11CA  
                         u2350 0EA6                           u2510 13FC                           u2431 1A0C  
                         u2191 1194                           u2271 11C6                           u2351 0EA2  
                         u2511 13F8                           u2280 11F0                           u2360 0EDC  
                         u2440 15EC                           u2328 184E                           u2520 1094  
                         u2281 11EC                           u2361 0ED6                           u2441 15E8  
                         u2521 108C                           u2450 14B0                           u2290 1222  
                         u2370 0EDE                           _T2PR 0FBC                           u2291 121E  
                         u2460 14DA                           u2380 0F42                           u2508 17C6  
                         u2381 0F3E                           u2470 14EA                           u2390 0F52  
                         u2471 14E6                           u2391 0F4E                           u2480 17B2  
                         u2457 14A6                           u2481 17AE                           u2490 17C4  
                         u2538 1096                           u2467 14D0                           u2491 17BC  
                         u2577 10D0                           u2587 18E4                           abs@a 0007  
                         _dbuf 00A3                           _main 100A                           _prec 00DB  
                         _nout 00D7                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 0047             _sendRGBCvalSerial4 14EC                           start 0038  
       __end_of_color_read_Red 169A                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0036                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                  write_trail@tH 0003                  write_trail@tL 0001  
                        ?_main 0001             _timer_high_pointer 0045                __end_of___awdiv 11AA  
              __end_of___awmod 1314                ___awdiv@divisor 0003                          i2l700 0030  
                        i2l701 0034                ___awdiv@counter 0005                   vfpfcnvrt@cnt 0010  
                 vfpfcnvrt@fmt 000C                          _TMR0H 0FD4                          _TMR0L 0FD3  
      __end_of_sendCharSerial4 1A16     __end_of_I2C_2_Master_Start 1A6E                    _write_timer 1A44  
   __end_of_I2C_2_Master_Write 1A38                    _write_trail 1864                    _turningGear 00F4  
                        _flags 00DD           ??_sendRGBCvalSerial4 0037                          _fputc 11AA  
                        _width 00D9                          _putch 1A70              _turnRight135Delay 00EA  
                        tablat 0FF5                _turnLeft90Delay 00F0                          ttemp5 0048  
                        ttemp6 004B                          ttemp7 004F                          status 0FD8  
                        wtemp8 0048                __end_of_sprintf 1822        __end_of_color_read_Blue 178A  
        _I2C_2_Master_RepStart 1A50                ?_color_read_Red 0005                __initialization 141A  
                 __end_of_main 10E6                         ??_main 003E                  __activetblptr 0003  
               write_trail@man 0002                         ?_fputc 0001                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l3151 001A                         i2l3153 002A                         i2l3149 000A  
                       _RG6PPS 0E88                  vfpfcnvrt@done 000F       __end_of_color_click_init 1904  
                       _RX4PPS 0E15                         _TX4REG 0EE4               _turnLeft135Delay 00EC  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
    sendArrayCharSerial4@index 01A1                   vfprintf@cfmt 001B                      ??___awdiv 0005  
                    ??___awmod 0005                         clear_0 1458                         clear_1 1464  
                       clear_2 1470           forward_navigation@mL 0039           forward_navigation@mR 003A  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005                         fputc@c 0001                   __pdataCOMRAM 0045  
            _timer_low_pointer 00E2                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 15F6              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0027              _buggy_lights_init 1904                     __accesstop 0060  
      __end_of__initialization 1480       __end_of_color_read_Clear 173A       __end_of_color_read_Green 16EA  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 19E6  
          ??_buggy_lights_init 0001                  __end_of_fputc 1264                  __end_of_putch 1A72  
          __end_of_Timer0_init 19A8     __end_of_forward_navigation 164A                        ??_fputc 0004  
    __end_of_buggy_lights_init 1932                        ??_putch 0001                     __pbssBANK0 00A3  
                   __pbssBANK1 01A4                     __pbssBANK2 0200                     _getRGBCval 154A  
            _color_writetoaddr 19A8                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
        __end_of_wait_for_wall 17D6            ??_color_writetoaddr 0004                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                   ?_write_timer 0001                   ?_write_trail 0001  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 19C8             _I2C_2_Master_Start 1A64  
                   _initUSART4 19C8             _I2C_2_Master_Write 1A2C                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 1984  
      sendStringSerial4@string 0002                        ___awdiv 10E6                        ___awmod 1264  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018  
                 __psmallconst 0E00          sendArrayCharSerial4@i 01A2                        __pcinit 141A  
                      __ramtop 0E00                        __ptext0 100A                        __ptext1 14EC  
                      __ptext2 19C8                        __ptext3 1314                        __ptext4 15F6  
                      __ptext5 1864                        __ptext6 178A                        __ptext7 154A  
                      __ptext8 164A                        __ptext9 169A                     _read_timer 1A16  
                    _T2CONbits 0FBD               ___awmod@dividend 0001          forward_navigation@col 003B  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 0044                        _sprintf 17D6  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1480  
     forward_navigation@timerH 003C       forward_navigation@timerL 003D                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 100A                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                _initDCmotorsPWM 1314  
                 read_timer@tH 0001                   read_timer@tL 0002                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 00C3                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
                   main@motorL 0091                     main@motorR 009A             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 000D                    vfpfcnvrt@cp 0012  
                  vfpfcnvrt@fp 000B                  __pidataCOMRAM 1A6E                    ?_read_timer 0001  
    sendRGBCvalSerial4@col_val 0036            color_read_Clear@tmp 000A            start_initialization 141A  
                  __end_of_ISR 0038                    __end_of_abs 18D0                  _TxBufWriteCnt 0042  
             _turnRight90Delay 00EE      sendRGBCvalSerial4@tempStr 0060             _forward_navigation 15F6  
          color_read_Green@tmp 000A            ?_forward_navigation 0039        __end_of_initDCmotorsPWM 13A4  
                  vfprintf@fmt 0019                    __pdataBANK0 00E0           ??_forward_navigation 003C  
                  __pbssCOMRAM 0040                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
               _wall_threshold 00F2   __end_of_sendArrayCharSerial4 141A        sendArrayCharSerial4@arr 0036  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___awdiv 0001  
                     ?___awmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 195C              _I2C_2_Master_Init 1932  
            _I2C_2_Master_Read 1822              _I2C_2_Master_Stop 1A5A                   _RxBufReadCnt 0043  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                  _headbuttDelay 00E6       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 001C                      _rampDelay 00F7                   ??_getRGBCval 000D  
            _sendStringSerial4 148A            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E                       _LATGbits 0F7F                       _LATHbits 0F80  
                     _PIE0bits 0E29             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                ??_reset_timer 0003                       i2u171_40 001A                       i2u171_41 0016  
                     i2u172_40 002A                       i2u172_41 0026                       _PIR0bits 0E33  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0004                       _SSP2STAT 0ED8  
                    _returning 0040                      _vfpfcnvrt 0E14      __end_of_I2C_2_Master_Idle 1984  
    __end_of_I2C_2_Master_Init 195C      __end_of_I2C_2_Master_Read 1864      __end_of_I2C_2_Master_Stop 1A64  
  I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 15A0     __end_of_sendRGBCvalSerial4 154A  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0041                     vfpfcnvrt@c 0017  
                    copy_data0 142E      __end_of_sendStringSerial4 14EC  __end_of_I2C_2_Master_RepStart 1A5A  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 001A                       __Lrparam 0000                     vfprintf@fp 0018  
               wait_for_wall@p 000D                     ?_vfpfcnvrt 000B            __end_of_reset_timer 1A44  
                _wait_for_wall 178A           _sendArrayCharSerial4 13A4                   ??_read_timer 0003  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                     sprintf@fmt 001E  
                   sprintf@ret 0027                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
           __end_of_initUSART4 19E6                       __ptext10 16EA                       __ptext11 173A  
                     __ptext20 189C                       __ptext12 1A50                       __ptext21 1264  
                     __ptext13 1822                       __ptext30 1A64                       __ptext22 10E6  
                     __ptext14 13A4                       __ptext31 195C                       __ptext23 148A  
                     __ptext15 17D6                       __ptext32 1932                       __ptext24 19FE  
                     __ptext16 15A0                       __ptext33 1904                       __ptext25 1A16  
                     __ptext17 0E14                       __ptext34 1984                       __ptext26 18D0  
                     __ptext18 11AA                       __ptext35 1A38                       __ptext27 19A8  
                     __ptext19 1A70                       __ptext36 1A44                       __ptext28 1A2C  
                     __ptext29 1A5A                    getRGBCval@p 000C            main@measured_colour 0089  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA             __end_of_read_timer 1A2C  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 0047  
                     _vfprintf 15A0                 ?_wait_for_wall 000D          ?_sendArrayCharSerial4 0036  
                   _INTCONbits 0FF2                  ??_write_timer 0002                  ??_write_trail 0003  
                     intlevel2 0000                      sprintf@ap 0029                   _topGearRight 00F5  
            _manoeuvre_pointer 00E0                    _reset_timer 1A38                    ??_vfpfcnvrt 000E  
             _color_click_init 18D0                    _topGearLeft 00F6                       sprintf@f 002A  
                     sprintf@s 001C                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
              _trail_manoeuvre 01A4                    _return_flag 00DF                _manoeuvre_count 00DE  
                   _TX4STAbits 0EE8                _sendCharSerial4 19FE            __end_of_write_timer 1A50  
          __end_of_write_trail 189C    sendArrayCharSerial4@tempStr 0100  
