

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 06 12:34:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 18/08/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataCOMRAM
    91   0018EA                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _manoeuvre_pointer
    95   0018EA  7B                 	db	low _trail_manoeuvre
    96                           
    97                           ;initializer for _timer_low_pointer
    98   0018EB  8F                 	db	low _trail_timer_low
    99                           
   100                           ;initializer for _timer_high_pointer
   101   0018EC  DC                 	db	low _trail_timer_high
   102                           
   103                           ;initializer for _topGearLeft
   104   0018ED  14                 	db	20
   105                           
   106                           ;initializer for _rampDelay
   107   0018EE  08                 	db	8
   108                           
   109                           	psect	idataBANK0
   110   00180A                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _squareDelay
   114   00180A  012C               	dw	300
   115                           
   116                           ;initializer for _headbuttDelay
   117   00180C  0046               	dw	70
   118                           
   119                           ;initializer for _turn180Delay
   120   00180E  01FE               	dw	510
   121                           
   122                           ;initializer for _turnRight135Delay
   123   001810  012C               	dw	300
   124                           
   125                           ;initializer for _turnLeft135Delay
   126   001812  012C               	dw	300
   127                           
   128                           ;initializer for _turnRight90Delay
   129   001814  00AF               	dw	175
   130                           
   131                           ;initializer for _turnLeft90Delay
   132   001816  00AF               	dw	175
   133                           
   134                           ;initializer for _turningGear
   135   001818  2A                 	db	42
   136                           
   137                           ;initializer for _topGearRight
   138   001819  14                 	db	20
   139                           
   140                           ;initializer for _trail_timer_high
   141   00181A  03                 	db	3
   142   00181B  06                 	db	6
   143   00181C  03                 	db	3
   144   00181D  06                 	db	6
   145   00181E  03                 	db	3
   146   00181F  06                 	db	6
   147   001820  03                 	db	3
   148   001821  06                 	db	6
   149   001822  03                 	db	3
   150   001823  06                 	db	6
   151   001824  03                 	db	3
   152   001825  06                 	db	6
   153   001826  03                 	db	3
   154   001827  06                 	db	6
   155   001828  03                 	db	3
   156   001829  06                 	db	6
   157   00182A  03                 	db	3
   158   00182B  06                 	db	6
   159   00182C  03                 	db	3
   160   00182D  06                 	db	6
   161   000000                     _TMR0H	set	4052
   162   000000                     _TX4REG	set	3812
   163   000000                     _RC4STAbits	set	3815
   164   000000                     _SP4BRGH	set	3814
   165   000000                     _LATEbits	set	3965
   166   000000                     _TRISEbits	set	3973
   167   000000                     _LATGbits	set	3967
   168   000000                     _TRISGbits	set	3975
   169   000000                     _LATFbits	set	3966
   170   000000                     _LATHbits	set	3968
   171   000000                     _TRISFbits	set	3974
   172   000000                     _TRISHbits	set	3976
   173   000000                     _SSP2CON2bits	set	3802
   174   000000                     _RX4PPS	set	3605
   175   000000                     _SSP2CLKPPS	set	3612
   176   000000                     _SSP2DATPPS	set	3613
   177   000000                     _RC7PPS	set	3689
   178   000000                     _RE2PPS	set	3700
   179   000000                     _LATAbits	set	3961
   180   000000                     _LATDbits	set	3964
   181   000000                     _TRISDbits	set	3972
   182   000000                     _T2PR	set	4028
   183   000000                     _T2CONbits	set	4029
   184   000000                     _CCPR2H	set	4006
   185   000000                     _CCPR1H	set	4010
   186   000000                     _TRISCbits	set	3971
   187   000000                     _TRISAbits	set	3969
   188   000000                     _LATCbits	set	3963
   189   000000                     _RE4PPS	set	3702
   190   000000                     _RG6PPS	set	3720
   191   000000                     _RD5PPS	set	3695
   192   000000                     _ANSELDbits	set	3751
   193   000000                     _SSP2ADD	set	3798
   194   000000                     _SSP2CON1bits	set	3801
   195   000000                     _CCPR4H	set	3873
   196   000000                     _CCPR3H	set	3877
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _T0CON1bits	set	4054
   200   000000                     _T2CLKCONbits	set	4031
   201   000000                     _T2HLTbits	set	4030
   202   000000                     _CCP1CONbits	set	4011
   203   000000                     _CCPTMRS0bits	set	4013
   204   000000                     _CCP2CONbits	set	4007
   205   000000                     _CCP3CONbits	set	3878
   206   000000                     _CCP4CONbits	set	3874
   207   000000                     _RC4REG	set	3811
   208   000000                     _SP4BRGL	set	3813
   209   000000                     _TX4STAbits	set	3816
   210   000000                     _BAUD4CONbits	set	3817
   211   000000                     _SSP2CON2	set	3802
   212   000000                     _SSP2STAT	set	3800
   213   000000                     _ANSELFbits	set	3764
   214   000000                     _SSP2BUF	set	3797
   215   000000                     _PIE0bits	set	3625
   216   000000                     _PIE4bits	set	3629
   217   000000                     _PIR4bits	set	3639
   218   000000                     _RC0PPS	set	3682
   219   000000                     _RD6PPS	set	3696
   220   000000                     _PIR0bits	set	3635
   221   000000                     _INTCONbits	set	4082
   222                           
   223                           	psect	smallconst
   224   000E00                     __psmallconst:
   225                           	callstack 0
   226   000E00  00                 	db	0
   227   000E01                     STR_5:
   228                           
   229                           ; BSR set to: 14
   230   000E01  25                 	db	37
   231   000E02  64                 	db	100	;'d'
   232   000E03  20                 	db	32
   233   000E04  25                 	db	37
   234   000E05  64                 	db	100	;'d'
   235   000E06  20                 	db	32
   236   000E07  25                 	db	37
   237   000E08  64                 	db	100	;'d'
   238   000E09  20                 	db	32
   239   000E0A  25                 	db	37
   240   000E0B  64                 	db	100	;'d'
   241   000E0C  20                 	db	32
   242   000E0D  0D                 	db	13
   243   000E0E  00                 	db	0
   244   000E0F                     STR_2:
   245                           
   246                           ; BSR set to: 14
   247   000E0F  25                 	db	37
   248   000E10  64                 	db	100	;'d'
   249   000E11  20                 	db	32
   250   000E12  00                 	db	0
   251   000E13  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   00137A                     __pcinit:
   257                           	callstack 0
   258   00137A                     start_initialization:
   259                           	callstack 0
   260   00137A                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK0 (36 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265   00137A  0E0A               	movlw	low __pidataBANK0
   266   00137C  6EF6               	movwf	tblptrl,c
   267   00137E  0E18               	movlw	high __pidataBANK0
   268   001380  6EF7               	movwf	tblptrh,c
   269   001382  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270   001384  6EF8               	movwf	tblptru,c
   271   001386  EE00  F0CC         	lfsr	0,__pdataBANK0
   272   00138A  EE10 F024          	lfsr	1,36
   273   00138E                     copy_data0:
   274   00138E  0009               	tblrd		*+
   275   001390  CFF5 FFEE          	movff	tablat,postinc0
   276   001394  50E5               	movf	postdec1,w,c
   277   001396  50E1               	movf	fsr1l,w,c
   278   001398  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to COMRAM (5 bytes)
   281                           ; load TBLPTR registers with __pidataCOMRAM
   282   00139A  0EEA               	movlw	low __pidataCOMRAM
   283   00139C  6EF6               	movwf	tblptrl,c
   284   00139E  0E18               	movlw	high __pidataCOMRAM
   285   0013A0  6EF7               	movwf	tblptrh,c
   286   0013A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   287   0013A4  6EF8               	movwf	tblptru,c
   288   0013A6  EE00  F05A         	lfsr	0,__pdataCOMRAM
   289   0013AA  EE10 F005          	lfsr	1,5
   290   0013AE                     copy_data1:
   291   0013AE  0009               	tblrd		*+
   292   0013B0  CFF5 FFEE          	movff	tablat,postinc0
   293   0013B4  50E5               	movf	postdec1,w,c
   294   0013B6  50E1               	movf	fsr1l,w,c
   295   0013B8  E1FA               	bnz	copy_data1
   296                           
   297                           ; Clear objects allocated to BANK1 (92 bytes)
   298   0013BA  EE01  F000         	lfsr	0,__pbssBANK1
   299   0013BE  0E5C               	movlw	92
   300   0013C0                     clear_0:
   301   0013C0  6AEE               	clrf	postinc0,c
   302   0013C2  06E8               	decf	wreg,f,c
   303   0013C4  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to BANK0 (67 bytes)
   306   0013C6  EE00  F060         	lfsr	0,__pbssBANK0
   307   0013CA  0E43               	movlw	67
   308   0013CC                     clear_1:
   309   0013CC  6AEE               	clrf	postinc0,c
   310   0013CE  06E8               	decf	wreg,f,c
   311   0013D0  E1FD               	bnz	clear_1
   312                           
   313                           ; Clear objects allocated to COMRAM (7 bytes)
   314   0013D2  EE00  F053         	lfsr	0,__pbssCOMRAM
   315   0013D6  0E07               	movlw	7
   316   0013D8                     clear_2:
   317   0013D8  6AEE               	clrf	postinc0,c
   318   0013DA  06E8               	decf	wreg,f,c
   319   0013DC  E1FD               	bnz	clear_2
   320   0013DE                     end_of_initialization:
   321                           	callstack 0
   322   0013DE                     __end_of__initialization:
   323                           	callstack 0
   324   0013DE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   325   0013E0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   326   0013E2  0100               	movlb	0
   327   0013E4  EF22  F009         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330   000053                     __pbssCOMRAM:
   331                           	callstack 0
   332   000053                     _manoeuvre_count:
   333                           	callstack 0
   334   000053                     	ds	1
   335   000054                     _return_flag:
   336                           	callstack 0
   337   000054                     	ds	1
   338   000055                     _returning:
   339                           	callstack 0
   340   000055                     	ds	1
   341   000056                     _TxBufReadCnt:
   342                           	callstack 0
   343   000056                     	ds	1
   344   000057                     _TxBufWriteCnt:
   345                           	callstack 0
   346   000057                     	ds	1
   347   000058                     _RxBufReadCnt:
   348                           	callstack 0
   349   000058                     	ds	1
   350   000059                     _RxBufWriteCnt:
   351                           	callstack 0
   352   000059                     	ds	1
   353                           
   354                           	psect	dataCOMRAM
   355   00005A                     __pdataCOMRAM:
   356                           	callstack 0
   357   00005A                     _manoeuvre_pointer:
   358                           	callstack 0
   359   00005A                     	ds	1
   360   00005B                     _timer_low_pointer:
   361                           	callstack 0
   362   00005B                     	ds	1
   363   00005C                     _timer_high_pointer:
   364                           	callstack 0
   365   00005C                     	ds	1
   366   00005D                     _topGearLeft:
   367                           	callstack 0
   368   00005D                     	ds	1
   369   00005E                     _rampDelay:
   370                           	callstack 0
   371   00005E                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374   000060                     __pbssBANK0:
   375                           	callstack 0
   376   000060                     _EUSART4RXbuf:
   377                           	callstack 0
   378   000060                     	ds	20
   379   000074                     _nout:
   380                           	callstack 0
   381   000074                     	ds	2
   382   000076                     _width:
   383                           	callstack 0
   384   000076                     	ds	2
   385   000078                     _prec:
   386                           	callstack 0
   387   000078                     	ds	2
   388   00007A                     _flags:
   389                           	callstack 0
   390   00007A                     	ds	1
   391   00007B                     _trail_manoeuvre:
   392                           	callstack 0
   393   00007B                     	ds	20
   394   00008F                     _trail_timer_low:
   395                           	callstack 0
   396   00008F                     	ds	20
   397                           
   398                           	psect	dataBANK0
   399   0000CC                     __pdataBANK0:
   400                           	callstack 0
   401   0000CC                     _squareDelay:
   402                           	callstack 0
   403   0000CC                     	ds	2
   404   0000CE                     _headbuttDelay:
   405                           	callstack 0
   406   0000CE                     	ds	2
   407   0000D0                     _turn180Delay:
   408                           	callstack 0
   409   0000D0                     	ds	2
   410   0000D2                     _turnRight135Delay:
   411                           	callstack 0
   412   0000D2                     	ds	2
   413   0000D4                     _turnLeft135Delay:
   414                           	callstack 0
   415   0000D4                     	ds	2
   416   0000D6                     _turnRight90Delay:
   417                           	callstack 0
   418   0000D6                     	ds	2
   419   0000D8                     _turnLeft90Delay:
   420                           	callstack 0
   421   0000D8                     	ds	2
   422   0000DA                     _turningGear:
   423                           	callstack 0
   424   0000DA                     	ds	1
   425   0000DB                     _topGearRight:
   426                           	callstack 0
   427   0000DB                     	ds	1
   428   0000DC                     _trail_timer_high:
   429                           	callstack 0
   430   0000DC                     	ds	20
   431                           
   432                           	psect	bssBANK1
   433   000100                     __pbssBANK1:
   434                           	callstack 0
   435   000100                     _EUSART4TXbuf:
   436                           	callstack 0
   437   000100                     	ds	60
   438   00013C                     _dbuf:
   439                           	callstack 0
   440   00013C                     	ds	32
   441                           
   442                           	psect	cstackBANK0
   443   0000A3                     __pcstackBANK0:
   444                           	callstack 0
   445   0000A3                     sendRGBCvalSerial4@tempStr:
   446                           	callstack 0
   447                           
   448                           ; 41 bytes @ 0x0
   449   0000A3                     	ds	41
   450                           
   451                           	psect	cstackCOMRAM
   452   000001                     __pcstackCOMRAM:
   453                           	callstack 0
   454   000001                     ??_I2C_2_Master_Idle:
   455   000001                     ?___awdiv:
   456                           	callstack 0
   457   000001                     ?___awmod:
   458                           	callstack 0
   459   000001                     sendCharSerial4@charToSend:
   460                           	callstack 0
   461   000001                     write_timer@tL:
   462                           	callstack 0
   463   000001                     initDCmotorsPWM@PWMperiod:
   464                           	callstack 0
   465   000001                     ___awdiv@dividend:
   466                           	callstack 0
   467   000001                     ___awmod@dividend:
   468                           	callstack 0
   469   000001                     fputc@c:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x0
   473   000001                     	ds	1
   474   000002                     ??_I2C_2_Master_Read:
   475   000002                     I2C_2_Master_Write@data_byte:
   476                           	callstack 0
   477   000002                     write_timer@tH:
   478                           	callstack 0
   479   000002                     sendStringSerial4@string:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x1
   483   000002                     	ds	1
   484   000003                     color_writetoaddr@value:
   485                           	callstack 0
   486   000003                     I2C_2_Master_Read@ack:
   487                           	callstack 0
   488   000003                     fputc@fp:
   489                           	callstack 0
   490   000003                     ___awdiv@divisor:
   491                           	callstack 0
   492   000003                     ___awmod@divisor:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496   000003                     	ds	1
   497   000004                     ??_fputc:
   498   000004                     color_writetoaddr@address:
   499                           	callstack 0
   500   000004                     I2C_2_Master_Read@tmp:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x3
   504   000004                     	ds	1
   505   000005                     ??_color_click_init:
   506   000005                     ?_color_read_Red:
   507                           	callstack 0
   508   000005                     ?_color_read_Blue:
   509                           	callstack 0
   510   000005                     ?_color_read_Green:
   511                           	callstack 0
   512   000005                     ?_color_read_Clear:
   513                           	callstack 0
   514   000005                     ___awdiv@counter:
   515                           	callstack 0
   516   000005                     ___awmod@counter:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x4
   520   000005                     	ds	1
   521   000006                     ___awdiv@sign:
   522                           	callstack 0
   523   000006                     ___awmod@sign:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x5
   527   000006                     	ds	1
   528   000007                     ??_color_read_Red:
   529   000007                     ??_color_read_Blue:
   530   000007                     ??_color_read_Green:
   531   000007                     ??_color_read_Clear:
   532   000007                     ?_abs:
   533                           	callstack 0
   534   000007                     ___awdiv@quotient:
   535                           	callstack 0
   536   000007                     abs@a:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540   000007                     	ds	2
   541   000009                     ??_abs:
   542                           
   543                           ; 1 bytes @ 0x8
   544   000009                     	ds	1
   545   00000A                     color_read_Red@tmp:
   546                           	callstack 0
   547   00000A                     color_read_Blue@tmp:
   548                           	callstack 0
   549   00000A                     color_read_Green@tmp:
   550                           	callstack 0
   551   00000A                     color_read_Clear@tmp:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x9
   555   00000A                     	ds	1
   556   00000B                     ?_vfpfcnvrt:
   557                           	callstack 0
   558   00000B                     vfpfcnvrt@fp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xA
   562   00000B                     	ds	1
   563   00000C                     getRGBCval@p:
   564                           	callstack 0
   565   00000C                     vfpfcnvrt@fmt:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0xB
   569   00000C                     	ds	1
   570   00000D                     vfpfcnvrt@ap:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xC
   574   00000D                     	ds	1
   575   00000E                     ??_vfpfcnvrt:
   576                           
   577                           ; 1 bytes @ 0xD
   578   00000E                     	ds	1
   579   00000F                     vfpfcnvrt@done:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0xE
   583   00000F                     	ds	1
   584   000010                     vfpfcnvrt@cnt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xF
   588   000010                     	ds	2
   589   000012                     vfpfcnvrt@cp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x11
   593   000012                     	ds	1
   594   000013                     vfpfcnvrt@convarg:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x12
   598   000013                     	ds	4
   599   000017                     vfpfcnvrt@c:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x16
   603   000017                     	ds	1
   604   000018                     ?_vfprintf:
   605                           	callstack 0
   606   000018                     vfprintf@fp:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x17
   610   000018                     	ds	1
   611   000019                     vfprintf@fmt:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x18
   615   000019                     	ds	1
   616   00001A                     vfprintf@ap:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x19
   620   00001A                     	ds	1
   621   00001B                     vfprintf@cfmt:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x1A
   625   00001B                     	ds	1
   626   00001C                     ?_sprintf:
   627                           	callstack 0
   628   00001C                     sprintf@s:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x1B
   632   00001C                     	ds	2
   633   00001E                     sprintf@fmt:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x1D
   637   00001E                     	ds	9
   638   000027                     sprintf@ret:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x26
   642   000027                     	ds	2
   643   000029                     sprintf@ap:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x28
   647   000029                     	ds	1
   648   00002A                     sprintf@f:
   649                           	callstack 0
   650                           
   651                           ; 12 bytes @ 0x29
   652   00002A                     	ds	12
   653   000036                     sendRGBCvalSerial4@col_val:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x35
   657   000036                     	ds	1
   658   000037                     ??_main:
   659                           
   660                           ; 1 bytes @ 0x36
   661   000037                     	ds	2
   662   000039                     main@measured_colour:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x38
   666   000039                     	ds	8
   667   000041                     main@motorL:
   668                           	callstack 0
   669                           
   670                           ; 9 bytes @ 0x40
   671   000041                     	ds	9
   672   00004A                     main@motorR:
   673                           	callstack 0
   674                           
   675                           ; 9 bytes @ 0x49
   676   00004A                     	ds	9
   677                           
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 26 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  motorR          9   73[COMRAM] struct DC_motor
   688 ;;  motorL          9   64[COMRAM] struct DC_motor
   689 ;;  measured_col    8   56[COMRAM] struct RGBC_val
   690 ;;  PWMcycle        2    0        unsigned int 
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   703 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   704 ;;Total ram usage:       28 bytes
   705 ;; Hardware stack levels required when called: 7
   706 ;; This function calls:
   707 ;;		_Timer0_init
   708 ;;		_buggy_lights_init
   709 ;;		_color_click_init
   710 ;;		_getRGBCval
   711 ;;		_initDCmotorsPWM
   712 ;;		_initUSART4
   713 ;;		_sendRGBCvalSerial4
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text0
   720   001244                     __ptext0:
   721                           	callstack 0
   722   001244                     _main:
   723                           	callstack 24
   724   001244                     
   725                           ;main.c: 30:     struct DC_motor motorL, motorR;;main.c: 32:     motorL.power = 0;
   726   001244  0E00               	movlw	0
   727   001246  6E41               	movwf	main@motorL^0,c
   728                           
   729                           ;main.c: 33:     motorL.direction = 1;
   730   001248  0E01               	movlw	1
   731   00124A  6E42               	movwf	(main@motorL+1)^0,c
   732                           
   733                           ;main.c: 34:     motorL.brakemode = 1;
   734   00124C  0E01               	movlw	1
   735   00124E  6E43               	movwf	(main@motorL+2)^0,c
   736   001250                     
   737                           ;main.c: 35:     motorL.PWMperiod = PWMcycle;
   738   001250  0E00               	movlw	0
   739   001252  6E45               	movwf	(main@motorL+4)^0,c
   740   001254  0E63               	movlw	99
   741   001256  6E44               	movwf	(main@motorL+3)^0,c
   742   001258                     
   743                           ;main.c: 36:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   744   001258  0EAA               	movlw	170
   745   00125A  6E46               	movwf	(main@motorL+5)^0,c
   746   00125C  0E0F               	movlw	15
   747   00125E  6E47               	movwf	(main@motorL+6)^0,c
   748   001260                     
   749                           ;main.c: 37:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   750   001260  0EA6               	movlw	166
   751   001262  6E48               	movwf	(main@motorL+7)^0,c
   752   001264  0E0F               	movlw	15
   753   001266  6E49               	movwf	(main@motorL+8)^0,c
   754                           
   755                           ;main.c: 39:     motorR.power = 0;
   756   001268  0E00               	movlw	0
   757   00126A  6E4A               	movwf	main@motorR^0,c
   758                           
   759                           ;main.c: 40:     motorR.direction = 1;
   760   00126C  0E01               	movlw	1
   761   00126E  6E4B               	movwf	(main@motorR+1)^0,c
   762                           
   763                           ;main.c: 41:     motorR.brakemode = 1;
   764   001270  0E01               	movlw	1
   765   001272  6E4C               	movwf	(main@motorR+2)^0,c
   766   001274                     
   767                           ;main.c: 42:     motorR.PWMperiod = PWMcycle;
   768   001274  0E00               	movlw	0
   769   001276  6E4E               	movwf	(main@motorR+4)^0,c
   770   001278  0E63               	movlw	99
   771   00127A  6E4D               	movwf	(main@motorR+3)^0,c
   772   00127C                     
   773                           ;main.c: 43:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   774   00127C  0E25               	movlw	37
   775   00127E  6E4F               	movwf	(main@motorR+5)^0,c
   776   001280  0E0F               	movlw	15
   777   001282  6E50               	movwf	(main@motorR+6)^0,c
   778   001284                     
   779                           ;main.c: 44:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   780   001284  0E21               	movlw	33
   781   001286  6E51               	movwf	(main@motorR+7)^0,c
   782   001288  0E0F               	movlw	15
   783   00128A  6E52               	movwf	(main@motorR+8)^0,c
   784   00128C                     
   785                           ;main.c: 46:     initDCmotorsPWM(PWMcycle);
   786   00128C  0E00               	movlw	0
   787   00128E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   788   001290  0E63               	movlw	99
   789   001292  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   790   001294  EC75  F009         	call	_initDCmotorsPWM	;wreg free
   791                           
   792                           ;main.c: 47:     buggy_lights_init();
   793   001298  ECC5  F00B         	call	_buggy_lights_init	;wreg free
   794   00129C                     
   795                           ;main.c: 48:     color_click_init();
   796   00129C  ECAB  F00B         	call	_color_click_init	;wreg free
   797   0012A0                     
   798                           ;main.c: 49:     initUSART4();
   799   0012A0  EC39  F00C         	call	_initUSART4	;wreg free
   800   0012A4                     
   801                           ;main.c: 50:     Timer0_init();
   802   0012A4  EC17  F00C         	call	_Timer0_init	;wreg free
   803   0012A8                     
   804                           ;main.c: 54:         TRISDbits.TRISD7 = 0;
   805   0012A8  9E84               	bcf	132,7,c	;volatile
   806   0012AA                     
   807                           ;main.c: 55:         TRISHbits.TRISH3 = 0;
   808   0012AA  9688               	bcf	136,3,c	;volatile
   809   0012AC                     
   810                           ;main.c: 57:         LATDbits.LATD7 = 1;
   811   0012AC  8E7C               	bsf	124,7,c	;volatile
   812   0012AE                     
   813                           ;main.c: 58:         LATHbits.LATH3 = 1;
   814   0012AE  8680               	bsf	128,3,c	;volatile
   815   0012B0                     
   816                           ;main.c: 62:         TRISFbits.TRISF2 = 1;
   817   0012B0  8486               	bsf	134,2,c	;volatile
   818   0012B2                     
   819                           ;main.c: 63:         TRISFbits.TRISF3 = 1;
   820   0012B2  8686               	bsf	134,3,c	;volatile
   821   0012B4                     
   822                           ;main.c: 65:         ANSELFbits.ANSELF2 = 0;
   823   0012B4  010E               	movlb	14	; () banked
   824   0012B6  95B4               	bcf	180,2,b	;volatile
   825   0012B8                     
   826                           ; BSR set to: 14
   827                           ;main.c: 66:         ANSELFbits.ANSELF3 = 0;
   828   0012B8  97B4               	bcf	180,3,b	;volatile
   829   0012BA                     l2946:
   830                           
   831                           ;main.c: 81:         getRGBCval(&measured_colour);
   832   0012BA  0E39               	movlw	low main@measured_colour
   833   0012BC  6E0C               	movwf	getRGBCval@p^0,c
   834   0012BE  EC7F  F00A         	call	_getRGBCval	;wreg free
   835   0012C2                     
   836                           ;main.c: 82:         sendRGBCvalSerial4(&measured_colour);
   837   0012C2  0E39               	movlw	low main@measured_colour
   838   0012C4  6E36               	movwf	sendRGBCvalSerial4@col_val^0,c
   839   0012C6  EC25  F00A         	call	_sendRGBCvalSerial4	;wreg free
   840   0012CA                     
   841                           ;main.c: 83:         _delay((unsigned long)((200)*(64000000/4000.0)));
   842   0012CA  0E11               	movlw	17
   843   0012CC  6E38               	movwf	(??_main+1)^0,c
   844   0012CE  0E3C               	movlw	60
   845   0012D0  6E37               	movwf	??_main^0,c
   846   0012D2  0ECB               	movlw	203
   847   0012D4                     u2007:
   848   0012D4  2EE8               	decfsz	wreg,f,c
   849   0012D6  D7FE               	bra	u2007
   850   0012D8  2E37               	decfsz	??_main^0,f,c
   851   0012DA  D7FC               	bra	u2007
   852   0012DC  2E38               	decfsz	(??_main+1)^0,f,c
   853   0012DE  D7FA               	bra	u2007
   854   0012E0  0000               	nop	
   855   0012E2  EF5D  F009         	goto	l2946
   856   0012E6  EF1A  F000         	goto	start
   857   0012EA                     __end_of_main:
   858                           	callstack 0
   859                           
   860 ;; *************** function _sendRGBCvalSerial4 *****************
   861 ;; Defined at:
   862 ;;		line 62 in file "serial.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  col_val         1   53[COMRAM] PTR struct RGBC_val
   865 ;;		 -> main@measured_colour(8), 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  tempStr        41    0[BANK0 ] unsigned char [41]
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Totals:         1      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;Total ram usage:       42 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 6
   884 ;; This function calls:
   885 ;;		_sendStringSerial4
   886 ;;		_sprintf
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text1
   893   00144A                     __ptext1:
   894                           	callstack 0
   895   00144A                     _sendRGBCvalSerial4:
   896                           	callstack 24
   897   00144A                     
   898                           ;serial.c: 63:     char tempStr[41];;serial.c: 64:     sprintf(tempStr, "%d %d %d %d \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
   899   00144A  0EA3               	movlw	low sendRGBCvalSerial4@tempStr
   900   00144C  6E1C               	movwf	sprintf@s^0,c
   901   00144E  6A1D               	clrf	(sprintf@s+1)^0,c
   902   001450  0E01               	movlw	low STR_5
   903   001452  6E1E               	movwf	sprintf@fmt^0,c
   904   001454  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   905   001456  6ED9               	movwf	fsr2l,c
   906   001458  6ADA               	clrf	fsr2h,c
   907   00145A  CFDE F01F          	movff	postinc2,?_sprintf+3
   908   00145E  CFDD F020          	movff	postdec2,?_sprintf+4
   909   001462  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   910   001464  6ED9               	movwf	fsr2l,c
   911   001466  6ADA               	clrf	fsr2h,c
   912   001468  0E02               	movlw	2
   913   00146A  26D9               	addwf	fsr2l,f,c
   914   00146C  CFDE F021          	movff	postinc2,?_sprintf+5
   915   001470  CFDD F022          	movff	postdec2,?_sprintf+6
   916   001474  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   917   001476  6ED9               	movwf	fsr2l,c
   918   001478  6ADA               	clrf	fsr2h,c
   919   00147A  0E04               	movlw	4
   920   00147C  26D9               	addwf	fsr2l,f,c
   921   00147E  CFDE F023          	movff	postinc2,?_sprintf+7
   922   001482  CFDD F024          	movff	postdec2,?_sprintf+8
   923   001486  5036               	movf	sendRGBCvalSerial4@col_val^0,w,c
   924   001488  6ED9               	movwf	fsr2l,c
   925   00148A  6ADA               	clrf	fsr2h,c
   926   00148C  0E06               	movlw	6
   927   00148E  26D9               	addwf	fsr2l,f,c
   928   001490  CFDE F025          	movff	postinc2,?_sprintf+9
   929   001494  CFDD F026          	movff	postdec2,?_sprintf+10
   930   001498  EC4A  F00B         	call	_sprintf	;wreg free
   931   00149C                     
   932                           ;serial.c: 65:     sendStringSerial4(tempStr);
   933   00149C  0EA3               	movlw	low sendRGBCvalSerial4@tempStr
   934   00149E  6E02               	movwf	sendStringSerial4@string^0,c
   935   0014A0  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   936   0014A2  ECF4  F009         	call	_sendStringSerial4	;wreg free
   937   0014A6  0012               	return		;funcret
   938   0014A8                     __end_of_sendRGBCvalSerial4:
   939                           	callstack 0
   940                           
   941 ;; *************** function _sprintf *****************
   942 ;; Defined at:
   943 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  s               2   27[COMRAM] PTR unsigned char 
   946 ;;		 -> sendRGBCvalSerial4@tempStr(41), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
   947 ;;  fmt             1   29[COMRAM] PTR const unsigned char 
   948 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  f              12   41[COMRAM] struct _IO_FILE
   951 ;;  ret             2   38[COMRAM] int 
   952 ;;  ap              1   40[COMRAM] PTR void [1]
   953 ;;		 -> ?_sprintf(2), 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2   27[COMRAM] int 
   956 ;; Registers used:
   957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   963 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;Total ram usage:       26 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 5
   970 ;; This function calls:
   971 ;;		_vfprintf
   972 ;; This function is called by:
   973 ;;		_sendRGBCvalSerial4
   974 ;;		_sendIntSerial4
   975 ;;		_sendArrayCharSerial4
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text2
   980   001694                     __ptext2:
   981                           	callstack 0
   982   001694                     _sprintf:
   983                           	callstack 24
   984   001694  0E1F               	movlw	low (?_sprintf+3)
   985   001696  6E29               	movwf	sprintf@ap^0,c
   986   001698  C01C  F02A         	movff	sprintf@s,sprintf@f
   987   00169C  C01D  F02B         	movff	sprintf@s+1,sprintf@f+1
   988   0016A0  0E00               	movlw	0
   989   0016A2  6E2E               	movwf	(sprintf@f+4)^0,c
   990   0016A4  0E00               	movlw	0
   991   0016A6  6E2D               	movwf	(sprintf@f+3)^0,c
   992   0016A8  0E00               	movlw	0
   993   0016AA  6E35               	movwf	(sprintf@f+11)^0,c
   994   0016AC  0E00               	movlw	0
   995   0016AE  6E34               	movwf	(sprintf@f+10)^0,c
   996   0016B0  0E2A               	movlw	low sprintf@f
   997   0016B2  6E18               	movwf	vfprintf@fp^0,c
   998   0016B4  C01E  F019         	movff	sprintf@fmt,vfprintf@fmt
   999   0016B8  0E29               	movlw	low sprintf@ap
  1000   0016BA  6E1A               	movwf	vfprintf@ap^0,c
  1001   0016BC  EC54  F00A         	call	_vfprintf	;wreg free
  1002   0016C0  C018  F027         	movff	?_vfprintf,sprintf@ret
  1003   0016C4  C019  F028         	movff	?_vfprintf+1,sprintf@ret+1
  1004   0016C8  502D               	movf	(sprintf@f+3)^0,w,c
  1005   0016CA  241C               	addwf	sprintf@s^0,w,c
  1006   0016CC  6ED9               	movwf	fsr2l,c
  1007   0016CE  502E               	movf	(sprintf@f+4)^0,w,c
  1008   0016D0  201D               	addwfc	(sprintf@s+1)^0,w,c
  1009   0016D2  6EDA               	movwf	fsr2h,c
  1010   0016D4  6ADF               	clrf	indf2,c
  1011   0016D6  C027  F01C         	movff	sprintf@ret,?_sprintf
  1012   0016DA  C028  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1013   0016DE  0012               	return		;funcret
  1014   0016E0                     __end_of_sprintf:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _vfprintf *****************
  1018 ;; Defined at:
  1019 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1022 ;;		 -> sprintf@f(12), 
  1023 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1024 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1025 ;;  ap              1   25[COMRAM] PTR PTR void 
  1026 ;;		 -> sprintf@ap(1), 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1029 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2   23[COMRAM] int 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1043 ;;Total ram usage:        4 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 4
  1046 ;; This function calls:
  1047 ;;		_vfpfcnvrt
  1048 ;; This function is called by:
  1049 ;;		_sprintf
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text3
  1054   0014A8                     __ptext3:
  1055                           	callstack 0
  1056   0014A8                     _vfprintf:
  1057                           	callstack 24
  1058   0014A8                     
  1059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1060   0014A8  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1061   0014AC                     
  1062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1063   0014AC  0E00               	movlw	0
  1064   0014AE  0100               	movlb	0	; () banked
  1065   0014B0  6F75               	movwf	(_nout+1)& (0+255),b
  1066   0014B2  0E00               	movlw	0
  1067   0014B4  6F74               	movwf	_nout& (0+255),b
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1070   0014B6  EF6A  F00A         	goto	l2608
  1071   0014BA                     l2606:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1075   0014BA  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1076   0014BE  0E1B               	movlw	low vfprintf@cfmt
  1077   0014C0  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1078   0014C2  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1079   0014C6  EC0A  F007         	call	_vfpfcnvrt	;wreg free
  1080   0014CA  500B               	movf	?_vfpfcnvrt^0,w,c
  1081   0014CC  0100               	movlb	0	; () banked
  1082   0014CE  2774               	addwf	_nout& (0+255),f,b
  1083   0014D0  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1084   0014D2  2375               	addwfc	(_nout+1)& (0+255),f,b
  1085   0014D4                     l2608:
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1089   0014D4  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1090   0014D8                     	if	1	;There is more than 1 active tblptr byte
  1091   0014D8  0E0E               	movlw	high __smallconst
  1092   0014DA  6EF7               	movwf	tblptrh,c
  1093   0014DC                     	endif
  1094   0014DC                     	if	0	;tblptru may be non-zero
  1095   0014DC                     	endif
  1096   0014DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1097   0014DC  0E00               	movlw	low (__smallconst shr (0+16))
  1098   0014DE  6EF8               	movwf	tblptru,c
  1099   0014E0                     	endif
  1100   0014E0  0008               	tblrd		*
  1101   0014E2  50F5               	movf	tablat,w,c
  1102   0014E4  0900               	iorlw	0
  1103   0014E6  A4D8               	btfss	status,2,c
  1104   0014E8  EF78  F00A         	goto	u1441
  1105   0014EC  EF7A  F00A         	goto	u1440
  1106   0014F0                     u1441:
  1107   0014F0  EF5D  F00A         	goto	l2606
  1108   0014F4                     u1440:
  1109   0014F4                     
  1110                           ; BSR set to: 0
  1111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1112   0014F4  C074  F018         	movff	_nout,?_vfprintf
  1113   0014F8  C075  F019         	movff	_nout+1,?_vfprintf+1
  1114   0014FC                     
  1115                           ; BSR set to: 0
  1116   0014FC  0012               	return		;funcret
  1117   0014FE                     __end_of_vfprintf:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _vfpfcnvrt *****************
  1121 ;; Defined at:
  1122 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1125 ;;		 -> sprintf@f(12), 
  1126 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1127 ;;		 -> vfprintf@cfmt(1), 
  1128 ;;  ap              1   12[COMRAM] PTR PTR void 
  1129 ;;		 -> sprintf@ap(1), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  convarg         4   18[COMRAM] struct .
  1132 ;;  cnt             2   15[COMRAM] int 
  1133 ;;  c               1   22[COMRAM] unsigned char 
  1134 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1135 ;;		 -> STR_5(14), STR_3(4), STR_1(5), 
  1136 ;;  done            1   14[COMRAM] _Bool 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2   10[COMRAM] int 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;Total ram usage:       13 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 3
  1153 ;; This function calls:
  1154 ;;		___awdiv
  1155 ;;		___awmod
  1156 ;;		_abs
  1157 ;;		_fputc
  1158 ;; This function is called by:
  1159 ;;		_vfprintf
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text4
  1164   000E14                     __ptext4:
  1165                           	callstack 0
  1166   000E14                     _vfpfcnvrt:
  1167                           	callstack 24
  1168   000E14                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1170   000E14  0E00               	movlw	0
  1171   000E16  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1172   000E18  0E00               	movlw	0
  1173   000E1A  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1174   000E1C                     
  1175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1176   000E1C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1177   000E1E  6ED9               	movwf	fsr2l,c
  1178   000E20  6ADA               	clrf	fsr2h,c
  1179   000E22  CFDF FFF6          	movff	indf2,tblptrl
  1180   000E26                     	if	1	;There is more than 1 active tblptr byte
  1181   000E26  0E0E               	movlw	high __smallconst
  1182   000E28  6EF7               	movwf	tblptrh,c
  1183   000E2A                     	endif
  1184   000E2A                     	if	0	;tblptru may be non-zero
  1185   000E2A                     	endif
  1186   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1187   000E2A  0E00               	movlw	low (__smallconst shr (0+16))
  1188   000E2C  6EF8               	movwf	tblptru,c
  1189   000E2E                     	endif
  1190   000E2E  0008               	tblrd		*
  1191   000E30  50F5               	movf	tablat,w,c
  1192   000E32  0A25               	xorlw	37
  1193   000E34  A4D8               	btfss	status,2,c
  1194   000E36  EF1F  F007         	goto	u1311
  1195   000E3A  EF21  F007         	goto	u1310
  1196   000E3E                     u1311:
  1197   000E3E  EFF1  F007         	goto	l2514
  1198   000E42                     u1310:
  1199   000E42                     
  1200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1201   000E42  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1202   000E44  6ED9               	movwf	fsr2l,c
  1203   000E46  6ADA               	clrf	fsr2h,c
  1204   000E48  2ADF               	incf	indf2,f,c
  1205   000E4A                     
  1206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1207   000E4A  0E00               	movlw	0
  1208   000E4C  0100               	movlb	0	; () banked
  1209   000E4E  6F77               	movwf	(_width+1)& (0+255),b
  1210   000E50  0E00               	movlw	0
  1211   000E52  6F76               	movwf	_width& (0+255),b
  1212   000E54  C076  F07A         	movff	_width,_flags
  1213   000E58                     
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1216   000E58  6978               	setf	_prec& (0+255),b
  1217   000E5A  6979               	setf	(_prec+1)& (0+255),b
  1218   000E5C                     
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1221   000E5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1222   000E5E  6ED9               	movwf	fsr2l,c
  1223   000E60  6ADA               	clrf	fsr2h,c
  1224   000E62  50DF               	movf	indf2,w,c
  1225   000E64  6E12               	movwf	vfpfcnvrt@cp^0,c
  1226   000E66                     
  1227                           ; BSR set to: 0
  1228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1229   000E66  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1230   000E6A                     	if	1	;There is more than 1 active tblptr byte
  1231   000E6A  0E0E               	movlw	high __smallconst
  1232   000E6C  6EF7               	movwf	tblptrh,c
  1233   000E6E                     	endif
  1234   000E6E                     	if	0	;tblptru may be non-zero
  1235   000E6E                     	endif
  1236   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1237   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  1238   000E70  6EF8               	movwf	tblptru,c
  1239   000E72                     	endif
  1240   000E72  0008               	tblrd		*
  1241   000E74  50F5               	movf	tablat,w,c
  1242   000E76  0A64               	xorlw	100
  1243   000E78  B4D8               	btfsc	status,2,c
  1244   000E7A  EF41  F007         	goto	u1321
  1245   000E7E  EF43  F007         	goto	u1320
  1246   000E82                     u1321:
  1247   000E82  EF53  F007         	goto	l2478
  1248   000E86                     u1320:
  1249   000E86                     
  1250                           ; BSR set to: 0
  1251   000E86  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1252   000E8A                     	if	1	;There is more than 1 active tblptr byte
  1253   000E8A  0E0E               	movlw	high __smallconst
  1254   000E8C  6EF7               	movwf	tblptrh,c
  1255   000E8E                     	endif
  1256   000E8E                     	if	0	;tblptru may be non-zero
  1257   000E8E                     	endif
  1258   000E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1259   000E8E  0E00               	movlw	low (__smallconst shr (0+16))
  1260   000E90  6EF8               	movwf	tblptru,c
  1261   000E92                     	endif
  1262   000E92  0008               	tblrd		*
  1263   000E94  50F5               	movf	tablat,w,c
  1264   000E96  0A69               	xorlw	105
  1265   000E98  A4D8               	btfss	status,2,c
  1266   000E9A  EF51  F007         	goto	u1331
  1267   000E9E  EF53  F007         	goto	u1330
  1268   000EA2                     u1331:
  1269   000EA2  EFE7  F007         	goto	l2508
  1270   000EA6                     u1330:
  1271   000EA6                     l2478:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1275   000EA6  500D               	movf	vfpfcnvrt@ap^0,w,c
  1276   000EA8  6ED9               	movwf	fsr2l,c
  1277   000EAA  6ADA               	clrf	fsr2h,c
  1278   000EAC  0E02               	movlw	2
  1279   000EAE  26DF               	addwf	indf2,f,c
  1280   000EB0  5CDF               	subwf	indf2,w,c
  1281   000EB2  6ED9               	movwf	fsr2l,c
  1282   000EB4  6ADA               	clrf	fsr2h,c
  1283   000EB6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1284   000EBA  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1285   000EBE                     
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1288   000EBE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1289   000EC0  6ED9               	movwf	fsr2l,c
  1290   000EC2  6ADA               	clrf	fsr2h,c
  1291   000EC4  2812               	incf	vfpfcnvrt@cp^0,w,c
  1292   000EC6  6EDF               	movwf	indf2,c
  1293   000EC8                     
  1294                           ; BSR set to: 0
  1295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1296   000EC8  0E20               	movlw	32
  1297   000ECA  6E17               	movwf	vfpfcnvrt@c^0,c
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1300   000ECC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1301   000ECE  EF6B  F007         	goto	u1341
  1302   000ED2  EF6E  F007         	goto	u1340
  1303   000ED6                     u1341:
  1304   000ED6  0E01               	movlw	1
  1305   000ED8  EF6F  F007         	goto	u1350
  1306   000EDC                     u1340:
  1307   000EDC  0E00               	movlw	0
  1308   000EDE                     u1350:
  1309   000EDE  6E0F               	movwf	vfpfcnvrt@done^0,c
  1310   000EE0                     l2484:
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1313   000EE0  0617               	decf	vfpfcnvrt@c^0,f,c
  1314   000EE2  0E3C               	movlw	low _dbuf
  1315   000EE4  2417               	addwf	vfpfcnvrt@c^0,w,c
  1316   000EE6  6ED9               	movwf	fsr2l,c
  1317   000EE8  6ADA               	clrf	fsr2h,c
  1318   000EEA  0E01               	movlw	high _dbuf
  1319   000EEC  22DA               	addwfc	fsr2h,f,c
  1320   000EEE  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1321   000EF2  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1322   000EF6  0E00               	movlw	0
  1323   000EF8  6E04               	movwf	(___awmod@divisor+1)^0,c
  1324   000EFA  0E0A               	movlw	10
  1325   000EFC  6E03               	movwf	___awmod@divisor^0,c
  1326   000EFE  ECCA  F008         	call	___awmod	;wreg free
  1327   000F02  C001  F007         	movff	?___awmod,abs@a
  1328   000F06  C002  F008         	movff	?___awmod+1,abs@a+1
  1329   000F0A  EC91  F00B         	call	_abs	;wreg free
  1330   000F0E  5007               	movf	?_abs^0,w,c
  1331   000F10  0F30               	addlw	48
  1332   000F12  6EDF               	movwf	indf2,c
  1333   000F14                     
  1334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1335   000F14  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1336   000F18  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1337   000F1C  0E00               	movlw	0
  1338   000F1E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1339   000F20  0E0A               	movlw	10
  1340   000F22  6E03               	movwf	___awdiv@divisor^0,c
  1341   000F24  EC0B  F008         	call	___awdiv	;wreg free
  1342   000F28  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1343   000F2C  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1344   000F30                     
  1345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1346   000F30  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1347   000F32  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1348   000F34                     
  1349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1350   000F34  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1351   000F36  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1352   000F38  B4D8               	btfsc	status,2,c
  1353   000F3A  EFA1  F007         	goto	u1361
  1354   000F3E  EFA3  F007         	goto	u1360
  1355   000F42                     u1361:
  1356   000F42  EFAB  F007         	goto	l2494
  1357   000F46                     u1360:
  1358   000F46  5017               	movf	vfpfcnvrt@c^0,w,c
  1359   000F48  A4D8               	btfss	status,2,c
  1360   000F4A  EFA9  F007         	goto	u1371
  1361   000F4E  EFAB  F007         	goto	u1370
  1362   000F52                     u1371:
  1363   000F52  EF70  F007         	goto	l2484
  1364   000F56                     u1370:
  1365   000F56                     l2494:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1368   000F56  5017               	movf	vfpfcnvrt@c^0,w,c
  1369   000F58  B4D8               	btfsc	status,2,c
  1370   000F5A  EFB1  F007         	goto	u1381
  1371   000F5E  EFB3  F007         	goto	u1380
  1372   000F62                     u1381:
  1373   000F62  EFD8  F007         	goto	l2506
  1374   000F66                     u1380:
  1375   000F66  500F               	movf	vfpfcnvrt@done^0,w,c
  1376   000F68  B4D8               	btfsc	status,2,c
  1377   000F6A  EFB9  F007         	goto	u1391
  1378   000F6E  EFBB  F007         	goto	u1390
  1379   000F72                     u1391:
  1380   000F72  EFD8  F007         	goto	l2506
  1381   000F76                     u1390:
  1382   000F76                     
  1383                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1384   000F76  0617               	decf	vfpfcnvrt@c^0,f,c
  1385   000F78  0E3C               	movlw	low _dbuf
  1386   000F7A  2417               	addwf	vfpfcnvrt@c^0,w,c
  1387   000F7C  6ED9               	movwf	fsr2l,c
  1388   000F7E  6ADA               	clrf	fsr2h,c
  1389   000F80  0E01               	movlw	high _dbuf
  1390   000F82  22DA               	addwfc	fsr2h,f,c
  1391   000F84  0E2D               	movlw	45
  1392   000F86  6EDF               	movwf	indf2,c
  1393   000F88                     
  1394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1395   000F88  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1396   000F8A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1397   000F8C  EFD8  F007         	goto	l2506
  1398   000F90                     l2502:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1401   000F90  0E3C               	movlw	low _dbuf
  1402   000F92  2417               	addwf	vfpfcnvrt@c^0,w,c
  1403   000F94  6ED9               	movwf	fsr2l,c
  1404   000F96  6ADA               	clrf	fsr2h,c
  1405   000F98  0E01               	movlw	high _dbuf
  1406   000F9A  22DA               	addwfc	fsr2h,f,c
  1407   000F9C  50DF               	movf	indf2,w,c
  1408   000F9E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1409   000FA0  500E               	movf	??_vfpfcnvrt^0,w,c
  1410   000FA2  6E01               	movwf	fputc@c^0,c
  1411   000FA4  6A02               	clrf	(fputc@c+1)^0,c
  1412   000FA6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1413   000FAA  EC6D  F008         	call	_fputc	;wreg free
  1414   000FAE  2A17               	incf	vfpfcnvrt@c^0,f,c
  1415   000FB0                     l2506:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1418   000FB0  0E20               	movlw	32
  1419   000FB2  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1420   000FB4  A4D8               	btfss	status,2,c
  1421   000FB6  EFDF  F007         	goto	u1401
  1422   000FBA  EFE1  F007         	goto	u1400
  1423   000FBE                     u1401:
  1424   000FBE  EFC8  F007         	goto	l2502
  1425   000FC2                     u1400:
  1426   000FC2                     
  1427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1428   000FC2  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1429   000FC6  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1430   000FCA  EF0A  F008         	goto	l1398
  1431   000FCE                     l2508:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1435   000FCE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1436   000FD0  6ED9               	movwf	fsr2l,c
  1437   000FD2  6ADA               	clrf	fsr2h,c
  1438   000FD4  2ADF               	incf	indf2,f,c
  1439   000FD6                     
  1440                           ; BSR set to: 0
  1441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1442   000FD6  0E00               	movlw	0
  1443   000FD8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1444   000FDA  0E00               	movlw	0
  1445   000FDC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1446   000FDE  EF0A  F008         	goto	l1398
  1447   000FE2                     l2514:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1450   000FE2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1451   000FE4  6ED9               	movwf	fsr2l,c
  1452   000FE6  6ADA               	clrf	fsr2h,c
  1453   000FE8  CFDF FFF6          	movff	indf2,tblptrl
  1454   000FEC                     	if	1	;There is more than 1 active tblptr byte
  1455   000FEC  0E0E               	movlw	high __smallconst
  1456   000FEE  6EF7               	movwf	tblptrh,c
  1457   000FF0                     	endif
  1458   000FF0                     	if	0	;tblptru may be non-zero
  1459   000FF0                     	endif
  1460   000FF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1461   000FF0  0E00               	movlw	low (__smallconst shr (0+16))
  1462   000FF2  6EF8               	movwf	tblptru,c
  1463   000FF4                     	endif
  1464   000FF4  0008               	tblrd		*
  1465   000FF6  50F5               	movf	tablat,w,c
  1466   000FF8  6E01               	movwf	fputc@c^0,c
  1467   000FFA  6A02               	clrf	(fputc@c+1)^0,c
  1468   000FFC  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1469   001000  EC6D  F008         	call	_fputc	;wreg free
  1470   001004                     
  1471                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1472   001004  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1473   001006  6ED9               	movwf	fsr2l,c
  1474   001008  6ADA               	clrf	fsr2h,c
  1475   00100A  2ADF               	incf	indf2,f,c
  1476   00100C                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1478   00100C  0E00               	movlw	0
  1479   00100E  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1480   001010  0E01               	movlw	1
  1481   001012  6E0B               	movwf	?_vfpfcnvrt^0,c
  1482   001014                     l1398:
  1483   001014  0012               	return		;funcret
  1484   001016                     __end_of_vfpfcnvrt:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _fputc *****************
  1488 ;; Defined at:
  1489 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  c               2    0[COMRAM] int 
  1492 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1493 ;;		 -> sprintf@f(12), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2    0[COMRAM] int 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;Total ram usage:        8 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 2
  1512 ;; This function calls:
  1513 ;;		_putch
  1514 ;; This function is called by:
  1515 ;;		_vfpfcnvrt
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text5
  1520   0010DA                     __ptext5:
  1521                           	callstack 0
  1522   0010DA                     _fputc:
  1523                           	callstack 24
  1524   0010DA  5003               	movf	fputc@fp^0,w,c
  1525   0010DC  B4D8               	btfsc	status,2,c
  1526   0010DE  EF73  F008         	goto	u1081
  1527   0010E2  EF75  F008         	goto	u1080
  1528   0010E6                     u1081:
  1529   0010E6  EF7D  F008         	goto	l2358
  1530   0010EA                     u1080:
  1531   0010EA  5003               	movf	fputc@fp^0,w,c
  1532   0010EC  A4D8               	btfss	status,2,c
  1533   0010EE  EF7B  F008         	goto	u1091
  1534   0010F2  EF7D  F008         	goto	u1090
  1535   0010F6                     u1091:
  1536   0010F6  EF82  F008         	goto	l2360
  1537   0010FA                     u1090:
  1538   0010FA                     l2358:
  1539   0010FA  5001               	movf	fputc@c^0,w,c
  1540   0010FC  EC78  F00C         	call	_putch
  1541   001100  EFC9  F008         	goto	l1423
  1542   001104                     l2360:
  1543   001104  5003               	movf	fputc@fp^0,w,c
  1544   001106  6ED9               	movwf	fsr2l,c
  1545   001108  6ADA               	clrf	fsr2h,c
  1546   00110A  0E0A               	movlw	10
  1547   00110C  26D9               	addwf	fsr2l,f,c
  1548   00110E  50DE               	movf	postinc2,w,c
  1549   001110  10DE               	iorwf	postinc2,w,c
  1550   001112  B4D8               	btfsc	status,2,c
  1551   001114  EF8E  F008         	goto	u1101
  1552   001118  EF90  F008         	goto	u1100
  1553   00111C                     u1101:
  1554   00111C  EFA9  F008         	goto	l2364
  1555   001120                     u1100:
  1556   001120  5003               	movf	fputc@fp^0,w,c
  1557   001122  6ED9               	movwf	fsr2l,c
  1558   001124  6ADA               	clrf	fsr2h,c
  1559   001126  0E0A               	movlw	10
  1560   001128  26D9               	addwf	fsr2l,f,c
  1561   00112A  5003               	movf	fputc@fp^0,w,c
  1562   00112C  6EE1               	movwf	fsr1l,c
  1563   00112E  6AE2               	clrf	fsr1h,c
  1564   001130  0E03               	movlw	3
  1565   001132  26E1               	addwf	fsr1l,f,c
  1566   001134  50DE               	movf	postinc2,w,c
  1567   001136  5CE6               	subwf	postinc1,w,c
  1568   001138  50E6               	movf	postinc1,w,c
  1569   00113A  0A80               	xorlw	128
  1570   00113C  6E08               	movwf	(??_fputc+4)^0,c
  1571   00113E  50DE               	movf	postinc2,w,c
  1572   001140  0A80               	xorlw	128
  1573   001142  5808               	subwfb	(??_fputc+4)^0,w,c
  1574   001144  B0D8               	btfsc	status,0,c
  1575   001146  EFA7  F008         	goto	u1111
  1576   00114A  EFA9  F008         	goto	u1110
  1577   00114E                     u1111:
  1578   00114E  EFC9  F008         	goto	l1423
  1579   001152                     u1110:
  1580   001152                     l2364:
  1581   001152  5003               	movf	fputc@fp^0,w,c
  1582   001154  6ED9               	movwf	fsr2l,c
  1583   001156  6ADA               	clrf	fsr2h,c
  1584   001158  0E03               	movlw	3
  1585   00115A  26D9               	addwf	fsr2l,f,c
  1586   00115C  CFDE F004          	movff	postinc2,??_fputc
  1587   001160  CFDD F005          	movff	postdec2,??_fputc+1
  1588   001164  5003               	movf	fputc@fp^0,w,c
  1589   001166  6ED9               	movwf	fsr2l,c
  1590   001168  6ADA               	clrf	fsr2h,c
  1591   00116A  CFDE F006          	movff	postinc2,??_fputc+2
  1592   00116E  CFDD F007          	movff	postdec2,??_fputc+3
  1593   001172  5004               	movf	??_fputc^0,w,c
  1594   001174  2406               	addwf	(??_fputc+2)^0,w,c
  1595   001176  6ED9               	movwf	fsr2l,c
  1596   001178  5005               	movf	(??_fputc+1)^0,w,c
  1597   00117A  2007               	addwfc	(??_fputc+3)^0,w,c
  1598   00117C  6EDA               	movwf	fsr2h,c
  1599   00117E  C001  FFDF         	movff	fputc@c,indf2
  1600   001182  5003               	movf	fputc@fp^0,w,c
  1601   001184  6ED9               	movwf	fsr2l,c
  1602   001186  6ADA               	clrf	fsr2h,c
  1603   001188  0E03               	movlw	3
  1604   00118A  26D9               	addwf	fsr2l,f,c
  1605   00118C  2ADE               	incf	postinc2,f,c
  1606   00118E  0E00               	movlw	0
  1607   001190  22DD               	addwfc	postdec2,f,c
  1608   001192                     l1423:
  1609   001192  0012               	return		;funcret
  1610   001194                     __end_of_fputc:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _putch *****************
  1614 ;; Defined at:
  1615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  c               1    wreg     unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  c               1    0[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_fputc
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text6
  1644   0018F0                     __ptext6:
  1645                           	callstack 0
  1646   0018F0                     _putch:
  1647                           	callstack 24
  1648   0018F0  0012               	return		;funcret
  1649   0018F2                     __end_of_putch:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _abs *****************
  1653 ;; Defined at:
  1654 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  a               2    6[COMRAM] int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2    6[COMRAM] int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;Total ram usage:        4 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_vfpfcnvrt
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text7
  1683   001722                     __ptext7:
  1684                           	callstack 0
  1685   001722                     _abs:
  1686                           	callstack 25
  1687   001722  BE08               	btfsc	(abs@a+1)^0,7,c
  1688   001724  EF96  F00B         	goto	u1121
  1689   001728  EF98  F00B         	goto	u1120
  1690   00172C                     u1121:
  1691   00172C  EF9E  F00B         	goto	l1408
  1692   001730                     u1120:
  1693   001730  C007  F007         	movff	abs@a,?_abs
  1694   001734  C008  F008         	movff	abs@a+1,?_abs+1
  1695   001738  EFAA  F00B         	goto	l1411
  1696   00173C                     l1408:
  1697   00173C  C007  F009         	movff	abs@a,??_abs
  1698   001740  C008  F00A         	movff	abs@a+1,??_abs+1
  1699   001744  1E09               	comf	??_abs^0,f,c
  1700   001746  1E0A               	comf	(??_abs+1)^0,f,c
  1701   001748  4A09               	infsnz	??_abs^0,f,c
  1702   00174A  2A0A               	incf	(??_abs+1)^0,f,c
  1703   00174C  C009  F007         	movff	??_abs,?_abs
  1704   001750  C00A  F008         	movff	??_abs+1,?_abs+1
  1705   001754                     l1411:
  1706   001754  0012               	return		;funcret
  1707   001756                     __end_of_abs:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function ___awmod *****************
  1711 ;; Defined at:
  1712 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  dividend        2    0[COMRAM] int 
  1715 ;;  divisor         2    2[COMRAM] int 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  sign            1    5[COMRAM] unsigned char 
  1718 ;;  counter         1    4[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    0[COMRAM] int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_vfpfcnvrt
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text8
  1743   001194                     __ptext8:
  1744                           	callstack 0
  1745   001194                     ___awmod:
  1746                           	callstack 25
  1747   001194  0E00               	movlw	0
  1748   001196  6E06               	movwf	___awmod@sign^0,c
  1749   001198  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1750   00119A  EFD3  F008         	goto	u1020
  1751   00119E  EFD1  F008         	goto	u1021
  1752   0011A2                     u1021:
  1753   0011A2  EFD9  F008         	goto	l2326
  1754   0011A6                     u1020:
  1755   0011A6  6C01               	negf	___awmod@dividend^0,c
  1756   0011A8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1757   0011AA  B0D8               	btfsc	status,0,c
  1758   0011AC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1759   0011AE  0E01               	movlw	1
  1760   0011B0  6E06               	movwf	___awmod@sign^0,c
  1761   0011B2                     l2326:
  1762   0011B2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1763   0011B4  EFE0  F008         	goto	u1030
  1764   0011B8  EFDE  F008         	goto	u1031
  1765   0011BC                     u1031:
  1766   0011BC  EFE4  F008         	goto	l2330
  1767   0011C0                     u1030:
  1768   0011C0  6C03               	negf	___awmod@divisor^0,c
  1769   0011C2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1770   0011C4  B0D8               	btfsc	status,0,c
  1771   0011C6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1772   0011C8                     l2330:
  1773   0011C8  5003               	movf	___awmod@divisor^0,w,c
  1774   0011CA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1775   0011CC  B4D8               	btfsc	status,2,c
  1776   0011CE  EFEB  F008         	goto	u1041
  1777   0011D2  EFED  F008         	goto	u1040
  1778   0011D6                     u1041:
  1779   0011D6  EF11  F009         	goto	l2346
  1780   0011DA                     u1040:
  1781   0011DA  0E01               	movlw	1
  1782   0011DC  6E05               	movwf	___awmod@counter^0,c
  1783   0011DE  EFF5  F008         	goto	l2336
  1784   0011E2                     l2334:
  1785   0011E2  90D8               	bcf	status,0,c
  1786   0011E4  3603               	rlcf	___awmod@divisor^0,f,c
  1787   0011E6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1788   0011E8  2A05               	incf	___awmod@counter^0,f,c
  1789   0011EA                     l2336:
  1790   0011EA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1791   0011EC  EFFA  F008         	goto	u1051
  1792   0011F0  EFFC  F008         	goto	u1050
  1793   0011F4                     u1051:
  1794   0011F4  EFF1  F008         	goto	l2334
  1795   0011F8                     u1050:
  1796   0011F8                     l2338:
  1797   0011F8  5003               	movf	___awmod@divisor^0,w,c
  1798   0011FA  5C01               	subwf	___awmod@dividend^0,w,c
  1799   0011FC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1800   0011FE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1801   001200  A0D8               	btfss	status,0,c
  1802   001202  EF05  F009         	goto	u1061
  1803   001206  EF07  F009         	goto	u1060
  1804   00120A                     u1061:
  1805   00120A  EF0B  F009         	goto	l2342
  1806   00120E                     u1060:
  1807   00120E  5003               	movf	___awmod@divisor^0,w,c
  1808   001210  5E01               	subwf	___awmod@dividend^0,f,c
  1809   001212  5004               	movf	(___awmod@divisor+1)^0,w,c
  1810   001214  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1811   001216                     l2342:
  1812   001216  90D8               	bcf	status,0,c
  1813   001218  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1814   00121A  3203               	rrcf	___awmod@divisor^0,f,c
  1815   00121C  2E05               	decfsz	___awmod@counter^0,f,c
  1816   00121E  EFFC  F008         	goto	l2338
  1817   001222                     l2346:
  1818   001222  5006               	movf	___awmod@sign^0,w,c
  1819   001224  B4D8               	btfsc	status,2,c
  1820   001226  EF17  F009         	goto	u1071
  1821   00122A  EF19  F009         	goto	u1070
  1822   00122E                     u1071:
  1823   00122E  EF1D  F009         	goto	l2350
  1824   001232                     u1070:
  1825   001232  6C01               	negf	___awmod@dividend^0,c
  1826   001234  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1827   001236  B0D8               	btfsc	status,0,c
  1828   001238  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1829   00123A                     l2350:
  1830   00123A  C001  F001         	movff	___awmod@dividend,?___awmod
  1831   00123E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1832   001242  0012               	return		;funcret
  1833   001244                     __end_of___awmod:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function ___awdiv *****************
  1837 ;; Defined at:
  1838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  dividend        2    0[COMRAM] int 
  1841 ;;  divisor         2    2[COMRAM] int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  quotient        2    6[COMRAM] int 
  1844 ;;  sign            1    5[COMRAM] unsigned char 
  1845 ;;  counter         1    4[COMRAM] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    0[COMRAM] int 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;Total ram usage:        8 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_vfpfcnvrt
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text9
  1870   001016                     __ptext9:
  1871                           	callstack 0
  1872   001016                     ___awdiv:
  1873                           	callstack 25
  1874   001016  0E00               	movlw	0
  1875   001018  6E06               	movwf	___awdiv@sign^0,c
  1876   00101A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1877   00101C  EF14  F008         	goto	u960
  1878   001020  EF12  F008         	goto	u961
  1879   001024                     u961:
  1880   001024  EF1A  F008         	goto	l2282
  1881   001028                     u960:
  1882   001028  6C03               	negf	___awdiv@divisor^0,c
  1883   00102A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1884   00102C  B0D8               	btfsc	status,0,c
  1885   00102E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1886   001030  0E01               	movlw	1
  1887   001032  6E06               	movwf	___awdiv@sign^0,c
  1888   001034                     l2282:
  1889   001034  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1890   001036  EF21  F008         	goto	u970
  1891   00103A  EF1F  F008         	goto	u971
  1892   00103E                     u971:
  1893   00103E  EF27  F008         	goto	l2288
  1894   001042                     u970:
  1895   001042  6C01               	negf	___awdiv@dividend^0,c
  1896   001044  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1897   001046  B0D8               	btfsc	status,0,c
  1898   001048  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1899   00104A  0E01               	movlw	1
  1900   00104C  1A06               	xorwf	___awdiv@sign^0,f,c
  1901   00104E                     l2288:
  1902   00104E  0E00               	movlw	0
  1903   001050  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1904   001052  0E00               	movlw	0
  1905   001054  6E07               	movwf	___awdiv@quotient^0,c
  1906   001056  5003               	movf	___awdiv@divisor^0,w,c
  1907   001058  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1908   00105A  B4D8               	btfsc	status,2,c
  1909   00105C  EF32  F008         	goto	u981
  1910   001060  EF34  F008         	goto	u980
  1911   001064                     u981:
  1912   001064  EF5C  F008         	goto	l2310
  1913   001068                     u980:
  1914   001068  0E01               	movlw	1
  1915   00106A  6E05               	movwf	___awdiv@counter^0,c
  1916   00106C  EF3C  F008         	goto	l2296
  1917   001070                     l2294:
  1918   001070  90D8               	bcf	status,0,c
  1919   001072  3603               	rlcf	___awdiv@divisor^0,f,c
  1920   001074  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1921   001076  2A05               	incf	___awdiv@counter^0,f,c
  1922   001078                     l2296:
  1923   001078  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1924   00107A  EF41  F008         	goto	u991
  1925   00107E  EF43  F008         	goto	u990
  1926   001082                     u991:
  1927   001082  EF38  F008         	goto	l2294
  1928   001086                     u990:
  1929   001086                     l2298:
  1930   001086  90D8               	bcf	status,0,c
  1931   001088  3607               	rlcf	___awdiv@quotient^0,f,c
  1932   00108A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1933   00108C  5003               	movf	___awdiv@divisor^0,w,c
  1934   00108E  5C01               	subwf	___awdiv@dividend^0,w,c
  1935   001090  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1936   001092  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1937   001094  A0D8               	btfss	status,0,c
  1938   001096  EF4F  F008         	goto	u1001
  1939   00109A  EF51  F008         	goto	u1000
  1940   00109E                     u1001:
  1941   00109E  EF56  F008         	goto	l2306
  1942   0010A2                     u1000:
  1943   0010A2  5003               	movf	___awdiv@divisor^0,w,c
  1944   0010A4  5E01               	subwf	___awdiv@dividend^0,f,c
  1945   0010A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1946   0010A8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1947   0010AA  8007               	bsf	___awdiv@quotient^0,0,c
  1948   0010AC                     l2306:
  1949   0010AC  90D8               	bcf	status,0,c
  1950   0010AE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1951   0010B0  3203               	rrcf	___awdiv@divisor^0,f,c
  1952   0010B2  2E05               	decfsz	___awdiv@counter^0,f,c
  1953   0010B4  EF43  F008         	goto	l2298
  1954   0010B8                     l2310:
  1955   0010B8  5006               	movf	___awdiv@sign^0,w,c
  1956   0010BA  B4D8               	btfsc	status,2,c
  1957   0010BC  EF62  F008         	goto	u1011
  1958   0010C0  EF64  F008         	goto	u1010
  1959   0010C4                     u1011:
  1960   0010C4  EF68  F008         	goto	l2314
  1961   0010C8                     u1010:
  1962   0010C8  6C07               	negf	___awdiv@quotient^0,c
  1963   0010CA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1964   0010CC  B0D8               	btfsc	status,0,c
  1965   0010CE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1966   0010D0                     l2314:
  1967   0010D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1968   0010D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1969   0010D8  0012               	return		;funcret
  1970   0010DA                     __end_of___awdiv:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _sendStringSerial4 *****************
  1974 ;; Defined at:
  1975 ;;		line 35 in file "serial.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  string          2    1[COMRAM] PTR unsigned char 
  1978 ;;		 -> sendRGBCvalSerial4@tempStr(41), STR_4(3), sendArrayCharSerial4@tempStr(161), sendIntSerial4@string(17), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;Total ram usage:        2 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 2
  1997 ;; This function calls:
  1998 ;;		_sendCharSerial4
  1999 ;; This function is called by:
  2000 ;;		_sendRGBCvalSerial4
  2001 ;;		_sendIntSerial4
  2002 ;;		_sendArrayCharSerial4
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text10
  2007   0013E8                     __ptext10:
  2008                           	callstack 0
  2009   0013E8                     _sendStringSerial4:
  2010                           	callstack 27
  2011   0013E8                     
  2012                           ;serial.c: 37:     while(*string != 0){
  2013   0013E8  EF0B  F00A         	goto	l2654
  2014   0013EC                     l2650:
  2015                           
  2016                           ;serial.c: 38:   sendCharSerial4(*string++);
  2017   0013EC  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2018   0013F0  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2019   0013F4  0E00               	movlw	low (__smallconst shr (0+16))
  2020   0013F6  6EF8               	movwf	tblptru,c
  2021   0013F8  0E0D               	movlw	(high __ramtop+-1)
  2022   0013FA  64F7               	cpfsgt	tblptrh,c
  2023   0013FC  D003               	bra	u1457
  2024   0013FE  0008               	tblrd		*
  2025   001400  50F5               	movf	tablat,w,c
  2026   001402  D005               	bra	u1450
  2027   001404                     u1457:
  2028   001404  CFF6 FFE9          	movff	tblptrl,fsr0l
  2029   001408  CFF7 FFEA          	movff	tblptrh,fsr0h
  2030   00140C  50EF               	movf	indf0,w,c
  2031   00140E                     u1450:
  2032   00140E  EC48  F00C         	call	_sendCharSerial4
  2033   001412  4A02               	infsnz	sendStringSerial4@string^0,f,c
  2034   001414  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  2035   001416                     l2654:
  2036                           
  2037                           ;serial.c: 37:     while(*string != 0){
  2038   001416  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  2039   00141A  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2040   00141E  0E00               	movlw	low (__smallconst shr (0+16))
  2041   001420  6EF8               	movwf	tblptru,c
  2042   001422  0E0D               	movlw	(high __ramtop+-1)
  2043   001424  64F7               	cpfsgt	tblptrh,c
  2044   001426  D003               	bra	u1467
  2045   001428  0008               	tblrd		*
  2046   00142A  50F5               	movf	tablat,w,c
  2047   00142C  D005               	bra	u1460
  2048   00142E                     u1467:
  2049   00142E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2050   001432  CFF7 FFEA          	movff	tblptrh,fsr0h
  2051   001436  50EF               	movf	indf0,w,c
  2052   001438                     u1460:
  2053   001438  0900               	iorlw	0
  2054   00143A  A4D8               	btfss	status,2,c
  2055   00143C  EF22  F00A         	goto	u1471
  2056   001440  EF24  F00A         	goto	u1470
  2057   001444                     u1471:
  2058   001444  EFF6  F009         	goto	l2650
  2059   001448                     u1470:
  2060   001448  0012               	return		;funcret
  2061   00144A                     __end_of_sendStringSerial4:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _sendCharSerial4 *****************
  2065 ;; Defined at:
  2066 ;;		line 29 in file "serial.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  charToSend      1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  charToSend      1    0[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_sendStringSerial4
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text11
  2095   001890                     __ptext11:
  2096                           	callstack 0
  2097   001890                     _sendCharSerial4:
  2098                           	callstack 27
  2099                           
  2100                           ;incstack = 0
  2101                           ;sendCharSerial4@charToSend stored from wreg
  2102   001890  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2103   001892                     l412:
  2104   001892  010E               	movlb	14	; () banked
  2105   001894  A537               	btfss	55,2,b	;volatile
  2106   001896  EF4F  F00C         	goto	u1431
  2107   00189A  EF51  F00C         	goto	u1430
  2108   00189E                     u1431:
  2109   00189E  EF49  F00C         	goto	l412
  2110   0018A2                     u1430:
  2111   0018A2                     
  2112                           ; BSR set to: 14
  2113                           ;serial.c: 31:     TX4REG = charToSend;
  2114   0018A2  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2115   0018A6                     
  2116                           ; BSR set to: 14
  2117   0018A6  0012               	return		;funcret
  2118   0018A8                     __end_of_sendCharSerial4:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _initUSART4 *****************
  2122 ;; Defined at:
  2123 ;;		line 5 in file "serial.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text12
  2152   001872                     __ptext12:
  2153                           	callstack 0
  2154   001872                     _initUSART4:
  2155                           	callstack 29
  2156   001872                     
  2157                           ;serial.c: 9:     RC0PPS = 0x12;
  2158   001872  0E12               	movlw	18
  2159   001874  010E               	movlb	14	; () banked
  2160   001876  6F62               	movwf	98,b	;volatile
  2161                           
  2162                           ;serial.c: 10:     RX4PPS = 0x11;
  2163   001878  0E11               	movlw	17
  2164   00187A  6F15               	movwf	21,b	;volatile
  2165   00187C                     
  2166                           ; BSR set to: 14
  2167                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2168   00187C  97E9               	bcf	233,3,b	;volatile
  2169   00187E                     
  2170                           ; BSR set to: 14
  2171                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2172   00187E  95E8               	bcf	232,2,b	;volatile
  2173                           
  2174                           ;serial.c: 14:     SP4BRGL = 51;
  2175   001880  0E33               	movlw	51
  2176   001882  6FE5               	movwf	229,b	;volatile
  2177                           
  2178                           ;serial.c: 15:     SP4BRGH = 0;
  2179   001884  0E00               	movlw	0
  2180   001886  6FE6               	movwf	230,b	;volatile
  2181   001888                     
  2182                           ; BSR set to: 14
  2183                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2184   001888  89E7               	bsf	231,4,b	;volatile
  2185   00188A                     
  2186                           ; BSR set to: 14
  2187                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2188   00188A  8BE8               	bsf	232,5,b	;volatile
  2189   00188C                     
  2190                           ; BSR set to: 14
  2191                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2192   00188C  8FE7               	bsf	231,7,b	;volatile
  2193   00188E                     
  2194                           ; BSR set to: 14
  2195   00188E  0012               	return		;funcret
  2196   001890                     __end_of_initUSART4:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _initDCmotorsPWM *****************
  2200 ;; Defined at:
  2201 ;;		line 5 in file "dc_motor.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;Total ram usage:        2 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text13
  2230   0012EA                     __ptext13:
  2231                           	callstack 0
  2232   0012EA                     _initDCmotorsPWM:
  2233                           	callstack 29
  2234   0012EA                     
  2235                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2236   0012EA  9485               	bcf	133,2,c	;volatile
  2237                           
  2238                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2239   0012EC  9885               	bcf	133,4,c	;volatile
  2240                           
  2241                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2242   0012EE  9E83               	bcf	131,7,c	;volatile
  2243                           
  2244                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2245   0012F0  9C87               	bcf	135,6,c	;volatile
  2246                           
  2247                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2248   0012F2  947D               	bcf	125,2,c	;volatile
  2249                           
  2250                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2251   0012F4  987D               	bcf	125,4,c	;volatile
  2252                           
  2253                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2254   0012F6  9E7B               	bcf	123,7,c	;volatile
  2255                           
  2256                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2257   0012F8  9C7F               	bcf	127,6,c	;volatile
  2258   0012FA                     
  2259                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2260   0012FA  0E05               	movlw	5
  2261   0012FC  010E               	movlb	14	; () banked
  2262   0012FE  6F74               	movwf	116,b	;volatile
  2263                           
  2264                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2265   001300  0E06               	movlw	6
  2266   001302  6F76               	movwf	118,b	;volatile
  2267                           
  2268                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2269   001304  0E07               	movlw	7
  2270   001306  6F69               	movwf	105,b	;volatile
  2271                           
  2272                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2273   001308  0E08               	movlw	8
  2274   00130A  6F88               	movwf	136,b	;volatile
  2275                           
  2276                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2277   00130C  50BD               	movf	189,w,c	;volatile
  2278   00130E  0B8F               	andlw	-113
  2279   001310  0940               	iorlw	64
  2280   001312  6EBD               	movwf	189,c	;volatile
  2281                           
  2282                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2283   001314  0EE0               	movlw	-32
  2284   001316  16BE               	andwf	190,f,c	;volatile
  2285                           
  2286                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2287   001318  50BF               	movf	191,w,c	;volatile
  2288   00131A  0BF0               	andlw	-16
  2289   00131C  0901               	iorlw	1
  2290   00131E  6EBF               	movwf	191,c	;volatile
  2291   001320                     
  2292                           ; BSR set to: 14
  2293                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2294   001320  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2295   001324                     
  2296                           ; BSR set to: 14
  2297                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2298   001324  8EBD               	bsf	189,7,c	;volatile
  2299                           
  2300                           ;dc_motor.c: 35:     CCPR1H=0;
  2301   001326  0E00               	movlw	0
  2302   001328  6EAA               	movwf	170,c	;volatile
  2303                           
  2304                           ;dc_motor.c: 36:     CCPR2H=0;
  2305   00132A  0E00               	movlw	0
  2306   00132C  6EA6               	movwf	166,c	;volatile
  2307                           
  2308                           ;dc_motor.c: 37:     CCPR3H=0;
  2309   00132E  0E00               	movlw	0
  2310   001330  010F               	movlb	15	; () banked
  2311   001332  6F25               	movwf	37,b	;volatile
  2312                           
  2313                           ;dc_motor.c: 38:     CCPR4H=0;
  2314   001334  0E00               	movlw	0
  2315   001336  6F21               	movwf	33,b	;volatile
  2316                           
  2317                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2318   001338  0EFC               	movlw	-4
  2319   00133A  16AD               	andwf	173,f,c	;volatile
  2320                           
  2321                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2322   00133C  0EF3               	movlw	-13
  2323   00133E  16AD               	andwf	173,f,c	;volatile
  2324                           
  2325                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2326   001340  0ECF               	movlw	-49
  2327   001342  16AD               	andwf	173,f,c	;volatile
  2328                           
  2329                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2330   001344  0E3F               	movlw	-193
  2331   001346  16AD               	andwf	173,f,c	;volatile
  2332   001348                     
  2333                           ; BSR set to: 15
  2334                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2335   001348  88AB               	bsf	171,4,c	;volatile
  2336                           
  2337                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2338   00134A  50AB               	movf	171,w,c	;volatile
  2339   00134C  0BF0               	andlw	-16
  2340   00134E  090C               	iorlw	12
  2341   001350  6EAB               	movwf	171,c	;volatile
  2342   001352                     
  2343                           ; BSR set to: 15
  2344                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2345   001352  8EAB               	bsf	171,7,c	;volatile
  2346   001354                     
  2347                           ; BSR set to: 15
  2348                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2349   001354  88A7               	bsf	167,4,c	;volatile
  2350                           
  2351                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2352   001356  50A7               	movf	167,w,c	;volatile
  2353   001358  0BF0               	andlw	-16
  2354   00135A  090C               	iorlw	12
  2355   00135C  6EA7               	movwf	167,c	;volatile
  2356   00135E                     
  2357                           ; BSR set to: 15
  2358                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2359   00135E  8EA7               	bsf	167,7,c	;volatile
  2360   001360                     
  2361                           ; BSR set to: 15
  2362                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2363   001360  8926               	bsf	38,4,b	;volatile
  2364                           
  2365                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2366   001362  5126               	movf	38,w,b	;volatile
  2367   001364  0BF0               	andlw	-16
  2368   001366  090C               	iorlw	12
  2369   001368  6F26               	movwf	38,b	;volatile
  2370   00136A                     
  2371                           ; BSR set to: 15
  2372                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2373   00136A  8F26               	bsf	38,7,b	;volatile
  2374   00136C                     
  2375                           ; BSR set to: 15
  2376                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2377   00136C  8922               	bsf	34,4,b	;volatile
  2378                           
  2379                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2380   00136E  5122               	movf	34,w,b	;volatile
  2381   001370  0BF0               	andlw	-16
  2382   001372  090C               	iorlw	12
  2383   001374  6F22               	movwf	34,b	;volatile
  2384   001376                     
  2385                           ; BSR set to: 15
  2386                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2387   001376  8F22               	bsf	34,7,b	;volatile
  2388   001378                     
  2389                           ; BSR set to: 15
  2390   001378  0012               	return		;funcret
  2391   00137A                     __end_of_initDCmotorsPWM:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _getRGBCval *****************
  2395 ;; Defined at:
  2396 ;;		line 84 in file "color.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2399 ;;		 -> main@measured_colour(8), 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 4
  2418 ;; This function calls:
  2419 ;;		_color_read_Blue
  2420 ;;		_color_read_Clear
  2421 ;;		_color_read_Green
  2422 ;;		_color_read_Red
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text14
  2429   0014FE                     __ptext14:
  2430                           	callstack 0
  2431   0014FE                     _getRGBCval:
  2432                           	callstack 26
  2433   0014FE                     
  2434                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2435   0014FE  ECAA  F00A         	call	_color_read_Red	;wreg free
  2436   001502  500C               	movf	getRGBCval@p^0,w,c
  2437   001504  6ED9               	movwf	fsr2l,c
  2438   001506  6ADA               	clrf	fsr2h,c
  2439   001508  C005  FFDE         	movff	?_color_read_Red,postinc2
  2440   00150C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2441                           
  2442                           ;color.c: 87:     p->B = color_read_Blue();
  2443   001510  EC22  F00B         	call	_color_read_Blue	;wreg free
  2444   001514  500C               	movf	getRGBCval@p^0,w,c
  2445   001516  6ED9               	movwf	fsr2l,c
  2446   001518  6ADA               	clrf	fsr2h,c
  2447   00151A  0E04               	movlw	4
  2448   00151C  26D9               	addwf	fsr2l,f,c
  2449   00151E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2450   001522  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2451                           
  2452                           ;color.c: 88:     p->G = color_read_Green();
  2453   001526  ECD2  F00A         	call	_color_read_Green	;wreg free
  2454   00152A  500C               	movf	getRGBCval@p^0,w,c
  2455   00152C  6ED9               	movwf	fsr2l,c
  2456   00152E  6ADA               	clrf	fsr2h,c
  2457   001530  0E02               	movlw	2
  2458   001532  26D9               	addwf	fsr2l,f,c
  2459   001534  C005  FFDE         	movff	?_color_read_Green,postinc2
  2460   001538  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2461                           
  2462                           ;color.c: 89:     p->C = color_read_Clear();
  2463   00153C  ECFA  F00A         	call	_color_read_Clear	;wreg free
  2464   001540  500C               	movf	getRGBCval@p^0,w,c
  2465   001542  6ED9               	movwf	fsr2l,c
  2466   001544  6ADA               	clrf	fsr2h,c
  2467   001546  0E06               	movlw	6
  2468   001548  26D9               	addwf	fsr2l,f,c
  2469   00154A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2470   00154E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2471   001552  0012               	return		;funcret
  2472   001554                     __end_of_getRGBCval:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _color_read_Red *****************
  2476 ;; Defined at:
  2477 ;;		line 28 in file "color.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  tmp             2    9[COMRAM] unsigned int 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  2    4[COMRAM] unsigned int 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;Total ram usage:        7 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 3
  2498 ;; This function calls:
  2499 ;;		_I2C_2_Master_Read
  2500 ;;		_I2C_2_Master_RepStart
  2501 ;;		_I2C_2_Master_Start
  2502 ;;		_I2C_2_Master_Stop
  2503 ;;		_I2C_2_Master_Write
  2504 ;; This function is called by:
  2505 ;;		_getRGBCval
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text15
  2510   001554                     __ptext15:
  2511                           	callstack 0
  2512   001554                     _color_read_Red:
  2513                           	callstack 26
  2514   001554                     
  2515                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2516   001554  EC70  F00C         	call	_I2C_2_Master_Start	;wreg free
  2517                           
  2518                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2519   001558  0E52               	movlw	82
  2520   00155A  EC54  F00C         	call	_I2C_2_Master_Write
  2521                           
  2522                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2523   00155E  0EB6               	movlw	182
  2524   001560  EC54  F00C         	call	_I2C_2_Master_Write
  2525                           
  2526                           ;color.c: 34:  I2C_2_Master_RepStart();
  2527   001564  EC66  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2528                           
  2529                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2530   001568  0E53               	movlw	83
  2531   00156A  EC54  F00C         	call	_I2C_2_Master_Write
  2532                           
  2533                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2534   00156E  0E01               	movlw	1
  2535   001570  EC70  F00B         	call	_I2C_2_Master_Read
  2536   001574  6E07               	movwf	??_color_read_Red^0,c
  2537   001576  5007               	movf	??_color_read_Red^0,w,c
  2538   001578  6E0A               	movwf	color_read_Red@tmp^0,c
  2539   00157A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2540                           
  2541                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2542   00157C  0E00               	movlw	0
  2543   00157E  EC70  F00B         	call	_I2C_2_Master_Read
  2544   001582  6E07               	movwf	??_color_read_Red^0,c
  2545   001584  5007               	movf	??_color_read_Red^0,w,c
  2546   001586  6E09               	movwf	(??_color_read_Red+2)^0,c
  2547   001588  6A08               	clrf	(??_color_read_Red+1)^0,c
  2548   00158A  500A               	movf	color_read_Red@tmp^0,w,c
  2549   00158C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2550   00158E  6E0A               	movwf	color_read_Red@tmp^0,c
  2551   001590  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2552   001592  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2553   001594  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2554                           
  2555                           ;color.c: 38:  I2C_2_Master_Stop();
  2556   001596  EC6B  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2557   00159A                     
  2558                           ;color.c: 39:  return tmp;
  2559   00159A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2560   00159E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2561   0015A2  0012               	return		;funcret
  2562   0015A4                     __end_of_color_read_Red:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _color_read_Green *****************
  2566 ;; Defined at:
  2567 ;;		line 56 in file "color.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  tmp             2    9[COMRAM] unsigned int 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2    4[COMRAM] unsigned int 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;Total ram usage:        7 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 3
  2588 ;; This function calls:
  2589 ;;		_I2C_2_Master_Read
  2590 ;;		_I2C_2_Master_RepStart
  2591 ;;		_I2C_2_Master_Start
  2592 ;;		_I2C_2_Master_Stop
  2593 ;;		_I2C_2_Master_Write
  2594 ;; This function is called by:
  2595 ;;		_getRGBCval
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text16
  2600   0015A4                     __ptext16:
  2601                           	callstack 0
  2602   0015A4                     _color_read_Green:
  2603                           	callstack 26
  2604   0015A4                     
  2605                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2606   0015A4  EC70  F00C         	call	_I2C_2_Master_Start	;wreg free
  2607                           
  2608                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2609   0015A8  0E52               	movlw	82
  2610   0015AA  EC54  F00C         	call	_I2C_2_Master_Write
  2611                           
  2612                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x18);
  2613   0015AE  0EB8               	movlw	184
  2614   0015B0  EC54  F00C         	call	_I2C_2_Master_Write
  2615                           
  2616                           ;color.c: 62:  I2C_2_Master_RepStart();
  2617   0015B4  EC66  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2618                           
  2619                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2620   0015B8  0E53               	movlw	83
  2621   0015BA  EC54  F00C         	call	_I2C_2_Master_Write
  2622                           
  2623                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2624   0015BE  0E01               	movlw	1
  2625   0015C0  EC70  F00B         	call	_I2C_2_Master_Read
  2626   0015C4  6E07               	movwf	??_color_read_Green^0,c
  2627   0015C6  5007               	movf	??_color_read_Green^0,w,c
  2628   0015C8  6E0A               	movwf	color_read_Green@tmp^0,c
  2629   0015CA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2630                           
  2631                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2632   0015CC  0E00               	movlw	0
  2633   0015CE  EC70  F00B         	call	_I2C_2_Master_Read
  2634   0015D2  6E07               	movwf	??_color_read_Green^0,c
  2635   0015D4  5007               	movf	??_color_read_Green^0,w,c
  2636   0015D6  6E09               	movwf	(??_color_read_Green+2)^0,c
  2637   0015D8  6A08               	clrf	(??_color_read_Green+1)^0,c
  2638   0015DA  500A               	movf	color_read_Green@tmp^0,w,c
  2639   0015DC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2640   0015DE  6E0A               	movwf	color_read_Green@tmp^0,c
  2641   0015E0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2642   0015E2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2643   0015E4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2644                           
  2645                           ;color.c: 66:  I2C_2_Master_Stop();
  2646   0015E6  EC6B  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2647   0015EA                     
  2648                           ;color.c: 67:  return tmp;
  2649   0015EA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2650   0015EE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2651   0015F2  0012               	return		;funcret
  2652   0015F4                     __end_of_color_read_Green:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _color_read_Clear *****************
  2656 ;; Defined at:
  2657 ;;		line 70 in file "color.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  tmp             2    9[COMRAM] unsigned int 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2    4[COMRAM] unsigned int 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;Total ram usage:        7 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 3
  2678 ;; This function calls:
  2679 ;;		_I2C_2_Master_Read
  2680 ;;		_I2C_2_Master_RepStart
  2681 ;;		_I2C_2_Master_Start
  2682 ;;		_I2C_2_Master_Stop
  2683 ;;		_I2C_2_Master_Write
  2684 ;; This function is called by:
  2685 ;;		_getRGBCval
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text17
  2690   0015F4                     __ptext17:
  2691                           	callstack 0
  2692   0015F4                     _color_read_Clear:
  2693                           	callstack 26
  2694   0015F4                     
  2695                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2696   0015F4  EC70  F00C         	call	_I2C_2_Master_Start	;wreg free
  2697                           
  2698                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2699   0015F8  0E52               	movlw	82
  2700   0015FA  EC54  F00C         	call	_I2C_2_Master_Write
  2701                           
  2702                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2703   0015FE  0EB4               	movlw	180
  2704   001600  EC54  F00C         	call	_I2C_2_Master_Write
  2705                           
  2706                           ;color.c: 76:  I2C_2_Master_RepStart();
  2707   001604  EC66  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2708                           
  2709                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2710   001608  0E53               	movlw	83
  2711   00160A  EC54  F00C         	call	_I2C_2_Master_Write
  2712                           
  2713                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2714   00160E  0E01               	movlw	1
  2715   001610  EC70  F00B         	call	_I2C_2_Master_Read
  2716   001614  6E07               	movwf	??_color_read_Clear^0,c
  2717   001616  5007               	movf	??_color_read_Clear^0,w,c
  2718   001618  6E0A               	movwf	color_read_Clear@tmp^0,c
  2719   00161A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2720                           
  2721                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2722   00161C  0E00               	movlw	0
  2723   00161E  EC70  F00B         	call	_I2C_2_Master_Read
  2724   001622  6E07               	movwf	??_color_read_Clear^0,c
  2725   001624  5007               	movf	??_color_read_Clear^0,w,c
  2726   001626  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2727   001628  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2728   00162A  500A               	movf	color_read_Clear@tmp^0,w,c
  2729   00162C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2730   00162E  6E0A               	movwf	color_read_Clear@tmp^0,c
  2731   001630  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2732   001632  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2733   001634  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2734                           
  2735                           ;color.c: 80:  I2C_2_Master_Stop();
  2736   001636  EC6B  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2737   00163A                     
  2738                           ;color.c: 81:  return tmp;
  2739   00163A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2740   00163E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2741   001642  0012               	return		;funcret
  2742   001644                     __end_of_color_read_Clear:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _color_read_Blue *****************
  2746 ;; Defined at:
  2747 ;;		line 42 in file "color.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  tmp             2    9[COMRAM] unsigned int 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  2    4[COMRAM] unsigned int 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;Total ram usage:        7 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 3
  2768 ;; This function calls:
  2769 ;;		_I2C_2_Master_Read
  2770 ;;		_I2C_2_Master_RepStart
  2771 ;;		_I2C_2_Master_Start
  2772 ;;		_I2C_2_Master_Stop
  2773 ;;		_I2C_2_Master_Write
  2774 ;; This function is called by:
  2775 ;;		_getRGBCval
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text18
  2780   001644                     __ptext18:
  2781                           	callstack 0
  2782   001644                     _color_read_Blue:
  2783                           	callstack 26
  2784   001644                     
  2785                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2786   001644  EC70  F00C         	call	_I2C_2_Master_Start	;wreg free
  2787                           
  2788                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2789   001648  0E52               	movlw	82
  2790   00164A  EC54  F00C         	call	_I2C_2_Master_Write
  2791                           
  2792                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x1A);
  2793   00164E  0EBA               	movlw	186
  2794   001650  EC54  F00C         	call	_I2C_2_Master_Write
  2795                           
  2796                           ;color.c: 48:  I2C_2_Master_RepStart();
  2797   001654  EC66  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2798                           
  2799                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2800   001658  0E53               	movlw	83
  2801   00165A  EC54  F00C         	call	_I2C_2_Master_Write
  2802                           
  2803                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2804   00165E  0E01               	movlw	1
  2805   001660  EC70  F00B         	call	_I2C_2_Master_Read
  2806   001664  6E07               	movwf	??_color_read_Blue^0,c
  2807   001666  5007               	movf	??_color_read_Blue^0,w,c
  2808   001668  6E0A               	movwf	color_read_Blue@tmp^0,c
  2809   00166A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2810                           
  2811                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2812   00166C  0E00               	movlw	0
  2813   00166E  EC70  F00B         	call	_I2C_2_Master_Read
  2814   001672  6E07               	movwf	??_color_read_Blue^0,c
  2815   001674  5007               	movf	??_color_read_Blue^0,w,c
  2816   001676  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2817   001678  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2818   00167A  500A               	movf	color_read_Blue@tmp^0,w,c
  2819   00167C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2820   00167E  6E0A               	movwf	color_read_Blue@tmp^0,c
  2821   001680  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2822   001682  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2823   001684  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2824                           
  2825                           ;color.c: 52:  I2C_2_Master_Stop();
  2826   001686  EC6B  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2827   00168A                     
  2828                           ;color.c: 53:  return tmp;
  2829   00168A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2830   00168E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2831   001692  0012               	return		;funcret
  2832   001694                     __end_of_color_read_Blue:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _I2C_2_Master_RepStart *****************
  2836 ;; Defined at:
  2837 ;;		line 33 in file "i2c.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 2
  2858 ;; This function calls:
  2859 ;;		_I2C_2_Master_Idle
  2860 ;; This function is called by:
  2861 ;;		_color_read_Red
  2862 ;;		_color_read_Blue
  2863 ;;		_color_read_Green
  2864 ;;		_color_read_Clear
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text19
  2869   0018CC                     __ptext19:
  2870                           	callstack 0
  2871   0018CC                     _I2C_2_Master_RepStart:
  2872                           	callstack 26
  2873   0018CC                     
  2874                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2875   0018CC  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2876   0018D0                     
  2877                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2878   0018D0  010E               	movlb	14	; () banked
  2879   0018D2  83DA               	bsf	218,1,b	;volatile
  2880   0018D4                     
  2881                           ; BSR set to: 14
  2882   0018D4  0012               	return		;funcret
  2883   0018D6                     __end_of_I2C_2_Master_RepStart:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _I2C_2_Master_Read *****************
  2887 ;; Defined at:
  2888 ;;		line 51 in file "i2c.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  ack             1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  ack             1    2[COMRAM] unsigned char 
  2893 ;;  tmp             1    3[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;Total ram usage:        3 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 2
  2910 ;; This function calls:
  2911 ;;		_I2C_2_Master_Idle
  2912 ;; This function is called by:
  2913 ;;		_color_read_Red
  2914 ;;		_color_read_Blue
  2915 ;;		_color_read_Green
  2916 ;;		_color_read_Clear
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text20
  2921   0016E0                     __ptext20:
  2922                           	callstack 0
  2923   0016E0                     _I2C_2_Master_Read:
  2924                           	callstack 26
  2925                           
  2926                           ; BSR set to: 14
  2927                           ;incstack = 0
  2928                           ;I2C_2_Master_Read@ack stored from wreg
  2929   0016E0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2930   0016E2                     
  2931                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2932   0016E2  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2933   0016E6                     
  2934                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2935   0016E6  010E               	movlb	14	; () banked
  2936   0016E8  87DA               	bsf	218,3,b	;volatile
  2937                           
  2938                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2939   0016EA  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2940   0016EE                     
  2941                           ;i2c.c: 57:   tmp = SSP2BUF;
  2942   0016EE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2943                           
  2944                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2945   0016F2  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2946   0016F6                     
  2947                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2948   0016F6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2949   0016F8  B4D8               	btfsc	status,2,c
  2950   0016FA  EF81  F00B         	goto	u1411
  2951   0016FE  EF85  F00B         	goto	u1410
  2952   001702                     u1411:
  2953   001702  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2954   001704  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2955   001706  EF86  F00B         	goto	u1428
  2956   00170A                     u1410:
  2957   00170A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2958   00170C                     u1428:
  2959   00170C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2960   00170E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2961   001710  010E               	movlb	14	; () banked
  2962   001712  51DA               	movf	218,w,b	;volatile
  2963   001714  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2964   001716  0BDF               	andlw	-33
  2965   001718  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2966   00171A  6FDA               	movwf	218,b	;volatile
  2967   00171C                     
  2968                           ; BSR set to: 14
  2969                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2970   00171C  89DA               	bsf	218,4,b	;volatile
  2971   00171E                     
  2972                           ; BSR set to: 14
  2973                           ;i2c.c: 61:   return tmp;
  2974   00171E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2975   001720                     
  2976                           ; BSR set to: 14
  2977   001720  0012               	return		;funcret
  2978   001722                     __end_of_I2C_2_Master_Read:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _color_click_init *****************
  2982 ;; Defined at:
  2983 ;;		line 4 in file "color.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;Total ram usage:        1 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 4
  3004 ;; This function calls:
  3005 ;;		_I2C_2_Master_Init
  3006 ;;		_color_writetoaddr
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text21
  3013   001756                     __ptext21:
  3014                           	callstack 0
  3015   001756                     _color_click_init:
  3016                           	callstack 26
  3017   001756                     
  3018                           ;color.c: 7:     I2C_2_Master_Init();
  3019   001756  ECDC  F00B         	call	_I2C_2_Master_Init	;wreg free
  3020   00175A                     
  3021                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  3022   00175A  0E01               	movlw	1
  3023   00175C  6E03               	movwf	color_writetoaddr@value^0,c
  3024   00175E  0E00               	movlw	0
  3025   001760  EC29  F00C         	call	_color_writetoaddr
  3026   001764                     
  3027                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3028   001764  0E3F               	movlw	63
  3029   001766  6E05               	movwf	??_color_click_init^0,c
  3030   001768  0E55               	movlw	85
  3031   00176A                     u2017:
  3032   00176A  2EE8               	decfsz	wreg,f,c
  3033   00176C  D7FE               	bra	u2017
  3034   00176E  2E05               	decfsz	??_color_click_init^0,f,c
  3035   001770  D7FC               	bra	u2017
  3036   001772  0000               	nop	
  3037   001774                     
  3038                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  3039   001774  0E03               	movlw	3
  3040   001776  6E03               	movwf	color_writetoaddr@value^0,c
  3041   001778  0E00               	movlw	0
  3042   00177A  EC29  F00C         	call	_color_writetoaddr
  3043   00177E                     
  3044                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  3045   00177E  0ED5               	movlw	213
  3046   001780  6E03               	movwf	color_writetoaddr@value^0,c
  3047   001782  0E01               	movlw	1
  3048   001784  EC29  F00C         	call	_color_writetoaddr
  3049   001788  0012               	return		;funcret
  3050   00178A                     __end_of_color_click_init:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _color_writetoaddr *****************
  3054 ;; Defined at:
  3055 ;;		line 20 in file "color.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  address         1    wreg     unsigned char 
  3058 ;;  value           1    2[COMRAM] unsigned char 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  address         1    3[COMRAM] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3070 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;Total ram usage:        2 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 3
  3077 ;; This function calls:
  3078 ;;		_I2C_2_Master_Start
  3079 ;;		_I2C_2_Master_Stop
  3080 ;;		_I2C_2_Master_Write
  3081 ;; This function is called by:
  3082 ;;		_color_click_init
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text22
  3087   001852                     __ptext22:
  3088                           	callstack 0
  3089   001852                     _color_writetoaddr:
  3090                           	callstack 26
  3091                           
  3092                           ;incstack = 0
  3093                           ;color_writetoaddr@address stored from wreg
  3094   001852  6E04               	movwf	color_writetoaddr@address^0,c
  3095   001854                     
  3096                           ;color.c: 21:     I2C_2_Master_Start();
  3097   001854  EC70  F00C         	call	_I2C_2_Master_Start	;wreg free
  3098                           
  3099                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  3100   001858  0E52               	movlw	82
  3101   00185A  EC54  F00C         	call	_I2C_2_Master_Write
  3102                           
  3103                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  3104   00185E  5004               	movf	color_writetoaddr@address^0,w,c
  3105   001860  0980               	iorlw	128
  3106   001862  EC54  F00C         	call	_I2C_2_Master_Write
  3107                           
  3108                           ;color.c: 24:     I2C_2_Master_Write(value);
  3109   001866  5003               	movf	color_writetoaddr@value^0,w,c
  3110   001868  EC54  F00C         	call	_I2C_2_Master_Write
  3111                           
  3112                           ;color.c: 25:     I2C_2_Master_Stop();
  3113   00186C  EC6B  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3114   001870  0012               	return		;funcret
  3115   001872                     __end_of_color_writetoaddr:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _I2C_2_Master_Write *****************
  3119 ;; Defined at:
  3120 ;;		line 45 in file "i2c.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  data_byte       1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  data_byte       1    1[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 2
  3141 ;; This function calls:
  3142 ;;		_I2C_2_Master_Idle
  3143 ;; This function is called by:
  3144 ;;		_color_writetoaddr
  3145 ;;		_color_read_Red
  3146 ;;		_color_read_Blue
  3147 ;;		_color_read_Green
  3148 ;;		_color_read_Clear
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text23
  3153   0018A8                     __ptext23:
  3154                           	callstack 0
  3155   0018A8                     _I2C_2_Master_Write:
  3156                           	callstack 26
  3157                           
  3158                           ;incstack = 0
  3159                           ;I2C_2_Master_Write@data_byte stored from wreg
  3160   0018A8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3161   0018AA                     
  3162                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3163   0018AA  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3164   0018AE                     
  3165                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3166   0018AE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3167   0018B2  0012               	return		;funcret
  3168   0018B4                     __end_of_I2C_2_Master_Write:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _I2C_2_Master_Stop *****************
  3172 ;; Defined at:
  3173 ;;		line 39 in file "i2c.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; Hardware stack levels required when called: 2
  3194 ;; This function calls:
  3195 ;;		_I2C_2_Master_Idle
  3196 ;; This function is called by:
  3197 ;;		_color_writetoaddr
  3198 ;;		_color_read_Red
  3199 ;;		_color_read_Blue
  3200 ;;		_color_read_Green
  3201 ;;		_color_read_Clear
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text24
  3206   0018D6                     __ptext24:
  3207                           	callstack 0
  3208   0018D6                     _I2C_2_Master_Stop:
  3209                           	callstack 26
  3210   0018D6                     
  3211                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3212   0018D6  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3213   0018DA                     
  3214                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3215   0018DA  010E               	movlb	14	; () banked
  3216   0018DC  85DA               	bsf	218,2,b	;volatile
  3217   0018DE                     
  3218                           ; BSR set to: 14
  3219   0018DE  0012               	return		;funcret
  3220   0018E0                     __end_of_I2C_2_Master_Stop:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _I2C_2_Master_Start *****************
  3224 ;; Defined at:
  3225 ;;		line 27 in file "i2c.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 2
  3246 ;; This function calls:
  3247 ;;		_I2C_2_Master_Idle
  3248 ;; This function is called by:
  3249 ;;		_color_writetoaddr
  3250 ;;		_color_read_Red
  3251 ;;		_color_read_Blue
  3252 ;;		_color_read_Green
  3253 ;;		_color_read_Clear
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text25
  3258   0018E0                     __ptext25:
  3259                           	callstack 0
  3260   0018E0                     _I2C_2_Master_Start:
  3261                           	callstack 26
  3262   0018E0                     
  3263                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3264   0018E0  ECF1  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3265   0018E4                     
  3266                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3267   0018E4  010E               	movlb	14	; () banked
  3268   0018E6  81DA               	bsf	218,0,b	;volatile
  3269   0018E8                     
  3270                           ; BSR set to: 14
  3271   0018E8  0012               	return		;funcret
  3272   0018EA                     __end_of_I2C_2_Master_Start:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _I2C_2_Master_Idle *****************
  3276 ;; Defined at:
  3277 ;;		line 22 in file "i2c.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        1 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_I2C_2_Master_Start
  3302 ;;		_I2C_2_Master_RepStart
  3303 ;;		_I2C_2_Master_Stop
  3304 ;;		_I2C_2_Master_Write
  3305 ;;		_I2C_2_Master_Read
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text26
  3310   0017E2                     __ptext26:
  3311                           	callstack 0
  3312   0017E2                     _I2C_2_Master_Idle:
  3313                           	callstack 26
  3314   0017E2                     l250:
  3315   0017E2  010E               	movlb	14	; () banked
  3316   0017E4  B5D8               	btfsc	216,2,b	;volatile
  3317   0017E6  EFF7  F00B         	goto	u1291
  3318   0017EA  EFF9  F00B         	goto	u1290
  3319   0017EE                     u1291:
  3320   0017EE  EFF1  F00B         	goto	l250
  3321   0017F2                     u1290:
  3322   0017F2                     
  3323                           ; BSR set to: 14
  3324   0017F2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3325   0017F6  0E1F               	movlw	31
  3326   0017F8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3327   0017FA  A4D8               	btfss	status,2,c
  3328   0017FC  EF02  F00C         	goto	u1301
  3329   001800  EF04  F00C         	goto	u1300
  3330   001804                     u1301:
  3331   001804  EFF1  F00B         	goto	l250
  3332   001808                     u1300:
  3333   001808                     
  3334                           ; BSR set to: 14
  3335   001808  0012               	return		;funcret
  3336   00180A                     __end_of_I2C_2_Master_Idle:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _I2C_2_Master_Init *****************
  3340 ;; Defined at:
  3341 ;;		line 4 in file "i2c.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_color_click_init
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text27
  3370   0017B8                     __ptext27:
  3371                           	callstack 0
  3372   0017B8                     _I2C_2_Master_Init:
  3373                           	callstack 28
  3374   0017B8                     
  3375                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3376   0017B8  010E               	movlb	14	; () banked
  3377   0017BA  51D9               	movf	217,w,b	;volatile
  3378   0017BC  0BF0               	andlw	-16
  3379   0017BE  0908               	iorlw	8
  3380   0017C0  6FD9               	movwf	217,b	;volatile
  3381   0017C2                     
  3382                           ; BSR set to: 14
  3383                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3384   0017C2  8BD9               	bsf	217,5,b	;volatile
  3385                           
  3386                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3387   0017C4  0E9F               	movlw	159
  3388   0017C6  6FD6               	movwf	214,b	;volatile
  3389   0017C8                     
  3390                           ; BSR set to: 14
  3391                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3392   0017C8  8A84               	bsf	132,5,c	;volatile
  3393   0017CA                     
  3394                           ; BSR set to: 14
  3395                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3396   0017CA  8C84               	bsf	132,6,c	;volatile
  3397   0017CC                     
  3398                           ; BSR set to: 14
  3399                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3400   0017CC  9BA7               	bcf	167,5,b	;volatile
  3401   0017CE                     
  3402                           ; BSR set to: 14
  3403                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3404   0017CE  9DA7               	bcf	167,6,b	;volatile
  3405                           
  3406                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3407   0017D0  0E1D               	movlw	29
  3408   0017D2  6F1D               	movwf	29,b	;volatile
  3409                           
  3410                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3411   0017D4  0E1E               	movlw	30
  3412   0017D6  6F1C               	movwf	28,b	;volatile
  3413                           
  3414                           ;i2c.c: 18:   RD5PPS=0x1C;
  3415   0017D8  0E1C               	movlw	28
  3416   0017DA  6F6F               	movwf	111,b	;volatile
  3417                           
  3418                           ;i2c.c: 19:   RD6PPS=0x1B;
  3419   0017DC  0E1B               	movlw	27
  3420   0017DE  6F70               	movwf	112,b	;volatile
  3421   0017E0                     
  3422                           ; BSR set to: 14
  3423   0017E0  0012               	return		;funcret
  3424   0017E2                     __end_of_I2C_2_Master_Init:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _buggy_lights_init *****************
  3428 ;; Defined at:
  3429 ;;		line 4 in file "buggy_lights.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		None
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text28
  3458   00178A                     __ptext28:
  3459                           	callstack 0
  3460   00178A                     _buggy_lights_init:
  3461                           	callstack 29
  3462   00178A                     
  3463                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  3464   00178A  9884               	bcf	132,4,c	;volatile
  3465                           
  3466                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  3467   00178C  9288               	bcf	136,1,c	;volatile
  3468                           
  3469                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  3470   00178E  9684               	bcf	132,3,c	;volatile
  3471                           
  3472                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  3473   001790  9086               	bcf	134,0,c	;volatile
  3474                           
  3475                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  3476   001792  9088               	bcf	136,0,c	;volatile
  3477                           
  3478                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  3479   001794  987C               	bcf	124,4,c	;volatile
  3480                           
  3481                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  3482   001796  9280               	bcf	128,1,c	;volatile
  3483                           
  3484                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  3485   001798  967C               	bcf	124,3,c	;volatile
  3486                           
  3487                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  3488   00179A  907E               	bcf	126,0,c	;volatile
  3489                           
  3490                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  3491   00179C  9080               	bcf	128,0,c	;volatile
  3492                           
  3493                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  3494   00179E  9287               	bcf	135,1,c	;volatile
  3495                           
  3496                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  3497   0017A0  9881               	bcf	129,4,c	;volatile
  3498                           
  3499                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  3500   0017A2  9E86               	bcf	134,7,c	;volatile
  3501                           
  3502                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  3503   0017A4  927F               	bcf	127,1,c	;volatile
  3504                           
  3505                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  3506   0017A6  9879               	bcf	121,4,c	;volatile
  3507                           
  3508                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  3509   0017A8  9E7E               	bcf	126,7,c	;volatile
  3510                           
  3511                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  3512   0017AA  9087               	bcf	135,0,c	;volatile
  3513                           
  3514                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  3515   0017AC  9E85               	bcf	133,7,c	;volatile
  3516                           
  3517                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  3518   0017AE  9681               	bcf	129,3,c	;volatile
  3519                           
  3520                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  3521   0017B0  907F               	bcf	127,0,c	;volatile
  3522                           
  3523                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  3524   0017B2  9E7D               	bcf	125,7,c	;volatile
  3525                           
  3526                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  3527   0017B4  9679               	bcf	121,3,c	;volatile
  3528   0017B6  0012               	return		;funcret
  3529   0017B8                     __end_of_buggy_lights_init:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _Timer0_init *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "timers.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 3
  3555 ;; This function calls:
  3556 ;;		_reset_timer
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text29
  3563   00182E                     __ptext29:
  3564                           	callstack 0
  3565   00182E                     _Timer0_init:
  3566                           	callstack 27
  3567   00182E                     
  3568                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3569   00182E  50D6               	movf	214,w,c	;volatile
  3570   001830  0B1F               	andlw	-225
  3571   001832  0940               	iorlw	64
  3572   001834  6ED6               	movwf	214,c	;volatile
  3573   001836                     
  3574                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3575   001836  88D6               	bsf	214,4,c	;volatile
  3576   001838                     
  3577                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3578   001838  88D5               	bsf	213,4,c	;volatile
  3579                           
  3580                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3581   00183A  50D6               	movf	214,w,c	;volatile
  3582   00183C  0BF0               	andlw	-16
  3583   00183E  090E               	iorlw	14
  3584   001840  6ED6               	movwf	214,c	;volatile
  3585   001842                     
  3586                           ;timers.c: 18:     reset_timer();
  3587   001842  EC5A  F00C         	call	_reset_timer	;wreg free
  3588   001846                     
  3589                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  3590   001846  8ED5               	bsf	213,7,c	;volatile
  3591   001848                     
  3592                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  3593   001848  010E               	movlb	14	; () banked
  3594   00184A  8B29               	bsf	41,5,b	;volatile
  3595   00184C                     
  3596                           ; BSR set to: 14
  3597                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  3598   00184C  8CF2               	bsf	242,6,c	;volatile
  3599   00184E                     
  3600                           ; BSR set to: 14
  3601                           ;timers.c: 23:     INTCONbits.GIE = 1;
  3602   00184E  8EF2               	bsf	242,7,c	;volatile
  3603   001850                     
  3604                           ; BSR set to: 14
  3605   001850  0012               	return		;funcret
  3606   001852                     __end_of_Timer0_init:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _reset_timer *****************
  3610 ;; Defined at:
  3611 ;;		line 44 in file "timers.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 2
  3632 ;; This function calls:
  3633 ;;		_write_timer
  3634 ;; This function is called by:
  3635 ;;		_Timer0_init
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text30
  3640   0018B4                     __ptext30:
  3641                           	callstack 0
  3642   0018B4                     _reset_timer:
  3643                           	callstack 27
  3644   0018B4                     
  3645                           ;timers.c: 46:     write_timer(0, 0);
  3646   0018B4  0E00               	movlw	0
  3647   0018B6  6E01               	movwf	write_timer@tL^0,c
  3648   0018B8  0E00               	movlw	0
  3649   0018BA  EC60  F00C         	call	_write_timer
  3650   0018BE  0012               	return		;funcret
  3651   0018C0                     __end_of_reset_timer:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _write_timer *****************
  3655 ;; Defined at:
  3656 ;;		line 35 in file "timers.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  tH              1    wreg     unsigned char 
  3659 ;;  tL              1    0[COMRAM] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  tH              1    1[COMRAM] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3671 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_reset_timer
  3682 ;;		_return_to_sender
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text31
  3687   0018C0                     __ptext31:
  3688                           	callstack 0
  3689   0018C0                     _write_timer:
  3690                           	callstack 27
  3691                           
  3692                           ;incstack = 0
  3693                           ;write_timer@tH stored from wreg
  3694   0018C0  6E02               	movwf	write_timer@tH^0,c
  3695   0018C2                     
  3696                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  3697   0018C2  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  3698   0018C6                     
  3699                           ;timers.c: 41:     TMR0L = tL;
  3700   0018C6  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  3701   0018CA  0012               	return		;funcret
  3702   0018CC                     __end_of_write_timer:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _ISR *****************
  3706 ;; Defined at:
  3707 ;;		line 97 in file "timers.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		Interrupt level 2
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	intcode
  3735   000008                     __pintcode:
  3736                           	callstack 0
  3737   000008                     _ISR:
  3738                           	callstack 24
  3739                           
  3740                           ;incstack = 0
  3741   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3742   00000A                     
  3743                           ;timers.c: 100:     if (PIR0bits.TMR0IF) {
  3744   00000A  010E               	movlb	14	; () banked
  3745   00000C  AB33               	btfss	51,5,b	;volatile
  3746   00000E  EF0B  F000         	goto	i2u92_41
  3747   000012  EF0D  F000         	goto	i2u92_40
  3748   000016                     i2u92_41:
  3749   000016  EF18  F000         	goto	i2l675
  3750   00001A                     i2u92_40:
  3751   00001A                     
  3752                           ; BSR set to: 14
  3753                           ;timers.c: 101:         if (returning) {
  3754   00001A  5055               	movf	_returning^0,w,c
  3755   00001C  B4D8               	btfsc	status,2,c
  3756   00001E  EF13  F000         	goto	i2u93_41
  3757   000022  EF15  F000         	goto	i2u93_40
  3758   000026                     i2u93_41:
  3759   000026  EF17  F000         	goto	i2l674
  3760   00002A                     i2u93_40:
  3761   00002A                     
  3762                           ; BSR set to: 14
  3763                           ;timers.c: 102:             return_flag = 1;
  3764   00002A  0E01               	movlw	1
  3765   00002C  6E54               	movwf	_return_flag^0,c
  3766   00002E                     i2l674:
  3767                           
  3768                           ; BSR set to: 14
  3769                           ;timers.c: 107:         PIR0bits.TMR0IF = 0;
  3770   00002E  9B33               	bcf	51,5,b	;volatile
  3771   000030                     i2l675:
  3772                           
  3773                           ; BSR set to: 14
  3774   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3775   000032  0011               	retfie		f
  3776   000034                     __end_of_ISR:
  3777                           	callstack 0
  3778                           
  3779                           	psect	rparam
  3780   000000                     
  3781                           	psect	temp
  3782   00005F                     btemp:
  3783                           	callstack 0
  3784   00005F                     	ds	1
  3785   000000                     int$flags	set	btemp
  3786   000000                     wtemp8	set	btemp+1
  3787   000000                     ttemp5	set	btemp+1
  3788   000000                     ttemp6	set	btemp+4
  3789   000000                     ttemp7	set	btemp+8
  3790                           
  3791                           	psect	idloc
  3792                           
  3793                           ;Config register IDLOC0 @ 0x200000
  3794                           ;	unspecified, using default values
  3795   200000                     	org	2097152
  3796   200000  FFFF               	dw	65535
  3797                           
  3798                           ;Config register IDLOC1 @ 0x200002
  3799                           ;	unspecified, using default values
  3800   200002                     	org	2097154
  3801   200002  FFFF               	dw	65535
  3802                           
  3803                           ;Config register IDLOC2 @ 0x200004
  3804                           ;	unspecified, using default values
  3805   200004                     	org	2097156
  3806   200004  FFFF               	dw	65535
  3807                           
  3808                           ;Config register IDLOC3 @ 0x200006
  3809                           ;	unspecified, using default values
  3810   200006                     	org	2097158
  3811   200006  FFFF               	dw	65535
  3812                           
  3813                           ;Config register IDLOC4 @ 0x200008
  3814                           ;	unspecified, using default values
  3815   200008                     	org	2097160
  3816   200008  FFFF               	dw	65535
  3817                           
  3818                           ;Config register IDLOC5 @ 0x20000A
  3819                           ;	unspecified, using default values
  3820   20000A                     	org	2097162
  3821   20000A  FFFF               	dw	65535
  3822                           
  3823                           ;Config register IDLOC6 @ 0x20000C
  3824                           ;	unspecified, using default values
  3825   20000C                     	org	2097164
  3826   20000C  FFFF               	dw	65535
  3827                           
  3828                           ;Config register IDLOC7 @ 0x20000E
  3829                           ;	unspecified, using default values
  3830   20000E                     	org	2097166
  3831   20000E  FFFF               	dw	65535
  3832                           
  3833                           	psect	config
  3834                           
  3835                           ;Config register CONFIG1L @ 0x300000
  3836                           ;	External Oscillator mode Selection bits
  3837                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3838                           ;	Power-up default value for COSC bits
  3839                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3840   300000                     	org	3145728
  3841   300000  AA                 	db	170
  3842                           
  3843                           ;Config register CONFIG1H @ 0x300001
  3844                           ;	unspecified, using default values
  3845                           ;	Clock Out Enable bit
  3846                           ;	CLKOUTEN = 0x1, unprogrammed default
  3847                           ;	Clock Switch Enable bit
  3848                           ;	CSWEN = 0x1, unprogrammed default
  3849                           ;	Fail-Safe Clock Monitor Enable bit
  3850                           ;	FCMEN = 0x1, unprogrammed default
  3851   300001                     	org	3145729
  3852   300001  FF                 	db	255
  3853                           
  3854                           ;Config register CONFIG2L @ 0x300002
  3855                           ;	unspecified, using default values
  3856                           ;	Master Clear Enable bit
  3857                           ;	MCLRE = 0x1, unprogrammed default
  3858                           ;	Power-up Timer Enable bit
  3859                           ;	PWRTE = 0x1, unprogrammed default
  3860                           ;	Low-power BOR enable bit
  3861                           ;	LPBOREN = 0x1, unprogrammed default
  3862                           ;	Brown-out Reset Enable bits
  3863                           ;	BOREN = 0x3, unprogrammed default
  3864   300002                     	org	3145730
  3865   300002  FF                 	db	255
  3866                           
  3867                           ;Config register CONFIG2H @ 0x300003
  3868                           ;	unspecified, using default values
  3869                           ;	Brown Out Reset Voltage selection bits
  3870                           ;	BORV = 0x3, unprogrammed default
  3871                           ;	ZCD Disable bit
  3872                           ;	ZCD = 0x1, unprogrammed default
  3873                           ;	PPSLOCK bit One-Way Set Enable bit
  3874                           ;	PPS1WAY = 0x1, unprogrammed default
  3875                           ;	Stack Full/Underflow Reset Enable bit
  3876                           ;	STVREN = 0x1, unprogrammed default
  3877                           ;	Debugger Enable bit
  3878                           ;	DEBUG = 0x1, unprogrammed default
  3879                           ;	Extended Instruction Set Enable bit
  3880                           ;	XINST = 0x1, unprogrammed default
  3881   300003                     	org	3145731
  3882   300003  FF                 	db	255
  3883                           
  3884                           ;Config register CONFIG3L @ 0x300004
  3885                           ;	WDT Period Select bits
  3886                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3887                           ;	WDT operating mode
  3888                           ;	WDTE = OFF, WDT Disabled
  3889   300004                     	org	3145732
  3890   300004  9F                 	db	159
  3891                           
  3892                           ;Config register CONFIG3H @ 0x300005
  3893                           ;	unspecified, using default values
  3894                           ;	WDT Window Select bits
  3895                           ;	WDTCWS = 0x7, unprogrammed default
  3896                           ;	WDT input clock selector
  3897                           ;	WDTCCS = 0x7, unprogrammed default
  3898   300005                     	org	3145733
  3899   300005  FF                 	db	255
  3900                           
  3901                           ;Config register CONFIG4L @ 0x300006
  3902                           ;	unspecified, using default values
  3903                           ;	Write Protection Block 0
  3904                           ;	WRT0 = 0x1, unprogrammed default
  3905                           ;	Write Protection Block 1
  3906                           ;	WRT1 = 0x1, unprogrammed default
  3907                           ;	Write Protection Block 2
  3908                           ;	WRT2 = 0x1, unprogrammed default
  3909                           ;	Write Protection Block 3
  3910                           ;	WRT3 = 0x1, unprogrammed default
  3911                           ;	Write Protection Block 3
  3912                           ;	WRT4 = 0x1, unprogrammed default
  3913                           ;	Write Protection Block 3
  3914                           ;	WRT5 = 0x1, unprogrammed default
  3915                           ;	Write Protection Block 3
  3916                           ;	WRT6 = 0x1, unprogrammed default
  3917                           ;	Write Protection Block 3
  3918                           ;	WRT7 = 0x1, unprogrammed default
  3919   300006                     	org	3145734
  3920   300006  FF                 	db	255
  3921                           
  3922                           ;Config register CONFIG4H @ 0x300007
  3923                           ;	unspecified, using default values
  3924                           ;	Configuration Register Write Protection bit
  3925                           ;	WRTC = 0x1, unprogrammed default
  3926                           ;	Boot Block Write Protection bit
  3927                           ;	WRTB = 0x1, unprogrammed default
  3928                           ;	Data EEPROM Write Protection bit
  3929                           ;	WRTD = 0x1, unprogrammed default
  3930                           ;	Scanner Enable bit
  3931                           ;	SCANE = 0x1, unprogrammed default
  3932                           ;	Low Voltage Programming Enable bit
  3933                           ;	LVP = 0x1, unprogrammed default
  3934   300007                     	org	3145735
  3935   300007  FF                 	db	255
  3936                           
  3937                           ;Config register CONFIG5L @ 0x300008
  3938                           ;	unspecified, using default values
  3939                           ;	UserNVM Program Memory Code Protection bit
  3940                           ;	CP = 0x1, unprogrammed default
  3941                           ;	DataNVM Memory Code Protection bit
  3942                           ;	CPD = 0x1, unprogrammed default
  3943   300008                     	org	3145736
  3944   300008  FF                 	db	255
  3945                           
  3946                           ;Config register CONFIG5H @ 0x300009
  3947                           ;	unspecified, using default values
  3948   300009                     	org	3145737
  3949   300009  FF                 	db	255
  3950                           
  3951                           ;Config register CONFIG6L @ 0x30000A
  3952                           ;	unspecified, using default values
  3953                           ;	Table Read Protection Block 0
  3954                           ;	EBTR0 = 0x1, unprogrammed default
  3955                           ;	Table Read Protection Block 1
  3956                           ;	EBTR1 = 0x1, unprogrammed default
  3957                           ;	Table Read Protection Block 2
  3958                           ;	EBTR2 = 0x1, unprogrammed default
  3959                           ;	Table Read Protection Block 3
  3960                           ;	EBTR3 = 0x1, unprogrammed default
  3961                           ;	Table Read Protection Block 4
  3962                           ;	EBTR4 = 0x1, unprogrammed default
  3963                           ;	Table Read Protection Block 5
  3964                           ;	EBTR5 = 0x1, unprogrammed default
  3965                           ;	Table Read Protection Block 6
  3966                           ;	EBTR6 = 0x1, unprogrammed default
  3967                           ;	Table Read Protection Block 7
  3968                           ;	EBTR7 = 0x1, unprogrammed default
  3969   30000A                     	org	3145738
  3970   30000A  FF                 	db	255
  3971                           
  3972                           ;Config register CONFIG6H @ 0x30000B
  3973                           ;	unspecified, using default values
  3974                           ;	Boot Block Table Read Protection bit
  3975                           ;	EBTRB = 0x1, unprogrammed default
  3976   30000B                     	org	3145739
  3977   30000B  FF                 	db	255
  3978                           tosu	equ	0xFFF
  3979                           tosh	equ	0xFFE
  3980                           tosl	equ	0xFFD
  3981                           stkptr	equ	0xFFC
  3982                           pclatu	equ	0xFFB
  3983                           pclath	equ	0xFFA
  3984                           pcl	equ	0xFF9
  3985                           tblptru	equ	0xFF8
  3986                           tblptrh	equ	0xFF7
  3987                           tblptrl	equ	0xFF6
  3988                           tablat	equ	0xFF5
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           indf0	equ	0xFEF
  3992                           postinc0	equ	0xFEE
  3993                           postdec0	equ	0xFED
  3994                           preinc0	equ	0xFEC
  3995                           plusw0	equ	0xFEB
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           postinc1	equ	0xFE6
  4001                           postdec1	equ	0xFE5
  4002                           preinc1	equ	0xFE4
  4003                           plusw1	equ	0xFE3
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           bsr	equ	0xFE0
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           postdec2	equ	0xFDD
  4010                           preinc2	equ	0xFDC
  4011                           plusw2	equ	0xFDB
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        41
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      94
    BANK0           160     41     144
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2617$buffer	PTR unsigned char  size(2) Largest target is 0

    S2617$source	PTR const unsigned char  size(2) Largest target is 0

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(COMRAM[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(BANK0[41]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendRGBCvalSerial4
    _sendRGBCvalSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sendRGBCvalSerial4

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    5786
                                             54 COMRAM    28    28      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                 _sendRGBCvalSerial4
 ---------------------------------------------------------------------------------
 (1) _sendRGBCvalSerial4                                  42    41      1    4217
                                             53 COMRAM     1     0      1
                                              0 BANK0     41    41      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11    3632
                                             27 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2961
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2611
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     616
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendRGBCvalSerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      58        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      56        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      61        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 06 12:34:21 2024

                 _turn180Delay 00D0                 _color_read_Red 1554                _color_read_Blue 1644  
              _trail_timer_low 008F                             l27 17B6                             l61 1788  
                           l70 1692                             l64 1870                             l73 15F2  
                           l67 15A2                             l76 1642                             l79 1552  
                 ___awdiv@sign 0006               _trail_timer_high 00DC               _color_read_Clear 15F4  
             _color_read_Green 15A4                            l152 1378                            l250 17E2  
                          l403 188E                            l412 1892                            l253 1808  
                          l421 1448                            l262 18DE                            l247 17E0  
                          l415 18A6                            l256 18E8                            l432 14A6  
                          l265 18B2                            l259 18D4                            l268 1720  
                          l642 1850                            l651 18BE                            l648 18CA  
                          l922 1242                            l909 10D8                            _ISR 0008  
                          u960 1028                            u961 1024                            u970 1042  
                          u971 103E                            u980 1068                            u981 1064  
                          u990 1086                            u991 1082                            _abs 1722  
                 ___awmod@sign 0006                            wreg 0FE8                    _squareDelay 00CC  
                         ?_ISR 0001                           ?_abs 0007                           l1411 1754  
                         l1403 14F4                           l2300 108C                           l1404 14FC  
                         l2302 10A2                           l2310 10B8                           l1423 1192  
                         l2312 10C8                           l2304 10AA                           l2320 1198  
                         l1408 173C                           l2314 10D0                           l2306 10AC  
                         l2330 11C8                           l2322 11A6                           l1434 18F0  
                         l2308 10B2                           l2340 120E                           l2332 11DA  
                         l2324 11AE                           l2500 0F88                           l1356 16DE  
                         l2350 123A                           l2342 1216                           l2334 11E2  
                         l2326 11B2                           l2318 1194                           l2510 0FD6  
                         l2502 0F90                           l2600 18C6                           l2280 1030  
                         l2344 121C                           l2336 11EA                           l2328 11C0  
                         l2360 1104                           l2504 0FAE                           l2610 17B8  
                         l2522 18E0                           l2530 18D6                           l2290 1056  
                         l2282 1034                           l2274 1016                           l2338 11F8  
                         l2346 1222                           l2370 1730                           l2362 1120  
                         l2354 10DA                           l2506 0FB0                           l2514 0FE2  
                         l2602 14A8                           l2620 17CE                           l2612 17C2  
                         l2460 17F2                           l2524 18E4                           l2532 18DA  
                         l2540 16E6                           l2292 1068                           l2284 1042  
                         l2276 101A                           l2348 1232                           l2364 1152  
                         l2356 10EA                           l2516 1004                           l2508 0FCE  
                         l2604 14AC                           l1397 0FC2                           l2614 17C8  
                         l2526 18AA                           l2622 1854                           l2542 16EE  
                         l2534 18CC                           l2630 1644                           l2294 1070  
                         l2286 104A                           l2278 1028                           l2358 10FA  
                         l2518 100C                           l1398 1014                           l2470 0E58  
                         l2462 0E14                           l2606 14BA                           l2616 17CA  
                         l2528 18AE                           l2544 16F6                           l2536 18D0  
                         l2632 168A                           l2624 1554                           l2800 135E  
                         l2296 1078                           l2288 104E                           l2368 1722  
                         l2480 0EBE                           l2472 0E5C                           l2464 0E1C  
                         l2608 14D4                           l2618 17CC                           l2458 17E2  
                         l2546 171C                           l2538 16E2                           l2642 15F4  
                         l2626 159A                           l2802 1360                           l2650 13EC  
                         l2298 1086                           l2490 0F34                           l2482 0EC8  
                         l2474 0E66                           l2466 0E42                           l2548 171E  
                         l2644 163A                           l2636 15A4                           l2804 136A  
                         l2652 1412                           l2492 0F46                           l2484 0EE0  
                         l2476 0E86                           l2468 0E4A                           l2660 16A8  
                         l2638 15EA                           l2806 136C                           l2654 1416  
                         l2494 0F56                           l2486 0F14                           l2478 0EA6  
                         l2662 16B0                           l2910 1250                           l2808 1376  
                         l2840 188A                           l2832 1872                           l2648 13E8  
                         l2496 0F66                           l2488 0F30                           l2664 16C8  
                         l2656 1694                           l2920 1284                           l2912 1258  
                         l2770 18B4                           l2850 1842                           l2842 188C  
                         l2834 187C                           l2594 1892                           l2498 0F76  
                         l2666 16D6                           l2658 16A0                           l2930 12A8  
                         l2922 128C                           l2914 1260                           l2852 1846  
                         l2844 182E                           l2772 178A                           l2780 1774  
                         l2836 187E                           l2596 18A2                           l2860 144A  
                         l2940 12B2                           l2932 12AA                           l2924 129C  
                         l2916 1274                           l2908 1244                           l2598 18C2  
                         l2854 1848                           l2846 1836                           l2782 177E  
                         l2774 1756                           l2790 1320                           l2838 1888  
                         l2862 149C                           l2950 12CA                           l2942 12B4  
                         l2934 12AC                           l2926 12A0                           l2918 127C  
                         l2856 184C                           l2848 1838                           l2776 175A  
                         l2784 14FE                           l2792 1324                           l2944 12B8  
                         l2936 12AE                           l2928 12A4                           l2858 184E  
                         l2778 1764                           l2794 1348                           l2786 12EA  
                         l2946 12BA                           l2938 12B0                           l2796 1352  
                         l2788 12FA                           l2948 12C2                           l2798 1354  
                         STR_2 0E0F                           STR_5 0E01                           u1000 10A2  
                         u1001 109E                           u1010 10C8                           u1011 10C4  
                         u1020 11A6                           u1100 1120                           u1021 11A2  
                         u1101 111C                           u1030 11C0                           u1110 1152  
                         u1031 11BC                           u1111 114E                           u1040 11DA  
                         u1120 1730                           u1041 11D6                           u1121 172C  
                         u1050 11F8                           u1051 11F4                           u1300 1808  
                         u1060 120E                           u1301 1804                           u1061 120A  
                         u1070 1232                           u1310 0E42                           u1071 122E  
                         u1311 0E3E                           u2007 12D4                           u1080 10EA  
                         u1400 0FC2                           u1320 0E86                           u2017 176A  
                         u1081 10E6                           u1401 0FBE                           u1321 0E82  
                         u1410 170A                           u1090 10FA                           u1330 0EA6  
                         u1411 1702                           u1091 10F6                           u1331 0EA2  
                         u1340 0EDC                           u1341 0ED6                           u1430 18A2  
                         u1350 0EDE                           u1431 189E                           u1360 0F46  
                         u1440 14F4                   _BAUD4CONbits 0EE9                           u1361 0F42  
                         u1441 14F0                           u1290 17F2                           u1450 140E  
                         u1370 0F56                           u1291 17EE                           u1371 0F52  
                         u1428 170C                           u1460 1438                           u1380 0F66  
                         u1381 0F62                           u1470 1448                           u1390 0F76  
                         u1471 1444                           u1391 0F72                           u1457 1404  
                         _T2PR 0FBC                           u1467 142E                           abs@a 0007  
                         _dbuf 013C                           _main 1244                           _prec 0078  
                         _nout 0074                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005F             _sendRGBCvalSerial4 144A                           start 0034  
       __end_of_color_read_Red 15A4                   ___param_bank 0000                          ??_ISR 0001  
          ?_sendRGBCvalSerial4 0036                          ??_abs 0009                  write_timer@tH 0002  
                write_timer@tL 0001                          ?_main 0001             _timer_high_pointer 005C  
              __end_of___awdiv 10DA                __end_of___awmod 1244                ___awdiv@divisor 0003  
                        i2l674 002E                          i2l675 0030                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0010                   vfpfcnvrt@fmt 000C                          _TMR0H 0FD4  
                        _TMR0L 0FD3        __end_of_sendCharSerial4 18A8     __end_of_I2C_2_Master_Start 18EA  
                  _write_timer 18C0     __end_of_I2C_2_Master_Write 18B4                    _turningGear 00DA  
                        _flags 007A           ??_sendRGBCvalSerial4 0037                          _fputc 10DA  
                        _width 0076                          _putch 18F0              _turnRight135Delay 00D2  
                        tablat 0FF5                _turnLeft90Delay 00D8                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 0FD8  
                        wtemp8 0060                __end_of_sprintf 16E0        __end_of_color_read_Blue 1694  
        _I2C_2_Master_RepStart 18CC                ?_color_read_Red 0005                __initialization 137A  
                 __end_of_main 12EA                         ??_main 0037                  __activetblptr 0003  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2252 000A  
                       i2l2254 001A                         i2l2256 002A                         _RG6PPS 0E88  
                vfpfcnvrt@done 000F       __end_of_color_click_init 178A                         _RX4PPS 0E15  
                       _TX4REG 0EE4               _turnLeft135Delay 00D4                  ??_Timer0_init 0003  
                 ?_reset_timer 0001                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001B  
                    ??___awdiv 0005                      ??___awmod 0005                         clear_0 13C0  
                       clear_1 13CC                         clear_2 13D8               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       fputc@c 0001                   __pdataCOMRAM 005A              _timer_low_pointer 005B  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 14FE              ??_initDCmotorsPWM 0003                      ??_sprintf 0027  
            _buggy_lights_init 178A                     __accesstop 0060        __end_of__initialization 13DE  
     __end_of_color_read_Clear 1644       __end_of_color_read_Green 15F4         ?_I2C_2_Master_RepStart 0001  
           ?_buggy_lights_init 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 180A            ??_buggy_lights_init 0001  
                __end_of_fputc 1194                  __end_of_putch 18F2            __end_of_Timer0_init 1852  
                      ??_fputc 0004      __end_of_buggy_lights_init 17B8                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100                     _getRGBCval 14FE  
            _color_writetoaddr 1852                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
          ??_color_writetoaddr 0004                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                        i2u92_40 001A                        i2u92_41 0016  
                      i2u93_40 002A                        i2u93_41 0026                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 1872             _I2C_2_Master_Start 18E0                     _initUSART4 1872  
           _I2C_2_Master_Write 18A8                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 182E        sendStringSerial4@string 0002  
                      ___awdiv 1016                        ___awmod 1194            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0018                   __psmallconst 0E00  
                      __pcinit 137A                        __ramtop 0E00                        __ptext0 1244  
                      __ptext1 144A                        __ptext2 1694                        __ptext3 14A8  
                      __ptext4 0E14                        __ptext5 10DA                        __ptext6 18F0  
                      __ptext7 1722                        __ptext8 1194                        __ptext9 1016  
                    _T2CONbits 0FBD               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 0059                        _sprintf 1694           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 13DE                    ?_getRGBCval 000C  
                      fputc@fp 0003              ?_color_click_init 0001             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 1016                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0013                     ??_vfprintf 001B                _initDCmotorsPWM 12EA  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0060  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 0041                     main@motorR 004A  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                    vfpfcnvrt@ap 000D  
                  vfpfcnvrt@cp 0012                    vfpfcnvrt@fp 000B                  __pidataCOMRAM 18EA  
    sendRGBCvalSerial4@col_val 0036            color_read_Clear@tmp 000A            start_initialization 137A  
                  __end_of_ISR 0034                    __end_of_abs 1756                  _TxBufWriteCnt 0057  
             _turnRight90Delay 00D6      sendRGBCvalSerial4@tempStr 00A3            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 137A                    vfprintf@fmt 0019                    __pdataBANK0 00CC  
                  __pbssCOMRAM 0053                  __pcstackBANK0 00A3                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___awdiv 0001                       ?___awmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 17E2              _I2C_2_Master_Init 17B8              _I2C_2_Master_Read 16E0  
            _I2C_2_Master_Stop 18D6                   _RxBufReadCnt 0058             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _headbuttDelay 00CE       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 001C  
                    _rampDelay 005E                   ??_getRGBCval 000D              _sendStringSerial4 13E8  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                  ??_reset_timer 0003  
                     _PIR0bits 0E33                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                      _returning 0055                      _vfpfcnvrt 0E14  
    __end_of_I2C_2_Master_Idle 180A      __end_of_I2C_2_Master_Init 17E2      __end_of_I2C_2_Master_Read 1722  
    __end_of_I2C_2_Master_Stop 18E0    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 1554  
   __end_of_sendRGBCvalSerial4 14A8              ??_color_read_Blue 0007                   _TxBufReadCnt 0056  
                   vfpfcnvrt@c 0017                      copy_data0 138E                      copy_data1 13AE  
    __end_of_sendStringSerial4 144A  __end_of_I2C_2_Master_RepStart 18D6             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001A  
                     __Lrparam 0000                     vfprintf@fp 0018                     ?_vfpfcnvrt 000B  
          __end_of_reset_timer 18C0                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 001E                     sprintf@ret 0027                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6             __end_of_initUSART4 1890                       __ptext10 13E8  
                     __ptext11 1890                       __ptext20 16E0                       __ptext12 1872  
                     __ptext21 1756                       __ptext13 12EA                       __ptext30 18B4  
                     __ptext22 1852                       __ptext14 14FE                       __ptext31 18C0  
                     __ptext23 18A8                       __ptext15 1554                       __ptext24 18D6  
                     __ptext16 15A4                       __ptext25 18E0                       __ptext17 15F4  
                     __ptext26 17E2                       __ptext18 1644                       __ptext27 17B8  
                     __ptext19 18CC                       __ptext28 178A                       __ptext29 182E  
                  getRGBCval@p 000C            main@measured_colour 0039                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 005F                       _vfprintf 14A8                     _INTCONbits 0FF2  
                ??_write_timer 0002                       intlevel2 0000                      sprintf@ap 0029  
                 _topGearRight 00DB              _manoeuvre_pointer 005A                    _reset_timer 18B4  
                  ??_vfpfcnvrt 000E               _color_click_init 1756                    _topGearLeft 005D  
                     sprintf@f 002A                       sprintf@s 001C                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                _trail_manoeuvre 007B                    _return_flag 0054  
              _manoeuvre_count 0053                     _TX4STAbits 0EE8                _sendCharSerial4 1890  
          __end_of_write_timer 18CC  
