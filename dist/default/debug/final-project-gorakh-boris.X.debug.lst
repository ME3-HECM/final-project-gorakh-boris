

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 07 11:54:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 21/07/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataCOMRAM
   102   001E8A                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for _timer_low_pointer
   106   001E8A  70                 	db	low _trail_timer_low
   107   001E8B  01                 	db	high _trail_timer_low
   108                           
   109                           ;initializer for _squareDelay
   110   001E8C  012C               	dw	300
   111                           
   112                           ;initializer for _headbuttDelay
   113   001E8E  0046               	dw	70
   114                           
   115                           ;initializer for _turn180Delay
   116   001E90  01FE               	dw	510
   117                           
   118                           ;initializer for _turnRight135Delay
   119   001E92  012C               	dw	300
   120                           
   121                           ;initializer for _turnLeft135Delay
   122   001E94  012C               	dw	300
   123                           
   124                           ;initializer for _turnRight90Delay
   125   001E96  00AF               	dw	175
   126                           
   127                           ;initializer for _turnLeft90Delay
   128   001E98  00AF               	dw	175
   129                           
   130                           ;initializer for _timer_high_pointer
   131   001E9A  D9                 	db	low _trail_timer_high
   132                           
   133                           ;initializer for _turningGear
   134   001E9B  2A                 	db	42
   135                           
   136                           ;initializer for _topGearRight
   137   001E9C  14                 	db	20
   138                           
   139                           ;initializer for _topGearLeft
   140   001E9D  14                 	db	20
   141                           
   142                           ;initializer for _rampDelay
   143   001E9E  08                 	db	8
   144                           
   145                           	psect	idataBANK0
   146   001E74                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _manoeuvre_pointer
   150   001E74  5C                 	db	low _trail_manoeuvre
   151   001E75  01                 	db	high _trail_manoeuvre
   152                           
   153                           ;initializer for _trail_timer_high
   154   001E76  01                 	db	1
   155   001E77  02                 	db	2
   156   001E78  03                 	db	3
   157   001E79  04                 	db	4
   158   001E7A  05                 	db	5
   159   001E7B  06                 	db	6
   160   001E7C  07                 	db	7
   161   001E7D  08                 	db	8
   162   001E7E  09                 	db	9
   163   001E7F  00                 	db	0
   164   001E80  01                 	db	1
   165   001E81  02                 	db	2
   166   001E82  03                 	db	3
   167   001E83  04                 	db	4
   168   001E84  05                 	db	5
   169   001E85  06                 	db	6
   170   001E86  07                 	db	7
   171   001E87  08                 	db	8
   172   001E88  09                 	db	9
   173   001E89  00                 	db	0
   174                           
   175                           	psect	idataBANK1
   176   001D30                     __pidataBANK1:
   177                           	callstack 0
   178                           
   179                           ;initializer for _trail_manoeuvre
   180   001D30  01                 	db	1
   181   001D31  02                 	db	2
   182   001D32  03                 	db	3
   183   001D33  04                 	db	4
   184   001D34  05                 	db	5
   185   001D35  06                 	db	6
   186   001D36  07                 	db	7
   187   001D37  08                 	db	8
   188   001D38  09                 	db	9
   189   001D39  00                 	db	0
   190   001D3A  01                 	db	1
   191   001D3B  02                 	db	2
   192   001D3C  03                 	db	3
   193   001D3D  04                 	db	4
   194   001D3E  05                 	db	5
   195   001D3F  06                 	db	6
   196   001D40  07                 	db	7
   197   001D41  08                 	db	8
   198   001D42  09                 	db	9
   199   001D43  00                 	db	0
   200                           
   201                           ;initializer for _trail_timer_low
   202   001D44  01                 	db	1
   203   001D45  02                 	db	2
   204   001D46  03                 	db	3
   205   001D47  04                 	db	4
   206   001D48  05                 	db	5
   207   001D49  06                 	db	6
   208   001D4A  07                 	db	7
   209   001D4B  08                 	db	8
   210   001D4C  09                 	db	9
   211   001D4D  00                 	db	0
   212   001D4E  01                 	db	1
   213   001D4F  02                 	db	2
   214   001D50  03                 	db	3
   215   001D51  04                 	db	4
   216   001D52  05                 	db	5
   217   001D53  06                 	db	6
   218   001D54  07                 	db	7
   219   001D55  08                 	db	8
   220   001D56  09                 	db	9
   221   001D57  00                 	db	0
   222   000000                     _TX4REG	set	3812
   223   000000                     _RC4STAbits	set	3815
   224   000000                     _SP4BRGH	set	3814
   225   000000                     _LATEbits	set	3965
   226   000000                     _TRISEbits	set	3973
   227   000000                     _LATGbits	set	3967
   228   000000                     _TRISGbits	set	3975
   229   000000                     _LATFbits	set	3966
   230   000000                     _LATHbits	set	3968
   231   000000                     _TRISFbits	set	3974
   232   000000                     _TRISHbits	set	3976
   233   000000                     _SSP2CON2bits	set	3802
   234   000000                     _RX4PPS	set	3605
   235   000000                     _SSP2CLKPPS	set	3612
   236   000000                     _SSP2DATPPS	set	3613
   237   000000                     _RC7PPS	set	3689
   238   000000                     _RE2PPS	set	3700
   239   000000                     _LATAbits	set	3961
   240   000000                     _LATDbits	set	3964
   241   000000                     _TRISDbits	set	3972
   242   000000                     _PORTFbits	set	3982
   243   000000                     _T2PR	set	4028
   244   000000                     _T2CONbits	set	4029
   245   000000                     _CCPR2H	set	4006
   246   000000                     _CCPR1H	set	4010
   247   000000                     _TRISCbits	set	3971
   248   000000                     _TRISAbits	set	3969
   249   000000                     _LATCbits	set	3963
   250   000000                     _RE4PPS	set	3702
   251   000000                     _RG6PPS	set	3720
   252   000000                     _RD5PPS	set	3695
   253   000000                     _ANSELDbits	set	3751
   254   000000                     _SSP2ADD	set	3798
   255   000000                     _SSP2CON1bits	set	3801
   256   000000                     _CCPR4H	set	3873
   257   000000                     _CCPR3H	set	3877
   258   000000                     _TMR0L	set	4051
   259   000000                     _TMR0H	set	4052
   260   000000                     _T0CON0bits	set	4053
   261   000000                     _T0CON1bits	set	4054
   262   000000                     _T2CLKCONbits	set	4031
   263   000000                     _T2HLTbits	set	4030
   264   000000                     _CCP1CONbits	set	4011
   265   000000                     _CCPTMRS0bits	set	4013
   266   000000                     _CCP2CONbits	set	4007
   267   000000                     _CCP3CONbits	set	3878
   268   000000                     _CCP4CONbits	set	3874
   269   000000                     _RC4REG	set	3811
   270   000000                     _SP4BRGL	set	3813
   271   000000                     _TX4STAbits	set	3816
   272   000000                     _BAUD4CONbits	set	3817
   273   000000                     _SSP2CON2	set	3802
   274   000000                     _SSP2STAT	set	3800
   275   000000                     _ANSELFbits	set	3764
   276   000000                     _SSP2BUF	set	3797
   277   000000                     _PIE0bits	set	3625
   278   000000                     _PIE4bits	set	3629
   279   000000                     _PIR4bits	set	3639
   280   000000                     _RC0PPS	set	3682
   281   000000                     _RD6PPS	set	3696
   282   000000                     _PIR0bits	set	3635
   283   000000                     _INTCONbits	set	4082
   284                           
   285                           	psect	smallconst
   286   000E00                     __psmallconst:
   287                           	callstack 0
   288   000E00  00                 	db	0
   289   000E01                     STR_1:
   290   000E01  25                 	db	37
   291   000E02  64                 	db	100	;'d'
   292   000E03  20                 	db	32
   293   000E04  25                 	db	37
   294   000E05  64                 	db	100	;'d'
   295   000E06  20                 	db	32
   296   000E07  25                 	db	37
   297   000E08  64                 	db	100	;'d'
   298   000E09  20                 	db	32
   299   000E0A  25                 	db	37
   300   000E0B  64                 	db	100	;'d'
   301   000E0C  20                 	db	32
   302   000E0D  25                 	db	37
   303   000E0E  64                 	db	100	;'d'
   304   000E0F  20                 	db	32
   305   000E10  25                 	db	37
   306   000E11  64                 	db	100	;'d'
   307   000E12  20                 	db	32
   308   000E13  25                 	db	37
   309   000E14  64                 	db	100	;'d'
   310   000E15  20                 	db	32
   311   000E16  0D                 	db	13
   312   000E17  00                 	db	0
   313   000E18                     STR_3:
   314   000E18  25                 	db	37
   315   000E19  64                 	db	100	;'d'
   316   000E1A  00                 	db	0
   317   000E1B  00                 	db	0	; dummy byte at the end
   318   000000                     
   319                           ; #config settings
   320                           
   321                           	psect	cinit
   322   001780                     __pcinit:
   323                           	callstack 0
   324   001780                     start_initialization:
   325                           	callstack 0
   326   001780                     __initialization:
   327                           	callstack 0
   328                           
   329                           ; Initialize objects allocated to BANK1 (40 bytes)
   330                           ; load TBLPTR registers with __pidataBANK1
   331   001780  0E30               	movlw	low __pidataBANK1
   332   001782  6EF6               	movwf	tblptrl,c
   333   001784  0E1D               	movlw	high __pidataBANK1
   334   001786  6EF7               	movwf	tblptrh,c
   335   001788  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   336   00178A  6EF8               	movwf	tblptru,c
   337   00178C  EE01  F05C         	lfsr	0,__pdataBANK1
   338   001790  EE10 F028          	lfsr	1,40
   339   001794                     copy_data0:
   340   001794  0009               	tblrd		*+
   341   001796  CFF5 FFEE          	movff	tablat,postinc0
   342   00179A  50E5               	movf	postdec1,w,c
   343   00179C  50E1               	movf	fsr1l,w,c
   344   00179E  E1FA               	bnz	copy_data0
   345                           
   346                           ; Initialize objects allocated to BANK0 (22 bytes)
   347                           ; load TBLPTR registers with __pidataBANK0
   348   0017A0  0E74               	movlw	low __pidataBANK0
   349   0017A2  6EF6               	movwf	tblptrl,c
   350   0017A4  0E1E               	movlw	high __pidataBANK0
   351   0017A6  6EF7               	movwf	tblptrh,c
   352   0017A8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   353   0017AA  6EF8               	movwf	tblptru,c
   354   0017AC  EE00  F0D7         	lfsr	0,__pdataBANK0
   355   0017B0  EE10 F016          	lfsr	1,22
   356   0017B4                     copy_data1:
   357   0017B4  0009               	tblrd		*+
   358   0017B6  CFF5 FFEE          	movff	tablat,postinc0
   359   0017BA  50E5               	movf	postdec1,w,c
   360   0017BC  50E1               	movf	fsr1l,w,c
   361   0017BE  E1FA               	bnz	copy_data1
   362                           
   363                           ; Initialize objects allocated to COMRAM (21 bytes)
   364                           ; load TBLPTR registers with __pidataCOMRAM
   365   0017C0  0E8A               	movlw	low __pidataCOMRAM
   366   0017C2  6EF6               	movwf	tblptrl,c
   367   0017C4  0E1E               	movlw	high __pidataCOMRAM
   368   0017C6  6EF7               	movwf	tblptrh,c
   369   0017C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   370   0017CA  6EF8               	movwf	tblptru,c
   371   0017CC  EE00  F032         	lfsr	0,__pdataCOMRAM
   372   0017D0  EE10 F015          	lfsr	1,21
   373   0017D4                     copy_data2:
   374   0017D4  0009               	tblrd		*+
   375   0017D6  CFF5 FFEE          	movff	tablat,postinc0
   376   0017DA  50E5               	movf	postdec1,w,c
   377   0017DC  50E1               	movf	fsr1l,w,c
   378   0017DE  E1FA               	bnz	copy_data2
   379                           
   380                           ; Clear objects allocated to BANK1 (92 bytes)
   381   0017E0  EE01  F000         	lfsr	0,__pbssBANK1
   382   0017E4  0E5C               	movlw	92
   383   0017E6                     clear_0:
   384   0017E6  6AEE               	clrf	postinc0,c
   385   0017E8  06E8               	decf	wreg,f,c
   386   0017EA  E1FD               	bnz	clear_0
   387                           
   388                           ; Clear objects allocated to BANK0 (22 bytes)
   389   0017EC  EE00  F0C1         	lfsr	0,__pbssBANK0
   390   0017F0  0E16               	movlw	22
   391   0017F2                     clear_1:
   392   0017F2  6AEE               	clrf	postinc0,c
   393   0017F4  06E8               	decf	wreg,f,c
   394   0017F6  E1FD               	bnz	clear_1
   395                           
   396                           ; Clear objects allocated to COMRAM (10 bytes)
   397   0017F8  EE00  F047         	lfsr	0,__pbssCOMRAM
   398   0017FC  0E0A               	movlw	10
   399   0017FE                     clear_2:
   400   0017FE  6AEE               	clrf	postinc0,c
   401   001800  06E8               	decf	wreg,f,c
   402   001802  E1FD               	bnz	clear_2
   403   001804                     end_of_initialization:
   404                           	callstack 0
   405   001804                     __end_of__initialization:
   406                           	callstack 0
   407   001804  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   408   001806  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   409   001808  0100               	movlb	0
   410   00180A  EFA7  F009         	goto	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMRAM
   413   000047                     __pbssCOMRAM:
   414                           	callstack 0
   415   000047                     _nout:
   416                           	callstack 0
   417   000047                     	ds	2
   418   000049                     _prec:
   419                           	callstack 0
   420   000049                     	ds	2
   421   00004B                     _flags:
   422                           	callstack 0
   423   00004B                     	ds	1
   424   00004C                     _backtrack:
   425                           	callstack 0
   426   00004C                     	ds	1
   427   00004D                     _TxBufReadCnt:
   428                           	callstack 0
   429   00004D                     	ds	1
   430   00004E                     _TxBufWriteCnt:
   431                           	callstack 0
   432   00004E                     	ds	1
   433   00004F                     _RxBufReadCnt:
   434                           	callstack 0
   435   00004F                     	ds	1
   436   000050                     _RxBufWriteCnt:
   437                           	callstack 0
   438   000050                     	ds	1
   439                           
   440                           	psect	dataCOMRAM
   441   000032                     __pdataCOMRAM:
   442                           	callstack 0
   443   000032                     _timer_low_pointer:
   444                           	callstack 0
   445   000032                     	ds	2
   446   000034                     _squareDelay:
   447                           	callstack 0
   448   000034                     	ds	2
   449   000036                     _headbuttDelay:
   450                           	callstack 0
   451   000036                     	ds	2
   452   000038                     _turn180Delay:
   453                           	callstack 0
   454   000038                     	ds	2
   455   00003A                     _turnRight135Delay:
   456                           	callstack 0
   457   00003A                     	ds	2
   458   00003C                     _turnLeft135Delay:
   459                           	callstack 0
   460   00003C                     	ds	2
   461   00003E                     _turnRight90Delay:
   462                           	callstack 0
   463   00003E                     	ds	2
   464   000040                     _turnLeft90Delay:
   465                           	callstack 0
   466   000040                     	ds	2
   467   000042                     _timer_high_pointer:
   468                           	callstack 0
   469   000042                     	ds	1
   470   000043                     _turningGear:
   471                           	callstack 0
   472   000043                     	ds	1
   473   000044                     _topGearRight:
   474                           	callstack 0
   475   000044                     	ds	1
   476   000045                     _topGearLeft:
   477                           	callstack 0
   478   000045                     	ds	1
   479   000046                     _rampDelay:
   480                           	callstack 0
   481   000046                     	ds	1
   482                           
   483                           	psect	bssBANK0
   484   0000C1                     __pbssBANK0:
   485                           	callstack 0
   486   0000C1                     _EUSART4RXbuf:
   487                           	callstack 0
   488   0000C1                     	ds	20
   489   0000D5                     _width:
   490                           	callstack 0
   491   0000D5                     	ds	2
   492                           
   493                           	psect	dataBANK0
   494   0000D7                     __pdataBANK0:
   495                           	callstack 0
   496   0000D7                     _manoeuvre_pointer:
   497                           	callstack 0
   498   0000D7                     	ds	2
   499   0000D9                     _trail_timer_high:
   500                           	callstack 0
   501   0000D9                     	ds	20
   502                           
   503                           	psect	bssBANK1
   504   000100                     __pbssBANK1:
   505                           	callstack 0
   506   000100                     _EUSART4TXbuf:
   507                           	callstack 0
   508   000100                     	ds	60
   509   00013C                     _dbuf:
   510                           	callstack 0
   511   00013C                     	ds	32
   512                           
   513                           	psect	dataBANK1
   514   00015C                     __pdataBANK1:
   515                           	callstack 0
   516   00015C                     _trail_manoeuvre:
   517                           	callstack 0
   518   00015C                     	ds	20
   519   000170                     _trail_timer_low:
   520                           	callstack 0
   521   000170                     	ds	20
   522                           
   523                           	psect	cstackBANK0
   524   000060                     __pcstackBANK0:
   525                           	callstack 0
   526   000060                     sprintf@ret:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x0
   530   000060                     	ds	2
   531   000062                     sprintf@ap:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x2
   535   000062                     	ds	1
   536   000063                     sprintf@f:
   537                           	callstack 0
   538                           
   539                           ; 12 bytes @ 0x3
   540   000063                     	ds	12
   541   00006F                     main@display:
   542                           	callstack 0
   543                           
   544                           ; 50 bytes @ 0xF
   545   00006F                     	ds	50
   546   0000A1                     main@motorL:
   547                           	callstack 0
   548                           
   549                           ; 9 bytes @ 0x41
   550   0000A1                     	ds	9
   551   0000AA                     main@motorR:
   552                           	callstack 0
   553                           
   554                           ; 9 bytes @ 0x4A
   555   0000AA                     	ds	9
   556   0000B3                     main@readHSV:
   557                           	callstack 0
   558                           
   559                           ; 6 bytes @ 0x53
   560   0000B3                     	ds	6
   561   0000B9                     main@readRGBC:
   562                           	callstack 0
   563                           
   564                           ; 8 bytes @ 0x59
   565   0000B9                     	ds	8
   566                           
   567                           	psect	cstackCOMRAM
   568   000001                     __pcstackCOMRAM:
   569                           	callstack 0
   570   000001                     ??_getCharFromTxBuf:
   571   000001                     putCharToRxBuf@byte:
   572                           	callstack 0
   573   000001                     
   574                           ; 1 bytes @ 0x0
   575   000001                     	ds	2
   576   000003                     ??_HighISR:
   577                           
   578                           ; 1 bytes @ 0x2
   579   000003                     	ds	2
   580   000005                     ??_I2C_2_Master_Idle:
   581   000005                     ?_max:
   582                           	callstack 0
   583   000005                     ?_min:
   584                           	callstack 0
   585   000005                     ?___wmul:
   586                           	callstack 0
   587   000005                     ?___awdiv:
   588                           	callstack 0
   589   000005                     ?___awmod:
   590                           	callstack 0
   591   000005                     putCharToTxBuf@byte:
   592                           	callstack 0
   593   000005                     max@a:
   594                           	callstack 0
   595   000005                     min@a:
   596                           	callstack 0
   597   000005                     initDCmotorsPWM@PWMperiod:
   598                           	callstack 0
   599   000005                     ___wmul@multiplier:
   600                           	callstack 0
   601   000005                     ___awdiv@dividend:
   602                           	callstack 0
   603   000005                     ___awmod@dividend:
   604                           	callstack 0
   605   000005                     fputc@c:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x4
   609   000005                     	ds	1
   610   000006                     ??_I2C_2_Master_Read:
   611   000006                     I2C_2_Master_Write@data_byte:
   612                           	callstack 0
   613   000006                     TxBufferedString@string:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x5
   617   000006                     	ds	1
   618   000007                     color_writetoaddr@value:
   619                           	callstack 0
   620   000007                     I2C_2_Master_Read@ack:
   621                           	callstack 0
   622   000007                     fputc@fp:
   623                           	callstack 0
   624   000007                     max@b:
   625                           	callstack 0
   626   000007                     min@b:
   627                           	callstack 0
   628   000007                     ___wmul@multiplicand:
   629                           	callstack 0
   630   000007                     ___awdiv@divisor:
   631                           	callstack 0
   632   000007                     ___awmod@divisor:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x6
   636   000007                     	ds	1
   637   000008                     ??_fputc:
   638   000008                     color_writetoaddr@address:
   639                           	callstack 0
   640   000008                     I2C_2_Master_Read@tmp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x7
   644   000008                     	ds	1
   645   000009                     ??_color_click_init:
   646   000009                     ??_max:
   647   000009                     ??_min:
   648   000009                     ?_color_read_Red:
   649                           	callstack 0
   650   000009                     ?_color_read_Blue:
   651                           	callstack 0
   652   000009                     ?_color_read_Green:
   653                           	callstack 0
   654   000009                     ?_color_read_Clear:
   655                           	callstack 0
   656   000009                     ___awdiv@counter:
   657                           	callstack 0
   658   000009                     ___awmod@counter:
   659                           	callstack 0
   660   000009                     ___wmul@product:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x8
   664   000009                     	ds	1
   665   00000A                     ___awdiv@sign:
   666                           	callstack 0
   667   00000A                     ___awmod@sign:
   668                           	callstack 0
   669   00000A                     max@max_val:
   670                           	callstack 0
   671   00000A                     min@min_val:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x9
   675   00000A                     	ds	1
   676   00000B                     ??_color_read_Red:
   677   00000B                     ??_color_read_Blue:
   678   00000B                     ??_color_read_Green:
   679   00000B                     ??_color_read_Clear:
   680   00000B                     ?_abs:
   681                           	callstack 0
   682   00000B                     ?___lwdiv:
   683                           	callstack 0
   684   00000B                     ___awdiv@quotient:
   685                           	callstack 0
   686   00000B                     ___lwdiv@dividend:
   687                           	callstack 0
   688   00000B                     abs@a:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0xA
   692   00000B                     	ds	2
   693   00000D                     ??_abs:
   694   00000D                     ___lwdiv@divisor:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0xC
   698   00000D                     	ds	1
   699   00000E                     color_read_Red@tmp:
   700                           	callstack 0
   701   00000E                     color_read_Blue@tmp:
   702                           	callstack 0
   703   00000E                     color_read_Green@tmp:
   704                           	callstack 0
   705   00000E                     color_read_Clear@tmp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0xD
   709   00000E                     	ds	1
   710   00000F                     ?_vfpfcnvrt:
   711                           	callstack 0
   712   00000F                     vfpfcnvrt@fp:
   713                           	callstack 0
   714   00000F                     ___lwdiv@quotient:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xE
   718   00000F                     	ds	1
   719   000010                     getRGBCval@p:
   720                           	callstack 0
   721   000010                     vfpfcnvrt@fmt:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0xF
   725   000010                     	ds	1
   726   000011                     ___lwdiv@counter:
   727                           	callstack 0
   728   000011                     vfpfcnvrt@ap:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x10
   732   000011                     	ds	1
   733   000012                     ??_vfpfcnvrt:
   734   000012                     ?___lwmod:
   735                           	callstack 0
   736   000012                     ___lwmod@dividend:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x11
   740   000012                     	ds	1
   741   000013                     vfpfcnvrt@done:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x12
   745   000013                     	ds	1
   746   000014                     ___lwmod@divisor:
   747                           	callstack 0
   748   000014                     vfpfcnvrt@cnt:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x13
   752   000014                     	ds	2
   753   000016                     ___lwmod@counter:
   754                           	callstack 0
   755   000016                     vfpfcnvrt@cp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x15
   759   000016                     	ds	1
   760   000017                     getHSVval@p:
   761                           	callstack 0
   762   000017                     vfpfcnvrt@convarg:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x16
   766   000017                     	ds	1
   767   000018                     ??_getHSVval:
   768                           
   769                           ; 1 bytes @ 0x17
   770   000018                     	ds	3
   771   00001B                     vfpfcnvrt@c:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1A
   775   00001B                     	ds	1
   776   00001C                     ?_vfprintf:
   777                           	callstack 0
   778   00001C                     vfprintf@fp:
   779                           	callstack 0
   780   00001C                     getHSVval@minRGB:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x1B
   784   00001C                     	ds	1
   785   00001D                     vfprintf@fmt:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x1C
   789   00001D                     	ds	1
   790   00001E                     vfprintf@ap:
   791                           	callstack 0
   792   00001E                     _getHSVval$3064:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x1D
   796   00001E                     	ds	1
   797   00001F                     vfprintf@cfmt:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x1E
   801   00001F                     	ds	1
   802   000020                     ?_sprintf:
   803                           	callstack 0
   804   000020                     sprintf@s:
   805                           	callstack 0
   806   000020                     _getHSVval$3065:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x1F
   810   000020                     	ds	1
   811   000021                     sprintf@fmt:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x20
   815   000021                     	ds	1
   816   000022                     getHSVval@saturation:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x21
   820   000022                     	ds	2
   821   000024                     getHSVval@hue:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x23
   825   000024                     	ds	2
   826   000026                     _getHSVval$3066:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x25
   830   000026                     	ds	2
   831   000028                     getHSVval@range:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x27
   835   000028                     	ds	2
   836   00002A                     getHSVval@maxRGB:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x29
   840   00002A                     	ds	2
   841   00002C                     getHSVval@tempRGBC:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x2B
   845   00002C                     	ds	4
   846   000030                     ??_main:
   847                           
   848                           ; 1 bytes @ 0x2F
   849   000030                     	ds	2
   850                           
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 27 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  display        50   15[BANK0 ] unsigned char [50]
   861 ;;  motorR          9   74[BANK0 ] struct DC_motor
   862 ;;  motorL          9   65[BANK0 ] struct DC_motor
   863 ;;  readRGBC        8   89[BANK0 ] struct RGBC_val
   864 ;;  readHSV         6   83[BANK0 ] struct HSV_val
   865 ;;  PWMcycle        2    0        unsigned int 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Totals:         2      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;Total ram usage:       84 bytes
   880 ;; Hardware stack levels required when called: 7
   881 ;; This function calls:
   882 ;;		_Interrupts_init
   883 ;;		_Timer0_init
   884 ;;		_TxBufferedString
   885 ;;		_buggy_lights_init
   886 ;;		_color_click_init
   887 ;;		_getHSVval
   888 ;;		_getRGBCval
   889 ;;		_initDCmotorsPWM
   890 ;;		_initUSART4
   891 ;;		_sendTxBuf
   892 ;;		_sprintf
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899   00134E                     __ptext0:
   900                           	callstack 0
   901   00134E                     _main:
   902                           	callstack 24
   903   00134E                     
   904                           ;main.c: 28:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   905   00134E  0E52               	movlw	82
   906   001350  6E31               	movwf	(??_main+1)^0,c
   907   001352  0E2B               	movlw	43
   908   001354  6E30               	movwf	??_main^0,c
   909   001356  0E00               	movlw	0
   910   001358                     u2197:
   911   001358  2EE8               	decfsz	wreg,f,c
   912   00135A  D7FE               	bra	u2197
   913   00135C  2E30               	decfsz	??_main^0,f,c
   914   00135E  D7FC               	bra	u2197
   915   001360  2E31               	decfsz	(??_main+1)^0,f,c
   916   001362  D7FA               	bra	u2197
   917   001364  D000               	nop2	
   918   001366                     
   919                           ;main.c: 31:     initDCmotorsPWM(PWMcycle);
   920   001366  0E00               	movlw	0
   921   001368  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   922   00136A  0E63               	movlw	99
   923   00136C  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   924   00136E  EC78  F00B         	call	_initDCmotorsPWM	;wreg free
   925   001372                     
   926                           ;main.c: 33:     struct DC_motor motorL, motorR;;main.c: 35:     motorL.power = 0;
   927   001372  0E00               	movlw	0
   928   001374  0100               	movlb	0	; () banked
   929   001376  6FA1               	movwf	main@motorL& (0+255),b
   930   001378                     
   931                           ; BSR set to: 0
   932                           ;main.c: 36:     motorL.direction = 1;
   933   001378  0E01               	movlw	1
   934   00137A  6FA2               	movwf	(main@motorL+1)& (0+255),b
   935   00137C                     
   936                           ; BSR set to: 0
   937                           ;main.c: 37:     motorL.brakemode = 1;
   938   00137C  0E01               	movlw	1
   939   00137E  6FA3               	movwf	(main@motorL+2)& (0+255),b
   940   001380                     
   941                           ; BSR set to: 0
   942                           ;main.c: 38:     motorL.PWMperiod = PWMcycle;
   943   001380  0E00               	movlw	0
   944   001382  6FA5               	movwf	(main@motorL+4)& (0+255),b
   945   001384  0E63               	movlw	99
   946   001386  6FA4               	movwf	(main@motorL+3)& (0+255),b
   947   001388                     
   948                           ; BSR set to: 0
   949                           ;main.c: 39:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   950   001388  0EAA               	movlw	170
   951   00138A  6FA6               	movwf	(main@motorL+5)& (0+255),b
   952   00138C  0E0F               	movlw	15
   953   00138E  6FA7               	movwf	(main@motorL+6)& (0+255),b
   954   001390                     
   955                           ; BSR set to: 0
   956                           ;main.c: 40:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   957   001390  0EA6               	movlw	166
   958   001392  6FA8               	movwf	(main@motorL+7)& (0+255),b
   959   001394  0E0F               	movlw	15
   960   001396  6FA9               	movwf	(main@motorL+8)& (0+255),b
   961   001398                     
   962                           ; BSR set to: 0
   963                           ;main.c: 42:     motorR.power = 0;
   964   001398  0E00               	movlw	0
   965   00139A  6FAA               	movwf	main@motorR& (0+255),b
   966   00139C                     
   967                           ; BSR set to: 0
   968                           ;main.c: 43:     motorR.direction = 1;
   969   00139C  0E01               	movlw	1
   970   00139E  6FAB               	movwf	(main@motorR+1)& (0+255),b
   971   0013A0                     
   972                           ; BSR set to: 0
   973                           ;main.c: 44:     motorR.brakemode = 1;
   974   0013A0  0E01               	movlw	1
   975   0013A2  6FAC               	movwf	(main@motorR+2)& (0+255),b
   976   0013A4                     
   977                           ; BSR set to: 0
   978                           ;main.c: 45:     motorR.PWMperiod = PWMcycle;
   979   0013A4  0E00               	movlw	0
   980   0013A6  6FAE               	movwf	(main@motorR+4)& (0+255),b
   981   0013A8  0E63               	movlw	99
   982   0013AA  6FAD               	movwf	(main@motorR+3)& (0+255),b
   983   0013AC                     
   984                           ; BSR set to: 0
   985                           ;main.c: 46:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   986   0013AC  0E25               	movlw	37
   987   0013AE  6FAF               	movwf	(main@motorR+5)& (0+255),b
   988   0013B0  0E0F               	movlw	15
   989   0013B2  6FB0               	movwf	(main@motorR+6)& (0+255),b
   990   0013B4                     
   991                           ; BSR set to: 0
   992                           ;main.c: 47:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   993   0013B4  0E21               	movlw	33
   994   0013B6  6FB1               	movwf	(main@motorR+7)& (0+255),b
   995   0013B8  0E0F               	movlw	15
   996   0013BA  6FB2               	movwf	(main@motorR+8)& (0+255),b
   997   0013BC                     
   998                           ; BSR set to: 0
   999                           ;main.c: 51:     struct RGBC_val readRGBC;;main.c: 53:     readRGBC.R = 0;
  1000   0013BC  0E00               	movlw	0
  1001   0013BE  6FBA               	movwf	(main@readRGBC+1)& (0+255),b
  1002   0013C0  0E00               	movlw	0
  1003   0013C2  6FB9               	movwf	main@readRGBC& (0+255),b
  1004   0013C4                     
  1005                           ; BSR set to: 0
  1006                           ;main.c: 54:     readRGBC.B = 0;
  1007   0013C4  0E00               	movlw	0
  1008   0013C6  6FBE               	movwf	(main@readRGBC+5)& (0+255),b
  1009   0013C8  0E00               	movlw	0
  1010   0013CA  6FBD               	movwf	(main@readRGBC+4)& (0+255),b
  1011   0013CC                     
  1012                           ; BSR set to: 0
  1013                           ;main.c: 55:     readRGBC.G = 0;
  1014   0013CC  0E00               	movlw	0
  1015   0013CE  6FBC               	movwf	(main@readRGBC+3)& (0+255),b
  1016   0013D0  0E00               	movlw	0
  1017   0013D2  6FBB               	movwf	(main@readRGBC+2)& (0+255),b
  1018   0013D4                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 56:     readRGBC.C = 0;
  1021   0013D4  0E00               	movlw	0
  1022   0013D6  6FC0               	movwf	(main@readRGBC+7)& (0+255),b
  1023   0013D8  0E00               	movlw	0
  1024   0013DA  6FBF               	movwf	(main@readRGBC+6)& (0+255),b
  1025   0013DC                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 59:     struct HSV_val readHSV;;main.c: 61:     readHSV.H = 0;
  1028   0013DC  0E00               	movlw	0
  1029   0013DE  6FB4               	movwf	(main@readHSV+1)& (0+255),b
  1030   0013E0  0E00               	movlw	0
  1031   0013E2  6FB3               	movwf	main@readHSV& (0+255),b
  1032   0013E4                     
  1033                           ; BSR set to: 0
  1034                           ;main.c: 62:     readHSV.S = 0;
  1035   0013E4  0E00               	movlw	0
  1036   0013E6  6FB6               	movwf	(main@readHSV+3)& (0+255),b
  1037   0013E8  0E00               	movlw	0
  1038   0013EA  6FB5               	movwf	(main@readHSV+2)& (0+255),b
  1039   0013EC                     
  1040                           ; BSR set to: 0
  1041                           ;main.c: 63:     readHSV.V = 0;
  1042   0013EC  0E00               	movlw	0
  1043   0013EE  6FB8               	movwf	(main@readHSV+5)& (0+255),b
  1044   0013F0  0E00               	movlw	0
  1045   0013F2  6FB7               	movwf	(main@readHSV+4)& (0+255),b
  1046   0013F4                     
  1047                           ; BSR set to: 0
  1048                           ;main.c: 67:     buggy_lights_init();
  1049   0013F4  EC67  F00D         	call	_buggy_lights_init	;wreg free
  1050   0013F8                     
  1051                           ;main.c: 68:     color_click_init();
  1052   0013F8  EC29  F00E         	call	_color_click_init	;wreg free
  1053   0013FC                     
  1054                           ;main.c: 69:     initUSART4();
  1055   0013FC  EC06  F00F         	call	_initUSART4	;wreg free
  1056   001400                     
  1057                           ;main.c: 70:     Timer0_init();
  1058   001400  ECF6  F00E         	call	_Timer0_init	;wreg free
  1059   001404                     
  1060                           ;main.c: 71:     Interrupts_init();
  1061   001404  EC50  F00F         	call	_Interrupts_init	;wreg free
  1062   001408                     
  1063                           ;main.c: 76:     TRISFbits.TRISF2 = 1;
  1064   001408  8486               	bsf	134,2,c	;volatile
  1065   00140A                     
  1066                           ;main.c: 77:     TRISFbits.TRISF3 = 1;
  1067   00140A  8686               	bsf	134,3,c	;volatile
  1068   00140C                     
  1069                           ;main.c: 79:     ANSELFbits.ANSELF2 = 0;
  1070   00140C  010E               	movlb	14	; () banked
  1071   00140E  95B4               	bcf	180,2,b	;volatile
  1072   001410                     
  1073                           ; BSR set to: 14
  1074                           ;main.c: 80:     ANSELFbits.ANSELF3 = 0;
  1075   001410  97B4               	bcf	180,3,b	;volatile
  1076   001412                     l3383:
  1077                           
  1078                           ;main.c: 100:         if (!PORTFbits.RF2) {
  1079   001412  B48E               	btfsc	142,2,c	;volatile
  1080   001414  EF0E  F00A         	goto	u2151
  1081   001418  EF10  F00A         	goto	u2150
  1082   00141C                     u2151:
  1083   00141C  EF29  F00A         	goto	l3391
  1084   001420                     u2150:
  1085   001420                     
  1086                           ;main.c: 101:             *manoeuvre_pointer = 0;
  1087   001420  C0D7  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1088   001424  C0D8  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1089   001428  6ADF               	clrf	indf2,c
  1090   00142A                     
  1091                           ;main.c: 102:             manoeuvre_pointer ++;
  1092   00142A  0100               	movlb	0	; () banked
  1093   00142C  4BD7               	infsnz	_manoeuvre_pointer& (0+255),f,b
  1094   00142E  2BD8               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
  1095   001430                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 103:             LATDbits.LATD7 = !LATDbits.LATD7;
  1098   001430  AE7C               	btfss	124,7,c	;volatile
  1099   001432  EF1D  F00A         	goto	u2161
  1100   001436  EF21  F00A         	goto	u2160
  1101   00143A                     u2161:
  1102   00143A  6A30               	clrf	??_main^0,c
  1103   00143C  2A30               	incf	??_main^0,f,c
  1104   00143E  EF22  F00A         	goto	u2178
  1105   001442                     u2160:
  1106   001442  6A30               	clrf	??_main^0,c
  1107   001444                     u2178:
  1108   001444  3230               	rrcf	??_main^0,f,c
  1109   001446  3230               	rrcf	??_main^0,f,c
  1110   001448  507C               	movf	124,w,c	;volatile
  1111   00144A  1830               	xorwf	??_main^0,w,c
  1112   00144C  0B7F               	andlw	-129
  1113   00144E  1830               	xorwf	??_main^0,w,c
  1114   001450  6E7C               	movwf	124,c	;volatile
  1115   001452                     l3391:
  1116                           
  1117                           ;main.c: 105:         getRGBCval(&readRGBC);
  1118   001452  0EB9               	movlw	low main@readRGBC
  1119   001454  6E10               	movwf	getRGBCval@p^0,c
  1120   001456  EC73  F00C         	call	_getRGBCval	;wreg free
  1121   00145A                     
  1122                           ;main.c: 106:         getHSVval(&readHSV);
  1123   00145A  0EB3               	movlw	low main@readHSV
  1124   00145C  6E17               	movwf	getHSVval@p^0,c
  1125   00145E  EC0E  F007         	call	_getHSVval	;wreg free
  1126   001462                     
  1127                           ;main.c: 107:         sprintf(display, "%d %d %d %d %d %d %d \r",readRGBC.R,readRGBC.G,r
      +                          eadRGBC.B,readRGBC.C,readHSV.H,readHSV.S,readHSV.V);
  1128   001462  0E6F               	movlw	low main@display
  1129   001464  6E20               	movwf	sprintf@s^0,c
  1130   001466  0E01               	movlw	low STR_1
  1131   001468  6E21               	movwf	sprintf@fmt^0,c
  1132   00146A  C0B9  F022         	movff	main@readRGBC,?_sprintf+2
  1133   00146E  C0BA  F023         	movff	main@readRGBC+1,?_sprintf+3
  1134   001472  C0BB  F024         	movff	main@readRGBC+2,?_sprintf+4
  1135   001476  C0BC  F025         	movff	main@readRGBC+3,?_sprintf+5
  1136   00147A  C0BD  F026         	movff	main@readRGBC+4,?_sprintf+6
  1137   00147E  C0BE  F027         	movff	main@readRGBC+5,?_sprintf+7
  1138   001482  C0BF  F028         	movff	main@readRGBC+6,?_sprintf+8
  1139   001486  C0C0  F029         	movff	main@readRGBC+7,?_sprintf+9
  1140   00148A  C0B3  F02A         	movff	main@readHSV,?_sprintf+10
  1141   00148E  C0B4  F02B         	movff	main@readHSV+1,?_sprintf+11
  1142   001492  C0B5  F02C         	movff	main@readHSV+2,?_sprintf+12
  1143   001496  C0B6  F02D         	movff	main@readHSV+3,?_sprintf+13
  1144   00149A  C0B7  F02E         	movff	main@readHSV+4,?_sprintf+14
  1145   00149E  C0B8  F02F         	movff	main@readHSV+5,?_sprintf+15
  1146   0014A2  EC8E  F00D         	call	_sprintf	;wreg free
  1147   0014A6                     
  1148                           ;main.c: 108:         TxBufferedString(display);
  1149   0014A6  0E6F               	movlw	low main@display
  1150   0014A8  6E06               	movwf	TxBufferedString@string^0,c
  1151   0014AA  EC6E  F00E         	call	_TxBufferedString	;wreg free
  1152   0014AE                     
  1153                           ;main.c: 109:         sendTxBuf();
  1154   0014AE  EC15  F00F         	call	_sendTxBuf	;wreg free
  1155   0014B2                     
  1156                           ;main.c: 112:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1157   0014B2  0E29               	movlw	41
  1158   0014B4  6E31               	movwf	(??_main+1)^0,c
  1159   0014B6  0E96               	movlw	150
  1160   0014B8  6E30               	movwf	??_main^0,c
  1161   0014BA  0E7F               	movlw	127
  1162   0014BC                     u2207:
  1163   0014BC  2EE8               	decfsz	wreg,f,c
  1164   0014BE  D7FE               	bra	u2207
  1165   0014C0  2E30               	decfsz	??_main^0,f,c
  1166   0014C2  D7FC               	bra	u2207
  1167   0014C4  2E31               	decfsz	(??_main+1)^0,f,c
  1168   0014C6  D7FA               	bra	u2207
  1169   0014C8  0000               	nop	
  1170   0014CA  EF09  F00A         	goto	l3383
  1171   0014CE  EF3A  F000         	goto	start
  1172   0014D2                     __end_of_main:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _sprintf *****************
  1176 ;; Defined at:
  1177 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  s               1   31[COMRAM] PTR unsigned char 
  1180 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), main@display(50), 
  1181 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  1182 ;;		 -> STR_4(3), STR_2(5), STR_1(23), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  f              12    3[BANK0 ] struct _IO_FILE
  1185 ;;  ret             2    0[BANK0 ] int 
  1186 ;;  ap              1    2[BANK0 ] PTR void [1]
  1187 ;;		 -> ?_sprintf(2), 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2   31[COMRAM] int 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1197 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Totals:        16      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;Total ram usage:       31 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 6
  1204 ;; This function calls:
  1205 ;;		_vfprintf
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;;		_sendIntSerial4
  1209 ;;		_sendArraySerial4
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text1
  1214   001B1C                     __ptext1:
  1215                           	callstack 0
  1216   001B1C                     _sprintf:
  1217                           	callstack 24
  1218   001B1C  0E22               	movlw	low (?_sprintf+2)
  1219   001B1E  0100               	movlb	0	; () banked
  1220   001B20  6F62               	movwf	sprintf@ap& (0+255),b
  1221   001B22  C020  F063         	movff	sprintf@s,sprintf@f
  1222   001B26                     
  1223                           ; BSR set to: 0
  1224   001B26  0E00               	movlw	0
  1225   001B28  6F67               	movwf	(sprintf@f+4)& (0+255),b
  1226   001B2A  0E00               	movlw	0
  1227   001B2C  6F66               	movwf	(sprintf@f+3)& (0+255),b
  1228   001B2E                     
  1229                           ; BSR set to: 0
  1230   001B2E  0E00               	movlw	0
  1231   001B30  6F6E               	movwf	(sprintf@f+11)& (0+255),b
  1232   001B32  0E00               	movlw	0
  1233   001B34  6F6D               	movwf	(sprintf@f+10)& (0+255),b
  1234   001B36                     
  1235                           ; BSR set to: 0
  1236   001B36  0E63               	movlw	low sprintf@f
  1237   001B38  6E1C               	movwf	vfprintf@fp^0,c
  1238   001B3A  C021  F01D         	movff	sprintf@fmt,vfprintf@fmt
  1239   001B3E  0E62               	movlw	low sprintf@ap
  1240   001B40  6E1E               	movwf	vfprintf@ap^0,c
  1241   001B42  EC9E  F00C         	call	_vfprintf	;wreg free
  1242   001B46  C01C  F060         	movff	?_vfprintf,sprintf@ret
  1243   001B4A  C01D  F061         	movff	?_vfprintf+1,sprintf@ret+1
  1244   001B4E  5020               	movf	sprintf@s^0,w,c
  1245   001B50  0100               	movlb	0	; () banked
  1246   001B52  2566               	addwf	(sprintf@f+3)& (0+255),w,b
  1247   001B54  6ED9               	movwf	fsr2l,c
  1248   001B56  6ADA               	clrf	fsr2h,c
  1249   001B58  6ADF               	clrf	indf2,c
  1250   001B5A                     
  1251                           ; BSR set to: 0
  1252   001B5A  C060  F020         	movff	sprintf@ret,?_sprintf
  1253   001B5E  C061  F021         	movff	sprintf@ret+1,?_sprintf+1
  1254   001B62                     
  1255                           ; BSR set to: 0
  1256   001B62  0012               	return		;funcret
  1257   001B64                     __end_of_sprintf:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _vfprintf *****************
  1261 ;; Defined at:
  1262 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  1265 ;;		 -> sprintf@f(12), 
  1266 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1267 ;;		 -> STR_4(3), STR_2(5), STR_1(23), 
  1268 ;;  ap              1   29[COMRAM] PTR PTR void 
  1269 ;;		 -> sprintf@ap(1), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1272 ;;		 -> STR_4(3), STR_2(5), STR_1(23), 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2   27[COMRAM] int 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;Total ram usage:        4 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 5
  1289 ;; This function calls:
  1290 ;;		_vfpfcnvrt
  1291 ;; This function is called by:
  1292 ;;		_sprintf
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text2
  1297   00193C                     __ptext2:
  1298                           	callstack 0
  1299   00193C                     _vfprintf:
  1300                           	callstack 24
  1301   00193C                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1303   00193C  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1304   001940                     
  1305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1306   001940  0E00               	movlw	0
  1307   001942  6E48               	movwf	(_nout+1)^0,c
  1308   001944  0E00               	movlw	0
  1309   001946  6E47               	movwf	_nout^0,c
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1312   001948  EFB2  F00C         	goto	l3267
  1313   00194C                     l3265:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1316   00194C  C01C  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1317   001950  0E1F               	movlw	low vfprintf@cfmt
  1318   001952  6E10               	movwf	vfpfcnvrt@fmt^0,c
  1319   001954  C01E  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  1320   001958  ECA6  F008         	call	_vfpfcnvrt	;wreg free
  1321   00195C  500F               	movf	?_vfpfcnvrt^0,w,c
  1322   00195E  2647               	addwf	_nout^0,f,c
  1323   001960  5010               	movf	(?_vfpfcnvrt+1)^0,w,c
  1324   001962  2248               	addwfc	(_nout+1)^0,f,c
  1325   001964                     l3267:
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1328   001964  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1329   001968                     	if	1	;There is more than 1 active tblptr byte
  1330   001968  0E0E               	movlw	high __smallconst
  1331   00196A  6EF7               	movwf	tblptrh,c
  1332   00196C                     	endif
  1333   00196C                     	if	0	;tblptru may be non-zero
  1334   00196C                     	endif
  1335   00196C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1336   00196C  0E00               	movlw	low (__smallconst shr (0+16))
  1337   00196E  6EF8               	movwf	tblptru,c
  1338   001970                     	endif
  1339   001970  0008               	tblrd		*
  1340   001972  50F5               	movf	tablat,w,c
  1341   001974  0900               	iorlw	0
  1342   001976  A4D8               	btfss	status,2,c
  1343   001978  EFC0  F00C         	goto	u2091
  1344   00197C  EFC2  F00C         	goto	u2090
  1345   001980                     u2091:
  1346   001980  EFA6  F00C         	goto	l3265
  1347   001984                     u2090:
  1348   001984                     
  1349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1350   001984  C047  F01C         	movff	_nout,?_vfprintf
  1351   001988  C048  F01D         	movff	_nout+1,?_vfprintf+1
  1352   00198C  0012               	return		;funcret
  1353   00198E                     __end_of_vfprintf:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _vfpfcnvrt *****************
  1357 ;; Defined at:
  1358 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1361 ;;		 -> sprintf@f(12), 
  1362 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1363 ;;		 -> vfprintf@cfmt(1), 
  1364 ;;  ap              1   16[COMRAM] PTR PTR void 
  1365 ;;		 -> sprintf@ap(1), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  convarg         4   22[COMRAM] struct .
  1368 ;;  cnt             2   19[COMRAM] int 
  1369 ;;  c               1   26[COMRAM] unsigned char 
  1370 ;;  cp              1   21[COMRAM] PTR unsigned char 
  1371 ;;		 -> STR_4(3), STR_2(5), STR_1(23), 
  1372 ;;  done            1   18[COMRAM] _Bool 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2   14[COMRAM] int 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1382 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1386 ;;Total ram usage:       13 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 4
  1389 ;; This function calls:
  1390 ;;		___awdiv
  1391 ;;		___awmod
  1392 ;;		_abs
  1393 ;;		_fputc
  1394 ;; This function is called by:
  1395 ;;		_vfprintf
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text3
  1400   00114C                     __ptext3:
  1401                           	callstack 0
  1402   00114C                     _vfpfcnvrt:
  1403                           	callstack 24
  1404   00114C                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1406   00114C  0E00               	movlw	0
  1407   00114E  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1408   001150  0E00               	movlw	0
  1409   001152  6E14               	movwf	vfpfcnvrt@cnt^0,c
  1410   001154                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1412   001154  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1413   001156  6ED9               	movwf	fsr2l,c
  1414   001158  6ADA               	clrf	fsr2h,c
  1415   00115A  CFDF FFF6          	movff	indf2,tblptrl
  1416   00115E                     	if	1	;There is more than 1 active tblptr byte
  1417   00115E  0E0E               	movlw	high __smallconst
  1418   001160  6EF7               	movwf	tblptrh,c
  1419   001162                     	endif
  1420   001162                     	if	0	;tblptru may be non-zero
  1421   001162                     	endif
  1422   001162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1423   001162  0E00               	movlw	low (__smallconst shr (0+16))
  1424   001164  6EF8               	movwf	tblptru,c
  1425   001166                     	endif
  1426   001166  0008               	tblrd		*
  1427   001168  50F5               	movf	tablat,w,c
  1428   00116A  0A25               	xorlw	37
  1429   00116C  A4D8               	btfss	status,2,c
  1430   00116E  EFBB  F008         	goto	u1991
  1431   001172  EFBD  F008         	goto	u1990
  1432   001176                     u1991:
  1433   001176  EF8D  F009         	goto	l3253
  1434   00117A                     u1990:
  1435   00117A                     
  1436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1437   00117A  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1438   00117C  6ED9               	movwf	fsr2l,c
  1439   00117E  6ADA               	clrf	fsr2h,c
  1440   001180  2ADF               	incf	indf2,f,c
  1441   001182                     
  1442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1443   001182  0E00               	movlw	0
  1444   001184  0100               	movlb	0	; () banked
  1445   001186  6FD6               	movwf	(_width+1)& (0+255),b
  1446   001188  0E00               	movlw	0
  1447   00118A  6FD5               	movwf	_width& (0+255),b
  1448   00118C  C0D5  F04B         	movff	_width,_flags
  1449   001190                     
  1450                           ; BSR set to: 0
  1451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1452   001190  6849               	setf	_prec^0,c
  1453   001192  684A               	setf	(_prec+1)^0,c
  1454   001194                     
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1457   001194  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1458   001196  6ED9               	movwf	fsr2l,c
  1459   001198  6ADA               	clrf	fsr2h,c
  1460   00119A  50DF               	movf	indf2,w,c
  1461   00119C  6E16               	movwf	vfpfcnvrt@cp^0,c
  1462   00119E                     
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1465   00119E  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1466   0011A2                     	if	1	;There is more than 1 active tblptr byte
  1467   0011A2  0E0E               	movlw	high __smallconst
  1468   0011A4  6EF7               	movwf	tblptrh,c
  1469   0011A6                     	endif
  1470   0011A6                     	if	0	;tblptru may be non-zero
  1471   0011A6                     	endif
  1472   0011A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1473   0011A6  0E00               	movlw	low (__smallconst shr (0+16))
  1474   0011A8  6EF8               	movwf	tblptru,c
  1475   0011AA                     	endif
  1476   0011AA  0008               	tblrd		*
  1477   0011AC  50F5               	movf	tablat,w,c
  1478   0011AE  0A64               	xorlw	100
  1479   0011B0  B4D8               	btfsc	status,2,c
  1480   0011B2  EFDD  F008         	goto	u2001
  1481   0011B6  EFDF  F008         	goto	u2000
  1482   0011BA                     u2001:
  1483   0011BA  EFEF  F008         	goto	l3217
  1484   0011BE                     u2000:
  1485   0011BE                     
  1486                           ; BSR set to: 0
  1487   0011BE  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1488   0011C2                     	if	1	;There is more than 1 active tblptr byte
  1489   0011C2  0E0E               	movlw	high __smallconst
  1490   0011C4  6EF7               	movwf	tblptrh,c
  1491   0011C6                     	endif
  1492   0011C6                     	if	0	;tblptru may be non-zero
  1493   0011C6                     	endif
  1494   0011C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1495   0011C6  0E00               	movlw	low (__smallconst shr (0+16))
  1496   0011C8  6EF8               	movwf	tblptru,c
  1497   0011CA                     	endif
  1498   0011CA  0008               	tblrd		*
  1499   0011CC  50F5               	movf	tablat,w,c
  1500   0011CE  0A69               	xorlw	105
  1501   0011D0  A4D8               	btfss	status,2,c
  1502   0011D2  EFED  F008         	goto	u2011
  1503   0011D6  EFEF  F008         	goto	u2010
  1504   0011DA                     u2011:
  1505   0011DA  EF83  F009         	goto	l3247
  1506   0011DE                     u2010:
  1507   0011DE                     l3217:
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1511   0011DE  5011               	movf	vfpfcnvrt@ap^0,w,c
  1512   0011E0  6ED9               	movwf	fsr2l,c
  1513   0011E2  6ADA               	clrf	fsr2h,c
  1514   0011E4  0E02               	movlw	2
  1515   0011E6  26DF               	addwf	indf2,f,c
  1516   0011E8  5CDF               	subwf	indf2,w,c
  1517   0011EA  6ED9               	movwf	fsr2l,c
  1518   0011EC  6ADA               	clrf	fsr2h,c
  1519   0011EE  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  1520   0011F2  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  1521   0011F6                     
  1522                           ; BSR set to: 0
  1523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1524   0011F6  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1525   0011F8  6ED9               	movwf	fsr2l,c
  1526   0011FA  6ADA               	clrf	fsr2h,c
  1527   0011FC  2816               	incf	vfpfcnvrt@cp^0,w,c
  1528   0011FE  6EDF               	movwf	indf2,c
  1529   001200                     
  1530                           ; BSR set to: 0
  1531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1532   001200  0E20               	movlw	32
  1533   001202  6E1B               	movwf	vfpfcnvrt@c^0,c
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1536   001204  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1537   001206  EF07  F009         	goto	u2021
  1538   00120A  EF0A  F009         	goto	u2020
  1539   00120E                     u2021:
  1540   00120E  0E01               	movlw	1
  1541   001210  EF0B  F009         	goto	u2030
  1542   001214                     u2020:
  1543   001214  0E00               	movlw	0
  1544   001216                     u2030:
  1545   001216  6E13               	movwf	vfpfcnvrt@done^0,c
  1546   001218                     l3223:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1549   001218  061B               	decf	vfpfcnvrt@c^0,f,c
  1550   00121A  0E3C               	movlw	low _dbuf
  1551   00121C  241B               	addwf	vfpfcnvrt@c^0,w,c
  1552   00121E  6ED9               	movwf	fsr2l,c
  1553   001220  6ADA               	clrf	fsr2h,c
  1554   001222  0E01               	movlw	high _dbuf
  1555   001224  22DA               	addwfc	fsr2h,f,c
  1556   001226  C017  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1557   00122A  C018  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1558   00122E  0E00               	movlw	0
  1559   001230  6E08               	movwf	(___awmod@divisor+1)^0,c
  1560   001232  0E0A               	movlw	10
  1561   001234  6E07               	movwf	___awmod@divisor^0,c
  1562   001236  ECCB  F00A         	call	___awmod	;wreg free
  1563   00123A  C005  F00B         	movff	?___awmod,abs@a
  1564   00123E  C006  F00C         	movff	?___awmod+1,abs@a+1
  1565   001242  EC0F  F00E         	call	_abs	;wreg free
  1566   001246  500B               	movf	?_abs^0,w,c
  1567   001248  0F30               	addlw	48
  1568   00124A  6EDF               	movwf	indf2,c
  1569   00124C                     
  1570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1571   00124C  C017  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1572   001250  C018  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1573   001254  0E00               	movlw	0
  1574   001256  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1575   001258  0E0A               	movlw	10
  1576   00125A  6E07               	movwf	___awdiv@divisor^0,c
  1577   00125C  EC69  F00A         	call	___awdiv	;wreg free
  1578   001260  C005  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  1579   001264  C006  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1580   001268                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1582   001268  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1583   00126A  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1584   00126C                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1586   00126C  5017               	movf	vfpfcnvrt@convarg^0,w,c
  1587   00126E  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1588   001270  B4D8               	btfsc	status,2,c
  1589   001272  EF3D  F009         	goto	u2041
  1590   001276  EF3F  F009         	goto	u2040
  1591   00127A                     u2041:
  1592   00127A  EF47  F009         	goto	l3233
  1593   00127E                     u2040:
  1594   00127E  501B               	movf	vfpfcnvrt@c^0,w,c
  1595   001280  A4D8               	btfss	status,2,c
  1596   001282  EF45  F009         	goto	u2051
  1597   001286  EF47  F009         	goto	u2050
  1598   00128A                     u2051:
  1599   00128A  EF0C  F009         	goto	l3223
  1600   00128E                     u2050:
  1601   00128E                     l3233:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1604   00128E  501B               	movf	vfpfcnvrt@c^0,w,c
  1605   001290  B4D8               	btfsc	status,2,c
  1606   001292  EF4D  F009         	goto	u2061
  1607   001296  EF4F  F009         	goto	u2060
  1608   00129A                     u2061:
  1609   00129A  EF74  F009         	goto	l3245
  1610   00129E                     u2060:
  1611   00129E  5013               	movf	vfpfcnvrt@done^0,w,c
  1612   0012A0  B4D8               	btfsc	status,2,c
  1613   0012A2  EF55  F009         	goto	u2071
  1614   0012A6  EF57  F009         	goto	u2070
  1615   0012AA                     u2071:
  1616   0012AA  EF74  F009         	goto	l3245
  1617   0012AE                     u2070:
  1618   0012AE                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1620   0012AE  061B               	decf	vfpfcnvrt@c^0,f,c
  1621   0012B0  0E3C               	movlw	low _dbuf
  1622   0012B2  241B               	addwf	vfpfcnvrt@c^0,w,c
  1623   0012B4  6ED9               	movwf	fsr2l,c
  1624   0012B6  6ADA               	clrf	fsr2h,c
  1625   0012B8  0E01               	movlw	high _dbuf
  1626   0012BA  22DA               	addwfc	fsr2h,f,c
  1627   0012BC  0E2D               	movlw	45
  1628   0012BE  6EDF               	movwf	indf2,c
  1629   0012C0                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1631   0012C0  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1632   0012C2  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1633   0012C4  EF74  F009         	goto	l3245
  1634   0012C8                     l3241:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1637   0012C8  0E3C               	movlw	low _dbuf
  1638   0012CA  241B               	addwf	vfpfcnvrt@c^0,w,c
  1639   0012CC  6ED9               	movwf	fsr2l,c
  1640   0012CE  6ADA               	clrf	fsr2h,c
  1641   0012D0  0E01               	movlw	high _dbuf
  1642   0012D2  22DA               	addwfc	fsr2h,f,c
  1643   0012D4  50DF               	movf	indf2,w,c
  1644   0012D6  6E12               	movwf	??_vfpfcnvrt^0,c
  1645   0012D8  5012               	movf	??_vfpfcnvrt^0,w,c
  1646   0012DA  6E05               	movwf	fputc@c^0,c
  1647   0012DC  6A06               	clrf	(fputc@c+1)^0,c
  1648   0012DE  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1649   0012E2  EC23  F00B         	call	_fputc	;wreg free
  1650   0012E6  2A1B               	incf	vfpfcnvrt@c^0,f,c
  1651   0012E8                     l3245:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1654   0012E8  0E20               	movlw	32
  1655   0012EA  181B               	xorwf	vfpfcnvrt@c^0,w,c
  1656   0012EC  A4D8               	btfss	status,2,c
  1657   0012EE  EF7B  F009         	goto	u2081
  1658   0012F2  EF7D  F009         	goto	u2080
  1659   0012F6                     u2081:
  1660   0012F6  EF64  F009         	goto	l3241
  1661   0012FA                     u2080:
  1662   0012FA                     
  1663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1664   0012FA  C014  F00F         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1665   0012FE  C015  F010         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1666   001302  EFA6  F009         	goto	l1369
  1667   001306                     l3247:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1671   001306  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1672   001308  6ED9               	movwf	fsr2l,c
  1673   00130A  6ADA               	clrf	fsr2h,c
  1674   00130C  2ADF               	incf	indf2,f,c
  1675   00130E                     
  1676                           ; BSR set to: 0
  1677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1678   00130E  0E00               	movlw	0
  1679   001310  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1680   001312  0E00               	movlw	0
  1681   001314  6E0F               	movwf	?_vfpfcnvrt^0,c
  1682   001316  EFA6  F009         	goto	l1369
  1683   00131A                     l3253:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1686   00131A  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1687   00131C  6ED9               	movwf	fsr2l,c
  1688   00131E  6ADA               	clrf	fsr2h,c
  1689   001320  CFDF FFF6          	movff	indf2,tblptrl
  1690   001324                     	if	1	;There is more than 1 active tblptr byte
  1691   001324  0E0E               	movlw	high __smallconst
  1692   001326  6EF7               	movwf	tblptrh,c
  1693   001328                     	endif
  1694   001328                     	if	0	;tblptru may be non-zero
  1695   001328                     	endif
  1696   001328                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1697   001328  0E00               	movlw	low (__smallconst shr (0+16))
  1698   00132A  6EF8               	movwf	tblptru,c
  1699   00132C                     	endif
  1700   00132C  0008               	tblrd		*
  1701   00132E  50F5               	movf	tablat,w,c
  1702   001330  6E05               	movwf	fputc@c^0,c
  1703   001332  6A06               	clrf	(fputc@c+1)^0,c
  1704   001334  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1705   001338  EC23  F00B         	call	_fputc	;wreg free
  1706   00133C                     
  1707                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1708   00133C  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1709   00133E  6ED9               	movwf	fsr2l,c
  1710   001340  6ADA               	clrf	fsr2h,c
  1711   001342  2ADF               	incf	indf2,f,c
  1712   001344                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1714   001344  0E00               	movlw	0
  1715   001346  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1716   001348  0E01               	movlw	1
  1717   00134A  6E0F               	movwf	?_vfpfcnvrt^0,c
  1718   00134C                     l1369:
  1719   00134C  0012               	return		;funcret
  1720   00134E                     __end_of_vfpfcnvrt:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _fputc *****************
  1724 ;; Defined at:
  1725 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  c               2    4[COMRAM] int 
  1728 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1729 ;;		 -> sprintf@f(12), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2    4[COMRAM] int 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1741 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;Total ram usage:        8 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		_putch
  1750 ;; This function is called by:
  1751 ;;		_vfpfcnvrt
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text4
  1756   001646                     __ptext4:
  1757                           	callstack 0
  1758   001646                     _fputc:
  1759                           	callstack 24
  1760   001646  5007               	movf	fputc@fp^0,w,c
  1761   001648  B4D8               	btfsc	status,2,c
  1762   00164A  EF29  F00B         	goto	u1941
  1763   00164E  EF2B  F00B         	goto	u1940
  1764   001652                     u1941:
  1765   001652  EF33  F00B         	goto	l3187
  1766   001656                     u1940:
  1767   001656  5007               	movf	fputc@fp^0,w,c
  1768   001658  A4D8               	btfss	status,2,c
  1769   00165A  EF31  F00B         	goto	u1951
  1770   00165E  EF33  F00B         	goto	u1950
  1771   001662                     u1951:
  1772   001662  EF38  F00B         	goto	l3189
  1773   001666                     u1950:
  1774   001666                     l3187:
  1775   001666  5005               	movf	fputc@c^0,w,c
  1776   001668  EC6C  F00F         	call	_putch
  1777   00166C  EF77  F00B         	goto	l1394
  1778   001670                     l3189:
  1779   001670  5007               	movf	fputc@fp^0,w,c
  1780   001672  6ED9               	movwf	fsr2l,c
  1781   001674  6ADA               	clrf	fsr2h,c
  1782   001676  0E0A               	movlw	10
  1783   001678  26D9               	addwf	fsr2l,f,c
  1784   00167A  50DE               	movf	postinc2,w,c
  1785   00167C  10DE               	iorwf	postinc2,w,c
  1786   00167E  B4D8               	btfsc	status,2,c
  1787   001680  EF44  F00B         	goto	u1961
  1788   001684  EF46  F00B         	goto	u1960
  1789   001688                     u1961:
  1790   001688  EF5F  F00B         	goto	l3193
  1791   00168C                     u1960:
  1792   00168C  5007               	movf	fputc@fp^0,w,c
  1793   00168E  6ED9               	movwf	fsr2l,c
  1794   001690  6ADA               	clrf	fsr2h,c
  1795   001692  0E0A               	movlw	10
  1796   001694  26D9               	addwf	fsr2l,f,c
  1797   001696  5007               	movf	fputc@fp^0,w,c
  1798   001698  6EE1               	movwf	fsr1l,c
  1799   00169A  6AE2               	clrf	fsr1h,c
  1800   00169C  0E03               	movlw	3
  1801   00169E  26E1               	addwf	fsr1l,f,c
  1802   0016A0  50DE               	movf	postinc2,w,c
  1803   0016A2  5CE6               	subwf	postinc1,w,c
  1804   0016A4  50E6               	movf	postinc1,w,c
  1805   0016A6  0A80               	xorlw	128
  1806   0016A8  6E0C               	movwf	(??_fputc+4)^0,c
  1807   0016AA  50DE               	movf	postinc2,w,c
  1808   0016AC  0A80               	xorlw	128
  1809   0016AE  580C               	subwfb	(??_fputc+4)^0,w,c
  1810   0016B0  B0D8               	btfsc	status,0,c
  1811   0016B2  EF5D  F00B         	goto	u1971
  1812   0016B6  EF5F  F00B         	goto	u1970
  1813   0016BA                     u1971:
  1814   0016BA  EF77  F00B         	goto	l1394
  1815   0016BE                     u1970:
  1816   0016BE                     l3193:
  1817   0016BE  5007               	movf	fputc@fp^0,w,c
  1818   0016C0  6ED9               	movwf	fsr2l,c
  1819   0016C2  6ADA               	clrf	fsr2h,c
  1820   0016C4  0E03               	movlw	3
  1821   0016C6  26D9               	addwf	fsr2l,f,c
  1822   0016C8  50DF               	movf	indf2,w,c
  1823   0016CA  6E08               	movwf	??_fputc^0,c
  1824   0016CC  5007               	movf	fputc@fp^0,w,c
  1825   0016CE  6ED9               	movwf	fsr2l,c
  1826   0016D0  6ADA               	clrf	fsr2h,c
  1827   0016D2  50DF               	movf	indf2,w,c
  1828   0016D4  2408               	addwf	??_fputc^0,w,c
  1829   0016D6  6ED9               	movwf	fsr2l,c
  1830   0016D8  6ADA               	clrf	fsr2h,c
  1831   0016DA  C005  FFDF         	movff	fputc@c,indf2
  1832   0016DE  5007               	movf	fputc@fp^0,w,c
  1833   0016E0  6ED9               	movwf	fsr2l,c
  1834   0016E2  6ADA               	clrf	fsr2h,c
  1835   0016E4  0E03               	movlw	3
  1836   0016E6  26D9               	addwf	fsr2l,f,c
  1837   0016E8  2ADE               	incf	postinc2,f,c
  1838   0016EA  0E00               	movlw	0
  1839   0016EC  22DD               	addwfc	postdec2,f,c
  1840   0016EE                     l1394:
  1841   0016EE  0012               	return		;funcret
  1842   0016F0                     __end_of_fputc:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _putch *****************
  1846 ;; Defined at:
  1847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  c               1    wreg     unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  c               1    0[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_fputc
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text5
  1876   001ED8                     __ptext5:
  1877                           	callstack 0
  1878   001ED8                     _putch:
  1879                           	callstack 24
  1880   001ED8  0012               	return		;funcret
  1881   001EDA                     __end_of_putch:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _abs *****************
  1885 ;; Defined at:
  1886 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  a               2   10[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2   10[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;Total ram usage:        4 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_vfpfcnvrt
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text6
  1915   001C1E                     __ptext6:
  1916                           	callstack 0
  1917   001C1E                     _abs:
  1918                           	callstack 25
  1919   001C1E  BE0C               	btfsc	(abs@a+1)^0,7,c
  1920   001C20  EF14  F00E         	goto	u1981
  1921   001C24  EF16  F00E         	goto	u1980
  1922   001C28                     u1981:
  1923   001C28  EF1C  F00E         	goto	l1379
  1924   001C2C                     u1980:
  1925   001C2C  C00B  F00B         	movff	abs@a,?_abs
  1926   001C30  C00C  F00C         	movff	abs@a+1,?_abs+1
  1927   001C34  EF28  F00E         	goto	l1382
  1928   001C38                     l1379:
  1929   001C38  C00B  F00D         	movff	abs@a,??_abs
  1930   001C3C  C00C  F00E         	movff	abs@a+1,??_abs+1
  1931   001C40  1E0D               	comf	??_abs^0,f,c
  1932   001C42  1E0E               	comf	(??_abs+1)^0,f,c
  1933   001C44  4A0D               	infsnz	??_abs^0,f,c
  1934   001C46  2A0E               	incf	(??_abs+1)^0,f,c
  1935   001C48  C00D  F00B         	movff	??_abs,?_abs
  1936   001C4C  C00E  F00C         	movff	??_abs+1,?_abs+1
  1937   001C50                     l1382:
  1938   001C50  0012               	return		;funcret
  1939   001C52                     __end_of_abs:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function ___awmod *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dividend        2    4[COMRAM] int 
  1947 ;;  divisor         2    6[COMRAM] int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  sign            1    9[COMRAM] unsigned char 
  1950 ;;  counter         1    8[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2    4[COMRAM] int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;Total ram usage:        6 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 2
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_vfpfcnvrt
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975   001596                     __ptext7:
  1976                           	callstack 0
  1977   001596                     ___awmod:
  1978                           	callstack 25
  1979   001596  0E00               	movlw	0
  1980   001598  6E0A               	movwf	___awmod@sign^0,c
  1981   00159A  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1982   00159C  EFD4  F00A         	goto	u1880
  1983   0015A0  EFD2  F00A         	goto	u1881
  1984   0015A4                     u1881:
  1985   0015A4  EFDA  F00A         	goto	l3155
  1986   0015A8                     u1880:
  1987   0015A8  6C05               	negf	___awmod@dividend^0,c
  1988   0015AA  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1989   0015AC  B0D8               	btfsc	status,0,c
  1990   0015AE  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1991   0015B0  0E01               	movlw	1
  1992   0015B2  6E0A               	movwf	___awmod@sign^0,c
  1993   0015B4                     l3155:
  1994   0015B4  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1995   0015B6  EFE1  F00A         	goto	u1890
  1996   0015BA  EFDF  F00A         	goto	u1891
  1997   0015BE                     u1891:
  1998   0015BE  EFE5  F00A         	goto	l3159
  1999   0015C2                     u1890:
  2000   0015C2  6C07               	negf	___awmod@divisor^0,c
  2001   0015C4  1E08               	comf	(___awmod@divisor+1)^0,f,c
  2002   0015C6  B0D8               	btfsc	status,0,c
  2003   0015C8  2A08               	incf	(___awmod@divisor+1)^0,f,c
  2004   0015CA                     l3159:
  2005   0015CA  5007               	movf	___awmod@divisor^0,w,c
  2006   0015CC  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  2007   0015CE  B4D8               	btfsc	status,2,c
  2008   0015D0  EFEC  F00A         	goto	u1901
  2009   0015D4  EFEE  F00A         	goto	u1900
  2010   0015D8                     u1901:
  2011   0015D8  EF12  F00B         	goto	l3175
  2012   0015DC                     u1900:
  2013   0015DC  0E01               	movlw	1
  2014   0015DE  6E09               	movwf	___awmod@counter^0,c
  2015   0015E0  EFF6  F00A         	goto	l3165
  2016   0015E4                     l3163:
  2017   0015E4  90D8               	bcf	status,0,c
  2018   0015E6  3607               	rlcf	___awmod@divisor^0,f,c
  2019   0015E8  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  2020   0015EA  2A09               	incf	___awmod@counter^0,f,c
  2021   0015EC                     l3165:
  2022   0015EC  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  2023   0015EE  EFFB  F00A         	goto	u1911
  2024   0015F2  EFFD  F00A         	goto	u1910
  2025   0015F6                     u1911:
  2026   0015F6  EFF2  F00A         	goto	l3163
  2027   0015FA                     u1910:
  2028   0015FA                     l3167:
  2029   0015FA  5007               	movf	___awmod@divisor^0,w,c
  2030   0015FC  5C05               	subwf	___awmod@dividend^0,w,c
  2031   0015FE  5008               	movf	(___awmod@divisor+1)^0,w,c
  2032   001600  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  2033   001602  A0D8               	btfss	status,0,c
  2034   001604  EF06  F00B         	goto	u1921
  2035   001608  EF08  F00B         	goto	u1920
  2036   00160C                     u1921:
  2037   00160C  EF0C  F00B         	goto	l3171
  2038   001610                     u1920:
  2039   001610  5007               	movf	___awmod@divisor^0,w,c
  2040   001612  5E05               	subwf	___awmod@dividend^0,f,c
  2041   001614  5008               	movf	(___awmod@divisor+1)^0,w,c
  2042   001616  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  2043   001618                     l3171:
  2044   001618  90D8               	bcf	status,0,c
  2045   00161A  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  2046   00161C  3207               	rrcf	___awmod@divisor^0,f,c
  2047   00161E  2E09               	decfsz	___awmod@counter^0,f,c
  2048   001620  EFFD  F00A         	goto	l3167
  2049   001624                     l3175:
  2050   001624  500A               	movf	___awmod@sign^0,w,c
  2051   001626  B4D8               	btfsc	status,2,c
  2052   001628  EF18  F00B         	goto	u1931
  2053   00162C  EF1A  F00B         	goto	u1930
  2054   001630                     u1931:
  2055   001630  EF1E  F00B         	goto	l3179
  2056   001634                     u1930:
  2057   001634  6C05               	negf	___awmod@dividend^0,c
  2058   001636  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2059   001638  B0D8               	btfsc	status,0,c
  2060   00163A  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2061   00163C                     l3179:
  2062   00163C  C005  F005         	movff	___awmod@dividend,?___awmod
  2063   001640  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2064   001644  0012               	return		;funcret
  2065   001646                     __end_of___awmod:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _sendTxBuf *****************
  2069 ;; Defined at:
  2070 ;;		line 114 in file "serial.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 3
  2091 ;; This function calls:
  2092 ;;		_isDataInTxBuf
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text8
  2099   001E2A                     __ptext8:
  2100                           	callstack 0
  2101   001E2A                     _sendTxBuf:
  2102                           	callstack 27
  2103   001E2A                     
  2104                           ;serial.c: 115:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  2105   001E2A  EC22  F00F         	call	_isDataInTxBuf	;wreg free
  2106   001E2E  0900               	iorlw	0
  2107   001E30  B4D8               	btfsc	status,2,c
  2108   001E32  EF1D  F00F         	goto	u1661
  2109   001E36  EF1F  F00F         	goto	u1660
  2110   001E3A                     u1661:
  2111   001E3A  EF21  F00F         	goto	l473
  2112   001E3E                     u1660:
  2113   001E3E  010E               	movlb	14	; () banked
  2114   001E40  852D               	bsf	45,2,b	;volatile
  2115   001E42                     l473:
  2116   001E42  0012               	return		;funcret
  2117   001E44                     __end_of_sendTxBuf:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _isDataInTxBuf *****************
  2121 ;; Defined at:
  2122 ;;		line 100 in file "serial.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      unsigned char 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 2
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_sendTxBuf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text9
  2151   001E44                     __ptext9:
  2152                           	callstack 0
  2153   001E44                     _isDataInTxBuf:
  2154                           	callstack 27
  2155   001E44                     
  2156                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  2157   001E44  504D               	movf	_TxBufReadCnt^0,w,c	;volatile
  2158   001E46  184E               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2159   001E48  A4D8               	btfss	status,2,c
  2160   001E4A  EF29  F00F         	goto	u1511
  2161   001E4E  EF2C  F00F         	goto	u1510
  2162   001E52                     u1511:
  2163   001E52  0E01               	movlw	1
  2164   001E54  EF2D  F00F         	goto	u1520
  2165   001E58                     u1510:
  2166   001E58  0E00               	movlw	0
  2167   001E5A                     u1520:
  2168   001E5A  0012               	return		;funcret
  2169   001E5C                     __end_of_isDataInTxBuf:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _initUSART4 *****************
  2173 ;; Defined at:
  2174 ;;		line 5 in file "serial.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text10
  2203   001E0C                     __ptext10:
  2204                           	callstack 0
  2205   001E0C                     _initUSART4:
  2206                           	callstack 28
  2207   001E0C                     
  2208                           ;serial.c: 9:     RC0PPS = 0x12;
  2209   001E0C  0E12               	movlw	18
  2210   001E0E  010E               	movlb	14	; () banked
  2211   001E10  6F62               	movwf	98,b	;volatile
  2212                           
  2213                           ;serial.c: 10:     RX4PPS = 0x11;
  2214   001E12  0E11               	movlw	17
  2215   001E14  6F15               	movwf	21,b	;volatile
  2216   001E16                     
  2217                           ; BSR set to: 14
  2218                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2219   001E16  97E9               	bcf	233,3,b	;volatile
  2220   001E18                     
  2221                           ; BSR set to: 14
  2222                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2223   001E18  95E8               	bcf	232,2,b	;volatile
  2224                           
  2225                           ;serial.c: 14:     SP4BRGL = 51;
  2226   001E1A  0E33               	movlw	51
  2227   001E1C  6FE5               	movwf	229,b	;volatile
  2228                           
  2229                           ;serial.c: 15:     SP4BRGH = 0;
  2230   001E1E  0E00               	movlw	0
  2231   001E20  6FE6               	movwf	230,b	;volatile
  2232   001E22                     
  2233                           ; BSR set to: 14
  2234                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2235   001E22  89E7               	bsf	231,4,b	;volatile
  2236   001E24                     
  2237                           ; BSR set to: 14
  2238                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2239   001E24  8BE8               	bsf	232,5,b	;volatile
  2240   001E26                     
  2241                           ; BSR set to: 14
  2242                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2243   001E26  8FE7               	bsf	231,7,b	;volatile
  2244   001E28                     
  2245                           ; BSR set to: 14
  2246   001E28  0012               	return		;funcret
  2247   001E2A                     __end_of_initUSART4:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _initDCmotorsPWM *****************
  2251 ;; Defined at:
  2252 ;;		line 5 in file "dc_motor.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 2
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text11
  2281   0016F0                     __ptext11:
  2282                           	callstack 0
  2283   0016F0                     _initDCmotorsPWM:
  2284                           	callstack 28
  2285   0016F0                     
  2286                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2287   0016F0  9485               	bcf	133,2,c	;volatile
  2288                           
  2289                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2290   0016F2  9885               	bcf	133,4,c	;volatile
  2291                           
  2292                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2293   0016F4  9E83               	bcf	131,7,c	;volatile
  2294                           
  2295                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2296   0016F6  9C87               	bcf	135,6,c	;volatile
  2297                           
  2298                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2299   0016F8  947D               	bcf	125,2,c	;volatile
  2300                           
  2301                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2302   0016FA  987D               	bcf	125,4,c	;volatile
  2303                           
  2304                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2305   0016FC  9E7B               	bcf	123,7,c	;volatile
  2306                           
  2307                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2308   0016FE  9C7F               	bcf	127,6,c	;volatile
  2309   001700                     
  2310                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2311   001700  0E05               	movlw	5
  2312   001702  010E               	movlb	14	; () banked
  2313   001704  6F74               	movwf	116,b	;volatile
  2314                           
  2315                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2316   001706  0E06               	movlw	6
  2317   001708  6F76               	movwf	118,b	;volatile
  2318                           
  2319                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2320   00170A  0E07               	movlw	7
  2321   00170C  6F69               	movwf	105,b	;volatile
  2322                           
  2323                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2324   00170E  0E08               	movlw	8
  2325   001710  6F88               	movwf	136,b	;volatile
  2326                           
  2327                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2328   001712  50BD               	movf	189,w,c	;volatile
  2329   001714  0B8F               	andlw	-113
  2330   001716  0940               	iorlw	64
  2331   001718  6EBD               	movwf	189,c	;volatile
  2332                           
  2333                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2334   00171A  0EE0               	movlw	-32
  2335   00171C  16BE               	andwf	190,f,c	;volatile
  2336                           
  2337                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2338   00171E  50BF               	movf	191,w,c	;volatile
  2339   001720  0BF0               	andlw	-16
  2340   001722  0901               	iorlw	1
  2341   001724  6EBF               	movwf	191,c	;volatile
  2342   001726                     
  2343                           ; BSR set to: 14
  2344                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2345   001726  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2346   00172A                     
  2347                           ; BSR set to: 14
  2348                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2349   00172A  8EBD               	bsf	189,7,c	;volatile
  2350                           
  2351                           ;dc_motor.c: 35:     CCPR1H=0;
  2352   00172C  0E00               	movlw	0
  2353   00172E  6EAA               	movwf	170,c	;volatile
  2354                           
  2355                           ;dc_motor.c: 36:     CCPR2H=0;
  2356   001730  0E00               	movlw	0
  2357   001732  6EA6               	movwf	166,c	;volatile
  2358                           
  2359                           ;dc_motor.c: 37:     CCPR3H=0;
  2360   001734  0E00               	movlw	0
  2361   001736  010F               	movlb	15	; () banked
  2362   001738  6F25               	movwf	37,b	;volatile
  2363                           
  2364                           ;dc_motor.c: 38:     CCPR4H=0;
  2365   00173A  0E00               	movlw	0
  2366   00173C  6F21               	movwf	33,b	;volatile
  2367                           
  2368                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2369   00173E  0EFC               	movlw	-4
  2370   001740  16AD               	andwf	173,f,c	;volatile
  2371                           
  2372                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2373   001742  0EF3               	movlw	-13
  2374   001744  16AD               	andwf	173,f,c	;volatile
  2375                           
  2376                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2377   001746  0ECF               	movlw	-49
  2378   001748  16AD               	andwf	173,f,c	;volatile
  2379                           
  2380                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2381   00174A  0E3F               	movlw	-193
  2382   00174C  16AD               	andwf	173,f,c	;volatile
  2383   00174E                     
  2384                           ; BSR set to: 15
  2385                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2386   00174E  88AB               	bsf	171,4,c	;volatile
  2387                           
  2388                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2389   001750  50AB               	movf	171,w,c	;volatile
  2390   001752  0BF0               	andlw	-16
  2391   001754  090C               	iorlw	12
  2392   001756  6EAB               	movwf	171,c	;volatile
  2393   001758                     
  2394                           ; BSR set to: 15
  2395                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2396   001758  8EAB               	bsf	171,7,c	;volatile
  2397   00175A                     
  2398                           ; BSR set to: 15
  2399                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2400   00175A  88A7               	bsf	167,4,c	;volatile
  2401                           
  2402                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2403   00175C  50A7               	movf	167,w,c	;volatile
  2404   00175E  0BF0               	andlw	-16
  2405   001760  090C               	iorlw	12
  2406   001762  6EA7               	movwf	167,c	;volatile
  2407   001764                     
  2408                           ; BSR set to: 15
  2409                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2410   001764  8EA7               	bsf	167,7,c	;volatile
  2411   001766                     
  2412                           ; BSR set to: 15
  2413                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2414   001766  8926               	bsf	38,4,b	;volatile
  2415                           
  2416                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2417   001768  5126               	movf	38,w,b	;volatile
  2418   00176A  0BF0               	andlw	-16
  2419   00176C  090C               	iorlw	12
  2420   00176E  6F26               	movwf	38,b	;volatile
  2421   001770                     
  2422                           ; BSR set to: 15
  2423                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2424   001770  8F26               	bsf	38,7,b	;volatile
  2425   001772                     
  2426                           ; BSR set to: 15
  2427                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2428   001772  8922               	bsf	34,4,b	;volatile
  2429                           
  2430                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2431   001774  5122               	movf	34,w,b	;volatile
  2432   001776  0BF0               	andlw	-16
  2433   001778  090C               	iorlw	12
  2434   00177A  6F22               	movwf	34,b	;volatile
  2435   00177C                     
  2436                           ; BSR set to: 15
  2437                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2438   00177C  8F22               	bsf	34,7,b	;volatile
  2439   00177E                     
  2440                           ; BSR set to: 15
  2441   00177E  0012               	return		;funcret
  2442   001780                     __end_of_initDCmotorsPWM:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _getHSVval *****************
  2446 ;; Defined at:
  2447 ;;		line 143 in file "color.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  p               1   22[COMRAM] PTR struct HSV_val
  2450 ;;		 -> main@readHSV(6), 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  tempRGBC        2   43[COMRAM] PTR struct RGBC_val
  2453 ;;  maxRGB          2   41[COMRAM] int 
  2454 ;;  range           2   39[COMRAM] int 
  2455 ;;  hue             2   35[COMRAM] int 
  2456 ;;  saturation      2   33[COMRAM] int 
  2457 ;;  minRGB          2   27[COMRAM] int 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:       23 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 6
  2474 ;; This function calls:
  2475 ;;		___awdiv
  2476 ;;		___lwdiv
  2477 ;;		___lwmod
  2478 ;;		___wmul
  2479 ;;		_getRGBCval
  2480 ;;		_max
  2481 ;;		_min
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text12
  2488   000E1C                     __ptext12:
  2489                           	callstack 0
  2490   000E1C                     _getHSVval:
  2491                           	callstack 24
  2492   000E1C                     
  2493                           ;color.c: 143: void getHSVval(struct HSV_val *p);color.c: 144: {;color.c: 145:     int m
      +                          axRGB;;color.c: 146:     int minRGB;;color.c: 147:     int range;;color.c: 148:     int 
      +                          hue;;color.c: 149:     int saturation;;color.c: 151:     struct RGBC_val *tempRGBC;;colo
      +                          r.c: 152:     getRGBCval(&tempRGBC);
  2494   000E1C  0E2C               	movlw	low getHSVval@tempRGBC
  2495   000E1E  6E10               	movwf	getRGBCval@p^0,c
  2496   000E20  EC73  F00C         	call	_getRGBCval	;wreg free
  2497                           
  2498                           ;color.c: 154:     maxRGB = max(max(tempRGBC->R,tempRGBC->G),tempRGBC->B);
  2499   000E24  C02C  FFD9         	movff	getHSVval@tempRGBC,fsr2l
  2500   000E28  C02D  FFDA         	movff	getHSVval@tempRGBC+1,fsr2h
  2501   000E2C  CFDE F005          	movff	postinc2,max@a
  2502   000E30  CFDD F006          	movff	postdec2,max@a+1
  2503   000E34  EE20 F002          	lfsr	2,2
  2504   000E38  502C               	movf	getHSVval@tempRGBC^0,w,c
  2505   000E3A  26D9               	addwf	fsr2l,f,c
  2506   000E3C  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2507   000E3E  22DA               	addwfc	fsr2h,f,c
  2508   000E40  CFDE F007          	movff	postinc2,max@b
  2509   000E44  CFDD F008          	movff	postdec2,max@b+1
  2510   000E48  ECF1  F00D         	call	_max	;wreg free
  2511   000E4C  C005  F01E         	movff	?_max,_getHSVval$3064
  2512   000E50  C006  F01F         	movff	?_max+1,_getHSVval$3064+1
  2513                           
  2514                           ;color.c: 154:     maxRGB = max(max(tempRGBC->R,tempRGBC->G),tempRGBC->B);
  2515   000E54  C01E  F005         	movff	_getHSVval$3064,max@a
  2516   000E58  C01F  F006         	movff	_getHSVval$3064+1,max@a+1
  2517   000E5C  EE20 F004          	lfsr	2,4
  2518   000E60  502C               	movf	getHSVval@tempRGBC^0,w,c
  2519   000E62  26D9               	addwf	fsr2l,f,c
  2520   000E64  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2521   000E66  22DA               	addwfc	fsr2h,f,c
  2522   000E68  CFDE F007          	movff	postinc2,max@b
  2523   000E6C  CFDD F008          	movff	postdec2,max@b+1
  2524   000E70  ECF1  F00D         	call	_max	;wreg free
  2525   000E74  C005  F02A         	movff	?_max,getHSVval@maxRGB
  2526   000E78  C006  F02B         	movff	?_max+1,getHSVval@maxRGB+1
  2527                           
  2528                           ;color.c: 155:     minRGB = min(min(tempRGBC->R,tempRGBC->G),tempRGBC->B);
  2529   000E7C  C02C  FFD9         	movff	getHSVval@tempRGBC,fsr2l
  2530   000E80  C02D  FFDA         	movff	getHSVval@tempRGBC+1,fsr2h
  2531   000E84  CFDE F005          	movff	postinc2,min@a
  2532   000E88  CFDD F006          	movff	postdec2,min@a+1
  2533   000E8C  EE20 F002          	lfsr	2,2
  2534   000E90  502C               	movf	getHSVval@tempRGBC^0,w,c
  2535   000E92  26D9               	addwf	fsr2l,f,c
  2536   000E94  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2537   000E96  22DA               	addwfc	fsr2h,f,c
  2538   000E98  CFDE F007          	movff	postinc2,min@b
  2539   000E9C  CFDD F008          	movff	postdec2,min@b+1
  2540   000EA0  ECD3  F00D         	call	_min	;wreg free
  2541   000EA4  C005  F020         	movff	?_min,_getHSVval$3065
  2542   000EA8  C006  F021         	movff	?_min+1,_getHSVval$3065+1
  2543                           
  2544                           ;color.c: 155:     minRGB = min(min(tempRGBC->R,tempRGBC->G),tempRGBC->B);
  2545   000EAC  C020  F005         	movff	_getHSVval$3065,min@a
  2546   000EB0  C021  F006         	movff	_getHSVval$3065+1,min@a+1
  2547   000EB4  EE20 F004          	lfsr	2,4
  2548   000EB8  502C               	movf	getHSVval@tempRGBC^0,w,c
  2549   000EBA  26D9               	addwf	fsr2l,f,c
  2550   000EBC  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2551   000EBE  22DA               	addwfc	fsr2h,f,c
  2552   000EC0  CFDE F007          	movff	postinc2,min@b
  2553   000EC4  CFDD F008          	movff	postdec2,min@b+1
  2554   000EC8  ECD3  F00D         	call	_min	;wreg free
  2555   000ECC  C005  F01C         	movff	?_min,getHSVval@minRGB
  2556   000ED0  C006  F01D         	movff	?_min+1,getHSVval@minRGB+1
  2557   000ED4                     
  2558                           ;color.c: 156:     range = maxRGB - minRGB;
  2559   000ED4  501C               	movf	getHSVval@minRGB^0,w,c
  2560   000ED6  5C2A               	subwf	getHSVval@maxRGB^0,w,c
  2561   000ED8  6E28               	movwf	getHSVval@range^0,c
  2562   000EDA  501D               	movf	(getHSVval@minRGB+1)^0,w,c
  2563   000EDC  582B               	subwfb	(getHSVval@maxRGB+1)^0,w,c
  2564   000EDE  6E29               	movwf	(getHSVval@range+1)^0,c
  2565   000EE0                     
  2566                           ;color.c: 158:     if (range == 0) {
  2567   000EE0  5028               	movf	getHSVval@range^0,w,c
  2568   000EE2  1029               	iorwf	(getHSVval@range+1)^0,w,c
  2569   000EE4  A4D8               	btfss	status,2,c
  2570   000EE6  EF77  F007         	goto	u2101
  2571   000EEA  EF79  F007         	goto	u2100
  2572   000EEE                     u2101:
  2573   000EEE  EF7D  F007         	goto	l3277
  2574   000EF2                     u2100:
  2575   000EF2                     
  2576                           ;color.c: 159:         hue = 0;
  2577   000EF2  0E00               	movlw	0
  2578   000EF4  6E25               	movwf	(getHSVval@hue+1)^0,c
  2579   000EF6  0E00               	movlw	0
  2580   000EF8  6E24               	movwf	getHSVval@hue^0,c
  2581   000EFA                     l3277:
  2582                           
  2583                           ;color.c: 162:     if (maxRGB == tempRGBC->R) {
  2584   000EFA  C02C  FFD9         	movff	getHSVval@tempRGBC,fsr2l
  2585   000EFE  C02D  FFDA         	movff	getHSVval@tempRGBC+1,fsr2h
  2586   000F02  502A               	movf	getHSVval@maxRGB^0,w,c
  2587   000F04  18DE               	xorwf	postinc2,w,c
  2588   000F06  E107               	bnz	u2111
  2589   000F08  502B               	movf	(getHSVval@maxRGB+1)^0,w,c
  2590   000F0A  18DE               	xorwf	postinc2,w,c
  2591   000F0C  A4D8               	btfss	status,2,c
  2592   000F0E  EF8B  F007         	goto	u2111
  2593   000F12  EF8D  F007         	goto	u2110
  2594   000F16                     u2111:
  2595   000F16  EFD3  F007         	goto	l3283
  2596   000F1A                     u2110:
  2597   000F1A                     
  2598                           ;color.c: 163:         hue = 60*((((tempRGBC->G-tempRGBC->B)*100)/range)%600);
  2599   000F1A  0E02               	movlw	2
  2600   000F1C  6E15               	movwf	(___lwmod@divisor+1)^0,c
  2601   000F1E  0E58               	movlw	88
  2602   000F20  6E14               	movwf	___lwmod@divisor^0,c
  2603   000F22  C028  F00D         	movff	getHSVval@range,___lwdiv@divisor
  2604   000F26  C029  F00E         	movff	getHSVval@range+1,___lwdiv@divisor+1
  2605   000F2A  EE20 F004          	lfsr	2,4
  2606   000F2E  502C               	movf	getHSVval@tempRGBC^0,w,c
  2607   000F30  26D9               	addwf	fsr2l,f,c
  2608   000F32  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2609   000F34  22DA               	addwfc	fsr2h,f,c
  2610   000F36  CFDE F018          	movff	postinc2,??_getHSVval
  2611   000F3A  CFDD F019          	movff	postdec2,??_getHSVval+1
  2612   000F3E  EE20 F002          	lfsr	2,2
  2613   000F42  502C               	movf	getHSVval@tempRGBC^0,w,c
  2614   000F44  26D9               	addwf	fsr2l,f,c
  2615   000F46  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2616   000F48  22DA               	addwfc	fsr2h,f,c
  2617   000F4A  CFDE F01A          	movff	postinc2,??_getHSVval+2
  2618   000F4E  CFDD F01B          	movff	postdec2,??_getHSVval+3
  2619   000F52  5018               	movf	??_getHSVval^0,w,c
  2620   000F54  5C1A               	subwf	(??_getHSVval+2)^0,w,c
  2621   000F56  6E05               	movwf	___wmul@multiplier^0,c
  2622   000F58  5019               	movf	(??_getHSVval+1)^0,w,c
  2623   000F5A  581B               	subwfb	(??_getHSVval+3)^0,w,c
  2624   000F5C  6E06               	movwf	(___wmul@multiplier+1)^0,c
  2625   000F5E  0E00               	movlw	0
  2626   000F60  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2627   000F62  0E64               	movlw	100
  2628   000F64  6E07               	movwf	___wmul@multiplicand^0,c
  2629   000F66  ECC0  F00E         	call	___wmul	;wreg free
  2630   000F6A  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2631   000F6E  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2632   000F72  EC07  F00C         	call	___lwdiv	;wreg free
  2633   000F76  C00B  F012         	movff	?___lwdiv,___lwmod@dividend
  2634   000F7A  C00C  F013         	movff	?___lwdiv+1,___lwmod@dividend+1
  2635   000F7E  EC41  F00C         	call	___lwmod	;wreg free
  2636   000F82  C012  F026         	movff	?___lwmod,_getHSVval$3066
  2637   000F86  C013  F027         	movff	?___lwmod+1,_getHSVval$3066+1
  2638   000F8A                     
  2639                           ;color.c: 163:         hue = 60*((((tempRGBC->G-tempRGBC->B)*100)/range)%600);
  2640   000F8A  C026  F005         	movff	_getHSVval$3066,___wmul@multiplier
  2641   000F8E  C027  F006         	movff	_getHSVval$3066+1,___wmul@multiplier+1
  2642   000F92  0E00               	movlw	0
  2643   000F94  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2644   000F96  0E3C               	movlw	60
  2645   000F98  6E07               	movwf	___wmul@multiplicand^0,c
  2646   000F9A  ECC0  F00E         	call	___wmul	;wreg free
  2647   000F9E  C005  F024         	movff	?___wmul,getHSVval@hue
  2648   000FA2  C006  F025         	movff	?___wmul+1,getHSVval@hue+1
  2649   000FA6                     l3283:
  2650                           
  2651                           ;color.c: 166:     if (maxRGB == tempRGBC->G){
  2652   000FA6  EE20 F002          	lfsr	2,2
  2653   000FAA  502C               	movf	getHSVval@tempRGBC^0,w,c
  2654   000FAC  26D9               	addwf	fsr2l,f,c
  2655   000FAE  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2656   000FB0  22DA               	addwfc	fsr2h,f,c
  2657   000FB2  502A               	movf	getHSVval@maxRGB^0,w,c
  2658   000FB4  18DE               	xorwf	postinc2,w,c
  2659   000FB6  E107               	bnz	u2121
  2660   000FB8  502B               	movf	(getHSVval@maxRGB+1)^0,w,c
  2661   000FBA  18DE               	xorwf	postinc2,w,c
  2662   000FBC  A4D8               	btfss	status,2,c
  2663   000FBE  EFE3  F007         	goto	u2121
  2664   000FC2  EFE5  F007         	goto	u2120
  2665   000FC6                     u2121:
  2666   000FC6  EF21  F008         	goto	l3289
  2667   000FCA                     u2120:
  2668   000FCA                     
  2669                           ;color.c: 167:         hue = 60*((((tempRGBC->B-tempRGBC->R)*100)/range)+200);
  2670   000FCA  C028  F00D         	movff	getHSVval@range,___lwdiv@divisor
  2671   000FCE  C029  F00E         	movff	getHSVval@range+1,___lwdiv@divisor+1
  2672   000FD2  C02C  FFD9         	movff	getHSVval@tempRGBC,fsr2l
  2673   000FD6  C02D  FFDA         	movff	getHSVval@tempRGBC+1,fsr2h
  2674   000FDA  CFDE F018          	movff	postinc2,??_getHSVval
  2675   000FDE  CFDD F019          	movff	postdec2,??_getHSVval+1
  2676   000FE2  EE20 F004          	lfsr	2,4
  2677   000FE6  502C               	movf	getHSVval@tempRGBC^0,w,c
  2678   000FE8  26D9               	addwf	fsr2l,f,c
  2679   000FEA  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2680   000FEC  22DA               	addwfc	fsr2h,f,c
  2681   000FEE  CFDE F01A          	movff	postinc2,??_getHSVval+2
  2682   000FF2  CFDD F01B          	movff	postdec2,??_getHSVval+3
  2683   000FF6  5018               	movf	??_getHSVval^0,w,c
  2684   000FF8  5C1A               	subwf	(??_getHSVval+2)^0,w,c
  2685   000FFA  6E05               	movwf	___wmul@multiplier^0,c
  2686   000FFC  5019               	movf	(??_getHSVval+1)^0,w,c
  2687   000FFE  581B               	subwfb	(??_getHSVval+3)^0,w,c
  2688   001000  6E06               	movwf	(___wmul@multiplier+1)^0,c
  2689   001002  0E00               	movlw	0
  2690   001004  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2691   001006  0E64               	movlw	100
  2692   001008  6E07               	movwf	___wmul@multiplicand^0,c
  2693   00100A  ECC0  F00E         	call	___wmul	;wreg free
  2694   00100E  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2695   001012  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2696   001016  EC07  F00C         	call	___lwdiv	;wreg free
  2697   00101A  0EC8               	movlw	200
  2698   00101C  240B               	addwf	?___lwdiv^0,w,c
  2699   00101E  6E26               	movwf	_getHSVval$3066^0,c
  2700   001020  0E00               	movlw	0
  2701   001022  200C               	addwfc	(?___lwdiv+1)^0,w,c
  2702   001024  6E27               	movwf	(_getHSVval$3066+1)^0,c
  2703   001026                     
  2704                           ;color.c: 167:         hue = 60*((((tempRGBC->B-tempRGBC->R)*100)/range)+200);
  2705   001026  C026  F005         	movff	_getHSVval$3066,___wmul@multiplier
  2706   00102A  C027  F006         	movff	_getHSVval$3066+1,___wmul@multiplier+1
  2707   00102E  0E00               	movlw	0
  2708   001030  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2709   001032  0E3C               	movlw	60
  2710   001034  6E07               	movwf	___wmul@multiplicand^0,c
  2711   001036  ECC0  F00E         	call	___wmul	;wreg free
  2712   00103A  C005  F024         	movff	?___wmul,getHSVval@hue
  2713   00103E  C006  F025         	movff	?___wmul+1,getHSVval@hue+1
  2714   001042                     l3289:
  2715                           
  2716                           ;color.c: 170:     if (maxRGB == tempRGBC->G){
  2717   001042  EE20 F002          	lfsr	2,2
  2718   001046  502C               	movf	getHSVval@tempRGBC^0,w,c
  2719   001048  26D9               	addwf	fsr2l,f,c
  2720   00104A  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2721   00104C  22DA               	addwfc	fsr2h,f,c
  2722   00104E  502A               	movf	getHSVval@maxRGB^0,w,c
  2723   001050  18DE               	xorwf	postinc2,w,c
  2724   001052  E107               	bnz	u2131
  2725   001054  502B               	movf	(getHSVval@maxRGB+1)^0,w,c
  2726   001056  18DE               	xorwf	postinc2,w,c
  2727   001058  A4D8               	btfss	status,2,c
  2728   00105A  EF31  F008         	goto	u2131
  2729   00105E  EF33  F008         	goto	u2130
  2730   001062                     u2131:
  2731   001062  EF6F  F008         	goto	l3295
  2732   001066                     u2130:
  2733   001066                     
  2734                           ;color.c: 171:         hue = 60*((((tempRGBC->R-tempRGBC->G)*100)/range)+400);
  2735   001066  C028  F00D         	movff	getHSVval@range,___lwdiv@divisor
  2736   00106A  C029  F00E         	movff	getHSVval@range+1,___lwdiv@divisor+1
  2737   00106E  EE20 F002          	lfsr	2,2
  2738   001072  502C               	movf	getHSVval@tempRGBC^0,w,c
  2739   001074  26D9               	addwf	fsr2l,f,c
  2740   001076  502D               	movf	(getHSVval@tempRGBC+1)^0,w,c
  2741   001078  22DA               	addwfc	fsr2h,f,c
  2742   00107A  CFDE F018          	movff	postinc2,??_getHSVval
  2743   00107E  CFDD F019          	movff	postdec2,??_getHSVval+1
  2744   001082  C02C  FFD9         	movff	getHSVval@tempRGBC,fsr2l
  2745   001086  C02D  FFDA         	movff	getHSVval@tempRGBC+1,fsr2h
  2746   00108A  CFDE F01A          	movff	postinc2,??_getHSVval+2
  2747   00108E  CFDD F01B          	movff	postdec2,??_getHSVval+3
  2748   001092  5018               	movf	??_getHSVval^0,w,c
  2749   001094  5C1A               	subwf	(??_getHSVval+2)^0,w,c
  2750   001096  6E05               	movwf	___wmul@multiplier^0,c
  2751   001098  5019               	movf	(??_getHSVval+1)^0,w,c
  2752   00109A  581B               	subwfb	(??_getHSVval+3)^0,w,c
  2753   00109C  6E06               	movwf	(___wmul@multiplier+1)^0,c
  2754   00109E  0E00               	movlw	0
  2755   0010A0  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2756   0010A2  0E64               	movlw	100
  2757   0010A4  6E07               	movwf	___wmul@multiplicand^0,c
  2758   0010A6  ECC0  F00E         	call	___wmul	;wreg free
  2759   0010AA  C005  F00B         	movff	?___wmul,___lwdiv@dividend
  2760   0010AE  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
  2761   0010B2  EC07  F00C         	call	___lwdiv	;wreg free
  2762   0010B6  0E90               	movlw	144
  2763   0010B8  240B               	addwf	?___lwdiv^0,w,c
  2764   0010BA  6E26               	movwf	_getHSVval$3066^0,c
  2765   0010BC  0E01               	movlw	1
  2766   0010BE  200C               	addwfc	(?___lwdiv+1)^0,w,c
  2767   0010C0  6E27               	movwf	(_getHSVval$3066+1)^0,c
  2768   0010C2                     
  2769                           ;color.c: 171:         hue = 60*((((tempRGBC->R-tempRGBC->G)*100)/range)+400);
  2770   0010C2  C026  F005         	movff	_getHSVval$3066,___wmul@multiplier
  2771   0010C6  C027  F006         	movff	_getHSVval$3066+1,___wmul@multiplier+1
  2772   0010CA  0E00               	movlw	0
  2773   0010CC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2774   0010CE  0E3C               	movlw	60
  2775   0010D0  6E07               	movwf	___wmul@multiplicand^0,c
  2776   0010D2  ECC0  F00E         	call	___wmul	;wreg free
  2777   0010D6  C005  F024         	movff	?___wmul,getHSVval@hue
  2778   0010DA  C006  F025         	movff	?___wmul+1,getHSVval@hue+1
  2779   0010DE                     l3295:
  2780                           
  2781                           ;color.c: 174:     if (maxRGB == 0) {saturation = 0;}
  2782   0010DE  502A               	movf	getHSVval@maxRGB^0,w,c
  2783   0010E0  102B               	iorwf	(getHSVval@maxRGB+1)^0,w,c
  2784   0010E2  A4D8               	btfss	status,2,c
  2785   0010E4  EF76  F008         	goto	u2141
  2786   0010E8  EF78  F008         	goto	u2140
  2787   0010EC                     u2141:
  2788   0010EC  EF7E  F008         	goto	l3299
  2789   0010F0                     u2140:
  2790   0010F0  0E00               	movlw	0
  2791   0010F2  6E23               	movwf	(getHSVval@saturation+1)^0,c
  2792   0010F4  0E00               	movlw	0
  2793   0010F6  6E22               	movwf	getHSVval@saturation^0,c
  2794   0010F8  EF8C  F008         	goto	l3301
  2795   0010FC                     l3299:
  2796   0010FC  C028  F005         	movff	getHSVval@range,___awdiv@dividend
  2797   001100  C029  F006         	movff	getHSVval@range+1,___awdiv@dividend+1
  2798   001104  C02A  F007         	movff	getHSVval@maxRGB,___awdiv@divisor
  2799   001108  C02B  F008         	movff	getHSVval@maxRGB+1,___awdiv@divisor+1
  2800   00110C  EC69  F00A         	call	___awdiv	;wreg free
  2801   001110  C005  F022         	movff	?___awdiv,getHSVval@saturation
  2802   001114  C006  F023         	movff	?___awdiv+1,getHSVval@saturation+1
  2803   001118                     l3301:
  2804                           
  2805                           ;color.c: 178:     p->H = hue;
  2806   001118  5017               	movf	getHSVval@p^0,w,c
  2807   00111A  6ED9               	movwf	fsr2l,c
  2808   00111C  6ADA               	clrf	fsr2h,c
  2809   00111E  C024  FFDE         	movff	getHSVval@hue,postinc2
  2810   001122  C025  FFDD         	movff	getHSVval@hue+1,postdec2
  2811   001126                     
  2812                           ;color.c: 179:     p->S = saturation;
  2813   001126  5017               	movf	getHSVval@p^0,w,c
  2814   001128  6ED9               	movwf	fsr2l,c
  2815   00112A  6ADA               	clrf	fsr2h,c
  2816   00112C  0E02               	movlw	2
  2817   00112E  26D9               	addwf	fsr2l,f,c
  2818   001130  C022  FFDE         	movff	getHSVval@saturation,postinc2
  2819   001134  C023  FFDD         	movff	getHSVval@saturation+1,postdec2
  2820   001138                     
  2821                           ;color.c: 180:     p->V = maxRGB;
  2822   001138  5017               	movf	getHSVval@p^0,w,c
  2823   00113A  6ED9               	movwf	fsr2l,c
  2824   00113C  6ADA               	clrf	fsr2h,c
  2825   00113E  0E04               	movlw	4
  2826   001140  26D9               	addwf	fsr2l,f,c
  2827   001142  C02A  FFDE         	movff	getHSVval@maxRGB,postinc2
  2828   001146  C02B  FFDD         	movff	getHSVval@maxRGB+1,postdec2
  2829   00114A  0012               	return		;funcret
  2830   00114C                     __end_of_getHSVval:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _min *****************
  2834 ;; Defined at:
  2835 ;;		line 116 in file "color.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  a               2    4[COMRAM] int 
  2838 ;;  b               2    6[COMRAM] int 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  min_val         2    9[COMRAM] int 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2    4[COMRAM] int 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;Total ram usage:        7 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 2
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_getHSVval
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text13
  2865   001BA6                     __ptext13:
  2866                           	callstack 0
  2867   001BA6                     _min:
  2868                           	callstack 27
  2869   001BA6                     
  2870                           ;color.c: 116: int min(int a, int b);color.c: 117: {;color.c: 118:     int min_val;;colo
      +                          r.c: 120:     if (a < b) {min_val = a;}
  2871   001BA6  5007               	movf	min@b^0,w,c
  2872   001BA8  5C05               	subwf	min@a^0,w,c
  2873   001BAA  5006               	movf	(min@a+1)^0,w,c
  2874   001BAC  0A80               	xorlw	128
  2875   001BAE  6E09               	movwf	??_min^0,c
  2876   001BB0  5008               	movf	(min@b+1)^0,w,c
  2877   001BB2  0A80               	xorlw	128
  2878   001BB4  5809               	subwfb	??_min^0,w,c
  2879   001BB6  B0D8               	btfsc	status,0,c
  2880   001BB8  EFE0  F00D         	goto	u1331
  2881   001BBC  EFE2  F00D         	goto	u1330
  2882   001BC0                     u1331:
  2883   001BC0  EFE8  F00D         	goto	l79
  2884   001BC4                     u1330:
  2885   001BC4  C005  F00A         	movff	min@a,min@min_val
  2886   001BC8  C006  F00B         	movff	min@a+1,min@min_val+1
  2887   001BCC  EFEC  F00D         	goto	l80
  2888   001BD0                     l79:
  2889   001BD0  C007  F00A         	movff	min@b,min@min_val
  2890   001BD4  C008  F00B         	movff	min@b+1,min@min_val+1
  2891   001BD8                     l80:
  2892                           
  2893                           ;color.c: 124:     return min_val;
  2894   001BD8  C00A  F005         	movff	min@min_val,?_min
  2895   001BDC  C00B  F006         	movff	min@min_val+1,?_min+1
  2896   001BE0  0012               	return		;funcret
  2897   001BE2                     __end_of_min:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _max *****************
  2901 ;; Defined at:
  2902 ;;		line 99 in file "color.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  a               2    4[COMRAM] int 
  2905 ;;  b               2    6[COMRAM] int 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  max_val         2    9[COMRAM] int 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    4[COMRAM] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;Total ram usage:        7 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 2
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_getHSVval
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text14
  2932   001BE2                     __ptext14:
  2933                           	callstack 0
  2934   001BE2                     _max:
  2935                           	callstack 27
  2936   001BE2                     
  2937                           ;color.c: 99: int max(int a, int b);color.c: 100: {;color.c: 101:     int max_val;;color
      +                          .c: 103:     if (a > b) {max_val = a;}
  2938   001BE2  5005               	movf	max@a^0,w,c
  2939   001BE4  5C07               	subwf	max@b^0,w,c
  2940   001BE6  5008               	movf	(max@b+1)^0,w,c
  2941   001BE8  0A80               	xorlw	128
  2942   001BEA  6E09               	movwf	??_max^0,c
  2943   001BEC  5006               	movf	(max@a+1)^0,w,c
  2944   001BEE  0A80               	xorlw	128
  2945   001BF0  5809               	subwfb	??_max^0,w,c
  2946   001BF2  B0D8               	btfsc	status,0,c
  2947   001BF4  EFFE  F00D         	goto	u1321
  2948   001BF8  EF00  F00E         	goto	u1320
  2949   001BFC                     u1321:
  2950   001BFC  EF06  F00E         	goto	l74
  2951   001C00                     u1320:
  2952   001C00  C005  F00A         	movff	max@a,max@max_val
  2953   001C04  C006  F00B         	movff	max@a+1,max@max_val+1
  2954   001C08  EF0A  F00E         	goto	l75
  2955   001C0C                     l74:
  2956   001C0C  C007  F00A         	movff	max@b,max@max_val
  2957   001C10  C008  F00B         	movff	max@b+1,max@max_val+1
  2958   001C14                     l75:
  2959                           
  2960                           ;color.c: 107:     return max_val;
  2961   001C14  C00A  F005         	movff	max@max_val,?_max
  2962   001C18  C00B  F006         	movff	max@max_val+1,?_max+1
  2963   001C1C  0012               	return		;funcret
  2964   001C1E                     __end_of_max:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _getRGBCval *****************
  2968 ;; Defined at:
  2969 ;;		line 85 in file "color.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  p               1   15[COMRAM] PTR struct RGBC_val
  2972 ;;		 -> main@readRGBC(8), getHSVval@tempRGBC(2), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2984 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;Total ram usage:        1 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 5
  2991 ;; This function calls:
  2992 ;;		_color_read_Blue
  2993 ;;		_color_read_Clear
  2994 ;;		_color_read_Green
  2995 ;;		_color_read_Red
  2996 ;; This function is called by:
  2997 ;;		_getHSVval
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text15
  3003   0018E6                     __ptext15:
  3004                           	callstack 0
  3005   0018E6                     _getRGBCval:
  3006                           	callstack 25
  3007   0018E6                     
  3008                           ;color.c: 85: void getRGBCval(struct RGBC_val *p);color.c: 86: {;color.c: 87:     p->R =
      +                           color_read_Red();
  3009   0018E6  ECC7  F00C         	call	_color_read_Red	;wreg free
  3010   0018EA  5010               	movf	getRGBCval@p^0,w,c
  3011   0018EC  6ED9               	movwf	fsr2l,c
  3012   0018EE  6ADA               	clrf	fsr2h,c
  3013   0018F0  C009  FFDE         	movff	?_color_read_Red,postinc2
  3014   0018F4  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  3015                           
  3016                           ;color.c: 88:     p->B = color_read_Blue();
  3017   0018F8  EC3F  F00D         	call	_color_read_Blue	;wreg free
  3018   0018FC  5010               	movf	getRGBCval@p^0,w,c
  3019   0018FE  6ED9               	movwf	fsr2l,c
  3020   001900  6ADA               	clrf	fsr2h,c
  3021   001902  0E04               	movlw	4
  3022   001904  26D9               	addwf	fsr2l,f,c
  3023   001906  C009  FFDE         	movff	?_color_read_Blue,postinc2
  3024   00190A  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  3025                           
  3026                           ;color.c: 89:     p->G = color_read_Green();
  3027   00190E  ECEF  F00C         	call	_color_read_Green	;wreg free
  3028   001912  5010               	movf	getRGBCval@p^0,w,c
  3029   001914  6ED9               	movwf	fsr2l,c
  3030   001916  6ADA               	clrf	fsr2h,c
  3031   001918  0E02               	movlw	2
  3032   00191A  26D9               	addwf	fsr2l,f,c
  3033   00191C  C009  FFDE         	movff	?_color_read_Green,postinc2
  3034   001920  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  3035                           
  3036                           ;color.c: 90:     p->C = color_read_Clear();
  3037   001924  EC17  F00D         	call	_color_read_Clear	;wreg free
  3038   001928  5010               	movf	getRGBCval@p^0,w,c
  3039   00192A  6ED9               	movwf	fsr2l,c
  3040   00192C  6ADA               	clrf	fsr2h,c
  3041   00192E  0E06               	movlw	6
  3042   001930  26D9               	addwf	fsr2l,f,c
  3043   001932  C009  FFDE         	movff	?_color_read_Clear,postinc2
  3044   001936  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  3045   00193A  0012               	return		;funcret
  3046   00193C                     __end_of_getRGBCval:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _color_read_Red *****************
  3050 ;; Defined at:
  3051 ;;		line 29 in file "color.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  tmp             2   13[COMRAM] unsigned int 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  2    8[COMRAM] unsigned int 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;Total ram usage:        7 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 4
  3072 ;; This function calls:
  3073 ;;		_I2C_2_Master_Read
  3074 ;;		_I2C_2_Master_RepStart
  3075 ;;		_I2C_2_Master_Start
  3076 ;;		_I2C_2_Master_Stop
  3077 ;;		_I2C_2_Master_Write
  3078 ;; This function is called by:
  3079 ;;		_getRGBCval
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text16
  3084   00198E                     __ptext16:
  3085                           	callstack 0
  3086   00198E                     _color_read_Red:
  3087                           	callstack 25
  3088   00198E                     
  3089                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  3090   00198E  EC67  F00F         	call	_I2C_2_Master_Start	;wreg free
  3091                           
  3092                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  3093   001992  0E52               	movlw	82
  3094   001994  EC57  F00F         	call	_I2C_2_Master_Write
  3095                           
  3096                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  3097   001998  0EB6               	movlw	182
  3098   00199A  EC57  F00F         	call	_I2C_2_Master_Write
  3099                           
  3100                           ;color.c: 35:  I2C_2_Master_RepStart();
  3101   00199E  EC5D  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3102                           
  3103                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  3104   0019A2  0E53               	movlw	83
  3105   0019A4  EC57  F00F         	call	_I2C_2_Master_Write
  3106                           
  3107                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  3108   0019A8  0E01               	movlw	1
  3109   0019AA  ECB2  F00D         	call	_I2C_2_Master_Read
  3110   0019AE  6E0B               	movwf	??_color_read_Red^0,c
  3111   0019B0  500B               	movf	??_color_read_Red^0,w,c
  3112   0019B2  6E0E               	movwf	color_read_Red@tmp^0,c
  3113   0019B4  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  3114                           
  3115                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3116   0019B6  0E00               	movlw	0
  3117   0019B8  ECB2  F00D         	call	_I2C_2_Master_Read
  3118   0019BC  6E0B               	movwf	??_color_read_Red^0,c
  3119   0019BE  500B               	movf	??_color_read_Red^0,w,c
  3120   0019C0  6E0D               	movwf	(??_color_read_Red+2)^0,c
  3121   0019C2  6A0C               	clrf	(??_color_read_Red+1)^0,c
  3122   0019C4  500E               	movf	color_read_Red@tmp^0,w,c
  3123   0019C6  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  3124   0019C8  6E0E               	movwf	color_read_Red@tmp^0,c
  3125   0019CA  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  3126   0019CC  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  3127   0019CE  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  3128                           
  3129                           ;color.c: 39:  I2C_2_Master_Stop();
  3130   0019D0  EC62  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3131   0019D4                     
  3132                           ;color.c: 40:  return tmp;
  3133   0019D4  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  3134   0019D8  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3135   0019DC  0012               	return		;funcret
  3136   0019DE                     __end_of_color_read_Red:
  3137                           	callstack 0
  3138                           
  3139 ;; *************** function _color_read_Green *****************
  3140 ;; Defined at:
  3141 ;;		line 57 in file "color.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  tmp             2   13[COMRAM] unsigned int 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  2    8[COMRAM] unsigned int 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;Total ram usage:        7 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 4
  3162 ;; This function calls:
  3163 ;;		_I2C_2_Master_Read
  3164 ;;		_I2C_2_Master_RepStart
  3165 ;;		_I2C_2_Master_Start
  3166 ;;		_I2C_2_Master_Stop
  3167 ;;		_I2C_2_Master_Write
  3168 ;; This function is called by:
  3169 ;;		_getRGBCval
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text17
  3174   0019DE                     __ptext17:
  3175                           	callstack 0
  3176   0019DE                     _color_read_Green:
  3177                           	callstack 25
  3178   0019DE                     
  3179                           ;color.c: 59:     unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  3180   0019DE  EC67  F00F         	call	_I2C_2_Master_Start	;wreg free
  3181                           
  3182                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  3183   0019E2  0E52               	movlw	82
  3184   0019E4  EC57  F00F         	call	_I2C_2_Master_Write
  3185                           
  3186                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  3187   0019E8  0EB8               	movlw	184
  3188   0019EA  EC57  F00F         	call	_I2C_2_Master_Write
  3189                           
  3190                           ;color.c: 63:  I2C_2_Master_RepStart();
  3191   0019EE  EC5D  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3192                           
  3193                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  3194   0019F2  0E53               	movlw	83
  3195   0019F4  EC57  F00F         	call	_I2C_2_Master_Write
  3196                           
  3197                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  3198   0019F8  0E01               	movlw	1
  3199   0019FA  ECB2  F00D         	call	_I2C_2_Master_Read
  3200   0019FE  6E0B               	movwf	??_color_read_Green^0,c
  3201   001A00  500B               	movf	??_color_read_Green^0,w,c
  3202   001A02  6E0E               	movwf	color_read_Green@tmp^0,c
  3203   001A04  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  3204                           
  3205                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3206   001A06  0E00               	movlw	0
  3207   001A08  ECB2  F00D         	call	_I2C_2_Master_Read
  3208   001A0C  6E0B               	movwf	??_color_read_Green^0,c
  3209   001A0E  500B               	movf	??_color_read_Green^0,w,c
  3210   001A10  6E0D               	movwf	(??_color_read_Green+2)^0,c
  3211   001A12  6A0C               	clrf	(??_color_read_Green+1)^0,c
  3212   001A14  500E               	movf	color_read_Green@tmp^0,w,c
  3213   001A16  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  3214   001A18  6E0E               	movwf	color_read_Green@tmp^0,c
  3215   001A1A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  3216   001A1C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  3217   001A1E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  3218                           
  3219                           ;color.c: 67:  I2C_2_Master_Stop();
  3220   001A20  EC62  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3221   001A24                     
  3222                           ;color.c: 68:  return tmp;
  3223   001A24  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  3224   001A28  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3225   001A2C  0012               	return		;funcret
  3226   001A2E                     __end_of_color_read_Green:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _color_read_Clear *****************
  3230 ;; Defined at:
  3231 ;;		line 71 in file "color.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  tmp             2   13[COMRAM] unsigned int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    8[COMRAM] unsigned int 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;Total ram usage:        7 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 4
  3252 ;; This function calls:
  3253 ;;		_I2C_2_Master_Read
  3254 ;;		_I2C_2_Master_RepStart
  3255 ;;		_I2C_2_Master_Start
  3256 ;;		_I2C_2_Master_Stop
  3257 ;;		_I2C_2_Master_Write
  3258 ;; This function is called by:
  3259 ;;		_getRGBCval
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text18
  3264   001A2E                     __ptext18:
  3265                           	callstack 0
  3266   001A2E                     _color_read_Clear:
  3267                           	callstack 25
  3268   001A2E                     
  3269                           ;color.c: 73:     unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  3270   001A2E  EC67  F00F         	call	_I2C_2_Master_Start	;wreg free
  3271                           
  3272                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  3273   001A32  0E52               	movlw	82
  3274   001A34  EC57  F00F         	call	_I2C_2_Master_Write
  3275                           
  3276                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  3277   001A38  0EB4               	movlw	180
  3278   001A3A  EC57  F00F         	call	_I2C_2_Master_Write
  3279                           
  3280                           ;color.c: 77:  I2C_2_Master_RepStart();
  3281   001A3E  EC5D  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3282                           
  3283                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  3284   001A42  0E53               	movlw	83
  3285   001A44  EC57  F00F         	call	_I2C_2_Master_Write
  3286                           
  3287                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  3288   001A48  0E01               	movlw	1
  3289   001A4A  ECB2  F00D         	call	_I2C_2_Master_Read
  3290   001A4E  6E0B               	movwf	??_color_read_Clear^0,c
  3291   001A50  500B               	movf	??_color_read_Clear^0,w,c
  3292   001A52  6E0E               	movwf	color_read_Clear@tmp^0,c
  3293   001A54  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  3294                           
  3295                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3296   001A56  0E00               	movlw	0
  3297   001A58  ECB2  F00D         	call	_I2C_2_Master_Read
  3298   001A5C  6E0B               	movwf	??_color_read_Clear^0,c
  3299   001A5E  500B               	movf	??_color_read_Clear^0,w,c
  3300   001A60  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  3301   001A62  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  3302   001A64  500E               	movf	color_read_Clear@tmp^0,w,c
  3303   001A66  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  3304   001A68  6E0E               	movwf	color_read_Clear@tmp^0,c
  3305   001A6A  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  3306   001A6C  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  3307   001A6E  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  3308                           
  3309                           ;color.c: 81:  I2C_2_Master_Stop();
  3310   001A70  EC62  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3311   001A74                     
  3312                           ;color.c: 82:  return tmp;
  3313   001A74  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  3314   001A78  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3315   001A7C  0012               	return		;funcret
  3316   001A7E                     __end_of_color_read_Clear:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function _color_read_Blue *****************
  3320 ;; Defined at:
  3321 ;;		line 43 in file "color.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  tmp             2   13[COMRAM] unsigned int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    8[COMRAM] unsigned int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3337 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;Total ram usage:        7 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 4
  3342 ;; This function calls:
  3343 ;;		_I2C_2_Master_Read
  3344 ;;		_I2C_2_Master_RepStart
  3345 ;;		_I2C_2_Master_Start
  3346 ;;		_I2C_2_Master_Stop
  3347 ;;		_I2C_2_Master_Write
  3348 ;; This function is called by:
  3349 ;;		_getRGBCval
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text19
  3354   001A7E                     __ptext19:
  3355                           	callstack 0
  3356   001A7E                     _color_read_Blue:
  3357                           	callstack 25
  3358   001A7E                     
  3359                           ;color.c: 45:     unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  3360   001A7E  EC67  F00F         	call	_I2C_2_Master_Start	;wreg free
  3361                           
  3362                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  3363   001A82  0E52               	movlw	82
  3364   001A84  EC57  F00F         	call	_I2C_2_Master_Write
  3365                           
  3366                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x1A);
  3367   001A88  0EBA               	movlw	186
  3368   001A8A  EC57  F00F         	call	_I2C_2_Master_Write
  3369                           
  3370                           ;color.c: 49:  I2C_2_Master_RepStart();
  3371   001A8E  EC5D  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3372                           
  3373                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  3374   001A92  0E53               	movlw	83
  3375   001A94  EC57  F00F         	call	_I2C_2_Master_Write
  3376                           
  3377                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  3378   001A98  0E01               	movlw	1
  3379   001A9A  ECB2  F00D         	call	_I2C_2_Master_Read
  3380   001A9E  6E0B               	movwf	??_color_read_Blue^0,c
  3381   001AA0  500B               	movf	??_color_read_Blue^0,w,c
  3382   001AA2  6E0E               	movwf	color_read_Blue@tmp^0,c
  3383   001AA4  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  3384                           
  3385                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3386   001AA6  0E00               	movlw	0
  3387   001AA8  ECB2  F00D         	call	_I2C_2_Master_Read
  3388   001AAC  6E0B               	movwf	??_color_read_Blue^0,c
  3389   001AAE  500B               	movf	??_color_read_Blue^0,w,c
  3390   001AB0  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  3391   001AB2  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  3392   001AB4  500E               	movf	color_read_Blue@tmp^0,w,c
  3393   001AB6  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  3394   001AB8  6E0E               	movwf	color_read_Blue@tmp^0,c
  3395   001ABA  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  3396   001ABC  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  3397   001ABE  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  3398                           
  3399                           ;color.c: 53:  I2C_2_Master_Stop();
  3400   001AC0  EC62  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3401   001AC4                     
  3402                           ;color.c: 54:  return tmp;
  3403   001AC4  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  3404   001AC8  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3405   001ACC  0012               	return		;funcret
  3406   001ACE                     __end_of_color_read_Blue:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _I2C_2_Master_RepStart *****************
  3410 ;; Defined at:
  3411 ;;		line 33 in file "i2c.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 3
  3432 ;; This function calls:
  3433 ;;		_I2C_2_Master_Idle
  3434 ;; This function is called by:
  3435 ;;		_color_read_Red
  3436 ;;		_color_read_Blue
  3437 ;;		_color_read_Green
  3438 ;;		_color_read_Clear
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text20
  3443   001EBA                     __ptext20:
  3444                           	callstack 0
  3445   001EBA                     _I2C_2_Master_RepStart:
  3446                           	callstack 25
  3447   001EBA                     
  3448                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3449   001EBA  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3450   001EBE                     
  3451                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3452   001EBE  010E               	movlb	14	; () banked
  3453   001EC0  83DA               	bsf	218,1,b	;volatile
  3454   001EC2                     
  3455                           ; BSR set to: 14
  3456   001EC2  0012               	return		;funcret
  3457   001EC4                     __end_of_I2C_2_Master_RepStart:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _I2C_2_Master_Read *****************
  3461 ;; Defined at:
  3462 ;;		line 51 in file "i2c.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  ack             1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  ack             1    6[COMRAM] unsigned char 
  3467 ;;  tmp             1    7[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;Total ram usage:        3 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 3
  3484 ;; This function calls:
  3485 ;;		_I2C_2_Master_Idle
  3486 ;; This function is called by:
  3487 ;;		_color_read_Red
  3488 ;;		_color_read_Blue
  3489 ;;		_color_read_Green
  3490 ;;		_color_read_Clear
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text21
  3495   001B64                     __ptext21:
  3496                           	callstack 0
  3497   001B64                     _I2C_2_Master_Read:
  3498                           	callstack 25
  3499                           
  3500                           ; BSR set to: 14
  3501                           ;incstack = 0
  3502                           ;I2C_2_Master_Read@ack stored from wreg
  3503   001B64  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3504   001B66                     
  3505                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3506   001B66  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3507   001B6A                     
  3508                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3509   001B6A  010E               	movlb	14	; () banked
  3510   001B6C  87DA               	bsf	218,3,b	;volatile
  3511                           
  3512                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3513   001B6E  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3514   001B72                     
  3515                           ;i2c.c: 57:   tmp = SSP2BUF;
  3516   001B72  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3517                           
  3518                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3519   001B76  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3520   001B7A                     
  3521                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3522   001B7A  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3523   001B7C  B4D8               	btfsc	status,2,c
  3524   001B7E  EFC3  F00D         	goto	u1011
  3525   001B82  EFC7  F00D         	goto	u1010
  3526   001B86                     u1011:
  3527   001B86  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3528   001B88  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3529   001B8A  EFC8  F00D         	goto	u1028
  3530   001B8E                     u1010:
  3531   001B8E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3532   001B90                     u1028:
  3533   001B90  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3534   001B92  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3535   001B94  010E               	movlb	14	; () banked
  3536   001B96  51DA               	movf	218,w,b	;volatile
  3537   001B98  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3538   001B9A  0BDF               	andlw	-33
  3539   001B9C  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3540   001B9E  6FDA               	movwf	218,b	;volatile
  3541   001BA0                     
  3542                           ; BSR set to: 14
  3543                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3544   001BA0  89DA               	bsf	218,4,b	;volatile
  3545   001BA2                     
  3546                           ; BSR set to: 14
  3547                           ;i2c.c: 61:   return tmp;
  3548   001BA2  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3549   001BA4                     
  3550                           ; BSR set to: 14
  3551   001BA4  0012               	return		;funcret
  3552   001BA6                     __end_of_I2C_2_Master_Read:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function ___wmul *****************
  3556 ;; Defined at:
  3557 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  multiplier      2    4[COMRAM] unsigned int 
  3560 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  product         2    8[COMRAM] unsigned int 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    4[COMRAM] unsigned int 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0, prodl, prodh
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;Total ram usage:        6 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 2
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_getHSVval
  3583 ;;		_setMotorPWM
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text22
  3588   001D80                     __ptext22:
  3589                           	callstack 0
  3590   001D80                     ___wmul:
  3591                           	callstack 27
  3592   001D80  5005               	movf	___wmul@multiplier^0,w,c
  3593   001D82  0207               	mulwf	___wmul@multiplicand^0,c
  3594   001D84  CFF3 F009          	movff	prodl,___wmul@product
  3595   001D88  CFF4 F00A          	movff	prodh,___wmul@product+1
  3596   001D8C  5005               	movf	___wmul@multiplier^0,w,c
  3597   001D8E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3598   001D90  50F3               	movf	243,w,c
  3599   001D92  260A               	addwf	(___wmul@product+1)^0,f,c
  3600   001D94  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3601   001D96  0207               	mulwf	___wmul@multiplicand^0,c
  3602   001D98  50F3               	movf	243,w,c
  3603   001D9A  260A               	addwf	(___wmul@product+1)^0,f,c
  3604   001D9C  C009  F005         	movff	___wmul@product,?___wmul
  3605   001DA0  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3606   001DA4  0012               	return		;funcret
  3607   001DA6                     __end_of___wmul:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function ___lwmod *****************
  3611 ;; Defined at:
  3612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  dividend        2   17[COMRAM] unsigned int 
  3615 ;;  divisor         2   19[COMRAM] unsigned int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  counter         1   21[COMRAM] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  2   17[COMRAM] unsigned int 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;Total ram usage:        5 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 2
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_getHSVval
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text23
  3642   001882                     __ptext23:
  3643                           	callstack 0
  3644   001882                     ___lwmod:
  3645                           	callstack 27
  3646   001882  5014               	movf	___lwmod@divisor^0,w,c
  3647   001884  1015               	iorwf	(___lwmod@divisor+1)^0,w,c
  3648   001886  B4D8               	btfsc	status,2,c
  3649   001888  EF48  F00C         	goto	u1561
  3650   00188C  EF4A  F00C         	goto	u1560
  3651   001890                     u1561:
  3652   001890  EF6E  F00C         	goto	l1150
  3653   001894                     u1560:
  3654   001894  0E01               	movlw	1
  3655   001896  6E16               	movwf	___lwmod@counter^0,c
  3656   001898  EF52  F00C         	goto	l2659
  3657   00189C                     l2657:
  3658   00189C  90D8               	bcf	status,0,c
  3659   00189E  3614               	rlcf	___lwmod@divisor^0,f,c
  3660   0018A0  3615               	rlcf	(___lwmod@divisor+1)^0,f,c
  3661   0018A2  2A16               	incf	___lwmod@counter^0,f,c
  3662   0018A4                     l2659:
  3663   0018A4  AE15               	btfss	(___lwmod@divisor+1)^0,7,c
  3664   0018A6  EF57  F00C         	goto	u1571
  3665   0018AA  EF59  F00C         	goto	u1570
  3666   0018AE                     u1571:
  3667   0018AE  EF4E  F00C         	goto	l2657
  3668   0018B2                     u1570:
  3669   0018B2                     l2661:
  3670   0018B2  5014               	movf	___lwmod@divisor^0,w,c
  3671   0018B4  5C12               	subwf	___lwmod@dividend^0,w,c
  3672   0018B6  5015               	movf	(___lwmod@divisor+1)^0,w,c
  3673   0018B8  5813               	subwfb	(___lwmod@dividend+1)^0,w,c
  3674   0018BA  A0D8               	btfss	status,0,c
  3675   0018BC  EF62  F00C         	goto	u1581
  3676   0018C0  EF64  F00C         	goto	u1580
  3677   0018C4                     u1581:
  3678   0018C4  EF68  F00C         	goto	l2665
  3679   0018C8                     u1580:
  3680   0018C8  5014               	movf	___lwmod@divisor^0,w,c
  3681   0018CA  5E12               	subwf	___lwmod@dividend^0,f,c
  3682   0018CC  5015               	movf	(___lwmod@divisor+1)^0,w,c
  3683   0018CE  5A13               	subwfb	(___lwmod@dividend+1)^0,f,c
  3684   0018D0                     l2665:
  3685   0018D0  90D8               	bcf	status,0,c
  3686   0018D2  3215               	rrcf	(___lwmod@divisor+1)^0,f,c
  3687   0018D4  3214               	rrcf	___lwmod@divisor^0,f,c
  3688   0018D6  2E16               	decfsz	___lwmod@counter^0,f,c
  3689   0018D8  EF59  F00C         	goto	l2661
  3690   0018DC                     l1150:
  3691   0018DC  C012  F012         	movff	___lwmod@dividend,?___lwmod
  3692   0018E0  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
  3693   0018E4  0012               	return		;funcret
  3694   0018E6                     __end_of___lwmod:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function ___lwdiv *****************
  3698 ;; Defined at:
  3699 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  dividend        2   10[COMRAM] unsigned int 
  3702 ;;  divisor         2   12[COMRAM] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  quotient        2   14[COMRAM] unsigned int 
  3705 ;;  counter         1   16[COMRAM] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   10[COMRAM] unsigned int 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;Total ram usage:        7 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 2
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_getHSVval
  3726 ;;		_setMotorPWM
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text24
  3731   00180E                     __ptext24:
  3732                           	callstack 0
  3733   00180E                     ___lwdiv:
  3734                           	callstack 27
  3735   00180E  0E00               	movlw	0
  3736   001810  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  3737   001812  0E00               	movlw	0
  3738   001814  6E0F               	movwf	___lwdiv@quotient^0,c
  3739   001816  500D               	movf	___lwdiv@divisor^0,w,c
  3740   001818  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3741   00181A  B4D8               	btfsc	status,2,c
  3742   00181C  EF12  F00C         	goto	u1531
  3743   001820  EF14  F00C         	goto	u1530
  3744   001824                     u1531:
  3745   001824  EF3C  F00C         	goto	l1140
  3746   001828                     u1530:
  3747   001828  0E01               	movlw	1
  3748   00182A  6E11               	movwf	___lwdiv@counter^0,c
  3749   00182C  EF1C  F00C         	goto	l2639
  3750   001830                     l2637:
  3751   001830  90D8               	bcf	status,0,c
  3752   001832  360D               	rlcf	___lwdiv@divisor^0,f,c
  3753   001834  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3754   001836  2A11               	incf	___lwdiv@counter^0,f,c
  3755   001838                     l2639:
  3756   001838  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  3757   00183A  EF21  F00C         	goto	u1541
  3758   00183E  EF23  F00C         	goto	u1540
  3759   001842                     u1541:
  3760   001842  EF18  F00C         	goto	l2637
  3761   001846                     u1540:
  3762   001846                     l2641:
  3763   001846  90D8               	bcf	status,0,c
  3764   001848  360F               	rlcf	___lwdiv@quotient^0,f,c
  3765   00184A  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3766   00184C  500D               	movf	___lwdiv@divisor^0,w,c
  3767   00184E  5C0B               	subwf	___lwdiv@dividend^0,w,c
  3768   001850  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3769   001852  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3770   001854  A0D8               	btfss	status,0,c
  3771   001856  EF2F  F00C         	goto	u1551
  3772   00185A  EF31  F00C         	goto	u1550
  3773   00185E                     u1551:
  3774   00185E  EF36  F00C         	goto	l2649
  3775   001862                     u1550:
  3776   001862  500D               	movf	___lwdiv@divisor^0,w,c
  3777   001864  5E0B               	subwf	___lwdiv@dividend^0,f,c
  3778   001866  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3779   001868  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3780   00186A  800F               	bsf	___lwdiv@quotient^0,0,c
  3781   00186C                     l2649:
  3782   00186C  90D8               	bcf	status,0,c
  3783   00186E  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3784   001870  320D               	rrcf	___lwdiv@divisor^0,f,c
  3785   001872  2E11               	decfsz	___lwdiv@counter^0,f,c
  3786   001874  EF23  F00C         	goto	l2641
  3787   001878                     l1140:
  3788   001878  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  3789   00187C  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3790   001880  0012               	return		;funcret
  3791   001882                     __end_of___lwdiv:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function ___awdiv *****************
  3795 ;; Defined at:
  3796 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  dividend        2    4[COMRAM] int 
  3799 ;;  divisor         2    6[COMRAM] int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  quotient        2   10[COMRAM] int 
  3802 ;;  sign            1    9[COMRAM] unsigned char 
  3803 ;;  counter         1    8[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2    4[COMRAM] int 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;Total ram usage:        8 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 2
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_getHSVval
  3824 ;;		_vfpfcnvrt
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text25
  3829   0014D2                     __ptext25:
  3830                           	callstack 0
  3831   0014D2                     ___awdiv:
  3832                           	callstack 25
  3833   0014D2  0E00               	movlw	0
  3834   0014D4  6E0A               	movwf	___awdiv@sign^0,c
  3835   0014D6  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  3836   0014D8  EF72  F00A         	goto	u1820
  3837   0014DC  EF70  F00A         	goto	u1821
  3838   0014E0                     u1821:
  3839   0014E0  EF78  F00A         	goto	l3111
  3840   0014E4                     u1820:
  3841   0014E4  6C07               	negf	___awdiv@divisor^0,c
  3842   0014E6  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  3843   0014E8  B0D8               	btfsc	status,0,c
  3844   0014EA  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  3845   0014EC  0E01               	movlw	1
  3846   0014EE  6E0A               	movwf	___awdiv@sign^0,c
  3847   0014F0                     l3111:
  3848   0014F0  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  3849   0014F2  EF7F  F00A         	goto	u1830
  3850   0014F6  EF7D  F00A         	goto	u1831
  3851   0014FA                     u1831:
  3852   0014FA  EF85  F00A         	goto	l3117
  3853   0014FE                     u1830:
  3854   0014FE  6C05               	negf	___awdiv@dividend^0,c
  3855   001500  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  3856   001502  B0D8               	btfsc	status,0,c
  3857   001504  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  3858   001506  0E01               	movlw	1
  3859   001508  1A0A               	xorwf	___awdiv@sign^0,f,c
  3860   00150A                     l3117:
  3861   00150A  0E00               	movlw	0
  3862   00150C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  3863   00150E  0E00               	movlw	0
  3864   001510  6E0B               	movwf	___awdiv@quotient^0,c
  3865   001512  5007               	movf	___awdiv@divisor^0,w,c
  3866   001514  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  3867   001516  B4D8               	btfsc	status,2,c
  3868   001518  EF90  F00A         	goto	u1841
  3869   00151C  EF92  F00A         	goto	u1840
  3870   001520                     u1841:
  3871   001520  EFBA  F00A         	goto	l3139
  3872   001524                     u1840:
  3873   001524  0E01               	movlw	1
  3874   001526  6E09               	movwf	___awdiv@counter^0,c
  3875   001528  EF9A  F00A         	goto	l3125
  3876   00152C                     l3123:
  3877   00152C  90D8               	bcf	status,0,c
  3878   00152E  3607               	rlcf	___awdiv@divisor^0,f,c
  3879   001530  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  3880   001532  2A09               	incf	___awdiv@counter^0,f,c
  3881   001534                     l3125:
  3882   001534  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  3883   001536  EF9F  F00A         	goto	u1851
  3884   00153A  EFA1  F00A         	goto	u1850
  3885   00153E                     u1851:
  3886   00153E  EF96  F00A         	goto	l3123
  3887   001542                     u1850:
  3888   001542                     l3127:
  3889   001542  90D8               	bcf	status,0,c
  3890   001544  360B               	rlcf	___awdiv@quotient^0,f,c
  3891   001546  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  3892   001548  5007               	movf	___awdiv@divisor^0,w,c
  3893   00154A  5C05               	subwf	___awdiv@dividend^0,w,c
  3894   00154C  5008               	movf	(___awdiv@divisor+1)^0,w,c
  3895   00154E  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  3896   001550  A0D8               	btfss	status,0,c
  3897   001552  EFAD  F00A         	goto	u1861
  3898   001556  EFAF  F00A         	goto	u1860
  3899   00155A                     u1861:
  3900   00155A  EFB4  F00A         	goto	l3135
  3901   00155E                     u1860:
  3902   00155E  5007               	movf	___awdiv@divisor^0,w,c
  3903   001560  5E05               	subwf	___awdiv@dividend^0,f,c
  3904   001562  5008               	movf	(___awdiv@divisor+1)^0,w,c
  3905   001564  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  3906   001566  800B               	bsf	___awdiv@quotient^0,0,c
  3907   001568                     l3135:
  3908   001568  90D8               	bcf	status,0,c
  3909   00156A  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  3910   00156C  3207               	rrcf	___awdiv@divisor^0,f,c
  3911   00156E  2E09               	decfsz	___awdiv@counter^0,f,c
  3912   001570  EFA1  F00A         	goto	l3127
  3913   001574                     l3139:
  3914   001574  500A               	movf	___awdiv@sign^0,w,c
  3915   001576  B4D8               	btfsc	status,2,c
  3916   001578  EFC0  F00A         	goto	u1871
  3917   00157C  EFC2  F00A         	goto	u1870
  3918   001580                     u1871:
  3919   001580  EFC6  F00A         	goto	l3143
  3920   001584                     u1870:
  3921   001584  6C0B               	negf	___awdiv@quotient^0,c
  3922   001586  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  3923   001588  B0D8               	btfsc	status,0,c
  3924   00158A  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  3925   00158C                     l3143:
  3926   00158C  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  3927   001590  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  3928   001594  0012               	return		;funcret
  3929   001596                     __end_of___awdiv:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _color_click_init *****************
  3933 ;; Defined at:
  3934 ;;		line 5 in file "color.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:        1 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		_I2C_2_Master_Init
  3957 ;;		_color_writetoaddr
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text26
  3964   001C52                     __ptext26:
  3965                           	callstack 0
  3966   001C52                     _color_click_init:
  3967                           	callstack 25
  3968   001C52                     
  3969                           ;color.c: 8:     I2C_2_Master_Init();
  3970   001C52  EC59  F00E         	call	_I2C_2_Master_Init	;wreg free
  3971   001C56                     
  3972                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3973   001C56  0E01               	movlw	1
  3974   001C58  6E07               	movwf	color_writetoaddr@value^0,c
  3975   001C5A  0E00               	movlw	0
  3976   001C5C  ECE6  F00E         	call	_color_writetoaddr
  3977   001C60                     
  3978                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3979   001C60  0E3F               	movlw	63
  3980   001C62  6E09               	movwf	??_color_click_init^0,c
  3981   001C64  0E55               	movlw	85
  3982   001C66                     u2217:
  3983   001C66  2EE8               	decfsz	wreg,f,c
  3984   001C68  D7FE               	bra	u2217
  3985   001C6A  2E09               	decfsz	??_color_click_init^0,f,c
  3986   001C6C  D7FC               	bra	u2217
  3987   001C6E  0000               	nop	
  3988   001C70                     
  3989                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3990   001C70  0E03               	movlw	3
  3991   001C72  6E07               	movwf	color_writetoaddr@value^0,c
  3992   001C74  0E00               	movlw	0
  3993   001C76  ECE6  F00E         	call	_color_writetoaddr
  3994   001C7A                     
  3995                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3996   001C7A  0ED5               	movlw	213
  3997   001C7C  6E07               	movwf	color_writetoaddr@value^0,c
  3998   001C7E  0E01               	movlw	1
  3999   001C80  ECE6  F00E         	call	_color_writetoaddr
  4000   001C84  0012               	return		;funcret
  4001   001C86                     __end_of_color_click_init:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _color_writetoaddr *****************
  4005 ;; Defined at:
  4006 ;;		line 21 in file "color.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  address         1    wreg     unsigned char 
  4009 ;;  value           1    6[COMRAM] unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  address         1    7[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;Total ram usage:        2 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 4
  4028 ;; This function calls:
  4029 ;;		_I2C_2_Master_Start
  4030 ;;		_I2C_2_Master_Stop
  4031 ;;		_I2C_2_Master_Write
  4032 ;; This function is called by:
  4033 ;;		_color_click_init
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text27
  4038   001DCC                     __ptext27:
  4039                           	callstack 0
  4040   001DCC                     _color_writetoaddr:
  4041                           	callstack 25
  4042                           
  4043                           ;incstack = 0
  4044                           ;color_writetoaddr@address stored from wreg
  4045   001DCC  6E08               	movwf	color_writetoaddr@address^0,c
  4046   001DCE                     
  4047                           ;color.c: 22:     I2C_2_Master_Start();
  4048   001DCE  EC67  F00F         	call	_I2C_2_Master_Start	;wreg free
  4049                           
  4050                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  4051   001DD2  0E52               	movlw	82
  4052   001DD4  EC57  F00F         	call	_I2C_2_Master_Write
  4053                           
  4054                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  4055   001DD8  5008               	movf	color_writetoaddr@address^0,w,c
  4056   001DDA  0980               	iorlw	128
  4057   001DDC  EC57  F00F         	call	_I2C_2_Master_Write
  4058                           
  4059                           ;color.c: 25:     I2C_2_Master_Write(value);
  4060   001DE0  5007               	movf	color_writetoaddr@value^0,w,c
  4061   001DE2  EC57  F00F         	call	_I2C_2_Master_Write
  4062                           
  4063                           ;color.c: 26:     I2C_2_Master_Stop();
  4064   001DE6  EC62  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4065   001DEA  0012               	return		;funcret
  4066   001DEC                     __end_of_color_writetoaddr:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _I2C_2_Master_Write *****************
  4070 ;; Defined at:
  4071 ;;		line 45 in file "i2c.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  data_byte       1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  data_byte       1    5[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 3
  4092 ;; This function calls:
  4093 ;;		_I2C_2_Master_Idle
  4094 ;; This function is called by:
  4095 ;;		_color_writetoaddr
  4096 ;;		_color_read_Red
  4097 ;;		_color_read_Blue
  4098 ;;		_color_read_Green
  4099 ;;		_color_read_Clear
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text28
  4104   001EAE                     __ptext28:
  4105                           	callstack 0
  4106   001EAE                     _I2C_2_Master_Write:
  4107                           	callstack 25
  4108                           
  4109                           ;incstack = 0
  4110                           ;I2C_2_Master_Write@data_byte stored from wreg
  4111   001EAE  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4112   001EB0                     
  4113                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4114   001EB0  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4115   001EB4                     
  4116                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4117   001EB4  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4118   001EB8  0012               	return		;funcret
  4119   001EBA                     __end_of_I2C_2_Master_Write:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _I2C_2_Master_Stop *****************
  4123 ;; Defined at:
  4124 ;;		line 39 in file "i2c.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; Hardware stack levels required when called: 3
  4145 ;; This function calls:
  4146 ;;		_I2C_2_Master_Idle
  4147 ;; This function is called by:
  4148 ;;		_color_writetoaddr
  4149 ;;		_color_read_Red
  4150 ;;		_color_read_Blue
  4151 ;;		_color_read_Green
  4152 ;;		_color_read_Clear
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text29
  4157   001EC4                     __ptext29:
  4158                           	callstack 0
  4159   001EC4                     _I2C_2_Master_Stop:
  4160                           	callstack 25
  4161   001EC4                     
  4162                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4163   001EC4  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4164   001EC8                     
  4165                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4166   001EC8  010E               	movlb	14	; () banked
  4167   001ECA  85DA               	bsf	218,2,b	;volatile
  4168   001ECC                     
  4169                           ; BSR set to: 14
  4170   001ECC  0012               	return		;funcret
  4171   001ECE                     __end_of_I2C_2_Master_Stop:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _I2C_2_Master_Start *****************
  4175 ;; Defined at:
  4176 ;;		line 27 in file "i2c.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 3
  4197 ;; This function calls:
  4198 ;;		_I2C_2_Master_Idle
  4199 ;; This function is called by:
  4200 ;;		_color_writetoaddr
  4201 ;;		_color_read_Red
  4202 ;;		_color_read_Blue
  4203 ;;		_color_read_Green
  4204 ;;		_color_read_Clear
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text30
  4209   001ECE                     __ptext30:
  4210                           	callstack 0
  4211   001ECE                     _I2C_2_Master_Start:
  4212                           	callstack 25
  4213   001ECE                     
  4214                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4215   001ECE  ECAC  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4216   001ED2                     
  4217                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4218   001ED2  010E               	movlb	14	; () banked
  4219   001ED4  81DA               	bsf	218,0,b	;volatile
  4220   001ED6                     
  4221                           ; BSR set to: 14
  4222   001ED6  0012               	return		;funcret
  4223   001ED8                     __end_of_I2C_2_Master_Start:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _I2C_2_Master_Idle *****************
  4227 ;; Defined at:
  4228 ;;		line 22 in file "i2c.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 2
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_I2C_2_Master_Start
  4253 ;;		_I2C_2_Master_RepStart
  4254 ;;		_I2C_2_Master_Stop
  4255 ;;		_I2C_2_Master_Write
  4256 ;;		_I2C_2_Master_Read
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text31
  4261   001D58                     __ptext31:
  4262                           	callstack 0
  4263   001D58                     _I2C_2_Master_Idle:
  4264                           	callstack 25
  4265   001D58                     l261:
  4266   001D58  010E               	movlb	14	; () banked
  4267   001D5A  B5D8               	btfsc	216,2,b	;volatile
  4268   001D5C  EFB2  F00E         	goto	u991
  4269   001D60  EFB4  F00E         	goto	u990
  4270   001D64                     u991:
  4271   001D64  EFAC  F00E         	goto	l261
  4272   001D68                     u990:
  4273   001D68                     
  4274                           ; BSR set to: 14
  4275   001D68  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4276   001D6C  0E1F               	movlw	31
  4277   001D6E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4278   001D70  A4D8               	btfss	status,2,c
  4279   001D72  EFBD  F00E         	goto	u1001
  4280   001D76  EFBF  F00E         	goto	u1000
  4281   001D7A                     u1001:
  4282   001D7A  EFAC  F00E         	goto	l261
  4283   001D7E                     u1000:
  4284   001D7E                     
  4285                           ; BSR set to: 14
  4286   001D7E  0012               	return		;funcret
  4287   001D80                     __end_of_I2C_2_Master_Idle:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _I2C_2_Master_Init *****************
  4291 ;; Defined at:
  4292 ;;		line 4 in file "i2c.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 2
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_color_click_init
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text32
  4321   001CB2                     __ptext32:
  4322                           	callstack 0
  4323   001CB2                     _I2C_2_Master_Init:
  4324                           	callstack 27
  4325   001CB2                     
  4326                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4327   001CB2  010E               	movlb	14	; () banked
  4328   001CB4  51D9               	movf	217,w,b	;volatile
  4329   001CB6  0BF0               	andlw	-16
  4330   001CB8  0908               	iorlw	8
  4331   001CBA  6FD9               	movwf	217,b	;volatile
  4332   001CBC                     
  4333                           ; BSR set to: 14
  4334                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4335   001CBC  8BD9               	bsf	217,5,b	;volatile
  4336                           
  4337                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4338   001CBE  0E9F               	movlw	159
  4339   001CC0  6FD6               	movwf	214,b	;volatile
  4340   001CC2                     
  4341                           ; BSR set to: 14
  4342                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4343   001CC2  8A84               	bsf	132,5,c	;volatile
  4344   001CC4                     
  4345                           ; BSR set to: 14
  4346                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4347   001CC4  8C84               	bsf	132,6,c	;volatile
  4348   001CC6                     
  4349                           ; BSR set to: 14
  4350                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4351   001CC6  9BA7               	bcf	167,5,b	;volatile
  4352   001CC8                     
  4353                           ; BSR set to: 14
  4354                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4355   001CC8  9DA7               	bcf	167,6,b	;volatile
  4356                           
  4357                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4358   001CCA  0E1D               	movlw	29
  4359   001CCC  6F1D               	movwf	29,b	;volatile
  4360                           
  4361                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4362   001CCE  0E1E               	movlw	30
  4363   001CD0  6F1C               	movwf	28,b	;volatile
  4364                           
  4365                           ;i2c.c: 18:   RD5PPS=0x1C;
  4366   001CD2  0E1C               	movlw	28
  4367   001CD4  6F6F               	movwf	111,b	;volatile
  4368                           
  4369                           ;i2c.c: 19:   RD6PPS=0x1B;
  4370   001CD6  0E1B               	movlw	27
  4371   001CD8  6F70               	movwf	112,b	;volatile
  4372   001CDA                     
  4373                           ; BSR set to: 14
  4374   001CDA  0012               	return		;funcret
  4375   001CDC                     __end_of_I2C_2_Master_Init:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _buggy_lights_init *****************
  4379 ;; Defined at:
  4380 ;;		line 4 in file "buggy_lights.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		None
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 2
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text33
  4409   001ACE                     __ptext33:
  4410                           	callstack 0
  4411   001ACE                     _buggy_lights_init:
  4412                           	callstack 28
  4413   001ACE                     
  4414                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  4415   001ACE  9884               	bcf	132,4,c	;volatile
  4416                           
  4417                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  4418   001AD0  9288               	bcf	136,1,c	;volatile
  4419                           
  4420                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  4421   001AD2  9684               	bcf	132,3,c	;volatile
  4422                           
  4423                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  4424   001AD4  9086               	bcf	134,0,c	;volatile
  4425                           
  4426                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  4427   001AD6  9088               	bcf	136,0,c	;volatile
  4428                           
  4429                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  4430   001AD8  887C               	bsf	124,4,c	;volatile
  4431                           
  4432                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  4433   001ADA  8280               	bsf	128,1,c	;volatile
  4434                           
  4435                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  4436   001ADC  867C               	bsf	124,3,c	;volatile
  4437                           
  4438                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  4439   001ADE  807E               	bsf	126,0,c	;volatile
  4440                           
  4441                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  4442   001AE0  8080               	bsf	128,0,c	;volatile
  4443                           
  4444                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  4445   001AE2  9E84               	bcf	132,7,c	;volatile
  4446                           
  4447                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  4448   001AE4  9688               	bcf	136,3,c	;volatile
  4449                           
  4450                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  4451   001AE6  8E7C               	bsf	124,7,c	;volatile
  4452                           
  4453                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  4454   001AE8  8680               	bsf	128,3,c	;volatile
  4455                           
  4456                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  4457   001AEA  9081               	bcf	129,0,c	;volatile
  4458                           
  4459                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  4460   001AEC  9483               	bcf	131,2,c	;volatile
  4461                           
  4462                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  4463   001AEE  9084               	bcf	132,0,c	;volatile
  4464                           
  4465                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  4466   001AF0  8079               	bsf	121,0,c	;volatile
  4467                           
  4468                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  4469   001AF2  847B               	bsf	123,2,c	;volatile
  4470                           
  4471                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  4472   001AF4  807C               	bsf	124,0,c	;volatile
  4473                           
  4474                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  4475   001AF6  9281               	bcf	129,1,c	;volatile
  4476                           
  4477                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  4478   001AF8  9C83               	bcf	131,6,c	;volatile
  4479                           
  4480                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  4481   001AFA  9488               	bcf	136,2,c	;volatile
  4482                           
  4483                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  4484   001AFC  8279               	bsf	121,1,c	;volatile
  4485                           
  4486                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  4487   001AFE  8C7B               	bsf	123,6,c	;volatile
  4488                           
  4489                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  4490   001B00  8480               	bsf	128,2,c	;volatile
  4491                           
  4492                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  4493   001B02  9287               	bcf	135,1,c	;volatile
  4494                           
  4495                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  4496   001B04  9881               	bcf	129,4,c	;volatile
  4497                           
  4498                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  4499   001B06  9E86               	bcf	134,7,c	;volatile
  4500                           
  4501                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  4502   001B08  827F               	bsf	127,1,c	;volatile
  4503                           
  4504                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  4505   001B0A  8879               	bsf	121,4,c	;volatile
  4506                           
  4507                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  4508   001B0C  8E7E               	bsf	126,7,c	;volatile
  4509                           
  4510                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  4511   001B0E  9087               	bcf	135,0,c	;volatile
  4512                           
  4513                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  4514   001B10  9E85               	bcf	133,7,c	;volatile
  4515                           
  4516                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  4517   001B12  9681               	bcf	129,3,c	;volatile
  4518                           
  4519                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  4520   001B14  807F               	bsf	127,0,c	;volatile
  4521                           
  4522                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  4523   001B16  8E7D               	bsf	125,7,c	;volatile
  4524                           
  4525                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  4526   001B18  8679               	bsf	121,3,c	;volatile
  4527   001B1A  0012               	return		;funcret
  4528   001B1C                     __end_of_buggy_lights_init:
  4529                           	callstack 0
  4530                           
  4531 ;; *************** function _TxBufferedString *****************
  4532 ;; Defined at:
  4533 ;;		line 105 in file "serial.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  string          1    5[COMRAM] PTR unsigned char 
  4536 ;;		 -> main@display(50), 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 3
  4555 ;; This function calls:
  4556 ;;		_putCharToTxBuf
  4557 ;; This function is called by:
  4558 ;;		_main
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text34
  4563   001CDC                     __ptext34:
  4564                           	callstack 0
  4565   001CDC                     _TxBufferedString:
  4566                           	callstack 27
  4567   001CDC                     
  4568                           ;serial.c: 107:     while(*string != 0) {
  4569   001CDC  EF77  F00E         	goto	l2835
  4570   001CE0                     l2831:
  4571                           
  4572                           ;serial.c: 108:         putCharToTxBuf(*string++);
  4573   001CE0  5006               	movf	TxBufferedString@string^0,w,c
  4574   001CE2  6ED9               	movwf	fsr2l,c
  4575   001CE4  6ADA               	clrf	fsr2h,c
  4576   001CE6  50DF               	movf	indf2,w,c
  4577   001CE8  EC83  F00E         	call	_putCharToTxBuf
  4578   001CEC  2A06               	incf	TxBufferedString@string^0,f,c
  4579   001CEE                     l2835:
  4580                           
  4581                           ;serial.c: 107:     while(*string != 0) {
  4582   001CEE  5006               	movf	TxBufferedString@string^0,w,c
  4583   001CF0  6ED9               	movwf	fsr2l,c
  4584   001CF2  6ADA               	clrf	fsr2h,c
  4585   001CF4  50DF               	movf	indf2,w,c
  4586   001CF6  A4D8               	btfss	status,2,c
  4587   001CF8  EF80  F00E         	goto	u1651
  4588   001CFC  EF82  F00E         	goto	u1650
  4589   001D00                     u1651:
  4590   001D00  EF70  F00E         	goto	l2831
  4591   001D04                     u1650:
  4592   001D04  0012               	return		;funcret
  4593   001D06                     __end_of_TxBufferedString:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _putCharToTxBuf *****************
  4597 ;; Defined at:
  4598 ;;		line 92 in file "serial.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  byte            1    wreg     unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  byte            1    4[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        1 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 2
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_TxBufferedString
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text35
  4627   001D06                     __ptext35:
  4628                           	callstack 0
  4629   001D06                     _putCharToTxBuf:
  4630                           	callstack 27
  4631                           
  4632                           ;incstack = 0
  4633                           ;putCharToTxBuf@byte stored from wreg
  4634   001D06  6E05               	movwf	putCharToTxBuf@byte^0,c
  4635   001D08                     
  4636                           ;serial.c: 93:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4637   001D08  0E3B               	movlw	59
  4638   001D0A  644E               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4639   001D0C  EF8A  F00E         	goto	u1501
  4640   001D10  EF8C  F00E         	goto	u1500
  4641   001D14                     u1501:
  4642   001D14  EF8E  F00E         	goto	l2617
  4643   001D18                     u1500:
  4644   001D18  0E00               	movlw	0
  4645   001D1A  6E4E               	movwf	_TxBufWriteCnt^0,c	;volatile
  4646   001D1C                     l2617:
  4647                           
  4648                           ;serial.c: 94:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4649   001D1C  0E00               	movlw	low _EUSART4TXbuf
  4650   001D1E  244E               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4651   001D20  6ED9               	movwf	fsr2l,c
  4652   001D22  6ADA               	clrf	fsr2h,c
  4653   001D24  0E01               	movlw	high _EUSART4TXbuf
  4654   001D26  22DA               	addwfc	fsr2h,f,c
  4655   001D28  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  4656   001D2C  2A4E               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4657   001D2E  0012               	return		;funcret
  4658   001D30                     __end_of_putCharToTxBuf:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _Timer0_init *****************
  4662 ;; Defined at:
  4663 ;;		line 7 in file "timers.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:        0 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 2
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text36
  4692   001DEC                     __ptext36:
  4693                           	callstack 0
  4694   001DEC                     _Timer0_init:
  4695                           	callstack 28
  4696   001DEC                     
  4697                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4698   001DEC  50D6               	movf	214,w,c	;volatile
  4699   001DEE  0B1F               	andlw	-225
  4700   001DF0  0940               	iorlw	64
  4701   001DF2  6ED6               	movwf	214,c	;volatile
  4702   001DF4                     
  4703                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4704   001DF4  88D6               	bsf	214,4,c	;volatile
  4705   001DF6                     
  4706                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  4707   001DF6  88D5               	bsf	213,4,c	;volatile
  4708                           
  4709                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  4710   001DF8  50D6               	movf	214,w,c	;volatile
  4711   001DFA  0BF0               	andlw	-16
  4712   001DFC  090E               	iorlw	14
  4713   001DFE  6ED6               	movwf	214,c	;volatile
  4714                           
  4715                           ;timers.c: 20:     TMR0H = 0;
  4716   001E00  0E00               	movlw	0
  4717   001E02  6ED4               	movwf	212,c	;volatile
  4718                           
  4719                           ;timers.c: 21:     TMR0L = 0;
  4720   001E04  0E00               	movlw	0
  4721   001E06  6ED3               	movwf	211,c	;volatile
  4722   001E08                     
  4723                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  4724   001E08  8ED5               	bsf	213,7,c	;volatile
  4725   001E0A  0012               	return		;funcret
  4726   001E0C                     __end_of_Timer0_init:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _Interrupts_init *****************
  4730 ;; Defined at:
  4731 ;;		line 6 in file "interrupts.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		None
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;Total ram usage:        0 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 2
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text37
  4760   001EA0                     __ptext37:
  4761                           	callstack 0
  4762   001EA0                     _Interrupts_init:
  4763                           	callstack 28
  4764   001EA0                     
  4765                           ;interrupts.c: 9:     PIE4bits.RC4IE = 1;
  4766   001EA0  010E               	movlb	14	; () banked
  4767   001EA2  872D               	bsf	45,3,b	;volatile
  4768                           
  4769                           ;interrupts.c: 10:     PIE4bits.TX4IE = 1;
  4770   001EA4  852D               	bsf	45,2,b	;volatile
  4771                           
  4772                           ;interrupts.c: 12:     PIE0bits.TMR0IE = 1;
  4773   001EA6  8B29               	bsf	41,5,b	;volatile
  4774                           
  4775                           ;interrupts.c: 13:     INTCONbits.PEIE = 1;
  4776   001EA8  8CF2               	bsf	242,6,c	;volatile
  4777                           
  4778                           ;interrupts.c: 14:     INTCONbits.GIE = 1;
  4779   001EAA  8EF2               	bsf	242,7,c	;volatile
  4780   001EAC                     
  4781                           ; BSR set to: 14
  4782   001EAC  0012               	return		;funcret
  4783   001EAE                     __end_of_Interrupts_init:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _HighISR *****************
  4787 ;; Defined at:
  4788 ;;		line 19 in file "interrupts.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;Total ram usage:        2 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 1
  4809 ;; This function calls:
  4810 ;;		_getCharFromTxBuf
  4811 ;;		_putCharToRxBuf
  4812 ;;		i2_isDataInTxBuf
  4813 ;; This function is called by:
  4814 ;;		Interrupt level 2
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	intcode
  4819   000008                     __pintcode:
  4820                           	callstack 0
  4821   000008                     _HighISR:
  4822                           	callstack 24
  4823                           
  4824                           ; BSR set to: 14
  4825                           ;incstack = 0
  4826   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4827   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  4828   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  4829   000012                     
  4830                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF) {
  4831   000012  010E               	movlb	14	; () banked
  4832   000014  AB33               	btfss	51,5,b	;volatile
  4833   000016  EF0F  F000         	goto	i2u178_41
  4834   00001A  EF11  F000         	goto	i2u178_40
  4835   00001E                     i2u178_41:
  4836   00001E  EF12  F000         	goto	i2l640
  4837   000022                     i2u178_40:
  4838   000022                     
  4839                           ; BSR set to: 14
  4840                           ;interrupts.c: 30:         PIR0bits.TMR0IF = 0;
  4841   000022  9B33               	bcf	51,5,b	;volatile
  4842   000024                     i2l640:
  4843                           
  4844                           ; BSR set to: 14
  4845                           ;interrupts.c: 35:     if (PIR4bits.TX4IF) {
  4846   000024  A537               	btfss	55,2,b	;volatile
  4847   000026  EF17  F000         	goto	i2u179_41
  4848   00002A  EF19  F000         	goto	i2u179_40
  4849   00002E                     i2u179_41:
  4850   00002E  EF29  F000         	goto	i2l643
  4851   000032                     i2u179_40:
  4852   000032                     
  4853                           ; BSR set to: 14
  4854                           ;interrupts.c: 36:         TX4REG = getCharFromTxBuf();
  4855   000032  EC43  F00E         	call	_getCharFromTxBuf	;wreg free
  4856   000036  010E               	movlb	14	; () banked
  4857   000038  6FE4               	movwf	228,b	;volatile
  4858   00003A                     
  4859                           ; BSR set to: 14
  4860                           ;interrupts.c: 37:         if (!isDataInTxBuf()) {PIE4bits.TX4IE = 0;}
  4861   00003A  EC2E  F00F         	call	i2_isDataInTxBuf	;wreg free
  4862   00003E  0900               	iorlw	0
  4863   000040  A4D8               	btfss	status,2,c
  4864   000042  EF25  F000         	goto	i2u180_41
  4865   000046  EF27  F000         	goto	i2u180_40
  4866   00004A                     i2u180_41:
  4867   00004A  EF29  F000         	goto	i2l643
  4868   00004E                     i2u180_40:
  4869   00004E  010E               	movlb	14	; () banked
  4870   000050  952D               	bcf	45,2,b	;volatile
  4871   000052                     i2l643:
  4872                           
  4873                           ;interrupts.c: 40:     if (PIR4bits.RC4IF) {putCharToRxBuf(RC4REG);}
  4874   000052  010E               	movlb	14	; () banked
  4875   000054  A737               	btfss	55,3,b	;volatile
  4876   000056  EF2F  F000         	goto	i2u181_41
  4877   00005A  EF31  F000         	goto	i2u181_40
  4878   00005E                     i2u181_41:
  4879   00005E  EF34  F000         	goto	i2l646
  4880   000062                     i2u181_40:
  4881   000062                     
  4882                           ; BSR set to: 14
  4883   000062  51E3               	movf	227,w,b	;volatile
  4884   000064  ECD3  F00E         	call	_putCharToRxBuf
  4885   000068                     i2l646:
  4886   000068  C004  FFDA         	movff	??_HighISR+1,fsr2h
  4887   00006C  C003  FFD9         	movff	??_HighISR,fsr2l
  4888   000070  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4889   000072  0011               	retfie		f
  4890   000074                     __end_of_HighISR:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function i2_isDataInTxBuf *****************
  4894 ;; Defined at:
  4895 ;;		line 100 in file "serial.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      unsigned char 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_HighISR
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text39
  4923   001E5C                     __ptext39:
  4924                           	callstack 0
  4925   001E5C                     i2_isDataInTxBuf:
  4926                           	callstack 24
  4927   001E5C                     
  4928                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  4929   001E5C  504D               	movf	_TxBufReadCnt^0,w,c	;volatile
  4930   001E5E  184E               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4931   001E60  A4D8               	btfss	status,2,c
  4932   001E62  EF35  F00F         	goto	i2u75_41
  4933   001E66  EF38  F00F         	goto	i2u75_40
  4934   001E6A                     i2u75_41:
  4935   001E6A  0E01               	movlw	1
  4936   001E6C  EF39  F00F         	goto	i2u76_40
  4937   001E70                     i2u75_40:
  4938   001E70  0E00               	movlw	0
  4939   001E72                     i2u76_40:
  4940   001E72  0012               	return		;funcret
  4941   001E74                     __end_ofi2_isDataInTxBuf:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _putCharToRxBuf *****************
  4945 ;; Defined at:
  4946 ;;		line 72 in file "serial.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  byte            1    wreg     unsigned char 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  byte            1    0[COMRAM] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;Total ram usage:        1 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_HighISR
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text40
  4974   001DA6                     __ptext40:
  4975                           	callstack 0
  4976   001DA6                     _putCharToRxBuf:
  4977                           	callstack 24
  4978                           
  4979                           ;incstack = 0
  4980                           ;putCharToRxBuf@byte stored from wreg
  4981   001DA6  6E01               	movwf	putCharToRxBuf@byte^0,c
  4982   001DA8                     
  4983                           ;serial.c: 73:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  4984   001DA8  0E13               	movlw	19
  4985   001DAA  6450               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4986   001DAC  EFDA  F00E         	goto	i2u167_41
  4987   001DB0  EFDC  F00E         	goto	i2u167_40
  4988   001DB4                     i2u167_41:
  4989   001DB4  EFDE  F00E         	goto	i2l2845
  4990   001DB8                     i2u167_40:
  4991   001DB8  0E00               	movlw	0
  4992   001DBA  6E50               	movwf	_RxBufWriteCnt^0,c	;volatile
  4993   001DBC                     i2l2845:
  4994                           
  4995                           ;serial.c: 74:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4996   001DBC  5050               	movf	_RxBufWriteCnt^0,w,c
  4997   001DBE  0FC1               	addlw	low _EUSART4RXbuf
  4998   001DC0  6ED9               	movwf	fsr2l,c
  4999   001DC2  6ADA               	clrf	fsr2h,c
  5000   001DC4  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  5001   001DC8  2A50               	incf	_RxBufWriteCnt^0,f,c	;volatile
  5002   001DCA  0012               	return		;funcret
  5003   001DCC                     __end_of_putCharToRxBuf:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _getCharFromTxBuf *****************
  5007 ;; Defined at:
  5008 ;;		line 86 in file "serial.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5026 ;;Total ram usage:        2 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_HighISR
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text41
  5036   001C86                     __ptext41:
  5037                           	callstack 0
  5038   001C86                     _getCharFromTxBuf:
  5039                           	callstack 24
  5040   001C86                     
  5041                           ;serial.c: 87:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  5042   001C86  0E3B               	movlw	59
  5043   001C88  644D               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  5044   001C8A  EF49  F00E         	goto	i2u168_41
  5045   001C8E  EF4B  F00E         	goto	i2u168_40
  5046   001C92                     i2u168_41:
  5047   001C92  EF4D  F00E         	goto	i2l2853
  5048   001C96                     i2u168_40:
  5049   001C96  0E00               	movlw	0
  5050   001C98  6E4D               	movwf	_TxBufReadCnt^0,c	;volatile
  5051   001C9A                     i2l2853:
  5052                           
  5053                           ;serial.c: 88:     return EUSART4TXbuf[TxBufReadCnt++];
  5054   001C9A  2A4D               	incf	_TxBufReadCnt^0,f,c	;volatile
  5055   001C9C  044D               	decf	_TxBufReadCnt^0,w,c	;volatile
  5056   001C9E  6E01               	movwf	??_getCharFromTxBuf^0,c
  5057   001CA0  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  5058   001CA2  0E00               	movlw	low _EUSART4TXbuf
  5059   001CA4  2401               	addwf	??_getCharFromTxBuf^0,w,c
  5060   001CA6  6ED9               	movwf	fsr2l,c
  5061   001CA8  0E01               	movlw	high _EUSART4TXbuf
  5062   001CAA  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  5063   001CAC  6EDA               	movwf	fsr2h,c
  5064   001CAE  50DF               	movf	indf2,w,c
  5065   001CB0  0012               	return		;funcret
  5066   001CB2                     __end_of_getCharFromTxBuf:
  5067                           	callstack 0
  5068                           
  5069                           	psect	rparam
  5070   000000                     
  5071                           	psect	temp
  5072   000051                     btemp:
  5073                           	callstack 0
  5074   000051                     	ds	1
  5075   000000                     int$flags	set	btemp
  5076   000000                     wtemp8	set	btemp+1
  5077   000000                     ttemp5	set	btemp+1
  5078   000000                     ttemp6	set	btemp+4
  5079   000000                     ttemp7	set	btemp+8
  5080                           
  5081                           	psect	idloc
  5082                           
  5083                           ;Config register IDLOC0 @ 0x200000
  5084                           ;	unspecified, using default values
  5085   200000                     	org	2097152
  5086   200000  FFFF               	dw	65535
  5087                           
  5088                           ;Config register IDLOC1 @ 0x200002
  5089                           ;	unspecified, using default values
  5090   200002                     	org	2097154
  5091   200002  FFFF               	dw	65535
  5092                           
  5093                           ;Config register IDLOC2 @ 0x200004
  5094                           ;	unspecified, using default values
  5095   200004                     	org	2097156
  5096   200004  FFFF               	dw	65535
  5097                           
  5098                           ;Config register IDLOC3 @ 0x200006
  5099                           ;	unspecified, using default values
  5100   200006                     	org	2097158
  5101   200006  FFFF               	dw	65535
  5102                           
  5103                           ;Config register IDLOC4 @ 0x200008
  5104                           ;	unspecified, using default values
  5105   200008                     	org	2097160
  5106   200008  FFFF               	dw	65535
  5107                           
  5108                           ;Config register IDLOC5 @ 0x20000A
  5109                           ;	unspecified, using default values
  5110   20000A                     	org	2097162
  5111   20000A  FFFF               	dw	65535
  5112                           
  5113                           ;Config register IDLOC6 @ 0x20000C
  5114                           ;	unspecified, using default values
  5115   20000C                     	org	2097164
  5116   20000C  FFFF               	dw	65535
  5117                           
  5118                           ;Config register IDLOC7 @ 0x20000E
  5119                           ;	unspecified, using default values
  5120   20000E                     	org	2097166
  5121   20000E  FFFF               	dw	65535
  5122                           
  5123                           	psect	config
  5124                           
  5125                           ;Config register CONFIG1L @ 0x300000
  5126                           ;	External Oscillator mode Selection bits
  5127                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5128                           ;	Power-up default value for COSC bits
  5129                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5130   300000                     	org	3145728
  5131   300000  AA                 	db	170
  5132                           
  5133                           ;Config register CONFIG1H @ 0x300001
  5134                           ;	unspecified, using default values
  5135                           ;	Clock Out Enable bit
  5136                           ;	CLKOUTEN = 0x1, unprogrammed default
  5137                           ;	Clock Switch Enable bit
  5138                           ;	CSWEN = 0x1, unprogrammed default
  5139                           ;	Fail-Safe Clock Monitor Enable bit
  5140                           ;	FCMEN = 0x1, unprogrammed default
  5141   300001                     	org	3145729
  5142   300001  FF                 	db	255
  5143                           
  5144                           ;Config register CONFIG2L @ 0x300002
  5145                           ;	unspecified, using default values
  5146                           ;	Master Clear Enable bit
  5147                           ;	MCLRE = 0x1, unprogrammed default
  5148                           ;	Power-up Timer Enable bit
  5149                           ;	PWRTE = 0x1, unprogrammed default
  5150                           ;	Low-power BOR enable bit
  5151                           ;	LPBOREN = 0x1, unprogrammed default
  5152                           ;	Brown-out Reset Enable bits
  5153                           ;	BOREN = 0x3, unprogrammed default
  5154   300002                     	org	3145730
  5155   300002  FF                 	db	255
  5156                           
  5157                           ;Config register CONFIG2H @ 0x300003
  5158                           ;	unspecified, using default values
  5159                           ;	Brown Out Reset Voltage selection bits
  5160                           ;	BORV = 0x3, unprogrammed default
  5161                           ;	ZCD Disable bit
  5162                           ;	ZCD = 0x1, unprogrammed default
  5163                           ;	PPSLOCK bit One-Way Set Enable bit
  5164                           ;	PPS1WAY = 0x1, unprogrammed default
  5165                           ;	Stack Full/Underflow Reset Enable bit
  5166                           ;	STVREN = 0x1, unprogrammed default
  5167                           ;	Debugger Enable bit
  5168                           ;	DEBUG = 0x1, unprogrammed default
  5169                           ;	Extended Instruction Set Enable bit
  5170                           ;	XINST = 0x1, unprogrammed default
  5171   300003                     	org	3145731
  5172   300003  FF                 	db	255
  5173                           
  5174                           ;Config register CONFIG3L @ 0x300004
  5175                           ;	WDT Period Select bits
  5176                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5177                           ;	WDT operating mode
  5178                           ;	WDTE = OFF, WDT Disabled
  5179   300004                     	org	3145732
  5180   300004  9F                 	db	159
  5181                           
  5182                           ;Config register CONFIG3H @ 0x300005
  5183                           ;	unspecified, using default values
  5184                           ;	WDT Window Select bits
  5185                           ;	WDTCWS = 0x7, unprogrammed default
  5186                           ;	WDT input clock selector
  5187                           ;	WDTCCS = 0x7, unprogrammed default
  5188   300005                     	org	3145733
  5189   300005  FF                 	db	255
  5190                           
  5191                           ;Config register CONFIG4L @ 0x300006
  5192                           ;	unspecified, using default values
  5193                           ;	Write Protection Block 0
  5194                           ;	WRT0 = 0x1, unprogrammed default
  5195                           ;	Write Protection Block 1
  5196                           ;	WRT1 = 0x1, unprogrammed default
  5197                           ;	Write Protection Block 2
  5198                           ;	WRT2 = 0x1, unprogrammed default
  5199                           ;	Write Protection Block 3
  5200                           ;	WRT3 = 0x1, unprogrammed default
  5201                           ;	Write Protection Block 3
  5202                           ;	WRT4 = 0x1, unprogrammed default
  5203                           ;	Write Protection Block 3
  5204                           ;	WRT5 = 0x1, unprogrammed default
  5205                           ;	Write Protection Block 3
  5206                           ;	WRT6 = 0x1, unprogrammed default
  5207                           ;	Write Protection Block 3
  5208                           ;	WRT7 = 0x1, unprogrammed default
  5209   300006                     	org	3145734
  5210   300006  FF                 	db	255
  5211                           
  5212                           ;Config register CONFIG4H @ 0x300007
  5213                           ;	unspecified, using default values
  5214                           ;	Configuration Register Write Protection bit
  5215                           ;	WRTC = 0x1, unprogrammed default
  5216                           ;	Boot Block Write Protection bit
  5217                           ;	WRTB = 0x1, unprogrammed default
  5218                           ;	Data EEPROM Write Protection bit
  5219                           ;	WRTD = 0x1, unprogrammed default
  5220                           ;	Scanner Enable bit
  5221                           ;	SCANE = 0x1, unprogrammed default
  5222                           ;	Low Voltage Programming Enable bit
  5223                           ;	LVP = 0x1, unprogrammed default
  5224   300007                     	org	3145735
  5225   300007  FF                 	db	255
  5226                           
  5227                           ;Config register CONFIG5L @ 0x300008
  5228                           ;	unspecified, using default values
  5229                           ;	UserNVM Program Memory Code Protection bit
  5230                           ;	CP = 0x1, unprogrammed default
  5231                           ;	DataNVM Memory Code Protection bit
  5232                           ;	CPD = 0x1, unprogrammed default
  5233   300008                     	org	3145736
  5234   300008  FF                 	db	255
  5235                           
  5236                           ;Config register CONFIG5H @ 0x300009
  5237                           ;	unspecified, using default values
  5238   300009                     	org	3145737
  5239   300009  FF                 	db	255
  5240                           
  5241                           ;Config register CONFIG6L @ 0x30000A
  5242                           ;	unspecified, using default values
  5243                           ;	Table Read Protection Block 0
  5244                           ;	EBTR0 = 0x1, unprogrammed default
  5245                           ;	Table Read Protection Block 1
  5246                           ;	EBTR1 = 0x1, unprogrammed default
  5247                           ;	Table Read Protection Block 2
  5248                           ;	EBTR2 = 0x1, unprogrammed default
  5249                           ;	Table Read Protection Block 3
  5250                           ;	EBTR3 = 0x1, unprogrammed default
  5251                           ;	Table Read Protection Block 4
  5252                           ;	EBTR4 = 0x1, unprogrammed default
  5253                           ;	Table Read Protection Block 5
  5254                           ;	EBTR5 = 0x1, unprogrammed default
  5255                           ;	Table Read Protection Block 6
  5256                           ;	EBTR6 = 0x1, unprogrammed default
  5257                           ;	Table Read Protection Block 7
  5258                           ;	EBTR7 = 0x1, unprogrammed default
  5259   30000A                     	org	3145738
  5260   30000A  FF                 	db	255
  5261                           
  5262                           ;Config register CONFIG6H @ 0x30000B
  5263                           ;	unspecified, using default values
  5264                           ;	Boot Block Table Read Protection bit
  5265                           ;	EBTRB = 0x1, unprogrammed default
  5266   30000B                     	org	3145739
  5267   30000B  FF                 	db	255
  5268                           tosu	equ	0xFFF
  5269                           tosh	equ	0xFFE
  5270                           tosl	equ	0xFFD
  5271                           stkptr	equ	0xFFC
  5272                           pclatu	equ	0xFFB
  5273                           pclath	equ	0xFFA
  5274                           pcl	equ	0xFF9
  5275                           tblptru	equ	0xFF8
  5276                           tblptrh	equ	0xFF7
  5277                           tblptrl	equ	0xFF6
  5278                           tablat	equ	0xFF5
  5279                           prodh	equ	0xFF4
  5280                           prodl	equ	0xFF3
  5281                           indf0	equ	0xFEF
  5282                           postinc0	equ	0xFEE
  5283                           postdec0	equ	0xFED
  5284                           preinc0	equ	0xFEC
  5285                           plusw0	equ	0xFEB
  5286                           fsr0h	equ	0xFEA
  5287                           fsr0l	equ	0xFE9
  5288                           wreg	equ	0xFE8
  5289                           indf1	equ	0xFE7
  5290                           postinc1	equ	0xFE6
  5291                           postdec1	equ	0xFE5
  5292                           preinc1	equ	0xFE4
  5293                           plusw1	equ	0xFE3
  5294                           fsr1h	equ	0xFE2
  5295                           fsr1l	equ	0xFE1
  5296                           bsr	equ	0xFE0
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           preinc2	equ	0xFDC
  5301                           plusw2	equ	0xFDB
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        83
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      80
    BANK0           160     97     141
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getHSVval@p	PTR struct HSV_val size(1) Largest target is 6
		 -> main@readHSV(BANK0[6]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> getHSVval@tempRGBC(COMRAM[2]), main@readRGBC(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1137DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1137DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2640$buffer	PTR unsigned char  size(2) Largest target is 0

    S2640$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), STR_2(CODE[5]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> main@display(BANK0[50]), sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    TxBufferedString@string	PTR unsigned char  size(1) Largest target is 50
		 -> main@display(BANK0[50]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _getHSVval->___lwmod
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0   13569
                                             47 COMRAM     2     2      0
                                             15 BANK0     82    82      0
                    _Interrupts_init
                        _Timer0_init
                   _TxBufferedString
                  _buggy_lights_init
                   _color_click_init
                          _getHSVval
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16    4961
                                             31 COMRAM    16     0     16
                                              0 BANK0     15    15      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    4091
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    3630
                                             14 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     957
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     183
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getHSVval                                           23    22      1    6302
                                             22 COMRAM    23    22      1
                            ___awdiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _getRGBCval
                                _max
                                _min
 ---------------------------------------------------------------------------------
 (2) _min                                                  7     3      4     416
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _max                                                  7     3      4     416
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     692
                                             15 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1375
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             17 COMRAM     5     1      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                             10 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     805
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     1     0      1     143
                                              5 COMRAM     1     0      1
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getHSVval
     ___awdiv
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
       ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul
     _getRGBCval
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _max
     _min
   _getRGBCval
   _initDCmotorsPWM
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      50       1       85.1%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     161      62        0.0%
DATA                 0      0     161       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 07 11:54:42 2024

                 _turn180Delay 0038                 _color_read_Red 198E                _color_read_Blue 1A7E  
              _trail_timer_low 0170                             l31 1B1A                             l53 1C84  
                           l62 1ACC                             l71 193A                             l56 1DEA  
                           l80 1BD8                             l65 1A2C                             l81 1BE0  
                           l74 1C0C                             l90 114A                             l59 19DC  
                           l75 1C14                             l68 1A7C                             l76 1C1C  
                           l79 1BD0                   ___awdiv@sign 000A            ___wmul@multiplicand 0007  
             _trail_timer_high 00D9               _color_read_Clear 1A2E               _color_read_Green 19DE  
            ??_Interrupts_init 0005                            l163 177E                            l261 1D58  
                          l270 1EC2                            l415 1E28                            l264 1D7E  
                          l273 1ECC                            l258 1CDA                            l267 1ED6  
                          l460 1D2E                            l276 1EB8                            l279 1BA4  
                          l463 1E5A                            l473 1E42                            l635 1EAC  
                          l469 1D04                            l649 1DA4                            l586 1E0A  
                          l880 1594                            l893 1644                            u990 1D68  
                          u991 1D64                            _abs 1C1E                            _max 1BE2  
                          _min 1BA6                   ___awmod@sign 000A                            wreg 0FE8  
                  _squareDelay 0034                    main@display 006F                           ?_abs 000B  
                         l1140 1878                           l1150 18DC                           l1147 1880  
                         l1157 18E4                           l2301 1BA2                           l1405 1ED8  
                         l3111 14F0                           l3103 14D2                           l1327 1B62  
                         l3121 1524                           l3113 14FE                           l3105 14D6  
                         l3201 114C                           l3131 155E                           l3123 152C  
                         l3115 1506                           l3107 14E4                           l2411 1AC4  
                         l2403 198E                           l3211 1194                           l3203 1154  
                         l3141 1584                           l3133 1566                           l3125 1534  
                         l3117 150A                           l3109 14EC                           l2421 1A2E  
                         l2405 19D4                           l3301 1118                           l3221 1200  
                         l3213 119E                           l3205 117A                           l1382 1C50  
                         l1374 1984                           l2511 1CC6                           l2503 1CB2  
                         l2271 1D58                           l3143 158C                           l3135 1568  
                         l3127 1542                           l3119 1512                           l2423 1A74  
                         l2415 19DE                           l3303 1126                           l3151 15A8  
                         l3231 127E                           l3223 1218                           l3215 11BE  
                         l3207 1182                           l1375 198C                           l3311 1B2E  
                         l1368 12FA                           l2513 1CC8                           l2505 1CBC  
                         l2273 1D68                           l2281 1EB4                           l3137 156E  
                         l3129 1548                           l2409 1A7E                           l2417 1A24  
                         l2521 1C00                           l3305 1138                           l3161 15DC  
                         l3153 15B0                           l1369 134C                           l3241 12C8  
                         l3233 128E                           l3225 124C                           l3217 11DE  
                         l3209 1190                           l3313 1B36                           l3401 14B2  
                         l3321 134E                           l1394 16EE                           l2507 1CC2  
                         l2275 1ECE                           l2283 1EC4                           l2515 1DCE  
                         l3139 1574                           l2291 1B66                           l2523 1BA6  
                         l3171 1618                           l3163 15E4                           l3155 15B4  
                         l3147 1596                           l1379 1C38                           l3243 12E6  
                         l3235 129E                           l3227 1268                           l3219 11F6  
                         l3315 1B4E                           l3307 1B1C                           l3331 137C  
                         l3323 1366                           l2613 1D08                           l2509 1CC4  
                         l2277 1ED2                           l2285 1EC8                           l2293 1B6A  
                         l2517 18E6                           l2525 1BC4                           l2621 1E44  
                         l3173 161E                           l3165 15EC                           l3157 15C2  
                         l3149 159A                           l3237 12AE                           l3245 12E8  
                         l3229 126C                           l3253 131A                           l3261 193C  
                         l3317 1B5A                           l3309 1B26                           l3341 139C  
                         l3333 1380                           l3325 1366                           l2615 1D18  
                         l2279 1EB0                           l2631 180E                           l2295 1B72  
                         l2287 1EBA                           l2519 1BE2                           l3271 0ED4  
                         l3167 15FA                           l3175 1624                           l3159 15CA  
                         l3191 168C                           l3183 1646                           l3255 133C  
                         l3239 12C0                           l3247 1306                           l3263 1940  
                         l3351 13BC                           l3343 13A0                           l3335 1388  
                         l3327 1372                           l2617 1D1C                           l2641 1846  
                         l2633 1816                           l2625 1D80                           l2297 1B7A  
                         l2289 1EBE                           l3281 0F8A                           l3273 0EE0  
                         l2801 1E24                           l3177 1634                           l3169 1610  
                         l3193 16BE                           l3185 1656                           l3257 1344  
                         l3249 130E                           l3265 194C                           l3361 13E4  
                         l3353 13C4                           l3345 13A4                           l3337 1390  
                         l3329 1378                           l2811 1E08                           l2619 1D2C  
                         l2651 1872                           l2643 184C                           l2635 1828  
                         l2627 1D9C                           l2299 1BA0                           l3291 1066  
                         l3283 0FA6                           l3275 0EF2                           l2731 1726  
                         l2803 1E26                           l3179 163C                           l3187 1666  
                         l3267 1964                           l3371 1400                           l3363 13EC  
                         l3355 13CC                           l3347 13AC                           l3339 1398  
                         l2813 1EA0                           l2805 1DEC                           l2645 1862  
                         l2637 1830                           l2661 18B2                           l2653 1882  
                         l3293 10C2                           l3285 0FCA                           l3277 0EFA  
                         l3269 0E1C                           l2741 1764                           l2733 172A  
                         l3197 1C1E                           l3189 1670                           l3381 1410  
                         l3373 1404                           l3365 13F4                           l3357 13D4  
                         l3349 13B4                           l2807 1DF4                           l2831 1CE0  
                         l2647 186A                           l2639 1838                           l2663 18C8  
                         l2655 1894                           l3295 10DE                           l3287 1026  
                         l3279 0F1A                           l2743 1766                           l2735 174E  
                         l2727 16F0                           l3199 1C2C                           l3391 1452  
                         l3383 1412                           l3375 1408                           l3367 13F8  
                         l3359 13DC                           l2809 1DF6                           l2833 1CEC  
                         l2681 1C56                           l2649 186C                           l2665 18D0  
                         l2657 189C                           l3297 10F0                           l3289 1042  
                         l2745 1770                           l2737 1758                           l2729 1700  
                         l3393 145A                           l3385 1420                           l3377 140A  
                         l3369 13FC                           l2835 1CEE                           l2683 1C60  
                         l2667 18D6                           l2659 18A4                           l3299 10FC  
                         l2747 1772                           l2739 175A                           l3395 1462  
                         l3387 142A                           l3379 140C                           l2829 1CDC  
                         l2677 1ACE                           l2685 1C70                           l2749 177C  
                         l2837 1E2A                           l3397 14A6                           l3389 1430  
                         l2687 1C7A                           l2679 1C52                           l2839 1E3E  
                         l3399 14AE                           l2793 1E0C                           l2795 1E16  
                         l2797 1E18                           ?_max 0005                           l2799 1E22  
                         ?_min 0005                           STR_1 0E01                           STR_3 0E18  
                         u1000 1D7E                           u1001 1D7A                           u1010 1B8E  
                         u1011 1B86                           u2000 11BE                           u2001 11BA  
                         u2010 11DE                           u2011 11DA                           u1028 1B90  
                         u2100 0EF2                           u2020 1214                           u2101 0EEE  
                         u2021 120E                           u2110 0F1A                           u2030 1216  
                         u2111 0F16                           u1320 1C00                           u2120 0FCA  
                         u2040 127E                           u1321 1BFC                           u2121 0FC6  
                         u2041 127A                           u1330 1BC4                           u2130 1066  
                         u2050 128E                           u1331 1BC0                           u2131 1062  
                         u2051 128A                           u1500 1D18                           u2140 10F0  
                         u2060 129E                           u1501 1D14                           u2141 10EC  
                         u2061 129A                           u1510 1E58                           u2070 12AE  
                         u2150 1420                           u1511 1E52                           u2071 12AA  
                         u2207 14BC                           u2151 141C                           u1520 1E5A  
                         u2080 12FA                           u2160 1442                   _BAUD4CONbits 0EE9  
                         u2217 1C66                           u2081 12F6                           u2161 143A  
                         u1530 1828                           u2090 1984                           u1531 1824  
                         u2091 1980                           u1540 1846                           u1541 1842  
                         u1550 1862                           u1551 185E                           u1560 1894  
                         u1561 1890                           u1650 1D04                           u1570 18B2  
                         u2178 1444                           _T2PR 0FBC                           u1651 1D00  
                         u1571 18AE                           u1820 14E4                           u1580 18C8  
                         u1660 1E3E                           u1900 15DC                           u1821 14E0  
                         u1581 18C4                           u1661 1E3A                           u1901 15D8  
                         u2197 1358                           u1830 14FE                           u1910 15FA  
                         u1831 14FA                           u1911 15F6                           u1840 1524  
                         u1920 1610                           u1841 1520                           u1921 160C  
                  main@readHSV 00B3                           u1850 1542                           u1930 1634  
                         u1851 153E                           u1931 1630                           u1860 155E  
                         u1940 1656                           u1861 155A                           u1941 1652  
                         u1870 1584                           u1950 1666                           u1871 1580  
                         u1951 1662                           u1880 15A8                           u1960 168C  
                         u1881 15A4                           u1961 1688                           u1890 15C2  
                         u1970 16BE                           u1891 15BE                           u1971 16BA  
                         u1980 1C2C                           u1981 1C28                           u1990 117A  
                         u1991 1176                           abs@a 000B                           _dbuf 013C  
                         _main 134E                           _prec 0049                           _nout 0047  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           max@a 0005  
                         max@b 0007                           btemp 0051                           min@a 0005  
                         min@b 0007                           prodh 0FF4                           prodl 0FF3  
                         start 0074         __end_of_color_read_Red 19DE                __end_of_HighISR 0074  
                 ___param_bank 0000                          ??_abs 000D                          ??_max 0009  
                        ??_min 0009                          ?_main 0001             _timer_high_pointer 0042  
              __end_of___awdiv 1596                __end_of___awmod 1646                ___awdiv@divisor 0007  
              __end_of___lwdiv 1882                   main@readRGBC 00B9                __end_of___lwmod 18E6  
                        i2l463 1E72                          i2l456 1CB0                          i2l640 0024  
                        i2l449 1DCA                          i2l642 0022                          i2l643 0052  
                        i2l646 0068                ___awdiv@counter 0009                   vfpfcnvrt@cnt 0014  
                 vfpfcnvrt@fmt 0010                          _TMR0H 0FD4                          _TMR0L 0FD3  
   __end_of_I2C_2_Master_Start 1ED8     __end_of_I2C_2_Master_Write 1EBA                    _turningGear 0043  
                        _flags 004B                          _fputc 1646                          _width 00D5  
                        _putch 1ED8              _turnRight135Delay 003A                          tablat 0FF5  
              _turnLeft90Delay 0040                          ttemp5 0052                          ttemp6 0055  
                        ttemp7 0059                          status 0FD8                          wtemp8 0052  
              __end_of_sprintf 1B64            getHSVval@saturation 0022        __end_of_color_read_Blue 1ACE  
        _I2C_2_Master_RepStart 1EBA             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              __initialization 1780                   __end_of_main 14D2                i2_isDataInTxBuf 1E5C  
           putCharToTxBuf@byte 0005                         ??_main 0030                  __activetblptr 0003  
               _getHSVval$3064 001E                 _getHSVval$3065 0020                 _getHSVval$3066 0026  
                       ?_fputc 0005                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0005  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       i2l2011 1E5C                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l3101 0062                         i2l3095 0032                         i2l3097 003A  
                       i2l3089 0012                         i2l3099 004E                         i2l2841 1DA8  
                       i2l2851 1C96                         i2l2843 1DB8                         i2l2853 1C9A  
                       i2l2845 1DBC                         i2l2847 1DC8                         i2l2849 1C86  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0013                      ??_HighISR 0003  
     __end_of_color_click_init 1C86                         _RX4PPS 0E15                         _TX4REG 0EE4  
             _turnLeft135Delay 003C                  ??_Timer0_init 0005                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001F               _getCharFromTxBuf 1C86                         ___wmul 1D80  
                    ??___awdiv 0009                      ??___awmod 0009                      ??___lwdiv 000F  
                    ??___lwmod 0016                         clear_0 17E6                         clear_1 17F2  
                       clear_2 17FE               ___awdiv@quotient 000B                ___awmod@divisor 0007  
                       isa$std 0001                ___awmod@counter 0009                         fputc@c 0005  
            ?_TxBufferedString 0006                   __pdataCOMRAM 0032              _timer_low_pointer 0032  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8             ??_TxBufferedString 0007                         putch@c 0001  
             __end_of_vfprintf 198E              ??_initDCmotorsPWM 0007                      ??_sprintf 0030  
            _buggy_lights_init 1ACE          __end_of_isDataInTxBuf 1E5C                     __accesstop 0060  
      __end_of__initialization 1804       __end_of_color_read_Clear 1A7E       __end_of_color_read_Green 1A2E  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 1E74             ?_buggy_lights_init 0001  
                ___rparam_used 0001               ?_color_read_Blue 0009                _Interrupts_init 1EA0  
               __pcstackCOMRAM 0001                   __pidataBANK0 1E74                   __pidataBANK1 1D30  
            getHSVval@tempRGBC 002C            ??_buggy_lights_init 0005                  __end_of_fputc 16F0  
                __end_of_putch 1EDA            __end_of_Timer0_init 1E0C                        ??_fputc 0008  
    __end_of_buggy_lights_init 1B1C                        ??_putch 0005                     __pbssBANK0 00C1  
                   __pbssBANK1 0100                     _getRGBCval 18E6              _color_writetoaddr 1DCC  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0007                        ?___wmul 0005  
          ??_color_writetoaddr 0008                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      i2u75_40 1E70                        i2u75_41 1E6A                        i2u76_40 1E72  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5        __end_of_Interrupts_init 1EAE  
            __end_of_getHSVval 114C         color_writetoaddr@value 0007               ??_color_read_Red 000B  
                      _HighISR 0008      __end_of_color_writetoaddr 1DEC               ?i2_isDataInTxBuf 0001  
           _I2C_2_Master_Start 1ECE                     _initUSART4 1E0C             _I2C_2_Master_Write 1EAE  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000E  
                  _Timer0_init 1DEC                        ___awdiv 14D2                        ___awmod 1596  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 180E            ?_I2C_2_Master_Write 0001  
                      ___lwmod 1882                      ?_vfprintf 001C                   __psmallconst 0E00  
                      __pcinit 1780                        __ramtop 0E00                        __ptext0 134E  
                      __ptext1 1B1C                        __ptext2 193C                        __ptext3 114C  
                      __ptext4 1646                        __ptext5 1ED8                        __ptext6 1C1E  
                      __ptext7 1596                        __ptext8 1E2A                        __ptext9 1E44  
                    _T2CONbits 0FBD               ___awmod@dividend 0005                      _T2HLTbits 0FBE  
                   getHSVval@p 0017                  _RxBufWriteCnt 0050       __end_of_getCharFromTxBuf 1CB2  
                      _sprintf 1B1C           ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006  
         end_of_initialization 1804              __end_of_sendTxBuf 1E44                    ?_getRGBCval 0010  
                      fputc@fp 0007              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 134E                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0017                     ??_vfprintf 001F                _initDCmotorsPWM 16F0  
                    _PORTFbits 0F8E                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0009                   _EUSART4RXbuf 00C1                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0009                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22                     main@motorL 00A1  
                   main@motorR 00AA             ??_color_read_Clear 000B             ??_color_read_Green 000B  
                   max@max_val 000A                    vfpfcnvrt@ap 0011                    vfpfcnvrt@cp 0016  
                  vfpfcnvrt@fp 000F                 __end_of___wmul 1DA6                  __pidataCOMRAM 1E8A  
                   min@min_val 000A            color_read_Clear@tmp 000E            start_initialization 1780  
                  __end_of_abs 1C52                    __end_of_max 1C1E                    __end_of_min 1BE2  
                _TxBufWriteCnt 004E               _turnRight90Delay 003E            color_read_Green@tmp 000E  
      __end_of_initDCmotorsPWM 1780                    vfprintf@fmt 001D                       ??___wmul 0009  
               _putCharToRxBuf 1DA6                 _putCharToTxBuf 1D06                    __pdataBANK0 00D7  
                  __pdataBANK1 015C                    __pbssCOMRAM 0047                  __pcstackBANK0 0060  
                    _backtrack 004C                       ?_HighISR 0001                      _getHSVval 0E1C  
             ___lwdiv@dividend 000B                   ?_Timer0_init 0001         __end_of_putCharToRxBuf 1DCC  
       __end_of_putCharToTxBuf 1D30                      __pintcode 0008                       ?___awdiv 0005  
                     ?___awmod 0005                       ?___lwdiv 000B                       ?___lwmod 0012  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00              _I2C_2_Master_Idle 1D58              _I2C_2_Master_Init 1CB2  
            _I2C_2_Master_Read 1B64              _I2C_2_Master_Stop 1EC4                   _RxBufReadCnt 004F  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000F                  _headbuttDelay 0036  
     initDCmotorsPWM@PWMperiod 0005                       ?_sprintf 0020              ?_getCharFromTxBuf 0001  
                    _rampDelay 0046             ??_getCharFromTxBuf 0001                   ??_getRGBCval 0011  
          ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
               ___wmul@product 0009                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0006  
                     _LATCbits 0F7B                  _isDataInTxBuf 1E44                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E               _TxBufferedString 1CDC  
                     _LATGbits 0F7F                       _LATHbits 0F80                      _sendTxBuf 1E2A  
                     _PIE0bits 0E29                       _PIE4bits 0E2D                   getHSVval@hue 0024  
                   ?_getHSVval 0017                       i2u180_40 004E                       i2u180_41 004A  
                     i2u181_40 0062                       i2u181_41 005E                       i2u167_40 1DB8  
                     i2u167_41 1DB4                       _PIR0bits 0E33                       i2u168_40 1C96  
                     i2u168_41 1C92                       i2u178_40 0022                       i2u178_41 001E  
                     i2u179_40 0032                       i2u179_41 002E                       _PIR4bits 0E37  
              ?_putCharToRxBuf 0001               ?_initDCmotorsPWM 0005                ?_putCharToTxBuf 0001  
                     _SSP2CON2 0EDA                       _SSP2STAT 0ED8                      _vfpfcnvrt 114C  
    __end_of_I2C_2_Master_Idle 1D80      __end_of_I2C_2_Master_Init 1CDC      __end_of_I2C_2_Master_Read 1BA6  
            ___wmul@multiplier 0005      __end_of_I2C_2_Master_Stop 1ECE    I2C_2_Master_Write@data_byte 0006  
           __end_of_getRGBCval 193C              ??_color_read_Blue 000B                   _TxBufReadCnt 004D  
                   vfpfcnvrt@c 001B                      copy_data0 1794                      copy_data1 17B4  
                    copy_data2 17D4                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1EC4  
           color_read_Blue@tmp 000E                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                     __Hrparam 0000                     vfprintf@ap 001E                       __Lrparam 0000  
                   vfprintf@fp 001C                getHSVval@maxRGB 002A                getHSVval@minRGB 001C  
                   ?_vfpfcnvrt 000F                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                   sprintf@fmt 0021                     sprintf@ret 0060                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6                ___lwdiv@divisor 000D             __end_of_initUSART4 1E2A  
              ___lwdiv@counter 0011                       __ptext10 1E0C                       __ptext11 16F0  
                     __ptext20 1EBA                       __ptext12 0E1C                       __ptext21 1B64  
                     __ptext13 1BA6                       __ptext30 1ECE                       __ptext22 1D80  
                     __ptext14 1BE2                       __ptext31 1D58                       __ptext23 1882  
                     __ptext15 18E6                       __ptext40 1DA6                       __ptext32 1CB2  
                     __ptext24 180E                       __ptext16 198E                       __ptext41 1C86  
                     __ptext33 1ACE                       __ptext25 14D2                       __ptext17 19DE  
                     __ptext34 1CDC                       __ptext26 1C52                       __ptext18 1A2E  
                     __ptext35 1D06                       __ptext27 1DCC                       __ptext19 1A7E  
                     __ptext36 1DEC                       __ptext28 1EAE                       __ptext37 1EA0  
                     __ptext29 1EC4                       __ptext39 1E5C                    getRGBCval@p 0010  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                    ??_getHSVval 0018  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 0051  
                     _vfprintf 193C                     _INTCONbits 0FF2              ??i2_isDataInTxBuf 0001  
               getHSVval@range 0028                ??_isDataInTxBuf 0005                       intlevel2 0000  
                    sprintf@ap 0062                   _topGearRight 0044              _manoeuvre_pointer 00D7  
             ___lwmod@dividend 0012                    ??_sendTxBuf 0005                    ??_vfpfcnvrt 0012  
             _color_click_init 1C52                    _topGearLeft 0045       __end_of_TxBufferedString 1D06  
                     sprintf@f 0063                       sprintf@s 0020                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                ___lwmod@divisor 0014                ___lwmod@counter 0016  
              _trail_manoeuvre 015C                     _TX4STAbits 0EE8               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 0005  
