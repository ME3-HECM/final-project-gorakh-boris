

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Mar 10 20:07:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataCOMRAM
    90   0025A4                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _manoeuvre_pointer
    94   0025A4  00                 	db	low _trail_manoeuvre
    95   0025A5  01                 	db	high _trail_manoeuvre
    96                           
    97                           ;initializer for _timer_low_pointer
    98   0025A6  14                 	db	low _trail_timer_low
    99   0025A7  01                 	db	high _trail_timer_low
   100                           
   101                           ;initializer for _timer_high_pointer
   102   0025A8  28                 	db	low _trail_timer_high
   103   0025A9  01                 	db	high _trail_timer_high
   104                           
   105                           ;initializer for _wall_threshold
   106   0025AA  012C               	dw	300
   107                           
   108                           ;initializer for _squareDelay
   109   0025AC  012C               	dw	300
   110                           
   111                           ;initializer for _headbuttDelay
   112   0025AE  0046               	dw	70
   113                           
   114                           ;initializer for _turn180Delay
   115   0025B0  01FE               	dw	510
   116                           
   117                           ;initializer for _turnRight135Delay
   118   0025B2  012C               	dw	300
   119                           
   120                           ;initializer for _turnLeft135Delay
   121   0025B4  012C               	dw	300
   122                           
   123                           ;initializer for _turnRight90Delay
   124   0025B6  00AF               	dw	175
   125                           
   126                           ;initializer for _turnLeft90Delay
   127   0025B8  00AF               	dw	175
   128                           
   129                           ;initializer for _turningGear
   130   0025BA  2A                 	db	42
   131                           
   132                           ;initializer for _topGearRight
   133   0025BB  14                 	db	20
   134                           
   135                           ;initializer for _topGearLeft
   136   0025BC  14                 	db	20
   137                           
   138                           ;initializer for _rampDelay
   139   0025BD  08                 	db	8
   140   000000                     _TMR0H	set	4052
   141   000000                     _TX4REG	set	3812
   142   000000                     _RC4STAbits	set	3815
   143   000000                     _SP4BRGH	set	3814
   144   000000                     _LATEbits	set	3965
   145   000000                     _TRISEbits	set	3973
   146   000000                     _LATGbits	set	3967
   147   000000                     _TRISGbits	set	3975
   148   000000                     _LATFbits	set	3966
   149   000000                     _LATHbits	set	3968
   150   000000                     _TRISFbits	set	3974
   151   000000                     _TRISHbits	set	3976
   152   000000                     _SSP2CON2bits	set	3802
   153   000000                     _RX4PPS	set	3605
   154   000000                     _SSP2CLKPPS	set	3612
   155   000000                     _SSP2DATPPS	set	3613
   156   000000                     _RC7PPS	set	3689
   157   000000                     _RE2PPS	set	3700
   158   000000                     _LATAbits	set	3961
   159   000000                     _LATDbits	set	3964
   160   000000                     _TRISDbits	set	3972
   161   000000                     _CCPR4H	set	3873
   162   000000                     _CCPR3H	set	3877
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _TRISCbits	set	3971
   166   000000                     _TRISAbits	set	3969
   167   000000                     _LATCbits	set	3963
   168   000000                     _CCP1CONbits	set	4011
   169   000000                     _CCPTMRS0bits	set	4013
   170   000000                     _T2PR	set	4028
   171   000000                     _T2CONbits	set	4029
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175   000000                     _RE4PPS	set	3702
   176   000000                     _RG6PPS	set	3720
   177   000000                     _RD5PPS	set	3695
   178   000000                     _ANSELDbits	set	3751
   179   000000                     _SSP2ADD	set	3798
   180   000000                     _SSP2CON1bits	set	3801
   181   000000                     _TMR0L	set	4051
   182   000000                     _T0CON0bits	set	4053
   183   000000                     _T0CON1bits	set	4054
   184   000000                     _T2CLKCONbits	set	4031
   185   000000                     _T2HLTbits	set	4030
   186   000000                     _RC4REG	set	3811
   187   000000                     _SP4BRGL	set	3813
   188   000000                     _TX4STAbits	set	3816
   189   000000                     _BAUD4CONbits	set	3817
   190   000000                     _SSP2CON2	set	3802
   191   000000                     _SSP2STAT	set	3800
   192   000000                     _ANSELFbits	set	3764
   193   000000                     _SSP2BUF	set	3797
   194   000000                     _PIE0bits	set	3625
   195   000000                     _PIR4bits	set	3639
   196   000000                     _RC0PPS	set	3682
   197   000000                     _RD6PPS	set	3696
   198   000000                     _INTCONbits	set	4082
   199   000000                     _PIR0bits	set	3635
   200                           
   201                           	psect	smallconst
   202   000E00                     __psmallconst:
   203                           	callstack 0
   204   000E00  00                 	db	0
   205   000E01                     
   206                           ; BSR set to: 14
   207   000E01  25                 	db	37
   208   000E02  75                 	db	117	;'u'
   209   000E03  20                 	db	32
   210   000E04  25                 	db	37
   211   000E05  75                 	db	117	;'u'
   212   000E06  20                 	db	32
   213   000E07  25                 	db	37
   214   000E08  75                 	db	117	;'u'
   215   000E09  20                 	db	32
   216   000E0A  25                 	db	37
   217   000E0B  75                 	db	117	;'u'
   218   000E0C  20                 	db	32
   219   000E0D  00                 	db	0
   220   000E0E                     
   221                           ; BSR set to: 14
   222   000E0E  25                 	db	37
   223   000E0F  75                 	db	117	;'u'
   224   000E10  20                 	db	32
   225   000E11  25                 	db	37
   226   000E12  75                 	db	117	;'u'
   227   000E13  20                 	db	32
   228   000E14  25                 	db	37
   229   000E15  75                 	db	117	;'u'
   230   000E16  20                 	db	32
   231   000E17  0D                 	db	13
   232   000E18  00                 	db	0
   233   000E19                     STR_1:
   234                           
   235                           ; BSR set to: 14
   236   000E19  25                 	db	37
   237   000E1A  64                 	db	100	;'d'
   238   000E1B  20                 	db	32
   239   000E1C  0D                 	db	13
   240   000E1D  00                 	db	0
   241   000E1E                     STR_2:
   242                           
   243                           ; BSR set to: 14
   244   000E1E  25                 	db	37
   245   000E1F  64                 	db	100	;'d'
   246   000E20  20                 	db	32
   247   000E21  00                 	db	0
   248   000E22  00                 	db	0	; dummy byte at the end
   249   000000                     
   250                           ; #config settings
   251                           
   252                           	psect	cinit
   253   0023F2                     __pcinit:
   254                           	callstack 0
   255   0023F2                     start_initialization:
   256                           	callstack 0
   257   0023F2                     __initialization:
   258                           	callstack 0
   259                           
   260                           ; Initialize objects allocated to COMRAM (26 bytes)
   261                           ; load TBLPTR registers with __pidataCOMRAM
   262   0023F2  0EA4               	movlw	low __pidataCOMRAM
   263   0023F4  6EF6               	movwf	tblptrl,c
   264   0023F6  0E25               	movlw	high __pidataCOMRAM
   265   0023F8  6EF7               	movwf	tblptrh,c
   266   0023FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   267   0023FC  6EF8               	movwf	tblptru,c
   268   0023FE  EE00  F041         	lfsr	0,__pdataCOMRAM
   269   002402  EE10 F01A          	lfsr	1,26
   270   002406                     copy_data0:
   271   002406  0009               	tblrd		*+
   272   002408  CFF5 FFEE          	movff	tablat,postinc0
   273   00240C  50E5               	movf	postdec1,w,c
   274   00240E  50E1               	movf	fsr1l,w,c
   275   002410  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to BANK1 (60 bytes)
   278   002412  EE01  F000         	lfsr	0,__pbssBANK1
   279   002416  0E3C               	movlw	60
   280   002418                     clear_0:
   281   002418  6AEE               	clrf	postinc0,c
   282   00241A  06E8               	decf	wreg,f,c
   283   00241C  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to COMRAM (3 bytes)
   286   00241E  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   287   002420  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   288   002422  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   289   002424                     end_of_initialization:
   290                           	callstack 0
   291   002424                     __end_of__initialization:
   292                           	callstack 0
   293   002424  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   294   002426  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   295   002428  0100               	movlb	0
   296   00242A  EF99  F00E         	goto	_main	;jump to C main() function
   297                           
   298                           	psect	bssCOMRAM
   299   00005B                     __pbssCOMRAM:
   300                           	callstack 0
   301   00005B                     _manoeuvre_count:
   302                           	callstack 0
   303   00005B                     	ds	1
   304   00005C                     _return_flag:
   305                           	callstack 0
   306   00005C                     	ds	1
   307   00005D                     _returning:
   308                           	callstack 0
   309   00005D                     	ds	1
   310                           
   311                           	psect	dataCOMRAM
   312   000041                     __pdataCOMRAM:
   313                           	callstack 0
   314   000041                     _manoeuvre_pointer:
   315                           	callstack 0
   316   000041                     	ds	2
   317   000043                     _timer_low_pointer:
   318                           	callstack 0
   319   000043                     	ds	2
   320   000045                     _timer_high_pointer:
   321                           	callstack 0
   322   000045                     	ds	2
   323   000047                     _wall_threshold:
   324                           	callstack 0
   325   000047                     	ds	2
   326   000049                     _squareDelay:
   327                           	callstack 0
   328   000049                     	ds	2
   329   00004B                     _headbuttDelay:
   330                           	callstack 0
   331   00004B                     	ds	2
   332   00004D                     _turn180Delay:
   333                           	callstack 0
   334   00004D                     	ds	2
   335   00004F                     _turnRight135Delay:
   336                           	callstack 0
   337   00004F                     	ds	2
   338   000051                     _turnLeft135Delay:
   339                           	callstack 0
   340   000051                     	ds	2
   341   000053                     _turnRight90Delay:
   342                           	callstack 0
   343   000053                     	ds	2
   344   000055                     _turnLeft90Delay:
   345                           	callstack 0
   346   000055                     	ds	2
   347   000057                     _turningGear:
   348                           	callstack 0
   349   000057                     	ds	1
   350   000058                     _topGearRight:
   351                           	callstack 0
   352   000058                     	ds	1
   353   000059                     _topGearLeft:
   354                           	callstack 0
   355   000059                     	ds	1
   356   00005A                     _rampDelay:
   357                           	callstack 0
   358   00005A                     	ds	1
   359                           
   360                           	psect	bssBANK1
   361   000100                     __pbssBANK1:
   362                           	callstack 0
   363   000100                     _trail_manoeuvre:
   364                           	callstack 0
   365   000100                     	ds	20
   366   000114                     _trail_timer_low:
   367                           	callstack 0
   368   000114                     	ds	20
   369   000128                     _trail_timer_high:
   370                           	callstack 0
   371   000128                     	ds	20
   372                           
   373                           	psect	cstackBANK0
   374   000060                     __pcstackBANK0:
   375                           	callstack 0
   376   000060                     main@HSV_colour:
   377                           	callstack 0
   378                           
   379                           ; 6 bytes @ 0x0
   380   000060                     	ds	6
   381   000066                     main@motorL:
   382                           	callstack 0
   383                           
   384                           ; 9 bytes @ 0x6
   385   000066                     	ds	9
   386   00006F                     main@motorR:
   387                           	callstack 0
   388                           
   389                           ; 9 bytes @ 0xF
   390   00006F                     	ds	9
   391   000078                     main@measured_colour:
   392                           	callstack 0
   393                           
   394                           ; 8 bytes @ 0x18
   395   000078                     	ds	8
   396                           
   397                           	psect	cstackCOMRAM
   398   000001                     __pcstackCOMRAM:
   399                           	callstack 0
   400   000001                     ??_toggle_tricolour_LED:
   401   000001                     ??_I2C_2_Master_Idle:
   402   000001                     ?_max:
   403                           	callstack 0
   404   000001                     ?_min:
   405                           	callstack 0
   406   000001                     ?___lmul:
   407                           	callstack 0
   408   000001                     ?___lldiv:
   409                           	callstack 0
   410   000001                     ?___xxtofl:
   411                           	callstack 0
   412   000001                     RGBC2colourcard@p:
   413                           	callstack 0
   414   000001                     write_timer@tL:
   415                           	callstack 0
   416   000001                     max@a:
   417                           	callstack 0
   418   000001                     min@a:
   419                           	callstack 0
   420   000001                     initDCmotorsPWM@PWMperiod:
   421                           	callstack 0
   422   000001                     ___lmul@multiplier:
   423                           	callstack 0
   424   000001                     ___lldiv@dividend:
   425                           	callstack 0
   426   000001                     ___xxtofl@val:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x0
   430   000001                     	ds	1
   431   000002                     ??_I2C_2_Master_Read:
   432   000002                     ??_RGBC2colourcard:
   433   000002                     I2C_2_Master_Write@data_byte:
   434                           	callstack 0
   435   000002                     write_timer@tH:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x1
   439   000002                     	ds	1
   440   000003                     color_writetoaddr@value:
   441                           	callstack 0
   442   000003                     I2C_2_Master_Read@ack:
   443                           	callstack 0
   444   000003                     max@b:
   445                           	callstack 0
   446   000003                     min@b:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2
   450   000003                     	ds	1
   451   000004                     color_writetoaddr@address:
   452                           	callstack 0
   453   000004                     I2C_2_Master_Read@tmp:
   454                           	callstack 0
   455   000004                     RGBC2colourcard@motorL:
   456                           	callstack 0
   457                           
   458                           ; 9 bytes @ 0x3
   459   000004                     	ds	1
   460   000005                     ??_color_click_init:
   461   000005                     ??___xxtofl:
   462   000005                     ?_color_read_Red:
   463                           	callstack 0
   464   000005                     ?_color_read_Green:
   465                           	callstack 0
   466   000005                     ?_color_read_Blue:
   467                           	callstack 0
   468   000005                     ?_color_read_Clear:
   469                           	callstack 0
   470   000005                     max@max_val:
   471                           	callstack 0
   472   000005                     min@min_val:
   473                           	callstack 0
   474   000005                     ___lmul@multiplicand:
   475                           	callstack 0
   476   000005                     ___lldiv@divisor:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x4
   480   000005                     	ds	2
   481   000007                     ??_color_read_Red:
   482   000007                     ??_color_read_Green:
   483   000007                     ??_color_read_Blue:
   484   000007                     ??_color_read_Clear:
   485   000007                     ?_maxRGB:
   486                           	callstack 0
   487   000007                     ?_minRGB:
   488                           	callstack 0
   489   000007                     maxRGB@p:
   490                           	callstack 0
   491   000007                     minRGB@p:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x6
   495   000007                     	ds	2
   496   000009                     ___xxtofl@sign:
   497                           	callstack 0
   498   000009                     _maxRGB$3104:
   499                           	callstack 0
   500   000009                     _minRGB$3105:
   501                           	callstack 0
   502   000009                     ___lmul@product:
   503                           	callstack 0
   504   000009                     ___lldiv@quotient:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x8
   508   000009                     	ds	1
   509   00000A                     ___xxtofl@exp:
   510                           	callstack 0
   511   00000A                     color_read_Red@tmp:
   512                           	callstack 0
   513   00000A                     color_read_Green@tmp:
   514                           	callstack 0
   515   00000A                     color_read_Blue@tmp:
   516                           	callstack 0
   517   00000A                     color_read_Clear@tmp:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x9
   521   00000A                     	ds	1
   522   00000B                     ___xxtofl@arg:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0xA
   526   00000B                     	ds	1
   527   00000C                     getRGBCval@p:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0xB
   531   00000C                     	ds	1
   532   00000D                     ___lldiv@counter:
   533                           	callstack 0
   534   00000D                     RGBC2colourcard@motorR:
   535                           	callstack 0
   536                           
   537                           ; 9 bytes @ 0xC
   538   00000D                     	ds	1
   539   00000E                     getHSVval@p1:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0xD
   543   00000E                     	ds	1
   544   00000F                     ?___flmul:
   545                           	callstack 0
   546   00000F                     getHSVval@p2:
   547                           	callstack 0
   548   00000F                     ___flmul@b:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0xE
   552   00000F                     	ds	1
   553   000010                     ??_getHSVval:
   554                           
   555                           ; 1 bytes @ 0xF
   556   000010                     	ds	3
   557   000013                     ___flmul@a:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x12
   561   000013                     	ds	4
   562   000017                     ??___flmul:
   563                           
   564                           ; 1 bytes @ 0x16
   565   000017                     	ds	1
   566   000018                     getHSVval@Sz:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x17
   570   000018                     	ds	2
   571   00001A                     getHSVval@m:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x19
   575   00001A                     	ds	1
   576   00001B                     ___flmul@sign:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x1A
   580   00001B                     	ds	1
   581   00001C                     getHSVval@S:
   582                           	callstack 0
   583   00001C                     ___flmul@grs:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x1B
   587   00001C                     	ds	2
   588   00001E                     getHSVval@H:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x1D
   592   00001E                     	ds	2
   593   000020                     ___flmul@aexp:
   594                           	callstack 0
   595   000020                     getHSVval@temp_653:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x1F
   599   000020                     	ds	1
   600   000021                     ___flmul@bexp:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x20
   604   000021                     	ds	1
   605   000022                     ___flmul@prod:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x21
   609   000022                     	ds	2
   610   000024                     getHSVval@temp:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x23
   614   000024                     	ds	2
   615   000026                     ___flmul@temp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x25
   619   000026                     	ds	2
   620   000028                     ?___fltol:
   621                           	callstack 0
   622   000028                     getHSVval@temp_649:
   623                           	callstack 0
   624   000028                     ___fltol@f1:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x27
   628   000028                     	ds	4
   629   00002C                     ??___fltol:
   630   00002C                     getHSVval@temp_650:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x2B
   634   00002C                     	ds	4
   635   000030                     ___fltol@sign1:
   636                           	callstack 0
   637   000030                     getHSVval@temp_651:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x2F
   641   000030                     	ds	1
   642   000031                     ___fltol@exp1:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x30
   646   000031                     	ds	1
   647   000032                     scaleRGB@p:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x31
   651   000032                     	ds	1
   652   000033                     ??_scaleRGB:
   653                           
   654                           ; 1 bytes @ 0x32
   655   000033                     	ds	1
   656   000034                     getHSVval@temp_652:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x33
   660   000034                     	ds	4
   661   000038                     getHSVval@temp_648:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x37
   665   000038                     	ds	4
   666   00003C                     getHSVval@M:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x3B
   670   00003C                     	ds	2
   671   00003E                     getHSVval@C:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x3D
   675   00003E                     	ds	2
   676   000040                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x3F
   679   000040                     	ds	1
   680                           
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 29 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  motorR          9   15[BANK0 ] struct DC_motor
   691 ;;  motorL          9    6[BANK0 ] struct DC_motor
   692 ;;  measured_col    8   24[BANK0 ] struct RGBC_val
   693 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   694 ;;  PWMcycle        2    0        unsigned int 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Totals:         1      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;Total ram usage:       33 bytes
   709 ;; Hardware stack levels required when called: 5
   710 ;; This function calls:
   711 ;;		_RGBC2colourcard
   712 ;;		_Timer0_init
   713 ;;		_buggy_lights_init
   714 ;;		_color_click_init
   715 ;;		_getHSVval
   716 ;;		_getRGBCval
   717 ;;		_initDCmotorsPWM
   718 ;;		_initUSART4
   719 ;;		_scaleRGB
   720 ;;		_toggle_tricolour_LED
   721 ;; This function is called by:
   722 ;;		Startup code after reset
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text0
   727   001D32                     __ptext0:
   728                           	callstack 0
   729   001D32                     _main:
   730                           	callstack 26
   731   001D32                     
   732                           ;main.c: 30:     struct RGBC_val measured_colour;;main.c: 31:         measured_colour.R 
      +                          = 0;
   733   001D32  0E00               	movlw	0
   734   001D34  0100               	movlb	0	; () banked
   735   001D36  6F79               	movwf	(main@measured_colour+1)& (0+255),b
   736   001D38  0E00               	movlw	0
   737   001D3A  6F78               	movwf	main@measured_colour& (0+255),b
   738                           
   739                           ;main.c: 32:         measured_colour.G = 0;
   740   001D3C  0E00               	movlw	0
   741   001D3E  6F7B               	movwf	(main@measured_colour+3)& (0+255),b
   742   001D40  0E00               	movlw	0
   743   001D42  6F7A               	movwf	(main@measured_colour+2)& (0+255),b
   744                           
   745                           ;main.c: 33:         measured_colour.B = 0;
   746   001D44  0E00               	movlw	0
   747   001D46  6F7D               	movwf	(main@measured_colour+5)& (0+255),b
   748   001D48  0E00               	movlw	0
   749   001D4A  6F7C               	movwf	(main@measured_colour+4)& (0+255),b
   750                           
   751                           ;main.c: 34:         measured_colour.C = 0;
   752   001D4C  0E00               	movlw	0
   753   001D4E  6F7F               	movwf	(main@measured_colour+7)& (0+255),b
   754   001D50  0E00               	movlw	0
   755   001D52  6F7E               	movwf	(main@measured_colour+6)& (0+255),b
   756                           
   757                           ;main.c: 36:     struct HSV_val HSV_colour;;main.c: 37:         HSV_colour.H = 0;
   758   001D54  0E00               	movlw	0
   759   001D56  6F61               	movwf	(main@HSV_colour+1)& (0+255),b
   760   001D58  0E00               	movlw	0
   761   001D5A  6F60               	movwf	main@HSV_colour& (0+255),b
   762                           
   763                           ;main.c: 38:         HSV_colour.S = 0;
   764   001D5C  0E00               	movlw	0
   765   001D5E  6F63               	movwf	(main@HSV_colour+3)& (0+255),b
   766   001D60  0E00               	movlw	0
   767   001D62  6F62               	movwf	(main@HSV_colour+2)& (0+255),b
   768                           
   769                           ;main.c: 39:         HSV_colour.V = 0;
   770   001D64  0E00               	movlw	0
   771   001D66  6F65               	movwf	(main@HSV_colour+5)& (0+255),b
   772   001D68  0E00               	movlw	0
   773   001D6A  6F64               	movwf	(main@HSV_colour+4)& (0+255),b
   774                           
   775                           ;main.c: 43:     struct DC_motor motorL, motorR;;main.c: 44:         motorL.power = 0;
   776   001D6C  0E00               	movlw	0
   777   001D6E  6F66               	movwf	main@motorL& (0+255),b
   778                           
   779                           ;main.c: 45:         motorL.direction = 1;
   780   001D70  0E01               	movlw	1
   781   001D72  6F67               	movwf	(main@motorL+1)& (0+255),b
   782                           
   783                           ;main.c: 46:         motorL.brakemode = 1;
   784   001D74  0E01               	movlw	1
   785   001D76  6F68               	movwf	(main@motorL+2)& (0+255),b
   786   001D78                     
   787                           ; BSR set to: 0
   788                           ;main.c: 47:         motorL.PWMperiod = PWMcycle;
   789   001D78  0E00               	movlw	0
   790   001D7A  6F6A               	movwf	(main@motorL+4)& (0+255),b
   791   001D7C  0E63               	movlw	99
   792   001D7E  6F69               	movwf	(main@motorL+3)& (0+255),b
   793   001D80                     
   794                           ; BSR set to: 0
   795                           ;main.c: 48:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   796   001D80  0EAA               	movlw	170
   797   001D82  6F6B               	movwf	(main@motorL+5)& (0+255),b
   798   001D84  0E0F               	movlw	15
   799   001D86  6F6C               	movwf	(main@motorL+6)& (0+255),b
   800   001D88                     
   801                           ; BSR set to: 0
   802                           ;main.c: 49:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   803   001D88  0EA6               	movlw	166
   804   001D8A  6F6D               	movwf	(main@motorL+7)& (0+255),b
   805   001D8C  0E0F               	movlw	15
   806   001D8E  6F6E               	movwf	(main@motorL+8)& (0+255),b
   807                           
   808                           ;main.c: 50:         motorR.power = 0;
   809   001D90  0E00               	movlw	0
   810   001D92  6F6F               	movwf	main@motorR& (0+255),b
   811                           
   812                           ;main.c: 51:         motorR.direction = 1;
   813   001D94  0E01               	movlw	1
   814   001D96  6F70               	movwf	(main@motorR+1)& (0+255),b
   815                           
   816                           ;main.c: 52:         motorR.brakemode = 1;
   817   001D98  0E01               	movlw	1
   818   001D9A  6F71               	movwf	(main@motorR+2)& (0+255),b
   819   001D9C                     
   820                           ; BSR set to: 0
   821                           ;main.c: 53:         motorR.PWMperiod = PWMcycle;
   822   001D9C  0E00               	movlw	0
   823   001D9E  6F73               	movwf	(main@motorR+4)& (0+255),b
   824   001DA0  0E63               	movlw	99
   825   001DA2  6F72               	movwf	(main@motorR+3)& (0+255),b
   826   001DA4                     
   827                           ; BSR set to: 0
   828                           ;main.c: 54:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   829   001DA4  0E25               	movlw	37
   830   001DA6  6F74               	movwf	(main@motorR+5)& (0+255),b
   831   001DA8  0E0F               	movlw	15
   832   001DAA  6F75               	movwf	(main@motorR+6)& (0+255),b
   833   001DAC                     
   834                           ; BSR set to: 0
   835                           ;main.c: 55:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   836   001DAC  0E21               	movlw	33
   837   001DAE  6F76               	movwf	(main@motorR+7)& (0+255),b
   838   001DB0  0E0F               	movlw	15
   839   001DB2  6F77               	movwf	(main@motorR+8)& (0+255),b
   840   001DB4                     
   841                           ; BSR set to: 0
   842                           ;main.c: 57:     initDCmotorsPWM(PWMcycle);
   843   001DB4  0E00               	movlw	0
   844   001DB6  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   845   001DB8  0E63               	movlw	99
   846   001DBA  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   847   001DBC  EC3C  F010         	call	_initDCmotorsPWM	;wreg free
   848                           
   849                           ;main.c: 58:     buggy_lights_init();
   850   001DC0  EC61  F012         	call	_buggy_lights_init	;wreg free
   851   001DC4                     
   852                           ;main.c: 59:     color_click_init();
   853   001DC4  EC17  F012         	call	_color_click_init	;wreg free
   854   001DC8                     
   855                           ;main.c: 60:     initUSART4();
   856   001DC8  ECC3  F012         	call	_initUSART4	;wreg free
   857   001DCC                     
   858                           ;main.c: 61:     Timer0_init();
   859   001DCC  ECA1  F012         	call	_Timer0_init	;wreg free
   860   001DD0                     
   861                           ;main.c: 65:         TRISDbits.TRISD7 = 0;
   862   001DD0  9E84               	bcf	132,7,c	;volatile
   863   001DD2                     
   864                           ;main.c: 66:         TRISHbits.TRISH3 = 0;
   865   001DD2  9688               	bcf	136,3,c	;volatile
   866   001DD4                     
   867                           ;main.c: 68:         LATDbits.LATD7 = 0;
   868   001DD4  9E7C               	bcf	124,7,c	;volatile
   869   001DD6                     
   870                           ;main.c: 69:         LATHbits.LATH3 = 0;
   871   001DD6  9680               	bcf	128,3,c	;volatile
   872   001DD8                     
   873                           ;main.c: 73:         TRISFbits.TRISF2 = 1;
   874   001DD8  8486               	bsf	134,2,c	;volatile
   875   001DDA                     
   876                           ;main.c: 74:         TRISFbits.TRISF3 = 1;
   877   001DDA  8686               	bsf	134,3,c	;volatile
   878   001DDC                     
   879                           ;main.c: 76:         ANSELFbits.ANSELF2 = 0;
   880   001DDC  010E               	movlb	14	; () banked
   881   001DDE  95B4               	bcf	180,2,b	;volatile
   882   001DE0                     
   883                           ; BSR set to: 14
   884                           ;main.c: 77:         ANSELFbits.ANSELF3 = 0;
   885   001DE0  97B4               	bcf	180,3,b	;volatile
   886                           
   887                           ;main.c: 83:     LATHbits.LATH3 = !LATHbits.LATH3;
   888   001DE2  A680               	btfss	128,3,c	;volatile
   889   001DE4  EFF6  F00E         	goto	u2331
   890   001DE8  EFFA  F00E         	goto	u2330
   891   001DEC                     u2331:
   892   001DEC  6A40               	clrf	??_main^0,c
   893   001DEE  2A40               	incf	??_main^0,f,c
   894   001DF0  EFFB  F00E         	goto	u2348
   895   001DF4                     u2330:
   896   001DF4  6A40               	clrf	??_main^0,c
   897   001DF6                     u2348:
   898   001DF6  4640               	rlncf	??_main^0,f,c
   899   001DF8  4640               	rlncf	??_main^0,f,c
   900   001DFA  4640               	rlncf	??_main^0,f,c
   901   001DFC  5080               	movf	128,w,c	;volatile
   902   001DFE  1840               	xorwf	??_main^0,w,c
   903   001E00  0BF7               	andlw	-9
   904   001E02  1840               	xorwf	??_main^0,w,c
   905   001E04  6E80               	movwf	128,c	;volatile
   906   001E06                     
   907                           ;main.c: 84:     toggle_tricolour_LED();
   908   001E06  EC86  F00F         	call	_toggle_tricolour_LED	;wreg free
   909   001E0A                     l3411:
   910                           
   911                           ;main.c: 89:     {;main.c: 91:         getRGBCval(&measured_colour);
   912   001E0A  0E78               	movlw	low main@measured_colour
   913   001E0C  6E0C               	movwf	getRGBCval@p^0,c
   914   001E0E  ECB9  F010         	call	_getRGBCval	;wreg free
   915   001E12                     
   916                           ;main.c: 92:         scaleRGB(&measured_colour);
   917   001E12  0E78               	movlw	low main@measured_colour
   918   001E14  6E32               	movwf	scaleRGB@p^0,c
   919   001E16  EC1B  F00F         	call	_scaleRGB	;wreg free
   920   001E1A                     
   921                           ;main.c: 96:         getHSVval(&HSV_colour, &measured_colour);
   922   001E1A  0E60               	movlw	low main@HSV_colour
   923   001E1C  6E0E               	movwf	getHSVval@p1^0,c
   924   001E1E  0E78               	movlw	low main@measured_colour
   925   001E20  6E0F               	movwf	getHSVval@p2^0,c
   926   001E22  EC12  F007         	call	_getHSVval	;wreg free
   927   001E26                     
   928                           ;main.c: 101:         RGBC2colourcard(&measured_colour);
   929   001E26  0E78               	movlw	low main@measured_colour
   930   001E28  6E01               	movwf	RGBC2colourcard@p^0,c
   931   001E2A  EC67  F00D         	call	_RGBC2colourcard	;wreg free
   932   001E2E  EF05  F00F         	goto	l3411
   933   001E32  EF1A  F000         	goto	start
   934   001E36                     __end_of_main:
   935                           	callstack 0
   936                           
   937 ;; *************** function _toggle_tricolour_LED *****************
   938 ;; Defined at:
   939 ;;		line 86 in file "buggy_lights.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text1
   968   001F0C                     __ptext1:
   969                           	callstack 0
   970   001F0C                     _toggle_tricolour_LED:
   971                           	callstack 29
   972   001F0C                     
   973                           ;buggy_lights.c: 91:             LATGbits.LATG1 = !LATGbits.LATG1;
   974   001F0C  A27F               	btfss	127,1,c	;volatile
   975   001F0E  EF8B  F00F         	goto	u1931
   976   001F12  EF8F  F00F         	goto	u1930
   977   001F16                     u1931:
   978   001F16  6A01               	clrf	??_toggle_tricolour_LED^0,c
   979   001F18  2A01               	incf	??_toggle_tricolour_LED^0,f,c
   980   001F1A  EF90  F00F         	goto	u1948
   981   001F1E                     u1930:
   982   001F1E  6A01               	clrf	??_toggle_tricolour_LED^0,c
   983   001F20                     u1948:
   984   001F20  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
   985   001F22  507F               	movf	127,w,c	;volatile
   986   001F24  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
   987   001F26  0BFD               	andlw	-3
   988   001F28  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
   989   001F2A  6E7F               	movwf	127,c	;volatile
   990                           
   991                           ;buggy_lights.c: 92:             LATAbits.LATA4 = !LATAbits.LATA4;
   992   001F2C  A879               	btfss	121,4,c	;volatile
   993   001F2E  EF9B  F00F         	goto	u1951
   994   001F32  EF9F  F00F         	goto	u1950
   995   001F36                     u1951:
   996   001F36  6A01               	clrf	??_toggle_tricolour_LED^0,c
   997   001F38  2A01               	incf	??_toggle_tricolour_LED^0,f,c
   998   001F3A  EFA0  F00F         	goto	u1968
   999   001F3E                     u1950:
  1000   001F3E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1001   001F40                     u1968:
  1002   001F40  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1003   001F42  5079               	movf	121,w,c	;volatile
  1004   001F44  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1005   001F46  0BEF               	andlw	-17
  1006   001F48  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1007   001F4A  6E79               	movwf	121,c	;volatile
  1008                           
  1009                           ;buggy_lights.c: 93:             LATFbits.LATF7 = !LATFbits.LATF7;
  1010   001F4C  AE7E               	btfss	126,7,c	;volatile
  1011   001F4E  EFAB  F00F         	goto	u1971
  1012   001F52  EFAF  F00F         	goto	u1970
  1013   001F56                     u1971:
  1014   001F56  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1015   001F58  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1016   001F5A  EFB0  F00F         	goto	u1988
  1017   001F5E                     u1970:
  1018   001F5E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1019   001F60                     u1988:
  1020   001F60  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1021   001F62  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1022   001F64  507E               	movf	126,w,c	;volatile
  1023   001F66  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1024   001F68  0B7F               	andlw	-129
  1025   001F6A  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1026   001F6C  6E7E               	movwf	126,c	;volatile
  1027                           
  1028                           ;buggy_lights.c: 97:             LATGbits.LATG0 = !LATGbits.LATG0;
  1029   001F6E  A07F               	btfss	127,0,c	;volatile
  1030   001F70  EFBC  F00F         	goto	u1991
  1031   001F74  EFC0  F00F         	goto	u1990
  1032   001F78                     u1991:
  1033   001F78  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1034   001F7A  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1035   001F7C  EFC1  F00F         	goto	u2008
  1036   001F80                     u1990:
  1037   001F80  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1038   001F82                     u2008:
  1039   001F82  507F               	movf	127,w,c	;volatile
  1040   001F84  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1041   001F86  0BFE               	andlw	-2
  1042   001F88  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1043   001F8A  6E7F               	movwf	127,c	;volatile
  1044                           
  1045                           ;buggy_lights.c: 98:             LATEbits.LATE7 = !LATEbits.LATE7;
  1046   001F8C  AE7D               	btfss	125,7,c	;volatile
  1047   001F8E  EFCB  F00F         	goto	u2011
  1048   001F92  EFCF  F00F         	goto	u2010
  1049   001F96                     u2011:
  1050   001F96  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1051   001F98  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1052   001F9A  EFD0  F00F         	goto	u2028
  1053   001F9E                     u2010:
  1054   001F9E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1055   001FA0                     u2028:
  1056   001FA0  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1057   001FA2  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1058   001FA4  507D               	movf	125,w,c	;volatile
  1059   001FA6  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1060   001FA8  0B7F               	andlw	-129
  1061   001FAA  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1062   001FAC  6E7D               	movwf	125,c	;volatile
  1063                           
  1064                           ;buggy_lights.c: 99:             LATAbits.LATA3 = !LATAbits.LATA3;
  1065   001FAE  A679               	btfss	121,3,c	;volatile
  1066   001FB0  EFDC  F00F         	goto	u2031
  1067   001FB4  EFE0  F00F         	goto	u2030
  1068   001FB8                     u2031:
  1069   001FB8  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1070   001FBA  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1071   001FBC  EFE1  F00F         	goto	u2048
  1072   001FC0                     u2030:
  1073   001FC0  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1074   001FC2                     u2048:
  1075   001FC2  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1076   001FC4  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1077   001FC6  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1078   001FC8  5079               	movf	121,w,c	;volatile
  1079   001FCA  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1080   001FCC  0BF7               	andlw	-9
  1081   001FCE  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1082   001FD0  6E79               	movwf	121,c	;volatile
  1083   001FD2  0012               	return		;funcret
  1084   001FD4                     __end_of_toggle_tricolour_LED:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _scaleRGB *****************
  1088 ;; Defined at:
  1089 ;;		line 128 in file "color.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  1092 ;;		 -> main@measured_colour(8), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:        3 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 2
  1111 ;; This function calls:
  1112 ;;		___flmul
  1113 ;;		___fltol
  1114 ;;		___xxtofl
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text2
  1121   001E36                     __ptext2:
  1122                           	callstack 0
  1123   001E36                     _scaleRGB:
  1124                           	callstack 28
  1125   001E36                     
  1126                           ;color.c: 128: void scaleRGB(struct RGBC_val *p);color.c: 129: {;color.c: 130:     p->R 
      +                          *= 0.5;
  1127   001E36  0E00               	movlw	0
  1128   001E38  6E13               	movwf	___flmul@a^0,c
  1129   001E3A  0E00               	movlw	0
  1130   001E3C  6E14               	movwf	(___flmul@a+1)^0,c
  1131   001E3E  0E00               	movlw	0
  1132   001E40  6E15               	movwf	(___flmul@a+2)^0,c
  1133   001E42  0E3F               	movlw	63
  1134   001E44  6E16               	movwf	(___flmul@a+3)^0,c
  1135   001E46  5032               	movf	scaleRGB@p^0,w,c
  1136   001E48  6ED9               	movwf	fsr2l,c
  1137   001E4A  6ADA               	clrf	fsr2h,c
  1138   001E4C  CFDE F033          	movff	postinc2,??_scaleRGB
  1139   001E50  CFDD F034          	movff	postdec2,??_scaleRGB+1
  1140   001E54  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  1141   001E58  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  1142   001E5C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1143   001E5E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1144   001E60  0E00               	movlw	0
  1145   001E62  EC8D  F00C         	call	___xxtofl
  1146   001E66  C001  F00F         	movff	?___xxtofl,___flmul@b
  1147   001E6A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1148   001E6E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1149   001E72  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1150   001E76  EC78  F00A         	call	___flmul	;wreg free
  1151   001E7A  C00F  F028         	movff	?___flmul,___fltol@f1
  1152   001E7E  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1153   001E82  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1154   001E86  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1155   001E8A  EC16  F00E         	call	___fltol	;wreg free
  1156   001E8E  5032               	movf	scaleRGB@p^0,w,c
  1157   001E90  6ED9               	movwf	fsr2l,c
  1158   001E92  6ADA               	clrf	fsr2h,c
  1159   001E94  C028  FFDE         	movff	?___fltol,postinc2
  1160   001E98  C029  FFDD         	movff	?___fltol+1,postdec2
  1161                           
  1162                           ;color.c: 131:     p->G *= 0.7;
  1163   001E9C  0E33               	movlw	51
  1164   001E9E  6E13               	movwf	___flmul@a^0,c
  1165   001EA0  0E33               	movlw	51
  1166   001EA2  6E14               	movwf	(___flmul@a+1)^0,c
  1167   001EA4  0E33               	movlw	51
  1168   001EA6  6E15               	movwf	(___flmul@a+2)^0,c
  1169   001EA8  0E3F               	movlw	63
  1170   001EAA  6E16               	movwf	(___flmul@a+3)^0,c
  1171   001EAC  5032               	movf	scaleRGB@p^0,w,c
  1172   001EAE  6ED9               	movwf	fsr2l,c
  1173   001EB0  6ADA               	clrf	fsr2h,c
  1174   001EB2  0E02               	movlw	2
  1175   001EB4  26D9               	addwf	fsr2l,f,c
  1176   001EB6  CFDE F033          	movff	postinc2,??_scaleRGB
  1177   001EBA  CFDD F034          	movff	postdec2,??_scaleRGB+1
  1178   001EBE  C033  F001         	movff	??_scaleRGB,___xxtofl@val
  1179   001EC2  C034  F002         	movff	??_scaleRGB+1,___xxtofl@val+1
  1180   001EC6  6A03               	clrf	(___xxtofl@val+2)^0,c
  1181   001EC8  6A04               	clrf	(___xxtofl@val+3)^0,c
  1182   001ECA  0E00               	movlw	0
  1183   001ECC  EC8D  F00C         	call	___xxtofl
  1184   001ED0  C001  F00F         	movff	?___xxtofl,___flmul@b
  1185   001ED4  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1186   001ED8  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1187   001EDC  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1188   001EE0  EC78  F00A         	call	___flmul	;wreg free
  1189   001EE4  C00F  F028         	movff	?___flmul,___fltol@f1
  1190   001EE8  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1191   001EEC  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1192   001EF0  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1193   001EF4  EC16  F00E         	call	___fltol	;wreg free
  1194   001EF8  5032               	movf	scaleRGB@p^0,w,c
  1195   001EFA  6ED9               	movwf	fsr2l,c
  1196   001EFC  6ADA               	clrf	fsr2h,c
  1197   001EFE  0E02               	movlw	2
  1198   001F00  26D9               	addwf	fsr2l,f,c
  1199   001F02  C028  FFDE         	movff	?___fltol,postinc2
  1200   001F06  C029  FFDD         	movff	?___fltol+1,postdec2
  1201   001F0A  0012               	return		;funcret
  1202   001F0C                     __end_of_scaleRGB:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function ___xxtofl *****************
  1206 ;; Defined at:
  1207 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  sign            1    wreg     unsigned char 
  1210 ;;  val             4    0[COMRAM] long 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  sign            1    8[COMRAM] unsigned char 
  1213 ;;  arg             4   10[COMRAM] unsigned long 
  1214 ;;  exp             1    9[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  4    0[COMRAM] unsigned char 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;Total ram usage:       14 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_scaleRGB
  1235 ;;		_stop
  1236 ;;		_turnLeft
  1237 ;;		_turnRight
  1238 ;;		_fullSpeedAhead
  1239 ;;		_fullSpeedReverse
  1240 ;;		_turnLeft90
  1241 ;;		_turnRight90
  1242 ;;		_turnLeft135
  1243 ;;		_turnRight135
  1244 ;;		_UTurn
  1245 ;;		_headbuttReverse
  1246 ;;		_squareReverse
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text3
  1251   00191A                     __ptext3:
  1252                           	callstack 0
  1253   00191A                     ___xxtofl:
  1254                           	callstack 28
  1255                           
  1256                           ;incstack = 0
  1257                           ;___xxtofl@sign stored from wreg
  1258   00191A  6E09               	movwf	___xxtofl@sign^0,c
  1259   00191C  5009               	movf	___xxtofl@sign^0,w,c
  1260   00191E  B4D8               	btfsc	status,2,c
  1261   001920  EF94  F00C         	goto	u1831
  1262   001924  EF96  F00C         	goto	u1830
  1263   001928                     u1831:
  1264   001928  EFB8  F00C         	goto	l1410
  1265   00192C                     u1830:
  1266   00192C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1267   00192E  EF9D  F00C         	goto	u1840
  1268   001932  EF9B  F00C         	goto	u1841
  1269   001936                     u1841:
  1270   001936  EFB8  F00C         	goto	l1410
  1271   00193A                     u1840:
  1272   00193A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1273   00193E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1274   001942  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1275   001946  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1276   00194A  1E05               	comf	??___xxtofl^0,f,c
  1277   00194C  1E06               	comf	(??___xxtofl+1)^0,f,c
  1278   00194E  1E07               	comf	(??___xxtofl+2)^0,f,c
  1279   001950  1E08               	comf	(??___xxtofl+3)^0,f,c
  1280   001952  2A05               	incf	??___xxtofl^0,f,c
  1281   001954  0E00               	movlw	0
  1282   001956  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1283   001958  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1284   00195A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1285   00195C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1286   001960  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1287   001964  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1288   001968  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1289   00196C  EFC0  F00C         	goto	l3019
  1290   001970                     l1410:
  1291   001970  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1292   001974  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1293   001978  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1294   00197C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1295   001980                     l3019:
  1296   001980  5001               	movf	___xxtofl@val^0,w,c
  1297   001982  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1298   001984  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1299   001986  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1300   001988  A4D8               	btfss	status,2,c
  1301   00198A  EFC9  F00C         	goto	u1851
  1302   00198E  EFCB  F00C         	goto	u1850
  1303   001992                     u1851:
  1304   001992  EFD5  F00C         	goto	l3025
  1305   001996                     u1850:
  1306   001996  0E00               	movlw	0
  1307   001998  6E01               	movwf	?___xxtofl^0,c
  1308   00199A  0E00               	movlw	0
  1309   00199C  6E02               	movwf	(?___xxtofl+1)^0,c
  1310   00199E  0E00               	movlw	0
  1311   0019A0  6E03               	movwf	(?___xxtofl+2)^0,c
  1312   0019A2  0E00               	movlw	0
  1313   0019A4  6E04               	movwf	(?___xxtofl+3)^0,c
  1314   0019A6  EF66  F00D         	goto	l1413
  1315   0019AA                     l3025:
  1316   0019AA  0E96               	movlw	150
  1317   0019AC  6E0A               	movwf	___xxtofl@exp^0,c
  1318   0019AE  EFDF  F00C         	goto	l3029
  1319   0019B2                     l3027:
  1320   0019B2  2A0A               	incf	___xxtofl@exp^0,f,c
  1321   0019B4  90D8               	bcf	status,0,c
  1322   0019B6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1323   0019B8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1324   0019BA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1325   0019BC  320B               	rrcf	___xxtofl@arg^0,f,c
  1326   0019BE                     l3029:
  1327   0019BE  0E00               	movlw	0
  1328   0019C0  140B               	andwf	___xxtofl@arg^0,w,c
  1329   0019C2  6E05               	movwf	??___xxtofl^0,c
  1330   0019C4  0E00               	movlw	0
  1331   0019C6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1332   0019C8  6E06               	movwf	(??___xxtofl+1)^0,c
  1333   0019CA  0E00               	movlw	0
  1334   0019CC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1335   0019CE  6E07               	movwf	(??___xxtofl+2)^0,c
  1336   0019D0  0EFE               	movlw	254
  1337   0019D2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1338   0019D4  6E08               	movwf	(??___xxtofl+3)^0,c
  1339   0019D6  5005               	movf	??___xxtofl^0,w,c
  1340   0019D8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1341   0019DA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1342   0019DC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1343   0019DE  A4D8               	btfss	status,2,c
  1344   0019E0  EFF4  F00C         	goto	u1861
  1345   0019E4  EFF6  F00C         	goto	u1860
  1346   0019E8                     u1861:
  1347   0019E8  EFD9  F00C         	goto	l3027
  1348   0019EC                     u1860:
  1349   0019EC  EF04  F00D         	goto	l1417
  1350   0019F0                     l3031:
  1351   0019F0  2A0A               	incf	___xxtofl@exp^0,f,c
  1352   0019F2  0E01               	movlw	1
  1353   0019F4  260B               	addwf	___xxtofl@arg^0,f,c
  1354   0019F6  0E00               	movlw	0
  1355   0019F8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1356   0019FA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1357   0019FC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1358   0019FE  90D8               	bcf	status,0,c
  1359   001A00  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1360   001A02  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1361   001A04  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1362   001A06  320B               	rrcf	___xxtofl@arg^0,f,c
  1363   001A08                     l1417:
  1364   001A08  0E00               	movlw	0
  1365   001A0A  140B               	andwf	___xxtofl@arg^0,w,c
  1366   001A0C  6E05               	movwf	??___xxtofl^0,c
  1367   001A0E  0E00               	movlw	0
  1368   001A10  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1369   001A12  6E06               	movwf	(??___xxtofl+1)^0,c
  1370   001A14  0E00               	movlw	0
  1371   001A16  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1372   001A18  6E07               	movwf	(??___xxtofl+2)^0,c
  1373   001A1A  0EFF               	movlw	255
  1374   001A1C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1375   001A1E  6E08               	movwf	(??___xxtofl+3)^0,c
  1376   001A20  5005               	movf	??___xxtofl^0,w,c
  1377   001A22  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1378   001A24  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1379   001A26  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1380   001A28  A4D8               	btfss	status,2,c
  1381   001A2A  EF19  F00D         	goto	u1871
  1382   001A2E  EF1B  F00D         	goto	u1870
  1383   001A32                     u1871:
  1384   001A32  EFF8  F00C         	goto	l3031
  1385   001A36                     u1870:
  1386   001A36  EF23  F00D         	goto	l3039
  1387   001A3A                     l3037:
  1388   001A3A  060A               	decf	___xxtofl@exp^0,f,c
  1389   001A3C  90D8               	bcf	status,0,c
  1390   001A3E  360B               	rlcf	___xxtofl@arg^0,f,c
  1391   001A40  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1392   001A42  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1393   001A44  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1394   001A46                     l3039:
  1395   001A46  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1396   001A48  EF28  F00D         	goto	u1881
  1397   001A4C  EF2A  F00D         	goto	u1880
  1398   001A50                     u1881:
  1399   001A50  EF32  F00D         	goto	l1424
  1400   001A54                     u1880:
  1401   001A54  0E02               	movlw	2
  1402   001A56  600A               	cpfslt	___xxtofl@exp^0,c
  1403   001A58  EF30  F00D         	goto	u1891
  1404   001A5C  EF32  F00D         	goto	u1890
  1405   001A60                     u1891:
  1406   001A60  EF1D  F00D         	goto	l3037
  1407   001A64                     u1890:
  1408   001A64                     l1424:
  1409   001A64  B00A               	btfsc	___xxtofl@exp^0,0,c
  1410   001A66  EF37  F00D         	goto	u1901
  1411   001A6A  EF39  F00D         	goto	u1900
  1412   001A6E                     u1901:
  1413   001A6E  EF3A  F00D         	goto	l3045
  1414   001A72                     u1900:
  1415   001A72  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1416   001A74                     l3045:
  1417   001A74  90D8               	bcf	status,0,c
  1418   001A76  320A               	rrcf	___xxtofl@exp^0,f,c
  1419   001A78  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1420   001A7C  6A06               	clrf	(??___xxtofl+1)^0,c
  1421   001A7E  6A07               	clrf	(??___xxtofl+2)^0,c
  1422   001A80  6A08               	clrf	(??___xxtofl+3)^0,c
  1423   001A82  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1424   001A86  6A07               	clrf	(??___xxtofl+2)^0,c
  1425   001A88  6A06               	clrf	(??___xxtofl+1)^0,c
  1426   001A8A  6A05               	clrf	??___xxtofl^0,c
  1427   001A8C  5005               	movf	??___xxtofl^0,w,c
  1428   001A8E  120B               	iorwf	___xxtofl@arg^0,f,c
  1429   001A90  5006               	movf	(??___xxtofl+1)^0,w,c
  1430   001A92  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1431   001A94  5007               	movf	(??___xxtofl+2)^0,w,c
  1432   001A96  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1433   001A98  5008               	movf	(??___xxtofl+3)^0,w,c
  1434   001A9A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1435   001A9C  5009               	movf	___xxtofl@sign^0,w,c
  1436   001A9E  B4D8               	btfsc	status,2,c
  1437   001AA0  EF54  F00D         	goto	u1911
  1438   001AA4  EF56  F00D         	goto	u1910
  1439   001AA8                     u1911:
  1440   001AA8  EF5E  F00D         	goto	l3055
  1441   001AAC                     u1910:
  1442   001AAC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1443   001AAE  EF5D  F00D         	goto	u1920
  1444   001AB2  EF5B  F00D         	goto	u1921
  1445   001AB6                     u1921:
  1446   001AB6  EF5E  F00D         	goto	l3055
  1447   001ABA                     u1920:
  1448   001ABA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1449   001ABC                     l3055:
  1450   001ABC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1451   001AC0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1452   001AC4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1453   001AC8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1454   001ACC                     l1413:
  1455   001ACC  0012               	return		;funcret
  1456   001ACE                     __end_of___xxtofl:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function ___fltol *****************
  1460 ;; Defined at:
  1461 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  f1              4   39[COMRAM] unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  exp1            1   48[COMRAM] unsigned char 
  1466 ;;  sign1           1   47[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  4   39[COMRAM] long 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;Total ram usage:       10 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_scaleRGB
  1487 ;;		_stop
  1488 ;;		_turnLeft
  1489 ;;		_turnRight
  1490 ;;		_fullSpeedAhead
  1491 ;;		_fullSpeedReverse
  1492 ;;		_turnLeft90
  1493 ;;		_turnRight90
  1494 ;;		_turnLeft135
  1495 ;;		_turnRight135
  1496 ;;		_UTurn
  1497 ;;		_headbuttReverse
  1498 ;;		_squareReverse
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text4
  1503   001C2C                     __ptext4:
  1504                           	callstack 0
  1505   001C2C                     ___fltol:
  1506                           	callstack 28
  1507   001C2C  342A               	rlcf	(___fltol@f1+2)^0,w,c
  1508   001C2E  342B               	rlcf	(___fltol@f1+3)^0,w,c
  1509   001C30  6E31               	movwf	___fltol@exp1^0,c
  1510   001C32  5031               	movf	___fltol@exp1^0,w,c
  1511   001C34  A4D8               	btfss	status,2,c
  1512   001C36  EF1F  F00E         	goto	u1761
  1513   001C3A  EF21  F00E         	goto	u1760
  1514   001C3E                     u1761:
  1515   001C3E  EF2B  F00E         	goto	l2975
  1516   001C42                     u1760:
  1517   001C42                     l2971:
  1518   001C42  0E00               	movlw	0
  1519   001C44  6E28               	movwf	?___fltol^0,c
  1520   001C46  0E00               	movlw	0
  1521   001C48  6E29               	movwf	(?___fltol+1)^0,c
  1522   001C4A  0E00               	movlw	0
  1523   001C4C  6E2A               	movwf	(?___fltol+2)^0,c
  1524   001C4E  0E00               	movlw	0
  1525   001C50  6E2B               	movwf	(?___fltol+3)^0,c
  1526   001C52  EF98  F00E         	goto	l1052
  1527   001C56                     l2975:
  1528   001C56  C028  F02C         	movff	___fltol@f1,??___fltol
  1529   001C5A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  1530   001C5E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  1531   001C62  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  1532   001C66  0E20               	movlw	32
  1533   001C68  EF3B  F00E         	goto	u1770
  1534   001C6C                     u1775:
  1535   001C6C  90D8               	bcf	status,0,c
  1536   001C6E  322F               	rrcf	(??___fltol+3)^0,f,c
  1537   001C70  322E               	rrcf	(??___fltol+2)^0,f,c
  1538   001C72  322D               	rrcf	(??___fltol+1)^0,f,c
  1539   001C74  322C               	rrcf	??___fltol^0,f,c
  1540   001C76                     u1770:
  1541   001C76  2EE8               	decfsz	wreg,f,c
  1542   001C78  EF36  F00E         	goto	u1775
  1543   001C7C  502C               	movf	??___fltol^0,w,c
  1544   001C7E  6E30               	movwf	___fltol@sign1^0,c
  1545   001C80  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  1546   001C82  0EFF               	movlw	255
  1547   001C84  1628               	andwf	___fltol@f1^0,f,c
  1548   001C86  0EFF               	movlw	255
  1549   001C88  1629               	andwf	(___fltol@f1+1)^0,f,c
  1550   001C8A  0EFF               	movlw	255
  1551   001C8C  162A               	andwf	(___fltol@f1+2)^0,f,c
  1552   001C8E  0E00               	movlw	0
  1553   001C90  162B               	andwf	(___fltol@f1+3)^0,f,c
  1554   001C92  0E96               	movlw	150
  1555   001C94  5E31               	subwf	___fltol@exp1^0,f,c
  1556   001C96  BE31               	btfsc	___fltol@exp1^0,7,c
  1557   001C98  EF52  F00E         	goto	u1780
  1558   001C9C  EF50  F00E         	goto	u1781
  1559   001CA0                     u1781:
  1560   001CA0  EF68  F00E         	goto	l2995
  1561   001CA4                     u1780:
  1562   001CA4  5031               	movf	___fltol@exp1^0,w,c
  1563   001CA6  0A80               	xorlw	128
  1564   001CA8  0F97               	addlw	151
  1565   001CAA  B0D8               	btfsc	status,0,c
  1566   001CAC  EF5A  F00E         	goto	u1791
  1567   001CB0  EF5C  F00E         	goto	u1790
  1568   001CB4                     u1791:
  1569   001CB4  EF5E  F00E         	goto	l2991
  1570   001CB8                     u1790:
  1571   001CB8  EF21  F00E         	goto	l2971
  1572   001CBC                     l2991:
  1573   001CBC  90D8               	bcf	status,0,c
  1574   001CBE  322B               	rrcf	(___fltol@f1+3)^0,f,c
  1575   001CC0  322A               	rrcf	(___fltol@f1+2)^0,f,c
  1576   001CC2  3229               	rrcf	(___fltol@f1+1)^0,f,c
  1577   001CC4  3228               	rrcf	___fltol@f1^0,f,c
  1578   001CC6  3E31               	incfsz	___fltol@exp1^0,f,c
  1579   001CC8  EF5E  F00E         	goto	l2991
  1580   001CCC  EF80  F00E         	goto	l3005
  1581   001CD0                     l2995:
  1582   001CD0  0E1F               	movlw	31
  1583   001CD2  6431               	cpfsgt	___fltol@exp1^0,c
  1584   001CD4  EF6E  F00E         	goto	u1801
  1585   001CD8  EF70  F00E         	goto	u1800
  1586   001CDC                     u1801:
  1587   001CDC  EF78  F00E         	goto	l3003
  1588   001CE0                     u1800:
  1589   001CE0  EF21  F00E         	goto	l2971
  1590   001CE4                     l3001:
  1591   001CE4  90D8               	bcf	status,0,c
  1592   001CE6  3628               	rlcf	___fltol@f1^0,f,c
  1593   001CE8  3629               	rlcf	(___fltol@f1+1)^0,f,c
  1594   001CEA  362A               	rlcf	(___fltol@f1+2)^0,f,c
  1595   001CEC  362B               	rlcf	(___fltol@f1+3)^0,f,c
  1596   001CEE  0631               	decf	___fltol@exp1^0,f,c
  1597   001CF0                     l3003:
  1598   001CF0  5031               	movf	___fltol@exp1^0,w,c
  1599   001CF2  A4D8               	btfss	status,2,c
  1600   001CF4  EF7E  F00E         	goto	u1811
  1601   001CF8  EF80  F00E         	goto	u1810
  1602   001CFC                     u1811:
  1603   001CFC  EF72  F00E         	goto	l3001
  1604   001D00                     u1810:
  1605   001D00                     l3005:
  1606   001D00  5030               	movf	___fltol@sign1^0,w,c
  1607   001D02  B4D8               	btfsc	status,2,c
  1608   001D04  EF86  F00E         	goto	u1821
  1609   001D08  EF88  F00E         	goto	u1820
  1610   001D0C                     u1821:
  1611   001D0C  EF90  F00E         	goto	l3009
  1612   001D10                     u1820:
  1613   001D10  1E2B               	comf	(___fltol@f1+3)^0,f,c
  1614   001D12  1E2A               	comf	(___fltol@f1+2)^0,f,c
  1615   001D14  1E29               	comf	(___fltol@f1+1)^0,f,c
  1616   001D16  6C28               	negf	___fltol@f1^0,c
  1617   001D18  0E00               	movlw	0
  1618   001D1A  2229               	addwfc	(___fltol@f1+1)^0,f,c
  1619   001D1C  222A               	addwfc	(___fltol@f1+2)^0,f,c
  1620   001D1E  222B               	addwfc	(___fltol@f1+3)^0,f,c
  1621   001D20                     l3009:
  1622   001D20  C028  F028         	movff	___fltol@f1,?___fltol
  1623   001D24  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  1624   001D28  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  1625   001D2C  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  1626   001D30                     l1052:
  1627   001D30  0012               	return		;funcret
  1628   001D32                     __end_of___fltol:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function ___flmul *****************
  1632 ;; Defined at:
  1633 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  b               4   14[COMRAM] long 
  1636 ;;  a               4   18[COMRAM] long 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  prod            4   33[COMRAM] struct .
  1639 ;;  grs             4   27[COMRAM] unsigned long 
  1640 ;;  temp            2   37[COMRAM] struct .
  1641 ;;  bexp            1   32[COMRAM] unsigned char 
  1642 ;;  aexp            1   31[COMRAM] unsigned char 
  1643 ;;  sign            1   26[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  4   14[COMRAM] unsigned char 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, prodl, prodh
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:       25 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_scaleRGB
  1664 ;;		_stop
  1665 ;;		_turnLeft
  1666 ;;		_turnRight
  1667 ;;		_fullSpeedAhead
  1668 ;;		_fullSpeedReverse
  1669 ;;		_turnLeft90
  1670 ;;		_turnRight90
  1671 ;;		_turnLeft135
  1672 ;;		_turnRight135
  1673 ;;		_UTurn
  1674 ;;		_headbuttReverse
  1675 ;;		_squareReverse
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text5
  1680   0014F0                     __ptext5:
  1681                           	callstack 0
  1682   0014F0                     ___flmul:
  1683                           	callstack 28
  1684   0014F0  5012               	movf	(___flmul@b+3)^0,w,c
  1685   0014F2  0B80               	andlw	128
  1686   0014F4  6E1B               	movwf	___flmul@sign^0,c
  1687   0014F6  5012               	movf	(___flmul@b+3)^0,w,c
  1688   0014F8  2412               	addwf	(___flmul@b+3)^0,w,c
  1689   0014FA  6E21               	movwf	___flmul@bexp^0,c
  1690   0014FC  AE11               	btfss	(___flmul@b+2)^0,7,c
  1691   0014FE  EF83  F00A         	goto	u1571
  1692   001502  EF85  F00A         	goto	u1570
  1693   001506                     u1571:
  1694   001506  EF86  F00A         	goto	l2845
  1695   00150A                     u1570:
  1696   00150A  8021               	bsf	___flmul@bexp^0,0,c
  1697   00150C                     l2845:
  1698   00150C  5021               	movf	___flmul@bexp^0,w,c
  1699   00150E  B4D8               	btfsc	status,2,c
  1700   001510  EF8C  F00A         	goto	u1581
  1701   001514  EF8E  F00A         	goto	u1580
  1702   001518                     u1581:
  1703   001518  EFA1  F00A         	goto	l2853
  1704   00151C                     u1580:
  1705   00151C  2821               	incf	___flmul@bexp^0,w,c
  1706   00151E  A4D8               	btfss	status,2,c
  1707   001520  EF94  F00A         	goto	u1591
  1708   001524  EF96  F00A         	goto	u1590
  1709   001528                     u1591:
  1710   001528  EF9E  F00A         	goto	l2851
  1711   00152C                     u1590:
  1712   00152C  0E00               	movlw	0
  1713   00152E  6E0F               	movwf	___flmul@b^0,c
  1714   001530  0E00               	movlw	0
  1715   001532  6E10               	movwf	(___flmul@b+1)^0,c
  1716   001534  0E00               	movlw	0
  1717   001536  6E11               	movwf	(___flmul@b+2)^0,c
  1718   001538  0E00               	movlw	0
  1719   00153A  6E12               	movwf	(___flmul@b+3)^0,c
  1720   00153C                     l2851:
  1721   00153C  8E11               	bsf	(___flmul@b+2)^0,7,c
  1722   00153E  EFA9  F00A         	goto	l2855
  1723   001542                     l2853:
  1724   001542  0E00               	movlw	0
  1725   001544  6E0F               	movwf	___flmul@b^0,c
  1726   001546  0E00               	movlw	0
  1727   001548  6E10               	movwf	(___flmul@b+1)^0,c
  1728   00154A  0E00               	movlw	0
  1729   00154C  6E11               	movwf	(___flmul@b+2)^0,c
  1730   00154E  0E00               	movlw	0
  1731   001550  6E12               	movwf	(___flmul@b+3)^0,c
  1732   001552                     l2855:
  1733   001552  5016               	movf	(___flmul@a+3)^0,w,c
  1734   001554  0B80               	andlw	128
  1735   001556  1A1B               	xorwf	___flmul@sign^0,f,c
  1736   001558  5016               	movf	(___flmul@a+3)^0,w,c
  1737   00155A  2416               	addwf	(___flmul@a+3)^0,w,c
  1738   00155C  6E20               	movwf	___flmul@aexp^0,c
  1739   00155E  AE15               	btfss	(___flmul@a+2)^0,7,c
  1740   001560  EFB4  F00A         	goto	u1601
  1741   001564  EFB6  F00A         	goto	u1600
  1742   001568                     u1601:
  1743   001568  EFB7  F00A         	goto	l2863
  1744   00156C                     u1600:
  1745   00156C  8020               	bsf	___flmul@aexp^0,0,c
  1746   00156E                     l2863:
  1747   00156E  5020               	movf	___flmul@aexp^0,w,c
  1748   001570  B4D8               	btfsc	status,2,c
  1749   001572  EFBD  F00A         	goto	u1611
  1750   001576  EFBF  F00A         	goto	u1610
  1751   00157A                     u1611:
  1752   00157A  EFD2  F00A         	goto	l2871
  1753   00157E                     u1610:
  1754   00157E  2820               	incf	___flmul@aexp^0,w,c
  1755   001580  A4D8               	btfss	status,2,c
  1756   001582  EFC5  F00A         	goto	u1621
  1757   001586  EFC7  F00A         	goto	u1620
  1758   00158A                     u1621:
  1759   00158A  EFCF  F00A         	goto	l2869
  1760   00158E                     u1620:
  1761   00158E  0E00               	movlw	0
  1762   001590  6E13               	movwf	___flmul@a^0,c
  1763   001592  0E00               	movlw	0
  1764   001594  6E14               	movwf	(___flmul@a+1)^0,c
  1765   001596  0E00               	movlw	0
  1766   001598  6E15               	movwf	(___flmul@a+2)^0,c
  1767   00159A  0E00               	movlw	0
  1768   00159C  6E16               	movwf	(___flmul@a+3)^0,c
  1769   00159E                     l2869:
  1770   00159E  8E15               	bsf	(___flmul@a+2)^0,7,c
  1771   0015A0  EFDA  F00A         	goto	l1369
  1772   0015A4                     l2871:
  1773   0015A4  0E00               	movlw	0
  1774   0015A6  6E13               	movwf	___flmul@a^0,c
  1775   0015A8  0E00               	movlw	0
  1776   0015AA  6E14               	movwf	(___flmul@a+1)^0,c
  1777   0015AC  0E00               	movlw	0
  1778   0015AE  6E15               	movwf	(___flmul@a+2)^0,c
  1779   0015B0  0E00               	movlw	0
  1780   0015B2  6E16               	movwf	(___flmul@a+3)^0,c
  1781   0015B4                     l1369:
  1782   0015B4  5020               	movf	___flmul@aexp^0,w,c
  1783   0015B6  B4D8               	btfsc	status,2,c
  1784   0015B8  EFE0  F00A         	goto	u1631
  1785   0015BC  EFE2  F00A         	goto	u1630
  1786   0015C0                     u1631:
  1787   0015C0  EFEA  F00A         	goto	l2875
  1788   0015C4                     u1630:
  1789   0015C4  5021               	movf	___flmul@bexp^0,w,c
  1790   0015C6  A4D8               	btfss	status,2,c
  1791   0015C8  EFE8  F00A         	goto	u1641
  1792   0015CC  EFEA  F00A         	goto	u1640
  1793   0015D0                     u1641:
  1794   0015D0  EFF4  F00A         	goto	l2879
  1795   0015D4                     u1640:
  1796   0015D4                     l2875:
  1797   0015D4  0E00               	movlw	0
  1798   0015D6  6E0F               	movwf	?___flmul^0,c
  1799   0015D8  0E00               	movlw	0
  1800   0015DA  6E10               	movwf	(?___flmul+1)^0,c
  1801   0015DC  0E00               	movlw	0
  1802   0015DE  6E11               	movwf	(?___flmul+2)^0,c
  1803   0015E0  0E00               	movlw	0
  1804   0015E2  6E12               	movwf	(?___flmul+3)^0,c
  1805   0015E4  EF8C  F00C         	goto	l1373
  1806   0015E8                     l2879:
  1807   0015E8  5015               	movf	(___flmul@a+2)^0,w,c
  1808   0015EA  020F               	mulwf	___flmul@b^0,c
  1809   0015EC  CFF3 F026          	movff	prodl,___flmul@temp
  1810   0015F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  1811   0015F4  5026               	movf	___flmul@temp^0,w,c
  1812   0015F6  6E1C               	movwf	___flmul@grs^0,c
  1813   0015F8  6A1D               	clrf	(___flmul@grs+1)^0,c
  1814   0015FA  6A1E               	clrf	(___flmul@grs+2)^0,c
  1815   0015FC  6A1F               	clrf	(___flmul@grs+3)^0,c
  1816   0015FE  5027               	movf	(___flmul@temp+1)^0,w,c
  1817   001600  6E22               	movwf	___flmul@prod^0,c
  1818   001602  6A23               	clrf	(___flmul@prod+1)^0,c
  1819   001604  6A24               	clrf	(___flmul@prod+2)^0,c
  1820   001606  6A25               	clrf	(___flmul@prod+3)^0,c
  1821   001608  5014               	movf	(___flmul@a+1)^0,w,c
  1822   00160A  0210               	mulwf	(___flmul@b+1)^0,c
  1823   00160C  CFF3 F026          	movff	prodl,___flmul@temp
  1824   001610  CFF4 F027          	movff	prodh,___flmul@temp+1
  1825   001614  5026               	movf	___flmul@temp^0,w,c
  1826   001616  261C               	addwf	___flmul@grs^0,f,c
  1827   001618  0E00               	movlw	0
  1828   00161A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1829   00161C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1830   00161E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1831   001620  5027               	movf	(___flmul@temp+1)^0,w,c
  1832   001622  2622               	addwf	___flmul@prod^0,f,c
  1833   001624  0E00               	movlw	0
  1834   001626  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1835   001628  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1836   00162A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1837   00162C  5013               	movf	___flmul@a^0,w,c
  1838   00162E  0211               	mulwf	(___flmul@b+2)^0,c
  1839   001630  CFF3 F026          	movff	prodl,___flmul@temp
  1840   001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  1841   001638  5026               	movf	___flmul@temp^0,w,c
  1842   00163A  261C               	addwf	___flmul@grs^0,f,c
  1843   00163C  0E00               	movlw	0
  1844   00163E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1845   001640  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1846   001642  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1847   001644  5027               	movf	(___flmul@temp+1)^0,w,c
  1848   001646  2622               	addwf	___flmul@prod^0,f,c
  1849   001648  0E00               	movlw	0
  1850   00164A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1851   00164C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1852   00164E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1853   001650  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1854   001654  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1855   001658  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1856   00165C  6A1C               	clrf	___flmul@grs^0,c
  1857   00165E  5013               	movf	___flmul@a^0,w,c
  1858   001660  0210               	mulwf	(___flmul@b+1)^0,c
  1859   001662  CFF3 F026          	movff	prodl,___flmul@temp
  1860   001666  CFF4 F027          	movff	prodh,___flmul@temp+1
  1861   00166A  5026               	movf	___flmul@temp^0,w,c
  1862   00166C  261C               	addwf	___flmul@grs^0,f,c
  1863   00166E  5027               	movf	(___flmul@temp+1)^0,w,c
  1864   001670  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1865   001672  0E00               	movlw	0
  1866   001674  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1867   001676  0E00               	movlw	0
  1868   001678  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1869   00167A  5014               	movf	(___flmul@a+1)^0,w,c
  1870   00167C  020F               	mulwf	___flmul@b^0,c
  1871   00167E  CFF3 F026          	movff	prodl,___flmul@temp
  1872   001682  CFF4 F027          	movff	prodh,___flmul@temp+1
  1873   001686  5026               	movf	___flmul@temp^0,w,c
  1874   001688  261C               	addwf	___flmul@grs^0,f,c
  1875   00168A  5027               	movf	(___flmul@temp+1)^0,w,c
  1876   00168C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1877   00168E  0E00               	movlw	0
  1878   001690  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1879   001692  0E00               	movlw	0
  1880   001694  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1881   001696  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1882   00169A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1883   00169E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1884   0016A2  6A1C               	clrf	___flmul@grs^0,c
  1885   0016A4  5013               	movf	___flmul@a^0,w,c
  1886   0016A6  020F               	mulwf	___flmul@b^0,c
  1887   0016A8  CFF3 F026          	movff	prodl,___flmul@temp
  1888   0016AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  1889   0016B0  5026               	movf	___flmul@temp^0,w,c
  1890   0016B2  261C               	addwf	___flmul@grs^0,f,c
  1891   0016B4  5027               	movf	(___flmul@temp+1)^0,w,c
  1892   0016B6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1893   0016B8  0E00               	movlw	0
  1894   0016BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1895   0016BC  0E00               	movlw	0
  1896   0016BE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1897   0016C0  5015               	movf	(___flmul@a+2)^0,w,c
  1898   0016C2  0210               	mulwf	(___flmul@b+1)^0,c
  1899   0016C4  CFF3 F026          	movff	prodl,___flmul@temp
  1900   0016C8  CFF4 F027          	movff	prodh,___flmul@temp+1
  1901   0016CC  5026               	movf	___flmul@temp^0,w,c
  1902   0016CE  2622               	addwf	___flmul@prod^0,f,c
  1903   0016D0  5027               	movf	(___flmul@temp+1)^0,w,c
  1904   0016D2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1905   0016D4  0E00               	movlw	0
  1906   0016D6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1907   0016D8  0E00               	movlw	0
  1908   0016DA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1909   0016DC  5014               	movf	(___flmul@a+1)^0,w,c
  1910   0016DE  0211               	mulwf	(___flmul@b+2)^0,c
  1911   0016E0  CFF3 F026          	movff	prodl,___flmul@temp
  1912   0016E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  1913   0016E8  5026               	movf	___flmul@temp^0,w,c
  1914   0016EA  2622               	addwf	___flmul@prod^0,f,c
  1915   0016EC  5027               	movf	(___flmul@temp+1)^0,w,c
  1916   0016EE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1917   0016F0  0E00               	movlw	0
  1918   0016F2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1919   0016F4  0E00               	movlw	0
  1920   0016F6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1921   0016F8  5015               	movf	(___flmul@a+2)^0,w,c
  1922   0016FA  0211               	mulwf	(___flmul@b+2)^0,c
  1923   0016FC  CFF3 F026          	movff	prodl,___flmul@temp
  1924   001700  CFF4 F027          	movff	prodh,___flmul@temp+1
  1925   001704  5026               	movf	___flmul@temp^0,w,c
  1926   001706  6E17               	movwf	??___flmul^0,c
  1927   001708  5027               	movf	(___flmul@temp+1)^0,w,c
  1928   00170A  6E18               	movwf	(??___flmul+1)^0,c
  1929   00170C  6A19               	clrf	(??___flmul+2)^0,c
  1930   00170E  6A1A               	clrf	(??___flmul+3)^0,c
  1931   001710  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1932   001714  C018  F019         	movff	??___flmul+1,??___flmul+2
  1933   001718  C017  F018         	movff	??___flmul,??___flmul+1
  1934   00171C  6A17               	clrf	??___flmul^0,c
  1935   00171E  5017               	movf	??___flmul^0,w,c
  1936   001720  2622               	addwf	___flmul@prod^0,f,c
  1937   001722  5018               	movf	(??___flmul+1)^0,w,c
  1938   001724  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1939   001726  5019               	movf	(??___flmul+2)^0,w,c
  1940   001728  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1941   00172A  501A               	movf	(??___flmul+3)^0,w,c
  1942   00172C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1943   00172E  C01C  F017         	movff	___flmul@grs,??___flmul
  1944   001732  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1945   001736  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1946   00173A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1947   00173E  0E19               	movlw	25
  1948   001740  EFA7  F00B         	goto	u1650
  1949   001744                     u1655:
  1950   001744  90D8               	bcf	status,0,c
  1951   001746  321A               	rrcf	(??___flmul+3)^0,f,c
  1952   001748  3219               	rrcf	(??___flmul+2)^0,f,c
  1953   00174A  3218               	rrcf	(??___flmul+1)^0,f,c
  1954   00174C  3217               	rrcf	??___flmul^0,f,c
  1955   00174E                     u1650:
  1956   00174E  2EE8               	decfsz	wreg,f,c
  1957   001750  EFA2  F00B         	goto	u1655
  1958   001754  5017               	movf	??___flmul^0,w,c
  1959   001756  2622               	addwf	___flmul@prod^0,f,c
  1960   001758  5018               	movf	(??___flmul+1)^0,w,c
  1961   00175A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1962   00175C  5019               	movf	(??___flmul+2)^0,w,c
  1963   00175E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1964   001760  501A               	movf	(??___flmul+3)^0,w,c
  1965   001762  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1966   001764  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1967   001768  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1968   00176C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1969   001770  6A1C               	clrf	___flmul@grs^0,c
  1970   001772  5020               	movf	___flmul@aexp^0,w,c
  1971   001774  C021  F017         	movff	___flmul@bexp,??___flmul
  1972   001778  6A18               	clrf	(??___flmul+1)^0,c
  1973   00177A  2617               	addwf	??___flmul^0,f,c
  1974   00177C  0E00               	movlw	0
  1975   00177E  2218               	addwfc	(??___flmul+1)^0,f,c
  1976   001780  0E82               	movlw	130
  1977   001782  2417               	addwf	??___flmul^0,w,c
  1978   001784  6E26               	movwf	___flmul@temp^0,c
  1979   001786  0EFF               	movlw	255
  1980   001788  2018               	addwfc	(??___flmul+1)^0,w,c
  1981   00178A  6E27               	movwf	(___flmul@temp+1)^0,c
  1982   00178C  EFDD  F00B         	goto	l2927
  1983   001790                     l2921:
  1984   001790  90D8               	bcf	status,0,c
  1985   001792  3622               	rlcf	___flmul@prod^0,f,c
  1986   001794  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1987   001796  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1988   001798  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1989   00179A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1990   00179C  EFD2  F00B         	goto	u1661
  1991   0017A0  EFD4  F00B         	goto	u1660
  1992   0017A4                     u1661:
  1993   0017A4  EFD5  F00B         	goto	l1376
  1994   0017A8                     u1660:
  1995   0017A8  8022               	bsf	___flmul@prod^0,0,c
  1996   0017AA                     l1376:
  1997   0017AA  90D8               	bcf	status,0,c
  1998   0017AC  361C               	rlcf	___flmul@grs^0,f,c
  1999   0017AE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  2000   0017B0  361E               	rlcf	(___flmul@grs+2)^0,f,c
  2001   0017B2  361F               	rlcf	(___flmul@grs+3)^0,f,c
  2002   0017B4  0626               	decf	___flmul@temp^0,f,c
  2003   0017B6  A0D8               	btfss	status,0,c
  2004   0017B8  0627               	decf	(___flmul@temp+1)^0,f,c
  2005   0017BA                     l2927:
  2006   0017BA  AE24               	btfss	(___flmul@prod+2)^0,7,c
  2007   0017BC  EFE2  F00B         	goto	u1671
  2008   0017C0  EFE4  F00B         	goto	u1670
  2009   0017C4                     u1671:
  2010   0017C4  EFC8  F00B         	goto	l2921
  2011   0017C8                     u1670:
  2012   0017C8  0E00               	movlw	0
  2013   0017CA  6E20               	movwf	___flmul@aexp^0,c
  2014   0017CC  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  2015   0017CE  EFEB  F00B         	goto	u1681
  2016   0017D2  EFED  F00B         	goto	u1680
  2017   0017D6                     u1681:
  2018   0017D6  EF11  F00C         	goto	l1378
  2019   0017DA                     u1680:
  2020   0017DA  0EFF               	movlw	255
  2021   0017DC  141C               	andwf	___flmul@grs^0,w,c
  2022   0017DE  6E17               	movwf	??___flmul^0,c
  2023   0017E0  0EFF               	movlw	255
  2024   0017E2  141D               	andwf	(___flmul@grs+1)^0,w,c
  2025   0017E4  6E18               	movwf	(??___flmul+1)^0,c
  2026   0017E6  0EFF               	movlw	255
  2027   0017E8  141E               	andwf	(___flmul@grs+2)^0,w,c
  2028   0017EA  6E19               	movwf	(??___flmul+2)^0,c
  2029   0017EC  0E7F               	movlw	127
  2030   0017EE  141F               	andwf	(___flmul@grs+3)^0,w,c
  2031   0017F0  6E1A               	movwf	(??___flmul+3)^0,c
  2032   0017F2  5017               	movf	??___flmul^0,w,c
  2033   0017F4  1018               	iorwf	(??___flmul+1)^0,w,c
  2034   0017F6  1019               	iorwf	(??___flmul+2)^0,w,c
  2035   0017F8  101A               	iorwf	(??___flmul+3)^0,w,c
  2036   0017FA  B4D8               	btfsc	status,2,c
  2037   0017FC  EF02  F00C         	goto	u1691
  2038   001800  EF04  F00C         	goto	u1690
  2039   001804                     u1691:
  2040   001804  EF08  F00C         	goto	l1379
  2041   001808                     u1690:
  2042   001808                     l2935:
  2043   001808  0E01               	movlw	1
  2044   00180A  6E20               	movwf	___flmul@aexp^0,c
  2045   00180C  EF11  F00C         	goto	l1378
  2046   001810                     l1379:
  2047   001810  A022               	btfss	___flmul@prod^0,0,c
  2048   001812  EF0D  F00C         	goto	u1701
  2049   001816  EF0F  F00C         	goto	u1700
  2050   00181A                     u1701:
  2051   00181A  EF11  F00C         	goto	l1378
  2052   00181E                     u1700:
  2053   00181E  EF04  F00C         	goto	l2935
  2054   001822                     l1378:
  2055   001822  5020               	movf	___flmul@aexp^0,w,c
  2056   001824  B4D8               	btfsc	status,2,c
  2057   001826  EF17  F00C         	goto	u1711
  2058   00182A  EF19  F00C         	goto	u1710
  2059   00182E                     u1711:
  2060   00182E  EF3D  F00C         	goto	l2947
  2061   001832                     u1710:
  2062   001832  0E01               	movlw	1
  2063   001834  2622               	addwf	___flmul@prod^0,f,c
  2064   001836  0E00               	movlw	0
  2065   001838  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2066   00183A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2067   00183C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2068   00183E  A025               	btfss	(___flmul@prod+3)^0,0,c
  2069   001840  EF24  F00C         	goto	u1721
  2070   001844  EF26  F00C         	goto	u1720
  2071   001848                     u1721:
  2072   001848  EF3D  F00C         	goto	l2947
  2073   00184C                     u1720:
  2074   00184C  C022  F017         	movff	___flmul@prod,??___flmul
  2075   001850  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2076   001854  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2077   001858  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2078   00185C  341A               	rlcf	(??___flmul+3)^0,w,c
  2079   00185E  321A               	rrcf	(??___flmul+3)^0,f,c
  2080   001860  3219               	rrcf	(??___flmul+2)^0,f,c
  2081   001862  3218               	rrcf	(??___flmul+1)^0,f,c
  2082   001864  3217               	rrcf	??___flmul^0,f,c
  2083   001866  C017  F022         	movff	??___flmul,___flmul@prod
  2084   00186A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2085   00186E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2086   001872  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2087   001876  4A26               	infsnz	___flmul@temp^0,f,c
  2088   001878  2A27               	incf	(___flmul@temp+1)^0,f,c
  2089   00187A                     l2947:
  2090   00187A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2091   00187C  EF48  F00C         	goto	u1731
  2092   001880  5027               	movf	(___flmul@temp+1)^0,w,c
  2093   001882  E108               	bnz	u1730
  2094   001884  2826               	incf	___flmul@temp^0,w,c
  2095   001886  A0D8               	btfss	status,0,c
  2096   001888  EF48  F00C         	goto	u1731
  2097   00188C  EF4A  F00C         	goto	u1730
  2098   001890                     u1731:
  2099   001890  EF54  F00C         	goto	l2951
  2100   001894                     u1730:
  2101   001894  0E00               	movlw	0
  2102   001896  6E22               	movwf	___flmul@prod^0,c
  2103   001898  0E00               	movlw	0
  2104   00189A  6E23               	movwf	(___flmul@prod+1)^0,c
  2105   00189C  0E80               	movlw	128
  2106   00189E  6E24               	movwf	(___flmul@prod+2)^0,c
  2107   0018A0  0E7F               	movlw	127
  2108   0018A2  6E25               	movwf	(___flmul@prod+3)^0,c
  2109   0018A4  EF82  F00C         	goto	l2963
  2110   0018A8                     l2951:
  2111   0018A8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2112   0018AA  EF61  F00C         	goto	u1740
  2113   0018AE  5027               	movf	(___flmul@temp+1)^0,w,c
  2114   0018B0  E106               	bnz	u1741
  2115   0018B2  0426               	decf	___flmul@temp^0,w,c
  2116   0018B4  B0D8               	btfsc	status,0,c
  2117   0018B6  EF5F  F00C         	goto	u1741
  2118   0018BA  EF61  F00C         	goto	u1740
  2119   0018BE                     u1741:
  2120   0018BE  EF6D  F00C         	goto	l1386
  2121   0018C2                     u1740:
  2122   0018C2  0E00               	movlw	0
  2123   0018C4  6E22               	movwf	___flmul@prod^0,c
  2124   0018C6  0E00               	movlw	0
  2125   0018C8  6E23               	movwf	(___flmul@prod+1)^0,c
  2126   0018CA  0E00               	movlw	0
  2127   0018CC  6E24               	movwf	(___flmul@prod+2)^0,c
  2128   0018CE  0E00               	movlw	0
  2129   0018D0  6E25               	movwf	(___flmul@prod+3)^0,c
  2130   0018D2  0E00               	movlw	0
  2131   0018D4  6E1B               	movwf	___flmul@sign^0,c
  2132   0018D6  EF82  F00C         	goto	l2963
  2133   0018DA                     l1386:
  2134   0018DA  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2135   0018DE  0EFF               	movlw	255
  2136   0018E0  1622               	andwf	___flmul@prod^0,f,c
  2137   0018E2  0EFF               	movlw	255
  2138   0018E4  1623               	andwf	(___flmul@prod+1)^0,f,c
  2139   0018E6  0E7F               	movlw	127
  2140   0018E8  1624               	andwf	(___flmul@prod+2)^0,f,c
  2141   0018EA  0E00               	movlw	0
  2142   0018EC  1625               	andwf	(___flmul@prod+3)^0,f,c
  2143   0018EE  A021               	btfss	___flmul@bexp^0,0,c
  2144   0018F0  EF7C  F00C         	goto	u1751
  2145   0018F4  EF7E  F00C         	goto	u1750
  2146   0018F8                     u1751:
  2147   0018F8  EF7F  F00C         	goto	l2961
  2148   0018FC                     u1750:
  2149   0018FC  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2150   0018FE                     l2961:
  2151   0018FE  90D8               	bcf	status,0,c
  2152   001900  3021               	rrcf	___flmul@bexp^0,w,c
  2153   001902  6E25               	movwf	(___flmul@prod+3)^0,c
  2154   001904                     l2963:
  2155   001904  501B               	movf	___flmul@sign^0,w,c
  2156   001906  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2157   001908  C022  F00F         	movff	___flmul@prod,?___flmul
  2158   00190C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2159   001910  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2160   001914  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2161   001918                     l1373:
  2162   001918  0012               	return		;funcret
  2163   00191A                     __end_of___flmul:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _initUSART4 *****************
  2167 ;; Defined at:
  2168 ;;		line 5 in file "serial.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;Total ram usage:        0 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text6
  2197   002586                     __ptext6:
  2198                           	callstack 0
  2199   002586                     _initUSART4:
  2200                           	callstack 29
  2201   002586                     
  2202                           ;serial.c: 9:     RC0PPS = 0x12;
  2203   002586  0E12               	movlw	18
  2204   002588  010E               	movlb	14	; () banked
  2205   00258A  6F62               	movwf	98,b	;volatile
  2206                           
  2207                           ;serial.c: 10:     RX4PPS = 0x11;
  2208   00258C  0E11               	movlw	17
  2209   00258E  6F15               	movwf	21,b	;volatile
  2210   002590                     
  2211                           ; BSR set to: 14
  2212                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2213   002590  97E9               	bcf	233,3,b	;volatile
  2214   002592                     
  2215                           ; BSR set to: 14
  2216                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2217   002592  95E8               	bcf	232,2,b	;volatile
  2218                           
  2219                           ;serial.c: 14:     SP4BRGL = 51;
  2220   002594  0E33               	movlw	51
  2221   002596  6FE5               	movwf	229,b	;volatile
  2222                           
  2223                           ;serial.c: 15:     SP4BRGH = 0;
  2224   002598  0E00               	movlw	0
  2225   00259A  6FE6               	movwf	230,b	;volatile
  2226   00259C                     
  2227                           ; BSR set to: 14
  2228                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2229   00259C  89E7               	bsf	231,4,b	;volatile
  2230   00259E                     
  2231                           ; BSR set to: 14
  2232                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2233   00259E  8BE8               	bsf	232,5,b	;volatile
  2234   0025A0                     
  2235                           ; BSR set to: 14
  2236                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2237   0025A0  8FE7               	bsf	231,7,b	;volatile
  2238   0025A2                     
  2239                           ; BSR set to: 14
  2240   0025A2  0012               	return		;funcret
  2241   0025A4                     __end_of_initUSART4:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _initDCmotorsPWM *****************
  2245 ;; Defined at:
  2246 ;;		line 5 in file "dc_motor.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text7
  2275   002078                     __ptext7:
  2276                           	callstack 0
  2277   002078                     _initDCmotorsPWM:
  2278                           	callstack 29
  2279   002078                     
  2280                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2281   002078  9485               	bcf	133,2,c	;volatile
  2282                           
  2283                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2284   00207A  9885               	bcf	133,4,c	;volatile
  2285                           
  2286                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2287   00207C  9E83               	bcf	131,7,c	;volatile
  2288                           
  2289                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2290   00207E  9C87               	bcf	135,6,c	;volatile
  2291                           
  2292                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2293   002080  947D               	bcf	125,2,c	;volatile
  2294                           
  2295                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2296   002082  987D               	bcf	125,4,c	;volatile
  2297                           
  2298                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2299   002084  9E7B               	bcf	123,7,c	;volatile
  2300                           
  2301                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2302   002086  9C7F               	bcf	127,6,c	;volatile
  2303   002088                     
  2304                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2305   002088  0E05               	movlw	5
  2306   00208A  010E               	movlb	14	; () banked
  2307   00208C  6F74               	movwf	116,b	;volatile
  2308                           
  2309                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2310   00208E  0E06               	movlw	6
  2311   002090  6F76               	movwf	118,b	;volatile
  2312                           
  2313                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2314   002092  0E07               	movlw	7
  2315   002094  6F69               	movwf	105,b	;volatile
  2316                           
  2317                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2318   002096  0E08               	movlw	8
  2319   002098  6F88               	movwf	136,b	;volatile
  2320                           
  2321                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2322   00209A  50BD               	movf	189,w,c	;volatile
  2323   00209C  0B8F               	andlw	-113
  2324   00209E  0940               	iorlw	64
  2325   0020A0  6EBD               	movwf	189,c	;volatile
  2326                           
  2327                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2328   0020A2  0EE0               	movlw	-32
  2329   0020A4  16BE               	andwf	190,f,c	;volatile
  2330                           
  2331                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2332   0020A6  50BF               	movf	191,w,c	;volatile
  2333   0020A8  0BF0               	andlw	-16
  2334   0020AA  0901               	iorlw	1
  2335   0020AC  6EBF               	movwf	191,c	;volatile
  2336   0020AE                     
  2337                           ; BSR set to: 14
  2338                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2339   0020AE  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2340   0020B2                     
  2341                           ; BSR set to: 14
  2342                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2343   0020B2  8EBD               	bsf	189,7,c	;volatile
  2344                           
  2345                           ;dc_motor.c: 35:     CCPR1H=0;
  2346   0020B4  0E00               	movlw	0
  2347   0020B6  6EAA               	movwf	170,c	;volatile
  2348                           
  2349                           ;dc_motor.c: 36:     CCPR2H=0;
  2350   0020B8  0E00               	movlw	0
  2351   0020BA  6EA6               	movwf	166,c	;volatile
  2352                           
  2353                           ;dc_motor.c: 37:     CCPR3H=0;
  2354   0020BC  0E00               	movlw	0
  2355   0020BE  010F               	movlb	15	; () banked
  2356   0020C0  6F25               	movwf	37,b	;volatile
  2357                           
  2358                           ;dc_motor.c: 38:     CCPR4H=0;
  2359   0020C2  0E00               	movlw	0
  2360   0020C4  6F21               	movwf	33,b	;volatile
  2361                           
  2362                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2363   0020C6  0EFC               	movlw	-4
  2364   0020C8  16AD               	andwf	173,f,c	;volatile
  2365                           
  2366                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2367   0020CA  0EF3               	movlw	-13
  2368   0020CC  16AD               	andwf	173,f,c	;volatile
  2369                           
  2370                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2371   0020CE  0ECF               	movlw	-49
  2372   0020D0  16AD               	andwf	173,f,c	;volatile
  2373                           
  2374                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2375   0020D2  0E3F               	movlw	-193
  2376   0020D4  16AD               	andwf	173,f,c	;volatile
  2377   0020D6                     
  2378                           ; BSR set to: 15
  2379                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2380   0020D6  88AB               	bsf	171,4,c	;volatile
  2381                           
  2382                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2383   0020D8  50AB               	movf	171,w,c	;volatile
  2384   0020DA  0BF0               	andlw	-16
  2385   0020DC  090C               	iorlw	12
  2386   0020DE  6EAB               	movwf	171,c	;volatile
  2387   0020E0                     
  2388                           ; BSR set to: 15
  2389                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2390   0020E0  8EAB               	bsf	171,7,c	;volatile
  2391   0020E2                     
  2392                           ; BSR set to: 15
  2393                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2394   0020E2  88A7               	bsf	167,4,c	;volatile
  2395                           
  2396                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2397   0020E4  50A7               	movf	167,w,c	;volatile
  2398   0020E6  0BF0               	andlw	-16
  2399   0020E8  090C               	iorlw	12
  2400   0020EA  6EA7               	movwf	167,c	;volatile
  2401   0020EC                     
  2402                           ; BSR set to: 15
  2403                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2404   0020EC  8EA7               	bsf	167,7,c	;volatile
  2405   0020EE                     
  2406                           ; BSR set to: 15
  2407                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2408   0020EE  8926               	bsf	38,4,b	;volatile
  2409                           
  2410                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2411   0020F0  5126               	movf	38,w,b	;volatile
  2412   0020F2  0BF0               	andlw	-16
  2413   0020F4  090C               	iorlw	12
  2414   0020F6  6F26               	movwf	38,b	;volatile
  2415   0020F8                     
  2416                           ; BSR set to: 15
  2417                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2418   0020F8  8F26               	bsf	38,7,b	;volatile
  2419   0020FA                     
  2420                           ; BSR set to: 15
  2421                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2422   0020FA  8922               	bsf	34,4,b	;volatile
  2423                           
  2424                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2425   0020FC  5122               	movf	34,w,b	;volatile
  2426   0020FE  0BF0               	andlw	-16
  2427   002100  090C               	iorlw	12
  2428   002102  6F22               	movwf	34,b	;volatile
  2429   002104                     
  2430                           ; BSR set to: 15
  2431                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2432   002104  8F22               	bsf	34,7,b	;volatile
  2433   002106                     
  2434                           ; BSR set to: 15
  2435   002106  0012               	return		;funcret
  2436   002108                     __end_of_initDCmotorsPWM:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _getRGBCval *****************
  2440 ;; Defined at:
  2441 ;;		line 84 in file "color.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  2444 ;;		 -> main@measured_colour(8), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 4
  2463 ;; This function calls:
  2464 ;;		_color_read_Blue
  2465 ;;		_color_read_Clear
  2466 ;;		_color_read_Green
  2467 ;;		_color_read_Red
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;;		_wait_for_wall
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text8
  2475   002172                     __ptext8:
  2476                           	callstack 0
  2477   002172                     _getRGBCval:
  2478                           	callstack 26
  2479   002172                     
  2480                           ;color.c: 84: void getRGBCval(struct RGBC_val *p);color.c: 85: {;color.c: 86:     p->R =
      +                           color_read_Red();
  2481   002172  EC38  F011         	call	_color_read_Red	;wreg free
  2482   002176  500C               	movf	getRGBCval@p^0,w,c
  2483   002178  6ED9               	movwf	fsr2l,c
  2484   00217A  6ADA               	clrf	fsr2h,c
  2485   00217C  C005  FFDE         	movff	?_color_read_Red,postinc2
  2486   002180  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2487                           
  2488                           ;color.c: 87:     p->G = color_read_Green();
  2489   002184  EC60  F011         	call	_color_read_Green	;wreg free
  2490   002188  500C               	movf	getRGBCval@p^0,w,c
  2491   00218A  6ED9               	movwf	fsr2l,c
  2492   00218C  6ADA               	clrf	fsr2h,c
  2493   00218E  0E02               	movlw	2
  2494   002190  26D9               	addwf	fsr2l,f,c
  2495   002192  C005  FFDE         	movff	?_color_read_Green,postinc2
  2496   002196  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2497                           
  2498                           ;color.c: 88:     p->B = color_read_Blue();
  2499   00219A  ECB0  F011         	call	_color_read_Blue	;wreg free
  2500   00219E  500C               	movf	getRGBCval@p^0,w,c
  2501   0021A0  6ED9               	movwf	fsr2l,c
  2502   0021A2  6ADA               	clrf	fsr2h,c
  2503   0021A4  0E04               	movlw	4
  2504   0021A6  26D9               	addwf	fsr2l,f,c
  2505   0021A8  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2506   0021AC  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2507                           
  2508                           ;color.c: 89:     p->C = color_read_Clear();
  2509   0021B0  EC88  F011         	call	_color_read_Clear	;wreg free
  2510   0021B4  500C               	movf	getRGBCval@p^0,w,c
  2511   0021B6  6ED9               	movwf	fsr2l,c
  2512   0021B8  6ADA               	clrf	fsr2h,c
  2513   0021BA  0E06               	movlw	6
  2514   0021BC  26D9               	addwf	fsr2l,f,c
  2515   0021BE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2516   0021C2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2517   0021C6  0012               	return		;funcret
  2518   0021C8                     __end_of_getRGBCval:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _color_read_Red *****************
  2522 ;; Defined at:
  2523 ;;		line 28 in file "color.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  tmp             2    9[COMRAM] unsigned int 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  2    4[COMRAM] unsigned int 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;Total ram usage:        7 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 3
  2544 ;; This function calls:
  2545 ;;		_I2C_2_Master_Read
  2546 ;;		_I2C_2_Master_RepStart
  2547 ;;		_I2C_2_Master_Start
  2548 ;;		_I2C_2_Master_Stop
  2549 ;;		_I2C_2_Master_Write
  2550 ;; This function is called by:
  2551 ;;		_getRGBCval
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text9
  2556   002270                     __ptext9:
  2557                           	callstack 0
  2558   002270                     _color_read_Red:
  2559                           	callstack 26
  2560   002270                     
  2561                           ;color.c: 30:  unsigned int tmp;;color.c: 31:  I2C_2_Master_Start();
  2562   002270  ECFB  F012         	call	_I2C_2_Master_Start	;wreg free
  2563                           
  2564                           ;color.c: 32:  I2C_2_Master_Write(0x52 | 0x00);
  2565   002274  0E52               	movlw	82
  2566   002276  ECDF  F012         	call	_I2C_2_Master_Write
  2567                           
  2568                           ;color.c: 33:  I2C_2_Master_Write(0xA0 | 0x16);
  2569   00227A  0EB6               	movlw	182
  2570   00227C  ECDF  F012         	call	_I2C_2_Master_Write
  2571                           
  2572                           ;color.c: 34:  I2C_2_Master_RepStart();
  2573   002280  ECF1  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2574                           
  2575                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x01);
  2576   002284  0E53               	movlw	83
  2577   002286  ECDF  F012         	call	_I2C_2_Master_Write
  2578                           
  2579                           ;color.c: 36:  tmp=I2C_2_Master_Read(1);
  2580   00228A  0E01               	movlw	1
  2581   00228C  ECD8  F011         	call	_I2C_2_Master_Read
  2582   002290  6E07               	movwf	??_color_read_Red^0,c
  2583   002292  5007               	movf	??_color_read_Red^0,w,c
  2584   002294  6E0A               	movwf	color_read_Red@tmp^0,c
  2585   002296  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2586                           
  2587                           ;color.c: 37:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2588   002298  0E00               	movlw	0
  2589   00229A  ECD8  F011         	call	_I2C_2_Master_Read
  2590   00229E  6E07               	movwf	??_color_read_Red^0,c
  2591   0022A0  5007               	movf	??_color_read_Red^0,w,c
  2592   0022A2  6E09               	movwf	(??_color_read_Red+2)^0,c
  2593   0022A4  6A08               	clrf	(??_color_read_Red+1)^0,c
  2594   0022A6  500A               	movf	color_read_Red@tmp^0,w,c
  2595   0022A8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2596   0022AA  6E0A               	movwf	color_read_Red@tmp^0,c
  2597   0022AC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2598   0022AE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2599   0022B0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2600                           
  2601                           ;color.c: 38:  I2C_2_Master_Stop();
  2602   0022B2  ECF6  F012         	call	_I2C_2_Master_Stop	;wreg free
  2603   0022B6                     
  2604                           ;color.c: 39:  return tmp;
  2605   0022B6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2606   0022BA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2607   0022BE  0012               	return		;funcret
  2608   0022C0                     __end_of_color_read_Red:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _color_read_Green *****************
  2612 ;; Defined at:
  2613 ;;		line 42 in file "color.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  tmp             2    9[COMRAM] unsigned int 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  2    4[COMRAM] unsigned int 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;Total ram usage:        7 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 3
  2634 ;; This function calls:
  2635 ;;		_I2C_2_Master_Read
  2636 ;;		_I2C_2_Master_RepStart
  2637 ;;		_I2C_2_Master_Start
  2638 ;;		_I2C_2_Master_Stop
  2639 ;;		_I2C_2_Master_Write
  2640 ;; This function is called by:
  2641 ;;		_getRGBCval
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text10
  2646   0022C0                     __ptext10:
  2647                           	callstack 0
  2648   0022C0                     _color_read_Green:
  2649                           	callstack 26
  2650   0022C0                     
  2651                           ;color.c: 44:     unsigned int tmp;;color.c: 45:  I2C_2_Master_Start();
  2652   0022C0  ECFB  F012         	call	_I2C_2_Master_Start	;wreg free
  2653                           
  2654                           ;color.c: 46:  I2C_2_Master_Write(0x52 | 0x00);
  2655   0022C4  0E52               	movlw	82
  2656   0022C6  ECDF  F012         	call	_I2C_2_Master_Write
  2657                           
  2658                           ;color.c: 47:  I2C_2_Master_Write(0xA0 | 0x18);
  2659   0022CA  0EB8               	movlw	184
  2660   0022CC  ECDF  F012         	call	_I2C_2_Master_Write
  2661                           
  2662                           ;color.c: 48:  I2C_2_Master_RepStart();
  2663   0022D0  ECF1  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2664                           
  2665                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x01);
  2666   0022D4  0E53               	movlw	83
  2667   0022D6  ECDF  F012         	call	_I2C_2_Master_Write
  2668                           
  2669                           ;color.c: 50:  tmp=I2C_2_Master_Read(1);
  2670   0022DA  0E01               	movlw	1
  2671   0022DC  ECD8  F011         	call	_I2C_2_Master_Read
  2672   0022E0  6E07               	movwf	??_color_read_Green^0,c
  2673   0022E2  5007               	movf	??_color_read_Green^0,w,c
  2674   0022E4  6E0A               	movwf	color_read_Green@tmp^0,c
  2675   0022E6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2676                           
  2677                           ;color.c: 51:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2678   0022E8  0E00               	movlw	0
  2679   0022EA  ECD8  F011         	call	_I2C_2_Master_Read
  2680   0022EE  6E07               	movwf	??_color_read_Green^0,c
  2681   0022F0  5007               	movf	??_color_read_Green^0,w,c
  2682   0022F2  6E09               	movwf	(??_color_read_Green+2)^0,c
  2683   0022F4  6A08               	clrf	(??_color_read_Green+1)^0,c
  2684   0022F6  500A               	movf	color_read_Green@tmp^0,w,c
  2685   0022F8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2686   0022FA  6E0A               	movwf	color_read_Green@tmp^0,c
  2687   0022FC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2688   0022FE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2689   002300  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2690                           
  2691                           ;color.c: 52:  I2C_2_Master_Stop();
  2692   002302  ECF6  F012         	call	_I2C_2_Master_Stop	;wreg free
  2693   002306                     
  2694                           ;color.c: 53:  return tmp;
  2695   002306  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2696   00230A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2697   00230E  0012               	return		;funcret
  2698   002310                     __end_of_color_read_Green:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _color_read_Clear *****************
  2702 ;; Defined at:
  2703 ;;		line 70 in file "color.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  tmp             2    9[COMRAM] unsigned int 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    4[COMRAM] unsigned int 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;Total ram usage:        7 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 3
  2724 ;; This function calls:
  2725 ;;		_I2C_2_Master_Read
  2726 ;;		_I2C_2_Master_RepStart
  2727 ;;		_I2C_2_Master_Start
  2728 ;;		_I2C_2_Master_Stop
  2729 ;;		_I2C_2_Master_Write
  2730 ;; This function is called by:
  2731 ;;		_getRGBCval
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text11
  2736   002310                     __ptext11:
  2737                           	callstack 0
  2738   002310                     _color_read_Clear:
  2739                           	callstack 26
  2740   002310                     
  2741                           ;color.c: 72:     unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2742   002310  ECFB  F012         	call	_I2C_2_Master_Start	;wreg free
  2743                           
  2744                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2745   002314  0E52               	movlw	82
  2746   002316  ECDF  F012         	call	_I2C_2_Master_Write
  2747                           
  2748                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x14);
  2749   00231A  0EB4               	movlw	180
  2750   00231C  ECDF  F012         	call	_I2C_2_Master_Write
  2751                           
  2752                           ;color.c: 76:  I2C_2_Master_RepStart();
  2753   002320  ECF1  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2754                           
  2755                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2756   002324  0E53               	movlw	83
  2757   002326  ECDF  F012         	call	_I2C_2_Master_Write
  2758                           
  2759                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2760   00232A  0E01               	movlw	1
  2761   00232C  ECD8  F011         	call	_I2C_2_Master_Read
  2762   002330  6E07               	movwf	??_color_read_Clear^0,c
  2763   002332  5007               	movf	??_color_read_Clear^0,w,c
  2764   002334  6E0A               	movwf	color_read_Clear@tmp^0,c
  2765   002336  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2766                           
  2767                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2768   002338  0E00               	movlw	0
  2769   00233A  ECD8  F011         	call	_I2C_2_Master_Read
  2770   00233E  6E07               	movwf	??_color_read_Clear^0,c
  2771   002340  5007               	movf	??_color_read_Clear^0,w,c
  2772   002342  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2773   002344  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2774   002346  500A               	movf	color_read_Clear@tmp^0,w,c
  2775   002348  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2776   00234A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2777   00234C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2778   00234E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2779   002350  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2780                           
  2781                           ;color.c: 80:  I2C_2_Master_Stop();
  2782   002352  ECF6  F012         	call	_I2C_2_Master_Stop	;wreg free
  2783   002356                     
  2784                           ;color.c: 81:  return tmp;
  2785   002356  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2786   00235A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2787   00235E  0012               	return		;funcret
  2788   002360                     __end_of_color_read_Clear:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _color_read_Blue *****************
  2792 ;; Defined at:
  2793 ;;		line 56 in file "color.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  tmp             2    9[COMRAM] unsigned int 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  2    4[COMRAM] unsigned int 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;Total ram usage:        7 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 3
  2814 ;; This function calls:
  2815 ;;		_I2C_2_Master_Read
  2816 ;;		_I2C_2_Master_RepStart
  2817 ;;		_I2C_2_Master_Start
  2818 ;;		_I2C_2_Master_Stop
  2819 ;;		_I2C_2_Master_Write
  2820 ;; This function is called by:
  2821 ;;		_getRGBCval
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text12
  2826   002360                     __ptext12:
  2827                           	callstack 0
  2828   002360                     _color_read_Blue:
  2829                           	callstack 26
  2830   002360                     
  2831                           ;color.c: 58:     unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2832   002360  ECFB  F012         	call	_I2C_2_Master_Start	;wreg free
  2833                           
  2834                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2835   002364  0E52               	movlw	82
  2836   002366  ECDF  F012         	call	_I2C_2_Master_Write
  2837                           
  2838                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x1A);
  2839   00236A  0EBA               	movlw	186
  2840   00236C  ECDF  F012         	call	_I2C_2_Master_Write
  2841                           
  2842                           ;color.c: 62:  I2C_2_Master_RepStart();
  2843   002370  ECF1  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2844                           
  2845                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2846   002374  0E53               	movlw	83
  2847   002376  ECDF  F012         	call	_I2C_2_Master_Write
  2848                           
  2849                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2850   00237A  0E01               	movlw	1
  2851   00237C  ECD8  F011         	call	_I2C_2_Master_Read
  2852   002380  6E07               	movwf	??_color_read_Blue^0,c
  2853   002382  5007               	movf	??_color_read_Blue^0,w,c
  2854   002384  6E0A               	movwf	color_read_Blue@tmp^0,c
  2855   002386  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2856                           
  2857                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2858   002388  0E00               	movlw	0
  2859   00238A  ECD8  F011         	call	_I2C_2_Master_Read
  2860   00238E  6E07               	movwf	??_color_read_Blue^0,c
  2861   002390  5007               	movf	??_color_read_Blue^0,w,c
  2862   002392  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2863   002394  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2864   002396  500A               	movf	color_read_Blue@tmp^0,w,c
  2865   002398  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2866   00239A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2867   00239C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2868   00239E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2869   0023A0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2870                           
  2871                           ;color.c: 66:  I2C_2_Master_Stop();
  2872   0023A2  ECF6  F012         	call	_I2C_2_Master_Stop	;wreg free
  2873   0023A6                     
  2874                           ;color.c: 67:  return tmp;
  2875   0023A6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2876   0023AA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2877   0023AE  0012               	return		;funcret
  2878   0023B0                     __end_of_color_read_Blue:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _I2C_2_Master_RepStart *****************
  2882 ;; Defined at:
  2883 ;;		line 33 in file "i2c.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 2
  2904 ;; This function calls:
  2905 ;;		_I2C_2_Master_Idle
  2906 ;; This function is called by:
  2907 ;;		_color_read_Red
  2908 ;;		_color_read_Green
  2909 ;;		_color_read_Blue
  2910 ;;		_color_read_Clear
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text13
  2915   0025E2                     __ptext13:
  2916                           	callstack 0
  2917   0025E2                     _I2C_2_Master_RepStart:
  2918                           	callstack 26
  2919   0025E2                     
  2920                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2921   0025E2  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  2922   0025E6                     
  2923                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2924   0025E6  010E               	movlb	14	; () banked
  2925   0025E8  83DA               	bsf	218,1,b	;volatile
  2926   0025EA                     
  2927                           ; BSR set to: 14
  2928   0025EA  0012               	return		;funcret
  2929   0025EC                     __end_of_I2C_2_Master_RepStart:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _I2C_2_Master_Read *****************
  2933 ;; Defined at:
  2934 ;;		line 51 in file "i2c.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  ack             1    wreg     unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  ack             1    2[COMRAM] unsigned char 
  2939 ;;  tmp             1    3[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      unsigned char 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;Total ram usage:        3 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 2
  2956 ;; This function calls:
  2957 ;;		_I2C_2_Master_Idle
  2958 ;; This function is called by:
  2959 ;;		_color_read_Red
  2960 ;;		_color_read_Green
  2961 ;;		_color_read_Blue
  2962 ;;		_color_read_Clear
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text14
  2967   0023B0                     __ptext14:
  2968                           	callstack 0
  2969   0023B0                     _I2C_2_Master_Read:
  2970                           	callstack 26
  2971                           
  2972                           ; BSR set to: 14
  2973                           ;incstack = 0
  2974                           ;I2C_2_Master_Read@ack stored from wreg
  2975   0023B0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2976   0023B2                     
  2977                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2978   0023B2  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  2979   0023B6                     
  2980                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2981   0023B6  010E               	movlb	14	; () banked
  2982   0023B8  87DA               	bsf	218,3,b	;volatile
  2983                           
  2984                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2985   0023BA  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  2986   0023BE                     
  2987                           ;i2c.c: 57:   tmp = SSP2BUF;
  2988   0023BE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2989                           
  2990                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2991   0023C2  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  2992   0023C6                     
  2993                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2994   0023C6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2995   0023C8  B4D8               	btfsc	status,2,c
  2996   0023CA  EFE9  F011         	goto	u1441
  2997   0023CE  EFED  F011         	goto	u1440
  2998   0023D2                     u1441:
  2999   0023D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3000   0023D4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3001   0023D6  EFEE  F011         	goto	u1458
  3002   0023DA                     u1440:
  3003   0023DA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3004   0023DC                     u1458:
  3005   0023DC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3006   0023DE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3007   0023E0  010E               	movlb	14	; () banked
  3008   0023E2  51DA               	movf	218,w,b	;volatile
  3009   0023E4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3010   0023E6  0BDF               	andlw	-33
  3011   0023E8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3012   0023EA  6FDA               	movwf	218,b	;volatile
  3013   0023EC                     
  3014                           ; BSR set to: 14
  3015                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3016   0023EC  89DA               	bsf	218,4,b	;volatile
  3017   0023EE                     
  3018                           ; BSR set to: 14
  3019                           ;i2c.c: 61:   return tmp;
  3020   0023EE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3021   0023F0                     
  3022                           ; BSR set to: 14
  3023   0023F0  0012               	return		;funcret
  3024   0023F2                     __end_of_I2C_2_Master_Read:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _getHSVval *****************
  3028 ;; Defined at:
  3029 ;;		line 136 in file "color.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  3032 ;;		 -> main@HSV_colour(6), 
  3033 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  3034 ;;		 -> main@measured_colour(8), 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  temp            4   51[COMRAM] unsigned long 
  3037 ;;  temp            4   47[COMRAM] unsigned long 
  3038 ;;  temp            4   43[COMRAM] unsigned long 
  3039 ;;  temp            4   39[COMRAM] unsigned long 
  3040 ;;  temp            4   55[COMRAM] unsigned long 
  3041 ;;  temp            4   35[COMRAM] unsigned long 
  3042 ;;  temp            4   31[COMRAM] unsigned long 
  3043 ;;  C               2   61[COMRAM] unsigned int 
  3044 ;;  M               2   59[COMRAM] unsigned int 
  3045 ;;  Hz              2    0        unsigned int 
  3046 ;;  H               2   29[COMRAM] unsigned int 
  3047 ;;  S               2   27[COMRAM] unsigned int 
  3048 ;;  m               2   25[COMRAM] unsigned int 
  3049 ;;  Sz              2   23[COMRAM] unsigned int 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;Total ram usage:       50 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		___lldiv
  3068 ;;		___lmul
  3069 ;;		_maxRGB
  3070 ;;		_minRGB
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text15
  3077   000E24                     __ptext15:
  3078                           	callstack 0
  3079   000E24                     _getHSVval:
  3080                           	callstack 27
  3081   000E24                     
  3082                           ;color.c: 139:     unsigned int Sz = 100;
  3083   000E24  0E00               	movlw	0
  3084   000E26  6E19               	movwf	(getHSVval@Sz+1)^0,c
  3085   000E28  0E64               	movlw	100
  3086   000E2A  6E18               	movwf	getHSVval@Sz^0,c
  3087                           
  3088                           ;color.c: 140:     unsigned int H = 0;
  3089   000E2C  0E00               	movlw	0
  3090   000E2E  6E1F               	movwf	(getHSVval@H+1)^0,c
  3091   000E30  0E00               	movlw	0
  3092   000E32  6E1E               	movwf	getHSVval@H^0,c
  3093                           
  3094                           ;color.c: 141:     unsigned int S = 0;
  3095   000E34  0E00               	movlw	0
  3096   000E36  6E1D               	movwf	(getHSVval@S+1)^0,c
  3097   000E38  0E00               	movlw	0
  3098   000E3A  6E1C               	movwf	getHSVval@S^0,c
  3099   000E3C                     
  3100                           ;color.c: 143:     unsigned int M = maxRGB(p2);
  3101   000E3C  C00F  F007         	movff	getHSVval@p2,maxRGB@p
  3102   000E40  EC0E  F011         	call	_maxRGB	;wreg free
  3103   000E44  C007  F03C         	movff	?_maxRGB,getHSVval@M
  3104   000E48  C008  F03D         	movff	?_maxRGB+1,getHSVval@M+1
  3105   000E4C                     
  3106                           ;color.c: 144:     unsigned int m = minRGB(p2);
  3107   000E4C  C00F  F007         	movff	getHSVval@p2,minRGB@p
  3108   000E50  ECE4  F010         	call	_minRGB	;wreg free
  3109   000E54  C007  F01A         	movff	?_minRGB,getHSVval@m
  3110   000E58  C008  F01B         	movff	?_minRGB+1,getHSVval@m+1
  3111   000E5C                     
  3112                           ;color.c: 145:     unsigned int C = M - m;
  3113   000E5C  501A               	movf	getHSVval@m^0,w,c
  3114   000E5E  5C3C               	subwf	getHSVval@M^0,w,c
  3115   000E60  6E3E               	movwf	getHSVval@C^0,c
  3116   000E62  501B               	movf	(getHSVval@m+1)^0,w,c
  3117   000E64  583D               	subwfb	(getHSVval@M+1)^0,w,c
  3118   000E66  6E3F               	movwf	(getHSVval@C+1)^0,c
  3119   000E68                     
  3120                           ;color.c: 147:     if (C == 0) {
  3121   000E68  503E               	movf	getHSVval@C^0,w,c
  3122   000E6A  103F               	iorwf	(getHSVval@C+1)^0,w,c
  3123   000E6C  A4D8               	btfss	status,2,c
  3124   000E6E  EF3B  F007         	goto	u2081
  3125   000E72  EF3D  F007         	goto	u2080
  3126   000E76                     u2081:
  3127   000E76  EF43  F007         	goto	l3097
  3128   000E7A                     u2080:
  3129   000E7A                     
  3130                           ;color.c: 148:         H = 0;
  3131   000E7A  0E00               	movlw	0
  3132   000E7C  6E1F               	movwf	(getHSVval@H+1)^0,c
  3133   000E7E  0E00               	movlw	0
  3134   000E80  6E1E               	movwf	getHSVval@H^0,c
  3135                           
  3136                           ;color.c: 149:     } else {
  3137   000E82  EF13  F00A         	goto	l3181
  3138   000E86                     l3097:
  3139                           
  3140                           ;color.c: 150:         if (M == p2->R) {
  3141   000E86  500F               	movf	getHSVval@p2^0,w,c
  3142   000E88  6ED9               	movwf	fsr2l,c
  3143   000E8A  6ADA               	clrf	fsr2h,c
  3144   000E8C  503C               	movf	getHSVval@M^0,w,c
  3145   000E8E  18DE               	xorwf	postinc2,w,c
  3146   000E90  E107               	bnz	u2091
  3147   000E92  503D               	movf	(getHSVval@M+1)^0,w,c
  3148   000E94  18DE               	xorwf	postinc2,w,c
  3149   000E96  A4D8               	btfss	status,2,c
  3150   000E98  EF50  F007         	goto	u2091
  3151   000E9C  EF52  F007         	goto	u2090
  3152   000EA0                     u2091:
  3153   000EA0  EF3F  F008         	goto	l3125
  3154   000EA4                     u2090:
  3155   000EA4                     
  3156                           ;color.c: 151:             if (p2->G >= p2->B) {
  3157   000EA4  500F               	movf	getHSVval@p2^0,w,c
  3158   000EA6  6ED9               	movwf	fsr2l,c
  3159   000EA8  6ADA               	clrf	fsr2h,c
  3160   000EAA  0E04               	movlw	4
  3161   000EAC  26D9               	addwf	fsr2l,f,c
  3162   000EAE  500F               	movf	getHSVval@p2^0,w,c
  3163   000EB0  6EE1               	movwf	fsr1l,c
  3164   000EB2  6AE2               	clrf	fsr1h,c
  3165   000EB4  0E02               	movlw	2
  3166   000EB6  26E1               	addwf	fsr1l,f,c
  3167   000EB8  50DE               	movf	postinc2,w,c
  3168   000EBA  5CE6               	subwf	postinc1,w,c
  3169   000EBC  50DE               	movf	postinc2,w,c
  3170   000EBE  58E6               	subwfb	postinc1,w,c
  3171   000EC0  A0D8               	btfss	status,0,c
  3172   000EC2  EF65  F007         	goto	u2101
  3173   000EC6  EF67  F007         	goto	u2100
  3174   000ECA                     u2101:
  3175   000ECA  EFC7  F007         	goto	l3113
  3176   000ECE                     u2100:
  3177   000ECE                     
  3178                           ;color.c: 155:                 temp *= 0;
  3179   000ECE  0E00               	movlw	0
  3180   000ED0  6E24               	movwf	getHSVval@temp^0,c
  3181   000ED2  0E00               	movlw	0
  3182   000ED4  6E25               	movwf	(getHSVval@temp+1)^0,c
  3183   000ED6  0E00               	movlw	0
  3184   000ED8  6E26               	movwf	(getHSVval@temp+2)^0,c
  3185   000EDA  0E00               	movlw	0
  3186   000EDC  6E27               	movwf	(getHSVval@temp+3)^0,c
  3187   000EDE                     
  3188                           ;color.c: 156:                 temp += (unsigned long)(p2->G - p2->B);
  3189   000EDE  500F               	movf	getHSVval@p2^0,w,c
  3190   000EE0  6ED9               	movwf	fsr2l,c
  3191   000EE2  6ADA               	clrf	fsr2h,c
  3192   000EE4  0E04               	movlw	4
  3193   000EE6  26D9               	addwf	fsr2l,f,c
  3194   000EE8  CFDE F010          	movff	postinc2,??_getHSVval
  3195   000EEC  CFDD F011          	movff	postdec2,??_getHSVval+1
  3196   000EF0  500F               	movf	getHSVval@p2^0,w,c
  3197   000EF2  6ED9               	movwf	fsr2l,c
  3198   000EF4  6ADA               	clrf	fsr2h,c
  3199   000EF6  0E02               	movlw	2
  3200   000EF8  26D9               	addwf	fsr2l,f,c
  3201   000EFA  CFDE F012          	movff	postinc2,??_getHSVval+2
  3202   000EFE  CFDD F013          	movff	postdec2,??_getHSVval+3
  3203   000F02  5010               	movf	??_getHSVval^0,w,c
  3204   000F04  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3205   000F06  6E14               	movwf	(??_getHSVval+4)^0,c
  3206   000F08  5011               	movf	(??_getHSVval+1)^0,w,c
  3207   000F0A  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3208   000F0C  6E15               	movwf	(??_getHSVval+5)^0,c
  3209   000F0E  5014               	movf	(??_getHSVval+4)^0,w,c
  3210   000F10  2624               	addwf	getHSVval@temp^0,f,c
  3211   000F12  5015               	movf	(??_getHSVval+5)^0,w,c
  3212   000F14  2225               	addwfc	(getHSVval@temp+1)^0,f,c
  3213   000F16  0E00               	movlw	0
  3214   000F18  2226               	addwfc	(getHSVval@temp+2)^0,f,c
  3215   000F1A  0E00               	movlw	0
  3216   000F1C  2227               	addwfc	(getHSVval@temp+3)^0,f,c
  3217   000F1E                     
  3218                           ;color.c: 157:                 temp *= (unsigned long)Hz;
  3219   000F1E  C024  F001         	movff	getHSVval@temp,___lmul@multiplier
  3220   000F22  C025  F002         	movff	getHSVval@temp+1,___lmul@multiplier+1
  3221   000F26  C026  F003         	movff	getHSVval@temp+2,___lmul@multiplier+2
  3222   000F2A  C027  F004         	movff	getHSVval@temp+3,___lmul@multiplier+3
  3223   000F2E  0E3C               	movlw	60
  3224   000F30  6E05               	movwf	___lmul@multiplicand^0,c
  3225   000F32  0E00               	movlw	0
  3226   000F34  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3227   000F36  0E00               	movlw	0
  3228   000F38  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3229   000F3A  0E00               	movlw	0
  3230   000F3C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3231   000F3E  EC84  F010         	call	___lmul	;wreg free
  3232   000F42  C001  F024         	movff	?___lmul,getHSVval@temp
  3233   000F46  C002  F025         	movff	?___lmul+1,getHSVval@temp+1
  3234   000F4A  C003  F026         	movff	?___lmul+2,getHSVval@temp+2
  3235   000F4E  C004  F027         	movff	?___lmul+3,getHSVval@temp+3
  3236   000F52                     
  3237                           ;color.c: 158:                 temp /= (unsigned long)C;
  3238   000F52  C024  F001         	movff	getHSVval@temp,___lldiv@dividend
  3239   000F56  C025  F002         	movff	getHSVval@temp+1,___lldiv@dividend+1
  3240   000F5A  C026  F003         	movff	getHSVval@temp+2,___lldiv@dividend+2
  3241   000F5E  C027  F004         	movff	getHSVval@temp+3,___lldiv@dividend+3
  3242   000F62  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3243   000F66  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3244   000F6A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3245   000F6C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3246   000F6E  ECEA  F00F         	call	___lldiv	;wreg free
  3247   000F72  C001  F024         	movff	?___lldiv,getHSVval@temp
  3248   000F76  C002  F025         	movff	?___lldiv+1,getHSVval@temp+1
  3249   000F7A  C003  F026         	movff	?___lldiv+2,getHSVval@temp+2
  3250   000F7E  C004  F027         	movff	?___lldiv+3,getHSVval@temp+3
  3251   000F82                     
  3252                           ;color.c: 159:                 H = (unsigned int)temp;
  3253   000F82  C024  F01E         	movff	getHSVval@temp,getHSVval@H
  3254   000F86  C025  F01F         	movff	getHSVval@temp+1,getHSVval@H+1
  3255                           
  3256                           ;color.c: 160:             } else {
  3257   000F8A  EF3F  F008         	goto	l3125
  3258   000F8E                     l3113:
  3259                           
  3260                           ;color.c: 162:                 unsigned long temp;;color.c: 163:                 temp = 
      +                          (unsigned long)C;
  3261   000F8E  C03E  F038         	movff	getHSVval@C,getHSVval@temp_648
  3262   000F92  C03F  F039         	movff	getHSVval@C+1,getHSVval@temp_648+1
  3263   000F96  6A3A               	clrf	(getHSVval@temp_648+2)^0,c
  3264   000F98  6A3B               	clrf	(getHSVval@temp_648+3)^0,c
  3265   000F9A                     
  3266                           ;color.c: 164:                 temp *= 6;
  3267   000F9A  C038  F001         	movff	getHSVval@temp_648,___lmul@multiplier
  3268   000F9E  C039  F002         	movff	getHSVval@temp_648+1,___lmul@multiplier+1
  3269   000FA2  C03A  F003         	movff	getHSVval@temp_648+2,___lmul@multiplier+2
  3270   000FA6  C03B  F004         	movff	getHSVval@temp_648+3,___lmul@multiplier+3
  3271   000FAA  0E06               	movlw	6
  3272   000FAC  6E05               	movwf	___lmul@multiplicand^0,c
  3273   000FAE  0E00               	movlw	0
  3274   000FB0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3275   000FB2  0E00               	movlw	0
  3276   000FB4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3277   000FB6  0E00               	movlw	0
  3278   000FB8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3279   000FBA  EC84  F010         	call	___lmul	;wreg free
  3280   000FBE  C001  F038         	movff	?___lmul,getHSVval@temp_648
  3281   000FC2  C002  F039         	movff	?___lmul+1,getHSVval@temp_648+1
  3282   000FC6  C003  F03A         	movff	?___lmul+2,getHSVval@temp_648+2
  3283   000FCA  C004  F03B         	movff	?___lmul+3,getHSVval@temp_648+3
  3284   000FCE                     
  3285                           ;color.c: 165:                 temp -= (unsigned long)(p2->B - p2->G);
  3286   000FCE  500F               	movf	getHSVval@p2^0,w,c
  3287   000FD0  6ED9               	movwf	fsr2l,c
  3288   000FD2  6ADA               	clrf	fsr2h,c
  3289   000FD4  0E02               	movlw	2
  3290   000FD6  26D9               	addwf	fsr2l,f,c
  3291   000FD8  CFDE F010          	movff	postinc2,??_getHSVval
  3292   000FDC  CFDD F011          	movff	postdec2,??_getHSVval+1
  3293   000FE0  500F               	movf	getHSVval@p2^0,w,c
  3294   000FE2  6ED9               	movwf	fsr2l,c
  3295   000FE4  6ADA               	clrf	fsr2h,c
  3296   000FE6  0E04               	movlw	4
  3297   000FE8  26D9               	addwf	fsr2l,f,c
  3298   000FEA  CFDE F012          	movff	postinc2,??_getHSVval+2
  3299   000FEE  CFDD F013          	movff	postdec2,??_getHSVval+3
  3300   000FF2  5010               	movf	??_getHSVval^0,w,c
  3301   000FF4  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3302   000FF6  6E14               	movwf	(??_getHSVval+4)^0,c
  3303   000FF8  5011               	movf	(??_getHSVval+1)^0,w,c
  3304   000FFA  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3305   000FFC  6E15               	movwf	(??_getHSVval+5)^0,c
  3306   000FFE  6A16               	clrf	(??_getHSVval+6)^0,c
  3307   001000  6A17               	clrf	(??_getHSVval+7)^0,c
  3308   001002  5014               	movf	(??_getHSVval+4)^0,w,c
  3309   001004  5E38               	subwf	getHSVval@temp_648^0,f,c
  3310   001006  5015               	movf	(??_getHSVval+5)^0,w,c
  3311   001008  5A39               	subwfb	(getHSVval@temp_648+1)^0,f,c
  3312   00100A  5016               	movf	(??_getHSVval+6)^0,w,c
  3313   00100C  5A3A               	subwfb	(getHSVval@temp_648+2)^0,f,c
  3314   00100E  5017               	movf	(??_getHSVval+7)^0,w,c
  3315   001010  5A3B               	subwfb	(getHSVval@temp_648+3)^0,f,c
  3316   001012                     
  3317                           ;color.c: 166:                 temp *= (unsigned long)Hz;
  3318   001012  C038  F001         	movff	getHSVval@temp_648,___lmul@multiplier
  3319   001016  C039  F002         	movff	getHSVval@temp_648+1,___lmul@multiplier+1
  3320   00101A  C03A  F003         	movff	getHSVval@temp_648+2,___lmul@multiplier+2
  3321   00101E  C03B  F004         	movff	getHSVval@temp_648+3,___lmul@multiplier+3
  3322   001022  0E3C               	movlw	60
  3323   001024  6E05               	movwf	___lmul@multiplicand^0,c
  3324   001026  0E00               	movlw	0
  3325   001028  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3326   00102A  0E00               	movlw	0
  3327   00102C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3328   00102E  0E00               	movlw	0
  3329   001030  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3330   001032  EC84  F010         	call	___lmul	;wreg free
  3331   001036  C001  F038         	movff	?___lmul,getHSVval@temp_648
  3332   00103A  C002  F039         	movff	?___lmul+1,getHSVval@temp_648+1
  3333   00103E  C003  F03A         	movff	?___lmul+2,getHSVval@temp_648+2
  3334   001042  C004  F03B         	movff	?___lmul+3,getHSVval@temp_648+3
  3335   001046                     
  3336                           ;color.c: 167:                 temp /= (unsigned long)C;
  3337   001046  C038  F001         	movff	getHSVval@temp_648,___lldiv@dividend
  3338   00104A  C039  F002         	movff	getHSVval@temp_648+1,___lldiv@dividend+1
  3339   00104E  C03A  F003         	movff	getHSVval@temp_648+2,___lldiv@dividend+2
  3340   001052  C03B  F004         	movff	getHSVval@temp_648+3,___lldiv@dividend+3
  3341   001056  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3342   00105A  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3343   00105E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3344   001060  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3345   001062  ECEA  F00F         	call	___lldiv	;wreg free
  3346   001066  C001  F038         	movff	?___lldiv,getHSVval@temp_648
  3347   00106A  C002  F039         	movff	?___lldiv+1,getHSVval@temp_648+1
  3348   00106E  C003  F03A         	movff	?___lldiv+2,getHSVval@temp_648+2
  3349   001072  C004  F03B         	movff	?___lldiv+3,getHSVval@temp_648+3
  3350   001076                     
  3351                           ;color.c: 168:                 H = (unsigned int)temp;
  3352   001076  C038  F01E         	movff	getHSVval@temp_648,getHSVval@H
  3353   00107A  C039  F01F         	movff	getHSVval@temp_648+1,getHSVval@H+1
  3354   00107E                     l3125:
  3355                           
  3356                           ;color.c: 171:         if (M == p2->G) {
  3357   00107E  500F               	movf	getHSVval@p2^0,w,c
  3358   001080  6ED9               	movwf	fsr2l,c
  3359   001082  6ADA               	clrf	fsr2h,c
  3360   001084  0E02               	movlw	2
  3361   001086  26D9               	addwf	fsr2l,f,c
  3362   001088  503C               	movf	getHSVval@M^0,w,c
  3363   00108A  18DE               	xorwf	postinc2,w,c
  3364   00108C  E107               	bnz	u2111
  3365   00108E  503D               	movf	(getHSVval@M+1)^0,w,c
  3366   001090  18DE               	xorwf	postinc2,w,c
  3367   001092  A4D8               	btfss	status,2,c
  3368   001094  EF4E  F008         	goto	u2111
  3369   001098  EF50  F008         	goto	u2110
  3370   00109C                     u2111:
  3371   00109C  EF25  F009         	goto	l3153
  3372   0010A0                     u2110:
  3373   0010A0                     
  3374                           ;color.c: 172:             if (p2->B >= p2->R) {
  3375   0010A0  500F               	movf	getHSVval@p2^0,w,c
  3376   0010A2  6ED9               	movwf	fsr2l,c
  3377   0010A4  6ADA               	clrf	fsr2h,c
  3378   0010A6  500F               	movf	getHSVval@p2^0,w,c
  3379   0010A8  6EE1               	movwf	fsr1l,c
  3380   0010AA  6AE2               	clrf	fsr1h,c
  3381   0010AC  0E04               	movlw	4
  3382   0010AE  26E1               	addwf	fsr1l,f,c
  3383   0010B0  50DE               	movf	postinc2,w,c
  3384   0010B2  5CE6               	subwf	postinc1,w,c
  3385   0010B4  50DE               	movf	postinc2,w,c
  3386   0010B6  58E6               	subwfb	postinc1,w,c
  3387   0010B8  A0D8               	btfss	status,0,c
  3388   0010BA  EF61  F008         	goto	u2121
  3389   0010BE  EF63  F008         	goto	u2120
  3390   0010C2                     u2121:
  3391   0010C2  EFC4  F008         	goto	l3141
  3392   0010C6                     u2120:
  3393   0010C6                     
  3394                           ;color.c: 174:                 unsigned long temp;;color.c: 175:                 temp = 
      +                          (unsigned long)C;
  3395   0010C6  C03E  F028         	movff	getHSVval@C,getHSVval@temp_649
  3396   0010CA  C03F  F029         	movff	getHSVval@C+1,getHSVval@temp_649+1
  3397   0010CE  6A2A               	clrf	(getHSVval@temp_649+2)^0,c
  3398   0010D0  6A2B               	clrf	(getHSVval@temp_649+3)^0,c
  3399   0010D2                     
  3400                           ;color.c: 176:                 temp *= 2;
  3401   0010D2  90D8               	bcf	status,0,c
  3402   0010D4  3628               	rlcf	getHSVval@temp_649^0,f,c
  3403   0010D6  3629               	rlcf	(getHSVval@temp_649+1)^0,f,c
  3404   0010D8  362A               	rlcf	(getHSVval@temp_649+2)^0,f,c
  3405   0010DA  362B               	rlcf	(getHSVval@temp_649+3)^0,f,c
  3406   0010DC                     
  3407                           ;color.c: 177:                 temp += (unsigned long)(p2->B - p2->R);
  3408   0010DC  500F               	movf	getHSVval@p2^0,w,c
  3409   0010DE  6ED9               	movwf	fsr2l,c
  3410   0010E0  6ADA               	clrf	fsr2h,c
  3411   0010E2  CFDE F010          	movff	postinc2,??_getHSVval
  3412   0010E6  CFDD F011          	movff	postdec2,??_getHSVval+1
  3413   0010EA  500F               	movf	getHSVval@p2^0,w,c
  3414   0010EC  6ED9               	movwf	fsr2l,c
  3415   0010EE  6ADA               	clrf	fsr2h,c
  3416   0010F0  0E04               	movlw	4
  3417   0010F2  26D9               	addwf	fsr2l,f,c
  3418   0010F4  CFDE F012          	movff	postinc2,??_getHSVval+2
  3419   0010F8  CFDD F013          	movff	postdec2,??_getHSVval+3
  3420   0010FC  5010               	movf	??_getHSVval^0,w,c
  3421   0010FE  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3422   001100  6E14               	movwf	(??_getHSVval+4)^0,c
  3423   001102  5011               	movf	(??_getHSVval+1)^0,w,c
  3424   001104  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3425   001106  6E15               	movwf	(??_getHSVval+5)^0,c
  3426   001108  5014               	movf	(??_getHSVval+4)^0,w,c
  3427   00110A  2628               	addwf	getHSVval@temp_649^0,f,c
  3428   00110C  5015               	movf	(??_getHSVval+5)^0,w,c
  3429   00110E  2229               	addwfc	(getHSVval@temp_649+1)^0,f,c
  3430   001110  0E00               	movlw	0
  3431   001112  222A               	addwfc	(getHSVval@temp_649+2)^0,f,c
  3432   001114  0E00               	movlw	0
  3433   001116  222B               	addwfc	(getHSVval@temp_649+3)^0,f,c
  3434   001118                     
  3435                           ;color.c: 178:                 temp *= (unsigned long)Hz;
  3436   001118  C028  F001         	movff	getHSVval@temp_649,___lmul@multiplier
  3437   00111C  C029  F002         	movff	getHSVval@temp_649+1,___lmul@multiplier+1
  3438   001120  C02A  F003         	movff	getHSVval@temp_649+2,___lmul@multiplier+2
  3439   001124  C02B  F004         	movff	getHSVval@temp_649+3,___lmul@multiplier+3
  3440   001128  0E3C               	movlw	60
  3441   00112A  6E05               	movwf	___lmul@multiplicand^0,c
  3442   00112C  0E00               	movlw	0
  3443   00112E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3444   001130  0E00               	movlw	0
  3445   001132  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3446   001134  0E00               	movlw	0
  3447   001136  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3448   001138  EC84  F010         	call	___lmul	;wreg free
  3449   00113C  C001  F028         	movff	?___lmul,getHSVval@temp_649
  3450   001140  C002  F029         	movff	?___lmul+1,getHSVval@temp_649+1
  3451   001144  C003  F02A         	movff	?___lmul+2,getHSVval@temp_649+2
  3452   001148  C004  F02B         	movff	?___lmul+3,getHSVval@temp_649+3
  3453   00114C                     
  3454                           ;color.c: 179:                 temp /= (unsigned long)C;
  3455   00114C  C028  F001         	movff	getHSVval@temp_649,___lldiv@dividend
  3456   001150  C029  F002         	movff	getHSVval@temp_649+1,___lldiv@dividend+1
  3457   001154  C02A  F003         	movff	getHSVval@temp_649+2,___lldiv@dividend+2
  3458   001158  C02B  F004         	movff	getHSVval@temp_649+3,___lldiv@dividend+3
  3459   00115C  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3460   001160  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3461   001164  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3462   001166  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3463   001168  ECEA  F00F         	call	___lldiv	;wreg free
  3464   00116C  C001  F028         	movff	?___lldiv,getHSVval@temp_649
  3465   001170  C002  F029         	movff	?___lldiv+1,getHSVval@temp_649+1
  3466   001174  C003  F02A         	movff	?___lldiv+2,getHSVval@temp_649+2
  3467   001178  C004  F02B         	movff	?___lldiv+3,getHSVval@temp_649+3
  3468   00117C                     
  3469                           ;color.c: 180:                 H = (unsigned int)temp;
  3470   00117C  C028  F01E         	movff	getHSVval@temp_649,getHSVval@H
  3471   001180  C029  F01F         	movff	getHSVval@temp_649+1,getHSVval@H+1
  3472                           
  3473                           ;color.c: 181:             } else {
  3474   001184  EF25  F009         	goto	l3153
  3475   001188                     l3141:
  3476                           
  3477                           ;color.c: 183:                 unsigned long temp;;color.c: 184:                 temp = 
      +                          (unsigned long)C;
  3478   001188  C03E  F02C         	movff	getHSVval@C,getHSVval@temp_650
  3479   00118C  C03F  F02D         	movff	getHSVval@C+1,getHSVval@temp_650+1
  3480   001190  6A2E               	clrf	(getHSVval@temp_650+2)^0,c
  3481   001192  6A2F               	clrf	(getHSVval@temp_650+3)^0,c
  3482   001194                     
  3483                           ;color.c: 185:                 temp *= 2;
  3484   001194  90D8               	bcf	status,0,c
  3485   001196  362C               	rlcf	getHSVval@temp_650^0,f,c
  3486   001198  362D               	rlcf	(getHSVval@temp_650+1)^0,f,c
  3487   00119A  362E               	rlcf	(getHSVval@temp_650+2)^0,f,c
  3488   00119C  362F               	rlcf	(getHSVval@temp_650+3)^0,f,c
  3489   00119E                     
  3490                           ;color.c: 186:                 temp -= (unsigned long)(p2->R - p2->B);
  3491   00119E  500F               	movf	getHSVval@p2^0,w,c
  3492   0011A0  6ED9               	movwf	fsr2l,c
  3493   0011A2  6ADA               	clrf	fsr2h,c
  3494   0011A4  0E04               	movlw	4
  3495   0011A6  26D9               	addwf	fsr2l,f,c
  3496   0011A8  CFDE F010          	movff	postinc2,??_getHSVval
  3497   0011AC  CFDD F011          	movff	postdec2,??_getHSVval+1
  3498   0011B0  500F               	movf	getHSVval@p2^0,w,c
  3499   0011B2  6ED9               	movwf	fsr2l,c
  3500   0011B4  6ADA               	clrf	fsr2h,c
  3501   0011B6  CFDE F012          	movff	postinc2,??_getHSVval+2
  3502   0011BA  CFDD F013          	movff	postdec2,??_getHSVval+3
  3503   0011BE  5010               	movf	??_getHSVval^0,w,c
  3504   0011C0  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3505   0011C2  6E14               	movwf	(??_getHSVval+4)^0,c
  3506   0011C4  5011               	movf	(??_getHSVval+1)^0,w,c
  3507   0011C6  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3508   0011C8  6E15               	movwf	(??_getHSVval+5)^0,c
  3509   0011CA  6A16               	clrf	(??_getHSVval+6)^0,c
  3510   0011CC  6A17               	clrf	(??_getHSVval+7)^0,c
  3511   0011CE  5014               	movf	(??_getHSVval+4)^0,w,c
  3512   0011D0  5E2C               	subwf	getHSVval@temp_650^0,f,c
  3513   0011D2  5015               	movf	(??_getHSVval+5)^0,w,c
  3514   0011D4  5A2D               	subwfb	(getHSVval@temp_650+1)^0,f,c
  3515   0011D6  5016               	movf	(??_getHSVval+6)^0,w,c
  3516   0011D8  5A2E               	subwfb	(getHSVval@temp_650+2)^0,f,c
  3517   0011DA  5017               	movf	(??_getHSVval+7)^0,w,c
  3518   0011DC  5A2F               	subwfb	(getHSVval@temp_650+3)^0,f,c
  3519   0011DE                     
  3520                           ;color.c: 187:                 temp *= (unsigned long)Hz;
  3521   0011DE  C02C  F001         	movff	getHSVval@temp_650,___lmul@multiplier
  3522   0011E2  C02D  F002         	movff	getHSVval@temp_650+1,___lmul@multiplier+1
  3523   0011E6  C02E  F003         	movff	getHSVval@temp_650+2,___lmul@multiplier+2
  3524   0011EA  C02F  F004         	movff	getHSVval@temp_650+3,___lmul@multiplier+3
  3525   0011EE  0E3C               	movlw	60
  3526   0011F0  6E05               	movwf	___lmul@multiplicand^0,c
  3527   0011F2  0E00               	movlw	0
  3528   0011F4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3529   0011F6  0E00               	movlw	0
  3530   0011F8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3531   0011FA  0E00               	movlw	0
  3532   0011FC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3533   0011FE  EC84  F010         	call	___lmul	;wreg free
  3534   001202  C001  F02C         	movff	?___lmul,getHSVval@temp_650
  3535   001206  C002  F02D         	movff	?___lmul+1,getHSVval@temp_650+1
  3536   00120A  C003  F02E         	movff	?___lmul+2,getHSVval@temp_650+2
  3537   00120E  C004  F02F         	movff	?___lmul+3,getHSVval@temp_650+3
  3538   001212                     
  3539                           ;color.c: 188:                 temp /= (unsigned long)C;
  3540   001212  C02C  F001         	movff	getHSVval@temp_650,___lldiv@dividend
  3541   001216  C02D  F002         	movff	getHSVval@temp_650+1,___lldiv@dividend+1
  3542   00121A  C02E  F003         	movff	getHSVval@temp_650+2,___lldiv@dividend+2
  3543   00121E  C02F  F004         	movff	getHSVval@temp_650+3,___lldiv@dividend+3
  3544   001222  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3545   001226  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3546   00122A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3547   00122C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3548   00122E  ECEA  F00F         	call	___lldiv	;wreg free
  3549   001232  C001  F02C         	movff	?___lldiv,getHSVval@temp_650
  3550   001236  C002  F02D         	movff	?___lldiv+1,getHSVval@temp_650+1
  3551   00123A  C003  F02E         	movff	?___lldiv+2,getHSVval@temp_650+2
  3552   00123E  C004  F02F         	movff	?___lldiv+3,getHSVval@temp_650+3
  3553   001242                     
  3554                           ;color.c: 189:                 H = (unsigned int)temp;
  3555   001242  C02C  F01E         	movff	getHSVval@temp_650,getHSVval@H
  3556   001246  C02D  F01F         	movff	getHSVval@temp_650+1,getHSVval@H+1
  3557   00124A                     l3153:
  3558                           
  3559                           ;color.c: 192:         if (M == p2->B) {
  3560   00124A  500F               	movf	getHSVval@p2^0,w,c
  3561   00124C  6ED9               	movwf	fsr2l,c
  3562   00124E  6ADA               	clrf	fsr2h,c
  3563   001250  0E04               	movlw	4
  3564   001252  26D9               	addwf	fsr2l,f,c
  3565   001254  503C               	movf	getHSVval@M^0,w,c
  3566   001256  18DE               	xorwf	postinc2,w,c
  3567   001258  E107               	bnz	u2131
  3568   00125A  503D               	movf	(getHSVval@M+1)^0,w,c
  3569   00125C  18DE               	xorwf	postinc2,w,c
  3570   00125E  A4D8               	btfss	status,2,c
  3571   001260  EF34  F009         	goto	u2131
  3572   001264  EF36  F009         	goto	u2130
  3573   001268                     u2131:
  3574   001268  EF13  F00A         	goto	l3181
  3575   00126C                     u2130:
  3576   00126C                     
  3577                           ;color.c: 193:             if (p2->R >= p2->G) {
  3578   00126C  500F               	movf	getHSVval@p2^0,w,c
  3579   00126E  6ED9               	movwf	fsr2l,c
  3580   001270  6ADA               	clrf	fsr2h,c
  3581   001272  0E02               	movlw	2
  3582   001274  26D9               	addwf	fsr2l,f,c
  3583   001276  500F               	movf	getHSVval@p2^0,w,c
  3584   001278  6EE1               	movwf	fsr1l,c
  3585   00127A  6AE2               	clrf	fsr1h,c
  3586   00127C  50DE               	movf	postinc2,w,c
  3587   00127E  5CE6               	subwf	postinc1,w,c
  3588   001280  50DE               	movf	postinc2,w,c
  3589   001282  58E6               	subwfb	postinc1,w,c
  3590   001284  A0D8               	btfss	status,0,c
  3591   001286  EF47  F009         	goto	u2141
  3592   00128A  EF49  F009         	goto	u2140
  3593   00128E                     u2141:
  3594   00128E  EFAE  F009         	goto	l3169
  3595   001292                     u2140:
  3596   001292                     
  3597                           ;color.c: 195:                 unsigned long temp;;color.c: 196:                 temp = 
      +                          (unsigned long)C;
  3598   001292  C03E  F030         	movff	getHSVval@C,getHSVval@temp_651
  3599   001296  C03F  F031         	movff	getHSVval@C+1,getHSVval@temp_651+1
  3600   00129A  6A32               	clrf	(getHSVval@temp_651+2)^0,c
  3601   00129C  6A33               	clrf	(getHSVval@temp_651+3)^0,c
  3602   00129E                     
  3603                           ;color.c: 197:                 temp *= 4;
  3604   00129E  0E02               	movlw	2
  3605   0012A0                     u2155:
  3606   0012A0  90D8               	bcf	status,0,c
  3607   0012A2  3630               	rlcf	getHSVval@temp_651^0,f,c
  3608   0012A4  3631               	rlcf	(getHSVval@temp_651+1)^0,f,c
  3609   0012A6  3632               	rlcf	(getHSVval@temp_651+2)^0,f,c
  3610   0012A8  3633               	rlcf	(getHSVval@temp_651+3)^0,f,c
  3611   0012AA  2EE8               	decfsz	wreg,f,c
  3612   0012AC  EF50  F009         	goto	u2155
  3613   0012B0                     
  3614                           ;color.c: 198:                 temp += (unsigned long)(p2->R - p2->G);
  3615   0012B0  500F               	movf	getHSVval@p2^0,w,c
  3616   0012B2  6ED9               	movwf	fsr2l,c
  3617   0012B4  6ADA               	clrf	fsr2h,c
  3618   0012B6  0E02               	movlw	2
  3619   0012B8  26D9               	addwf	fsr2l,f,c
  3620   0012BA  CFDE F010          	movff	postinc2,??_getHSVval
  3621   0012BE  CFDD F011          	movff	postdec2,??_getHSVval+1
  3622   0012C2  500F               	movf	getHSVval@p2^0,w,c
  3623   0012C4  6ED9               	movwf	fsr2l,c
  3624   0012C6  6ADA               	clrf	fsr2h,c
  3625   0012C8  CFDE F012          	movff	postinc2,??_getHSVval+2
  3626   0012CC  CFDD F013          	movff	postdec2,??_getHSVval+3
  3627   0012D0  5010               	movf	??_getHSVval^0,w,c
  3628   0012D2  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3629   0012D4  6E14               	movwf	(??_getHSVval+4)^0,c
  3630   0012D6  5011               	movf	(??_getHSVval+1)^0,w,c
  3631   0012D8  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3632   0012DA  6E15               	movwf	(??_getHSVval+5)^0,c
  3633   0012DC  5014               	movf	(??_getHSVval+4)^0,w,c
  3634   0012DE  2630               	addwf	getHSVval@temp_651^0,f,c
  3635   0012E0  5015               	movf	(??_getHSVval+5)^0,w,c
  3636   0012E2  2231               	addwfc	(getHSVval@temp_651+1)^0,f,c
  3637   0012E4  0E00               	movlw	0
  3638   0012E6  2232               	addwfc	(getHSVval@temp_651+2)^0,f,c
  3639   0012E8  0E00               	movlw	0
  3640   0012EA  2233               	addwfc	(getHSVval@temp_651+3)^0,f,c
  3641   0012EC                     
  3642                           ;color.c: 199:                 temp *= (unsigned long)Hz;
  3643   0012EC  C030  F001         	movff	getHSVval@temp_651,___lmul@multiplier
  3644   0012F0  C031  F002         	movff	getHSVval@temp_651+1,___lmul@multiplier+1
  3645   0012F4  C032  F003         	movff	getHSVval@temp_651+2,___lmul@multiplier+2
  3646   0012F8  C033  F004         	movff	getHSVval@temp_651+3,___lmul@multiplier+3
  3647   0012FC  0E3C               	movlw	60
  3648   0012FE  6E05               	movwf	___lmul@multiplicand^0,c
  3649   001300  0E00               	movlw	0
  3650   001302  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3651   001304  0E00               	movlw	0
  3652   001306  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3653   001308  0E00               	movlw	0
  3654   00130A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3655   00130C  EC84  F010         	call	___lmul	;wreg free
  3656   001310  C001  F030         	movff	?___lmul,getHSVval@temp_651
  3657   001314  C002  F031         	movff	?___lmul+1,getHSVval@temp_651+1
  3658   001318  C003  F032         	movff	?___lmul+2,getHSVval@temp_651+2
  3659   00131C  C004  F033         	movff	?___lmul+3,getHSVval@temp_651+3
  3660   001320                     
  3661                           ;color.c: 200:                 temp /= (unsigned long)C;
  3662   001320  C030  F001         	movff	getHSVval@temp_651,___lldiv@dividend
  3663   001324  C031  F002         	movff	getHSVval@temp_651+1,___lldiv@dividend+1
  3664   001328  C032  F003         	movff	getHSVval@temp_651+2,___lldiv@dividend+2
  3665   00132C  C033  F004         	movff	getHSVval@temp_651+3,___lldiv@dividend+3
  3666   001330  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3667   001334  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3668   001338  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3669   00133A  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3670   00133C  ECEA  F00F         	call	___lldiv	;wreg free
  3671   001340  C001  F030         	movff	?___lldiv,getHSVval@temp_651
  3672   001344  C002  F031         	movff	?___lldiv+1,getHSVval@temp_651+1
  3673   001348  C003  F032         	movff	?___lldiv+2,getHSVval@temp_651+2
  3674   00134C  C004  F033         	movff	?___lldiv+3,getHSVval@temp_651+3
  3675   001350                     
  3676                           ;color.c: 201:                 H = (unsigned int)temp;
  3677   001350  C030  F01E         	movff	getHSVval@temp_651,getHSVval@H
  3678   001354  C031  F01F         	movff	getHSVval@temp_651+1,getHSVval@H+1
  3679                           
  3680                           ;color.c: 202:             } else {
  3681   001358  EF13  F00A         	goto	l3181
  3682   00135C                     l3169:
  3683                           
  3684                           ;color.c: 204:                 unsigned long temp;;color.c: 205:                 temp = 
      +                          (unsigned long)C;
  3685   00135C  C03E  F034         	movff	getHSVval@C,getHSVval@temp_652
  3686   001360  C03F  F035         	movff	getHSVval@C+1,getHSVval@temp_652+1
  3687   001364  6A36               	clrf	(getHSVval@temp_652+2)^0,c
  3688   001366  6A37               	clrf	(getHSVval@temp_652+3)^0,c
  3689   001368                     
  3690                           ;color.c: 206:                 temp *= 4;
  3691   001368  0E02               	movlw	2
  3692   00136A                     u2165:
  3693   00136A  90D8               	bcf	status,0,c
  3694   00136C  3634               	rlcf	getHSVval@temp_652^0,f,c
  3695   00136E  3635               	rlcf	(getHSVval@temp_652+1)^0,f,c
  3696   001370  3636               	rlcf	(getHSVval@temp_652+2)^0,f,c
  3697   001372  3637               	rlcf	(getHSVval@temp_652+3)^0,f,c
  3698   001374  2EE8               	decfsz	wreg,f,c
  3699   001376  EFB5  F009         	goto	u2165
  3700   00137A                     
  3701                           ;color.c: 207:                 temp -= (unsigned long)(p2->G - p2->R);
  3702   00137A  500F               	movf	getHSVval@p2^0,w,c
  3703   00137C  6ED9               	movwf	fsr2l,c
  3704   00137E  6ADA               	clrf	fsr2h,c
  3705   001380  CFDE F010          	movff	postinc2,??_getHSVval
  3706   001384  CFDD F011          	movff	postdec2,??_getHSVval+1
  3707   001388  500F               	movf	getHSVval@p2^0,w,c
  3708   00138A  6ED9               	movwf	fsr2l,c
  3709   00138C  6ADA               	clrf	fsr2h,c
  3710   00138E  0E02               	movlw	2
  3711   001390  26D9               	addwf	fsr2l,f,c
  3712   001392  CFDE F012          	movff	postinc2,??_getHSVval+2
  3713   001396  CFDD F013          	movff	postdec2,??_getHSVval+3
  3714   00139A  5010               	movf	??_getHSVval^0,w,c
  3715   00139C  5C12               	subwf	(??_getHSVval+2)^0,w,c
  3716   00139E  6E14               	movwf	(??_getHSVval+4)^0,c
  3717   0013A0  5011               	movf	(??_getHSVval+1)^0,w,c
  3718   0013A2  5813               	subwfb	(??_getHSVval+3)^0,w,c
  3719   0013A4  6E15               	movwf	(??_getHSVval+5)^0,c
  3720   0013A6  6A16               	clrf	(??_getHSVval+6)^0,c
  3721   0013A8  6A17               	clrf	(??_getHSVval+7)^0,c
  3722   0013AA  5014               	movf	(??_getHSVval+4)^0,w,c
  3723   0013AC  5E34               	subwf	getHSVval@temp_652^0,f,c
  3724   0013AE  5015               	movf	(??_getHSVval+5)^0,w,c
  3725   0013B0  5A35               	subwfb	(getHSVval@temp_652+1)^0,f,c
  3726   0013B2  5016               	movf	(??_getHSVval+6)^0,w,c
  3727   0013B4  5A36               	subwfb	(getHSVval@temp_652+2)^0,f,c
  3728   0013B6  5017               	movf	(??_getHSVval+7)^0,w,c
  3729   0013B8  5A37               	subwfb	(getHSVval@temp_652+3)^0,f,c
  3730   0013BA                     
  3731                           ;color.c: 208:                 temp *= (unsigned long)Hz;
  3732   0013BA  C034  F001         	movff	getHSVval@temp_652,___lmul@multiplier
  3733   0013BE  C035  F002         	movff	getHSVval@temp_652+1,___lmul@multiplier+1
  3734   0013C2  C036  F003         	movff	getHSVval@temp_652+2,___lmul@multiplier+2
  3735   0013C6  C037  F004         	movff	getHSVval@temp_652+3,___lmul@multiplier+3
  3736   0013CA  0E3C               	movlw	60
  3737   0013CC  6E05               	movwf	___lmul@multiplicand^0,c
  3738   0013CE  0E00               	movlw	0
  3739   0013D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3740   0013D2  0E00               	movlw	0
  3741   0013D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3742   0013D6  0E00               	movlw	0
  3743   0013D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3744   0013DA  EC84  F010         	call	___lmul	;wreg free
  3745   0013DE  C001  F034         	movff	?___lmul,getHSVval@temp_652
  3746   0013E2  C002  F035         	movff	?___lmul+1,getHSVval@temp_652+1
  3747   0013E6  C003  F036         	movff	?___lmul+2,getHSVval@temp_652+2
  3748   0013EA  C004  F037         	movff	?___lmul+3,getHSVval@temp_652+3
  3749   0013EE                     
  3750                           ;color.c: 209:                 temp /= (unsigned long)C;
  3751   0013EE  C034  F001         	movff	getHSVval@temp_652,___lldiv@dividend
  3752   0013F2  C035  F002         	movff	getHSVval@temp_652+1,___lldiv@dividend+1
  3753   0013F6  C036  F003         	movff	getHSVval@temp_652+2,___lldiv@dividend+2
  3754   0013FA  C037  F004         	movff	getHSVval@temp_652+3,___lldiv@dividend+3
  3755   0013FE  C03E  F005         	movff	getHSVval@C,___lldiv@divisor
  3756   001402  C03F  F006         	movff	getHSVval@C+1,___lldiv@divisor+1
  3757   001406  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3758   001408  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3759   00140A  ECEA  F00F         	call	___lldiv	;wreg free
  3760   00140E  C001  F034         	movff	?___lldiv,getHSVval@temp_652
  3761   001412  C002  F035         	movff	?___lldiv+1,getHSVval@temp_652+1
  3762   001416  C003  F036         	movff	?___lldiv+2,getHSVval@temp_652+2
  3763   00141A  C004  F037         	movff	?___lldiv+3,getHSVval@temp_652+3
  3764   00141E                     
  3765                           ;color.c: 210:                 H = (unsigned int)temp;
  3766   00141E  C034  F01E         	movff	getHSVval@temp_652,getHSVval@H
  3767   001422  C035  F01F         	movff	getHSVval@temp_652+1,getHSVval@H+1
  3768   001426                     l3181:
  3769                           
  3770                           ;color.c: 215:     if (M == 0) {
  3771   001426  503C               	movf	getHSVval@M^0,w,c
  3772   001428  103D               	iorwf	(getHSVval@M+1)^0,w,c
  3773   00142A  A4D8               	btfss	status,2,c
  3774   00142C  EF1A  F00A         	goto	u2171
  3775   001430  EF1C  F00A         	goto	u2170
  3776   001434                     u2171:
  3777   001434  EF22  F00A         	goto	l3185
  3778   001438                     u2170:
  3779   001438                     
  3780                           ;color.c: 216:         S = 0;
  3781   001438  0E00               	movlw	0
  3782   00143A  6E1D               	movwf	(getHSVval@S+1)^0,c
  3783   00143C  0E00               	movlw	0
  3784   00143E  6E1C               	movwf	getHSVval@S^0,c
  3785                           
  3786                           ;color.c: 217:     } else {
  3787   001440  EF5E  F00A         	goto	l3193
  3788   001444                     l3185:
  3789                           
  3790                           ;color.c: 219:         unsigned long temp;;color.c: 220:         temp = (unsigned long)C
      +                          ;
  3791   001444  C03E  F020         	movff	getHSVval@C,getHSVval@temp_653
  3792   001448  C03F  F021         	movff	getHSVval@C+1,getHSVval@temp_653+1
  3793   00144C  6A22               	clrf	(getHSVval@temp_653+2)^0,c
  3794   00144E  6A23               	clrf	(getHSVval@temp_653+3)^0,c
  3795   001450                     
  3796                           ;color.c: 221:         temp *= (unsigned long)Sz;
  3797   001450  C020  F001         	movff	getHSVval@temp_653,___lmul@multiplier
  3798   001454  C021  F002         	movff	getHSVval@temp_653+1,___lmul@multiplier+1
  3799   001458  C022  F003         	movff	getHSVval@temp_653+2,___lmul@multiplier+2
  3800   00145C  C023  F004         	movff	getHSVval@temp_653+3,___lmul@multiplier+3
  3801   001460  0E64               	movlw	100
  3802   001462  6E05               	movwf	___lmul@multiplicand^0,c
  3803   001464  0E00               	movlw	0
  3804   001466  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3805   001468  0E00               	movlw	0
  3806   00146A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3807   00146C  0E00               	movlw	0
  3808   00146E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3809   001470  EC84  F010         	call	___lmul	;wreg free
  3810   001474  C001  F020         	movff	?___lmul,getHSVval@temp_653
  3811   001478  C002  F021         	movff	?___lmul+1,getHSVval@temp_653+1
  3812   00147C  C003  F022         	movff	?___lmul+2,getHSVval@temp_653+2
  3813   001480  C004  F023         	movff	?___lmul+3,getHSVval@temp_653+3
  3814   001484                     
  3815                           ;color.c: 222:         temp /= (unsigned long)M;
  3816   001484  C020  F001         	movff	getHSVval@temp_653,___lldiv@dividend
  3817   001488  C021  F002         	movff	getHSVval@temp_653+1,___lldiv@dividend+1
  3818   00148C  C022  F003         	movff	getHSVval@temp_653+2,___lldiv@dividend+2
  3819   001490  C023  F004         	movff	getHSVval@temp_653+3,___lldiv@dividend+3
  3820   001494  C03C  F005         	movff	getHSVval@M,___lldiv@divisor
  3821   001498  C03D  F006         	movff	getHSVval@M+1,___lldiv@divisor+1
  3822   00149C  6A07               	clrf	(___lldiv@divisor+2)^0,c
  3823   00149E  6A08               	clrf	(___lldiv@divisor+3)^0,c
  3824   0014A0  ECEA  F00F         	call	___lldiv	;wreg free
  3825   0014A4  C001  F020         	movff	?___lldiv,getHSVval@temp_653
  3826   0014A8  C002  F021         	movff	?___lldiv+1,getHSVval@temp_653+1
  3827   0014AC  C003  F022         	movff	?___lldiv+2,getHSVval@temp_653+2
  3828   0014B0  C004  F023         	movff	?___lldiv+3,getHSVval@temp_653+3
  3829   0014B4                     
  3830                           ;color.c: 223:         S = (unsigned int)temp;
  3831   0014B4  C020  F01C         	movff	getHSVval@temp_653,getHSVval@S
  3832   0014B8  C021  F01D         	movff	getHSVval@temp_653+1,getHSVval@S+1
  3833   0014BC                     l3193:
  3834                           
  3835                           ;color.c: 226:     p1->H = H;
  3836   0014BC  500E               	movf	getHSVval@p1^0,w,c
  3837   0014BE  6ED9               	movwf	fsr2l,c
  3838   0014C0  6ADA               	clrf	fsr2h,c
  3839   0014C2  C01E  FFDE         	movff	getHSVval@H,postinc2
  3840   0014C6  C01F  FFDD         	movff	getHSVval@H+1,postdec2
  3841   0014CA                     
  3842                           ;color.c: 227:     p1->S = S;
  3843   0014CA  500E               	movf	getHSVval@p1^0,w,c
  3844   0014CC  6ED9               	movwf	fsr2l,c
  3845   0014CE  6ADA               	clrf	fsr2h,c
  3846   0014D0  0E02               	movlw	2
  3847   0014D2  26D9               	addwf	fsr2l,f,c
  3848   0014D4  C01C  FFDE         	movff	getHSVval@S,postinc2
  3849   0014D8  C01D  FFDD         	movff	getHSVval@S+1,postdec2
  3850   0014DC                     
  3851                           ;color.c: 228:     p1->V = M;
  3852   0014DC  500E               	movf	getHSVval@p1^0,w,c
  3853   0014DE  6ED9               	movwf	fsr2l,c
  3854   0014E0  6ADA               	clrf	fsr2h,c
  3855   0014E2  0E04               	movlw	4
  3856   0014E4  26D9               	addwf	fsr2l,f,c
  3857   0014E6  C03C  FFDE         	movff	getHSVval@M,postinc2
  3858   0014EA  C03D  FFDD         	movff	getHSVval@M+1,postdec2
  3859   0014EE  0012               	return		;funcret
  3860   0014F0                     __end_of_getHSVval:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _minRGB *****************
  3864 ;; Defined at:
  3865 ;;		line 123 in file "color.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  3868 ;;		 -> main@measured_colour(8), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2    6[COMRAM] unsigned int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;Total ram usage:        4 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		_min
  3889 ;; This function is called by:
  3890 ;;		_getHSVval
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text16
  3895   0021C8                     __ptext16:
  3896                           	callstack 0
  3897   0021C8                     _minRGB:
  3898                           	callstack 27
  3899   0021C8                     
  3900                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  3901   0021C8  5007               	movf	minRGB@p^0,w,c
  3902   0021CA  6ED9               	movwf	fsr2l,c
  3903   0021CC  6ADA               	clrf	fsr2h,c
  3904   0021CE  CFDE F001          	movff	postinc2,min@a
  3905   0021D2  CFDD F002          	movff	postdec2,min@a+1
  3906   0021D6  5007               	movf	minRGB@p^0,w,c
  3907   0021D8  6ED9               	movwf	fsr2l,c
  3908   0021DA  6ADA               	clrf	fsr2h,c
  3909   0021DC  0E02               	movlw	2
  3910   0021DE  26D9               	addwf	fsr2l,f,c
  3911   0021E0  CFDE F003          	movff	postinc2,min@b
  3912   0021E4  CFDD F004          	movff	postdec2,min@b+1
  3913   0021E8  EC31  F012         	call	_min	;wreg free
  3914   0021EC  C001  F009         	movff	?_min,_minRGB$3105
  3915   0021F0  C002  F00A         	movff	?_min+1,_minRGB$3105+1
  3916                           
  3917                           ;color.c: 123: unsigned int minRGB(struct RGBC_val *p);color.c: 124: {;color.c: 125:    
      +                           return(min(min(p->R,p->G),p->B));
  3918   0021F4  C009  F001         	movff	_minRGB$3105,min@a
  3919   0021F8  C00A  F002         	movff	_minRGB$3105+1,min@a+1
  3920   0021FC  5007               	movf	minRGB@p^0,w,c
  3921   0021FE  6ED9               	movwf	fsr2l,c
  3922   002200  6ADA               	clrf	fsr2h,c
  3923   002202  0E04               	movlw	4
  3924   002204  26D9               	addwf	fsr2l,f,c
  3925   002206  CFDE F003          	movff	postinc2,min@b
  3926   00220A  CFDD F004          	movff	postdec2,min@b+1
  3927   00220E  EC31  F012         	call	_min	;wreg free
  3928   002212  C001  F007         	movff	?_min,?_minRGB
  3929   002216  C002  F008         	movff	?_min+1,?_minRGB+1
  3930   00221A  0012               	return		;funcret
  3931   00221C                     __end_of_minRGB:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _min *****************
  3935 ;; Defined at:
  3936 ;;		line 111 in file "color.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  a               2    0[COMRAM] unsigned int 
  3939 ;;  b               2    2[COMRAM] unsigned int 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  min_val         2    4[COMRAM] unsigned int 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2    0[COMRAM] unsigned int 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3954 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;Total ram usage:        6 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_minRGB
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text17
  3966   002462                     __ptext17:
  3967                           	callstack 0
  3968   002462                     _min:
  3969                           	callstack 27
  3970   002462                     
  3971                           ;color.c: 111: unsigned int min(unsigned int a, unsigned int b);color.c: 112: {;color.c:
      +                           113:     unsigned int min_val = b;
  3972   002462  C003  F005         	movff	min@b,min@min_val
  3973   002466  C004  F006         	movff	min@b+1,min@min_val+1
  3974   00246A                     
  3975                           ;color.c: 114:     if (a < b) {min_val = a;}
  3976   00246A  5003               	movf	min@b^0,w,c
  3977   00246C  5C01               	subwf	min@a^0,w,c
  3978   00246E  5004               	movf	(min@b+1)^0,w,c
  3979   002470  5802               	subwfb	(min@a+1)^0,w,c
  3980   002472  B0D8               	btfsc	status,0,c
  3981   002474  EF3E  F012         	goto	u1471
  3982   002478  EF40  F012         	goto	u1470
  3983   00247C                     u1471:
  3984   00247C  EF44  F012         	goto	l127
  3985   002480                     u1470:
  3986   002480  C001  F005         	movff	min@a,min@min_val
  3987   002484  C002  F006         	movff	min@a+1,min@min_val+1
  3988   002488                     l127:
  3989                           
  3990                           ;color.c: 115:     return min_val;
  3991   002488  C005  F001         	movff	min@min_val,?_min
  3992   00248C  C006  F002         	movff	min@min_val+1,?_min+1
  3993   002490  0012               	return		;funcret
  3994   002492                     __end_of_min:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _maxRGB *****************
  3998 ;; Defined at:
  3999 ;;		line 118 in file "color.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  p               1    6[COMRAM] PTR struct RGBC_val
  4002 ;;		 -> main@measured_colour(8), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2    6[COMRAM] unsigned int 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;Total ram usage:        4 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 2
  4021 ;; This function calls:
  4022 ;;		_max
  4023 ;; This function is called by:
  4024 ;;		_getHSVval
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text18
  4029   00221C                     __ptext18:
  4030                           	callstack 0
  4031   00221C                     _maxRGB:
  4032                           	callstack 27
  4033   00221C                     
  4034                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  4035   00221C  5007               	movf	maxRGB@p^0,w,c
  4036   00221E  6ED9               	movwf	fsr2l,c
  4037   002220  6ADA               	clrf	fsr2h,c
  4038   002222  CFDE F001          	movff	postinc2,max@a
  4039   002226  CFDD F002          	movff	postdec2,max@a+1
  4040   00222A  5007               	movf	maxRGB@p^0,w,c
  4041   00222C  6ED9               	movwf	fsr2l,c
  4042   00222E  6ADA               	clrf	fsr2h,c
  4043   002230  0E02               	movlw	2
  4044   002232  26D9               	addwf	fsr2l,f,c
  4045   002234  CFDE F003          	movff	postinc2,max@b
  4046   002238  CFDD F004          	movff	postdec2,max@b+1
  4047   00223C  EC49  F012         	call	_max	;wreg free
  4048   002240  C001  F009         	movff	?_max,_maxRGB$3104
  4049   002244  C002  F00A         	movff	?_max+1,_maxRGB$3104+1
  4050                           
  4051                           ;color.c: 118: unsigned int maxRGB(struct RGBC_val *p);color.c: 119: {;color.c: 120:    
      +                           return(max(max(p->R,p->G),p->B));
  4052   002248  C009  F001         	movff	_maxRGB$3104,max@a
  4053   00224C  C00A  F002         	movff	_maxRGB$3104+1,max@a+1
  4054   002250  5007               	movf	maxRGB@p^0,w,c
  4055   002252  6ED9               	movwf	fsr2l,c
  4056   002254  6ADA               	clrf	fsr2h,c
  4057   002256  0E04               	movlw	4
  4058   002258  26D9               	addwf	fsr2l,f,c
  4059   00225A  CFDE F003          	movff	postinc2,max@b
  4060   00225E  CFDD F004          	movff	postdec2,max@b+1
  4061   002262  EC49  F012         	call	_max	;wreg free
  4062   002266  C001  F007         	movff	?_max,?_maxRGB
  4063   00226A  C002  F008         	movff	?_max+1,?_maxRGB+1
  4064   00226E  0012               	return		;funcret
  4065   002270                     __end_of_maxRGB:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _max *****************
  4069 ;; Defined at:
  4070 ;;		line 104 in file "color.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  a               2    0[COMRAM] unsigned int 
  4073 ;;  b               2    2[COMRAM] unsigned int 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  max_val         2    4[COMRAM] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[COMRAM] unsigned int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_maxRGB
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text19
  4100   002492                     __ptext19:
  4101                           	callstack 0
  4102   002492                     _max:
  4103                           	callstack 27
  4104   002492                     
  4105                           ;color.c: 104: unsigned int max(unsigned int a, unsigned int b);color.c: 105: {;color.c:
      +                           106:     unsigned int max_val = b;
  4106   002492  C003  F005         	movff	max@b,max@max_val
  4107   002496  C004  F006         	movff	max@b+1,max@max_val+1
  4108   00249A                     
  4109                           ;color.c: 107:     if (a > b) {max_val = a;}
  4110   00249A  5001               	movf	max@a^0,w,c
  4111   00249C  5C03               	subwf	max@b^0,w,c
  4112   00249E  5002               	movf	(max@a+1)^0,w,c
  4113   0024A0  5804               	subwfb	(max@b+1)^0,w,c
  4114   0024A2  B0D8               	btfsc	status,0,c
  4115   0024A4  EF56  F012         	goto	u1461
  4116   0024A8  EF58  F012         	goto	u1460
  4117   0024AC                     u1461:
  4118   0024AC  EF5C  F012         	goto	l123
  4119   0024B0                     u1460:
  4120   0024B0  C001  F005         	movff	max@a,max@max_val
  4121   0024B4  C002  F006         	movff	max@a+1,max@max_val+1
  4122   0024B8                     l123:
  4123                           
  4124                           ;color.c: 108:     return max_val;
  4125   0024B8  C005  F001         	movff	max@max_val,?_max
  4126   0024BC  C006  F002         	movff	max@max_val+1,?_max+1
  4127   0024C0  0012               	return		;funcret
  4128   0024C2                     __end_of_max:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function ___lmul *****************
  4132 ;; Defined at:
  4133 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  multiplier      4    0[COMRAM] unsigned long 
  4136 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  product         4    8[COMRAM] unsigned long 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  4    0[COMRAM] unsigned long 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4148 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;Total ram usage:       12 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_getHSVval
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text20
  4163   002108                     __ptext20:
  4164                           	callstack 0
  4165   002108                     ___lmul:
  4166                           	callstack 28
  4167   002108  0E00               	movlw	0
  4168   00210A  6E09               	movwf	___lmul@product^0,c
  4169   00210C  0E00               	movlw	0
  4170   00210E  6E0A               	movwf	(___lmul@product+1)^0,c
  4171   002110  0E00               	movlw	0
  4172   002112  6E0B               	movwf	(___lmul@product+2)^0,c
  4173   002114  0E00               	movlw	0
  4174   002116  6E0C               	movwf	(___lmul@product+3)^0,c
  4175   002118                     l2809:
  4176   002118  A001               	btfss	___lmul@multiplier^0,0,c
  4177   00211A  EF91  F010         	goto	u1521
  4178   00211E  EF93  F010         	goto	u1520
  4179   002122                     u1521:
  4180   002122  EF9B  F010         	goto	l2813
  4181   002126                     u1520:
  4182   002126  5005               	movf	___lmul@multiplicand^0,w,c
  4183   002128  2609               	addwf	___lmul@product^0,f,c
  4184   00212A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4185   00212C  220A               	addwfc	(___lmul@product+1)^0,f,c
  4186   00212E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4187   002130  220B               	addwfc	(___lmul@product+2)^0,f,c
  4188   002132  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4189   002134  220C               	addwfc	(___lmul@product+3)^0,f,c
  4190   002136                     l2813:
  4191   002136  90D8               	bcf	status,0,c
  4192   002138  3605               	rlcf	___lmul@multiplicand^0,f,c
  4193   00213A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4194   00213C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4195   00213E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4196   002140  90D8               	bcf	status,0,c
  4197   002142  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4198   002144  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4199   002146  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4200   002148  3201               	rrcf	___lmul@multiplier^0,f,c
  4201   00214A  5001               	movf	___lmul@multiplier^0,w,c
  4202   00214C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4203   00214E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4204   002150  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4205   002152  A4D8               	btfss	status,2,c
  4206   002154  EFAE  F010         	goto	u1531
  4207   002158  EFB0  F010         	goto	u1530
  4208   00215C                     u1531:
  4209   00215C  EF8C  F010         	goto	l2809
  4210   002160                     u1530:
  4211   002160  C009  F001         	movff	___lmul@product,?___lmul
  4212   002164  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4213   002168  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4214   00216C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4215   002170  0012               	return		;funcret
  4216   002172                     __end_of___lmul:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function ___lldiv *****************
  4220 ;; Defined at:
  4221 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  dividend        4    0[COMRAM] unsigned long 
  4224 ;;  divisor         4    4[COMRAM] unsigned long 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  quotient        4    8[COMRAM] unsigned long 
  4227 ;;  counter         1   12[COMRAM] unsigned char 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  4    0[COMRAM] unsigned long 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;Total ram usage:       13 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_getHSVval
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text21
  4252   001FD4                     __ptext21:
  4253                           	callstack 0
  4254   001FD4                     ___lldiv:
  4255                           	callstack 28
  4256   001FD4  0E00               	movlw	0
  4257   001FD6  6E09               	movwf	___lldiv@quotient^0,c
  4258   001FD8  0E00               	movlw	0
  4259   001FDA  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4260   001FDC  0E00               	movlw	0
  4261   001FDE  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4262   001FE0  0E00               	movlw	0
  4263   001FE2  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4264   001FE4  5005               	movf	___lldiv@divisor^0,w,c
  4265   001FE6  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4266   001FE8  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4267   001FEA  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4268   001FEC  B4D8               	btfsc	status,2,c
  4269   001FEE  EFFB  F00F         	goto	u1541
  4270   001FF2  EFFD  F00F         	goto	u1540
  4271   001FF6                     u1541:
  4272   001FF6  EF33  F010         	goto	l782
  4273   001FFA                     u1540:
  4274   001FFA  0E01               	movlw	1
  4275   001FFC  6E0D               	movwf	___lldiv@counter^0,c
  4276   001FFE  EF07  F010         	goto	l2825
  4277   002002                     l2823:
  4278   002002  90D8               	bcf	status,0,c
  4279   002004  3605               	rlcf	___lldiv@divisor^0,f,c
  4280   002006  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4281   002008  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4282   00200A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4283   00200C  2A0D               	incf	___lldiv@counter^0,f,c
  4284   00200E                     l2825:
  4285   00200E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4286   002010  EF0C  F010         	goto	u1551
  4287   002014  EF0E  F010         	goto	u1550
  4288   002018                     u1551:
  4289   002018  EF01  F010         	goto	l2823
  4290   00201C                     u1550:
  4291   00201C                     l2827:
  4292   00201C  90D8               	bcf	status,0,c
  4293   00201E  3609               	rlcf	___lldiv@quotient^0,f,c
  4294   002020  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4295   002022  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4296   002024  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4297   002026  5005               	movf	___lldiv@divisor^0,w,c
  4298   002028  5C01               	subwf	___lldiv@dividend^0,w,c
  4299   00202A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4300   00202C  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4301   00202E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4302   002030  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4303   002032  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4304   002034  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4305   002036  A0D8               	btfss	status,0,c
  4306   002038  EF20  F010         	goto	u1561
  4307   00203C  EF22  F010         	goto	u1560
  4308   002040                     u1561:
  4309   002040  EF2B  F010         	goto	l2835
  4310   002044                     u1560:
  4311   002044  5005               	movf	___lldiv@divisor^0,w,c
  4312   002046  5E01               	subwf	___lldiv@dividend^0,f,c
  4313   002048  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4314   00204A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4315   00204C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4316   00204E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4317   002050  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4318   002052  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4319   002054  8009               	bsf	___lldiv@quotient^0,0,c
  4320   002056                     l2835:
  4321   002056  90D8               	bcf	status,0,c
  4322   002058  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4323   00205A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4324   00205C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4325   00205E  3205               	rrcf	___lldiv@divisor^0,f,c
  4326   002060  2E0D               	decfsz	___lldiv@counter^0,f,c
  4327   002062  EF0E  F010         	goto	l2827
  4328   002066                     l782:
  4329   002066  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4330   00206A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4331   00206E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4332   002072  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4333   002076  0012               	return		;funcret
  4334   002078                     __end_of___lldiv:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _color_click_init *****************
  4338 ;; Defined at:
  4339 ;;		line 4 in file "color.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;Total ram usage:        1 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 4
  4360 ;; This function calls:
  4361 ;;		_I2C_2_Master_Init
  4362 ;;		_color_writetoaddr
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text22
  4369   00242E                     __ptext22:
  4370                           	callstack 0
  4371   00242E                     _color_click_init:
  4372                           	callstack 26
  4373   00242E                     
  4374                           ;color.c: 7:     I2C_2_Master_Init();
  4375   00242E  EC78  F012         	call	_I2C_2_Master_Init	;wreg free
  4376   002432                     
  4377                           ;color.c: 10:   color_writetoaddr(0x00, 0x01);
  4378   002432  0E01               	movlw	1
  4379   002434  6E03               	movwf	color_writetoaddr@value^0,c
  4380   002436  0E00               	movlw	0
  4381   002438  ECB3  F012         	call	_color_writetoaddr
  4382   00243C                     
  4383                           ;color.c: 11:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4384   00243C  0E3F               	movlw	63
  4385   00243E  6E05               	movwf	??_color_click_init^0,c
  4386   002440  0E55               	movlw	85
  4387   002442                     u2397:
  4388   002442  2EE8               	decfsz	wreg,f,c
  4389   002444  D7FE               	bra	u2397
  4390   002446  2E05               	decfsz	??_color_click_init^0,f,c
  4391   002448  D7FC               	bra	u2397
  4392   00244A  0000               	nop	
  4393   00244C                     
  4394                           ;color.c: 14:  color_writetoaddr(0x00, 0x03);
  4395   00244C  0E03               	movlw	3
  4396   00244E  6E03               	movwf	color_writetoaddr@value^0,c
  4397   002450  0E00               	movlw	0
  4398   002452  ECB3  F012         	call	_color_writetoaddr
  4399   002456                     
  4400                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  4401   002456  0ED5               	movlw	213
  4402   002458  6E03               	movwf	color_writetoaddr@value^0,c
  4403   00245A  0E01               	movlw	1
  4404   00245C  ECB3  F012         	call	_color_writetoaddr
  4405   002460  0012               	return		;funcret
  4406   002462                     __end_of_color_click_init:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _color_writetoaddr *****************
  4410 ;; Defined at:
  4411 ;;		line 20 in file "color.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  address         1    wreg     unsigned char 
  4414 ;;  value           1    2[COMRAM] unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  address         1    3[COMRAM] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4426 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 3
  4433 ;; This function calls:
  4434 ;;		_I2C_2_Master_Start
  4435 ;;		_I2C_2_Master_Stop
  4436 ;;		_I2C_2_Master_Write
  4437 ;; This function is called by:
  4438 ;;		_color_click_init
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text23
  4443   002566                     __ptext23:
  4444                           	callstack 0
  4445   002566                     _color_writetoaddr:
  4446                           	callstack 26
  4447                           
  4448                           ;incstack = 0
  4449                           ;color_writetoaddr@address stored from wreg
  4450   002566  6E04               	movwf	color_writetoaddr@address^0,c
  4451   002568                     
  4452                           ;color.c: 21:     I2C_2_Master_Start();
  4453   002568  ECFB  F012         	call	_I2C_2_Master_Start	;wreg free
  4454                           
  4455                           ;color.c: 22:     I2C_2_Master_Write(0x52 | 0x00);
  4456   00256C  0E52               	movlw	82
  4457   00256E  ECDF  F012         	call	_I2C_2_Master_Write
  4458                           
  4459                           ;color.c: 23:     I2C_2_Master_Write(0x80 | address);
  4460   002572  5004               	movf	color_writetoaddr@address^0,w,c
  4461   002574  0980               	iorlw	128
  4462   002576  ECDF  F012         	call	_I2C_2_Master_Write
  4463                           
  4464                           ;color.c: 24:     I2C_2_Master_Write(value);
  4465   00257A  5003               	movf	color_writetoaddr@value^0,w,c
  4466   00257C  ECDF  F012         	call	_I2C_2_Master_Write
  4467                           
  4468                           ;color.c: 25:     I2C_2_Master_Stop();
  4469   002580  ECF6  F012         	call	_I2C_2_Master_Stop	;wreg free
  4470   002584  0012               	return		;funcret
  4471   002586                     __end_of_color_writetoaddr:
  4472                           	callstack 0
  4473                           
  4474 ;; *************** function _I2C_2_Master_Write *****************
  4475 ;; Defined at:
  4476 ;;		line 45 in file "i2c.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  data_byte       1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  data_byte       1    1[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;Total ram usage:        1 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 2
  4497 ;; This function calls:
  4498 ;;		_I2C_2_Master_Idle
  4499 ;; This function is called by:
  4500 ;;		_color_writetoaddr
  4501 ;;		_color_read_Red
  4502 ;;		_color_read_Green
  4503 ;;		_color_read_Blue
  4504 ;;		_color_read_Clear
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text24
  4509   0025BE                     __ptext24:
  4510                           	callstack 0
  4511   0025BE                     _I2C_2_Master_Write:
  4512                           	callstack 26
  4513                           
  4514                           ;incstack = 0
  4515                           ;I2C_2_Master_Write@data_byte stored from wreg
  4516   0025BE  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4517   0025C0                     
  4518                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4519   0025C0  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  4520   0025C4                     
  4521                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4522   0025C4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4523   0025C8  0012               	return		;funcret
  4524   0025CA                     __end_of_I2C_2_Master_Write:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _I2C_2_Master_Stop *****************
  4528 ;; Defined at:
  4529 ;;		line 39 in file "i2c.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 2
  4550 ;; This function calls:
  4551 ;;		_I2C_2_Master_Idle
  4552 ;; This function is called by:
  4553 ;;		_color_writetoaddr
  4554 ;;		_color_read_Red
  4555 ;;		_color_read_Green
  4556 ;;		_color_read_Blue
  4557 ;;		_color_read_Clear
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text25
  4562   0025EC                     __ptext25:
  4563                           	callstack 0
  4564   0025EC                     _I2C_2_Master_Stop:
  4565                           	callstack 26
  4566   0025EC                     
  4567                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4568   0025EC  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  4569   0025F0                     
  4570                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4571   0025F0  010E               	movlb	14	; () banked
  4572   0025F2  85DA               	bsf	218,2,b	;volatile
  4573   0025F4                     
  4574                           ; BSR set to: 14
  4575   0025F4  0012               	return		;funcret
  4576   0025F6                     __end_of_I2C_2_Master_Stop:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _I2C_2_Master_Start *****************
  4580 ;; Defined at:
  4581 ;;		line 27 in file "i2c.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 2
  4602 ;; This function calls:
  4603 ;;		_I2C_2_Master_Idle
  4604 ;; This function is called by:
  4605 ;;		_color_writetoaddr
  4606 ;;		_color_read_Red
  4607 ;;		_color_read_Green
  4608 ;;		_color_read_Blue
  4609 ;;		_color_read_Clear
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text26
  4614   0025F6                     __ptext26:
  4615                           	callstack 0
  4616   0025F6                     _I2C_2_Master_Start:
  4617                           	callstack 26
  4618   0025F6                     
  4619                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4620   0025F6  EC8D  F012         	call	_I2C_2_Master_Idle	;wreg free
  4621   0025FA                     
  4622                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4623   0025FA  010E               	movlb	14	; () banked
  4624   0025FC  81DA               	bsf	218,0,b	;volatile
  4625   0025FE                     
  4626                           ; BSR set to: 14
  4627   0025FE  0012               	return		;funcret
  4628   002600                     __end_of_I2C_2_Master_Start:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _I2C_2_Master_Idle *****************
  4632 ;; Defined at:
  4633 ;;		line 22 in file "i2c.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_I2C_2_Master_Start
  4658 ;;		_I2C_2_Master_RepStart
  4659 ;;		_I2C_2_Master_Stop
  4660 ;;		_I2C_2_Master_Write
  4661 ;;		_I2C_2_Master_Read
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text27
  4666   00251A                     __ptext27:
  4667                           	callstack 0
  4668   00251A                     _I2C_2_Master_Idle:
  4669                           	callstack 26
  4670   00251A                     l328:
  4671   00251A  010E               	movlb	14	; () banked
  4672   00251C  B5D8               	btfsc	216,2,b	;volatile
  4673   00251E  EF93  F012         	goto	u1421
  4674   002522  EF95  F012         	goto	u1420
  4675   002526                     u1421:
  4676   002526  EF8D  F012         	goto	l328
  4677   00252A                     u1420:
  4678   00252A                     
  4679                           ; BSR set to: 14
  4680   00252A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4681   00252E  0E1F               	movlw	31
  4682   002530  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4683   002532  A4D8               	btfss	status,2,c
  4684   002534  EF9E  F012         	goto	u1431
  4685   002538  EFA0  F012         	goto	u1430
  4686   00253C                     u1431:
  4687   00253C  EF8D  F012         	goto	l328
  4688   002540                     u1430:
  4689   002540                     
  4690                           ; BSR set to: 14
  4691   002540  0012               	return		;funcret
  4692   002542                     __end_of_I2C_2_Master_Idle:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _I2C_2_Master_Init *****************
  4696 ;; Defined at:
  4697 ;;		line 4 in file "i2c.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_color_click_init
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text28
  4726   0024F0                     __ptext28:
  4727                           	callstack 0
  4728   0024F0                     _I2C_2_Master_Init:
  4729                           	callstack 28
  4730   0024F0                     
  4731                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4732   0024F0  010E               	movlb	14	; () banked
  4733   0024F2  51D9               	movf	217,w,b	;volatile
  4734   0024F4  0BF0               	andlw	-16
  4735   0024F6  0908               	iorlw	8
  4736   0024F8  6FD9               	movwf	217,b	;volatile
  4737   0024FA                     
  4738                           ; BSR set to: 14
  4739                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4740   0024FA  8BD9               	bsf	217,5,b	;volatile
  4741                           
  4742                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4743   0024FC  0E9F               	movlw	159
  4744   0024FE  6FD6               	movwf	214,b	;volatile
  4745   002500                     
  4746                           ; BSR set to: 14
  4747                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4748   002500  8A84               	bsf	132,5,c	;volatile
  4749   002502                     
  4750                           ; BSR set to: 14
  4751                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4752   002502  8C84               	bsf	132,6,c	;volatile
  4753   002504                     
  4754                           ; BSR set to: 14
  4755                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4756   002504  9BA7               	bcf	167,5,b	;volatile
  4757   002506                     
  4758                           ; BSR set to: 14
  4759                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4760   002506  9DA7               	bcf	167,6,b	;volatile
  4761                           
  4762                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4763   002508  0E1D               	movlw	29
  4764   00250A  6F1D               	movwf	29,b	;volatile
  4765                           
  4766                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4767   00250C  0E1E               	movlw	30
  4768   00250E  6F1C               	movwf	28,b	;volatile
  4769                           
  4770                           ;i2c.c: 18:   RD5PPS=0x1C;
  4771   002510  0E1C               	movlw	28
  4772   002512  6F6F               	movwf	111,b	;volatile
  4773                           
  4774                           ;i2c.c: 19:   RD6PPS=0x1B;
  4775   002514  0E1B               	movlw	27
  4776   002516  6F70               	movwf	112,b	;volatile
  4777   002518                     
  4778                           ; BSR set to: 14
  4779   002518  0012               	return		;funcret
  4780   00251A                     __end_of_I2C_2_Master_Init:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _buggy_lights_init *****************
  4784 ;; Defined at:
  4785 ;;		line 4 in file "buggy_lights.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		None
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text29
  4814   0024C2                     __ptext29:
  4815                           	callstack 0
  4816   0024C2                     _buggy_lights_init:
  4817                           	callstack 29
  4818   0024C2                     
  4819                           ;buggy_lights.c: 8:         TRISDbits.TRISD4 = 0;
  4820   0024C2  9884               	bcf	132,4,c	;volatile
  4821                           
  4822                           ;buggy_lights.c: 9:         TRISHbits.TRISH1 = 0;
  4823   0024C4  9288               	bcf	136,1,c	;volatile
  4824                           
  4825                           ;buggy_lights.c: 10:         TRISDbits.TRISD3 = 0;
  4826   0024C6  9684               	bcf	132,3,c	;volatile
  4827                           
  4828                           ;buggy_lights.c: 11:         TRISFbits.TRISF0 = 0;
  4829   0024C8  9086               	bcf	134,0,c	;volatile
  4830                           
  4831                           ;buggy_lights.c: 12:         TRISHbits.TRISH0 = 0;
  4832   0024CA  9088               	bcf	136,0,c	;volatile
  4833                           
  4834                           ;buggy_lights.c: 14:         LATDbits.LATD4 = 0;
  4835   0024CC  987C               	bcf	124,4,c	;volatile
  4836                           
  4837                           ;buggy_lights.c: 15:         LATHbits.LATH1 = 0;
  4838   0024CE  9280               	bcf	128,1,c	;volatile
  4839                           
  4840                           ;buggy_lights.c: 16:         LATDbits.LATD3 = 0;
  4841   0024D0  967C               	bcf	124,3,c	;volatile
  4842                           
  4843                           ;buggy_lights.c: 17:         LATFbits.LATF0 = 0;
  4844   0024D2  907E               	bcf	126,0,c	;volatile
  4845                           
  4846                           ;buggy_lights.c: 18:         LATHbits.LATH0 = 0;
  4847   0024D4  9080               	bcf	128,0,c	;volatile
  4848                           
  4849                           ;buggy_lights.c: 24:             TRISGbits.TRISG1 = 0;
  4850   0024D6  9287               	bcf	135,1,c	;volatile
  4851                           
  4852                           ;buggy_lights.c: 25:             TRISAbits.TRISA4 = 0;
  4853   0024D8  9881               	bcf	129,4,c	;volatile
  4854                           
  4855                           ;buggy_lights.c: 26:             TRISFbits.TRISF7 = 0;
  4856   0024DA  9E86               	bcf	134,7,c	;volatile
  4857                           
  4858                           ;buggy_lights.c: 28:             LATGbits.LATG1 = 0;
  4859   0024DC  927F               	bcf	127,1,c	;volatile
  4860                           
  4861                           ;buggy_lights.c: 29:             LATAbits.LATA4 = 0;
  4862   0024DE  9879               	bcf	121,4,c	;volatile
  4863                           
  4864                           ;buggy_lights.c: 30:             LATFbits.LATF7 = 0;
  4865   0024E0  9E7E               	bcf	126,7,c	;volatile
  4866                           
  4867                           ;buggy_lights.c: 34:             TRISGbits.TRISG0 = 0;
  4868   0024E2  9087               	bcf	135,0,c	;volatile
  4869                           
  4870                           ;buggy_lights.c: 35:             TRISEbits.TRISE7 = 0;
  4871   0024E4  9E85               	bcf	133,7,c	;volatile
  4872                           
  4873                           ;buggy_lights.c: 36:             TRISAbits.TRISA3 = 0;
  4874   0024E6  9681               	bcf	129,3,c	;volatile
  4875                           
  4876                           ;buggy_lights.c: 38:             LATGbits.LATG0 = 0;
  4877   0024E8  907F               	bcf	127,0,c	;volatile
  4878                           
  4879                           ;buggy_lights.c: 39:             LATEbits.LATE7 = 0;
  4880   0024EA  9E7D               	bcf	125,7,c	;volatile
  4881                           
  4882                           ;buggy_lights.c: 40:             LATAbits.LATA3 = 0;
  4883   0024EC  9679               	bcf	121,3,c	;volatile
  4884   0024EE  0012               	return		;funcret
  4885   0024F0                     __end_of_buggy_lights_init:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _Timer0_init *****************
  4889 ;; Defined at:
  4890 ;;		line 7 in file "timers.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used: 1
  4910 ;; Hardware stack levels required when called: 3
  4911 ;; This function calls:
  4912 ;;		_reset_timer
  4913 ;; This function is called by:
  4914 ;;		_main
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text30
  4919   002542                     __ptext30:
  4920                           	callstack 0
  4921   002542                     _Timer0_init:
  4922                           	callstack 27
  4923   002542                     
  4924                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4925   002542  50D6               	movf	214,w,c	;volatile
  4926   002544  0B1F               	andlw	-225
  4927   002546  0940               	iorlw	64
  4928   002548  6ED6               	movwf	214,c	;volatile
  4929   00254A                     
  4930                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4931   00254A  88D6               	bsf	214,4,c	;volatile
  4932   00254C                     
  4933                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  4934   00254C  88D5               	bsf	213,4,c	;volatile
  4935                           
  4936                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  4937   00254E  50D6               	movf	214,w,c	;volatile
  4938   002550  0BF0               	andlw	-16
  4939   002552  090E               	iorlw	14
  4940   002554  6ED6               	movwf	214,c	;volatile
  4941   002556                     
  4942                           ;timers.c: 18:     reset_timer();
  4943   002556  ECE5  F012         	call	_reset_timer	;wreg free
  4944   00255A                     
  4945                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  4946   00255A  8ED5               	bsf	213,7,c	;volatile
  4947   00255C                     
  4948                           ;timers.c: 21:     PIE0bits.TMR0IE = 1;
  4949   00255C  010E               	movlb	14	; () banked
  4950   00255E  8B29               	bsf	41,5,b	;volatile
  4951   002560                     
  4952                           ; BSR set to: 14
  4953                           ;timers.c: 22:     INTCONbits.PEIE = 1;
  4954   002560  8CF2               	bsf	242,6,c	;volatile
  4955   002562                     
  4956                           ; BSR set to: 14
  4957                           ;timers.c: 23:     INTCONbits.GIE = 1;
  4958   002562  8EF2               	bsf	242,7,c	;volatile
  4959   002564                     
  4960                           ; BSR set to: 14
  4961   002564  0012               	return		;funcret
  4962   002566                     __end_of_Timer0_init:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _reset_timer *****************
  4966 ;; Defined at:
  4967 ;;		line 44 in file "timers.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 2
  4988 ;; This function calls:
  4989 ;;		_write_timer
  4990 ;; This function is called by:
  4991 ;;		_Timer0_init
  4992 ;;		_forward_navigation
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text31
  4997   0025CA                     __ptext31:
  4998                           	callstack 0
  4999   0025CA                     _reset_timer:
  5000                           	callstack 27
  5001   0025CA                     
  5002                           ;timers.c: 46:     write_timer(0, 0);
  5003   0025CA  0E00               	movlw	0
  5004   0025CC  6E01               	movwf	write_timer@tL^0,c
  5005   0025CE  0E00               	movlw	0
  5006   0025D0  ECEB  F012         	call	_write_timer
  5007   0025D4  0012               	return		;funcret
  5008   0025D6                     __end_of_reset_timer:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _write_timer *****************
  5012 ;; Defined at:
  5013 ;;		line 35 in file "timers.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  tH              1    wreg     unsigned char 
  5016 ;;  tL              1    0[COMRAM] unsigned char 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  tH              1    1[COMRAM] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;Total ram usage:        2 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_reset_timer
  5039 ;;		_return_to_sender
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text32
  5044   0025D6                     __ptext32:
  5045                           	callstack 0
  5046   0025D6                     _write_timer:
  5047                           	callstack 27
  5048                           
  5049                           ;incstack = 0
  5050                           ;write_timer@tH stored from wreg
  5051   0025D6  6E02               	movwf	write_timer@tH^0,c
  5052   0025D8                     
  5053                           ;timers.c: 35: void write_timer(unsigned char tH, unsigned char tL);timers.c: 36: {;time
      +                          rs.c: 40:     TMR0H = tH;
  5054   0025D8  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  5055   0025DC                     
  5056                           ;timers.c: 41:     TMR0L = tL;
  5057   0025DC  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  5058   0025E0  0012               	return		;funcret
  5059   0025E2                     __end_of_write_timer:
  5060                           	callstack 0
  5061                           
  5062 ;; *************** function _RGBC2colourcard *****************
  5063 ;; Defined at:
  5064 ;;		line 239 in file "color.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  5067 ;;		 -> main@measured_colour(8), 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  motorR          9   12[COMRAM] struct DC_motor
  5070 ;;  motorL          9    3[COMRAM] struct DC_motor
  5071 ;;  PWMcycle        2    0        unsigned int 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:       21 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text33
  5096   001ACE                     __ptext33:
  5097                           	callstack 0
  5098   001ACE                     _RGBC2colourcard:
  5099                           	callstack 29
  5100   001ACE                     
  5101                           ;color.c: 242:     struct DC_motor motorL, motorR;;color.c: 243:         motorL.power = 
      +                          0;
  5102   001ACE  0E00               	movlw	0
  5103   001AD0  6E04               	movwf	RGBC2colourcard@motorL^0,c
  5104                           
  5105                           ;color.c: 244:         motorL.direction = 1;
  5106   001AD2  0E01               	movlw	1
  5107   001AD4  6E05               	movwf	(RGBC2colourcard@motorL+1)^0,c
  5108                           
  5109                           ;color.c: 245:         motorL.brakemode = 1;
  5110   001AD6  0E01               	movlw	1
  5111   001AD8  6E06               	movwf	(RGBC2colourcard@motorL+2)^0,c
  5112   001ADA                     
  5113                           ;color.c: 246:         motorL.PWMperiod = PWMcycle;
  5114   001ADA  0E00               	movlw	0
  5115   001ADC  6E08               	movwf	(RGBC2colourcard@motorL+4)^0,c
  5116   001ADE  0E63               	movlw	99
  5117   001AE0  6E07               	movwf	(RGBC2colourcard@motorL+3)^0,c
  5118   001AE2                     
  5119                           ;color.c: 247:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  5120   001AE2  0EAA               	movlw	170
  5121   001AE4  6E09               	movwf	(RGBC2colourcard@motorL+5)^0,c
  5122   001AE6  0E0F               	movlw	15
  5123   001AE8  6E0A               	movwf	(RGBC2colourcard@motorL+6)^0,c
  5124   001AEA                     
  5125                           ;color.c: 248:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  5126   001AEA  0EA6               	movlw	166
  5127   001AEC  6E0B               	movwf	(RGBC2colourcard@motorL+7)^0,c
  5128   001AEE  0E0F               	movlw	15
  5129   001AF0  6E0C               	movwf	(RGBC2colourcard@motorL+8)^0,c
  5130                           
  5131                           ;color.c: 249:         motorR.power = 0;
  5132   001AF2  0E00               	movlw	0
  5133   001AF4  6E0D               	movwf	RGBC2colourcard@motorR^0,c
  5134                           
  5135                           ;color.c: 250:         motorR.direction = 1;
  5136   001AF6  0E01               	movlw	1
  5137   001AF8  6E0E               	movwf	(RGBC2colourcard@motorR+1)^0,c
  5138                           
  5139                           ;color.c: 251:         motorR.brakemode = 1;
  5140   001AFA  0E01               	movlw	1
  5141   001AFC  6E0F               	movwf	(RGBC2colourcard@motorR+2)^0,c
  5142   001AFE                     
  5143                           ;color.c: 252:         motorR.PWMperiod = PWMcycle;
  5144   001AFE  0E00               	movlw	0
  5145   001B00  6E11               	movwf	(RGBC2colourcard@motorR+4)^0,c
  5146   001B02  0E63               	movlw	99
  5147   001B04  6E10               	movwf	(RGBC2colourcard@motorR+3)^0,c
  5148   001B06                     
  5149                           ;color.c: 253:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  5150   001B06  0E25               	movlw	37
  5151   001B08  6E12               	movwf	(RGBC2colourcard@motorR+5)^0,c
  5152   001B0A  0E0F               	movlw	15
  5153   001B0C  6E13               	movwf	(RGBC2colourcard@motorR+6)^0,c
  5154   001B0E                     
  5155                           ;color.c: 254:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  5156   001B0E  0E21               	movlw	33
  5157   001B10  6E14               	movwf	(RGBC2colourcard@motorR+7)^0,c
  5158   001B12  0E0F               	movlw	15
  5159   001B14  6E15               	movwf	(RGBC2colourcard@motorR+8)^0,c
  5160   001B16                     
  5161                           ;color.c: 257:     if (((p->R >= 2850)&&(p->R <= 3855)) && ((p->G >= 602)&&(p->G <= 814)
      +                          ) && ((p->B >= 1144)&&(p->B <= 1548))) {
  5162   001B16  5001               	movf	RGBC2colourcard@p^0,w,c
  5163   001B18  6ED9               	movwf	fsr2l,c
  5164   001B1A  6ADA               	clrf	fsr2h,c
  5165   001B1C  0E22               	movlw	34
  5166   001B1E  5CDE               	subwf	postinc2,w,c
  5167   001B20  0E0B               	movlw	11
  5168   001B22  58DE               	subwfb	postinc2,w,c
  5169   001B24  A0D8               	btfss	status,0,c
  5170   001B26  EF97  F00D         	goto	u2181
  5171   001B2A  EF99  F00D         	goto	u2180
  5172   001B2E                     u2181:
  5173   001B2E  EF15  F00E         	goto	l157
  5174   001B32                     u2180:
  5175   001B32  5001               	movf	RGBC2colourcard@p^0,w,c
  5176   001B34  6ED9               	movwf	fsr2l,c
  5177   001B36  6ADA               	clrf	fsr2h,c
  5178   001B38  0E10               	movlw	16
  5179   001B3A  5CDE               	subwf	postinc2,w,c
  5180   001B3C  0E0F               	movlw	15
  5181   001B3E  58DE               	subwfb	postinc2,w,c
  5182   001B40  B0D8               	btfsc	status,0,c
  5183   001B42  EFA5  F00D         	goto	u2191
  5184   001B46  EFA7  F00D         	goto	u2190
  5185   001B4A                     u2191:
  5186   001B4A  EF15  F00E         	goto	l157
  5187   001B4E                     u2190:
  5188   001B4E  5001               	movf	RGBC2colourcard@p^0,w,c
  5189   001B50  6ED9               	movwf	fsr2l,c
  5190   001B52  6ADA               	clrf	fsr2h,c
  5191   001B54  0E02               	movlw	2
  5192   001B56  26D9               	addwf	fsr2l,f,c
  5193   001B58  0E5A               	movlw	90
  5194   001B5A  5CDE               	subwf	postinc2,w,c
  5195   001B5C  0E02               	movlw	2
  5196   001B5E  58DE               	subwfb	postinc2,w,c
  5197   001B60  A0D8               	btfss	status,0,c
  5198   001B62  EFB5  F00D         	goto	u2201
  5199   001B66  EFB7  F00D         	goto	u2200
  5200   001B6A                     u2201:
  5201   001B6A  EF15  F00E         	goto	l157
  5202   001B6E                     u2200:
  5203   001B6E  5001               	movf	RGBC2colourcard@p^0,w,c
  5204   001B70  6ED9               	movwf	fsr2l,c
  5205   001B72  6ADA               	clrf	fsr2h,c
  5206   001B74  0E02               	movlw	2
  5207   001B76  26D9               	addwf	fsr2l,f,c
  5208   001B78  0E2F               	movlw	47
  5209   001B7A  5CDE               	subwf	postinc2,w,c
  5210   001B7C  0E03               	movlw	3
  5211   001B7E  58DE               	subwfb	postinc2,w,c
  5212   001B80  B0D8               	btfsc	status,0,c
  5213   001B82  EFC5  F00D         	goto	u2211
  5214   001B86  EFC7  F00D         	goto	u2210
  5215   001B8A                     u2211:
  5216   001B8A  EF15  F00E         	goto	l157
  5217   001B8E                     u2210:
  5218   001B8E  5001               	movf	RGBC2colourcard@p^0,w,c
  5219   001B90  6ED9               	movwf	fsr2l,c
  5220   001B92  6ADA               	clrf	fsr2h,c
  5221   001B94  0E04               	movlw	4
  5222   001B96  26D9               	addwf	fsr2l,f,c
  5223   001B98  0E78               	movlw	120
  5224   001B9A  5CDE               	subwf	postinc2,w,c
  5225   001B9C  0E04               	movlw	4
  5226   001B9E  58DE               	subwfb	postinc2,w,c
  5227   001BA0  A0D8               	btfss	status,0,c
  5228   001BA2  EFD5  F00D         	goto	u2221
  5229   001BA6  EFD7  F00D         	goto	u2220
  5230   001BAA                     u2221:
  5231   001BAA  EF15  F00E         	goto	l157
  5232   001BAE                     u2220:
  5233   001BAE  5001               	movf	RGBC2colourcard@p^0,w,c
  5234   001BB0  6ED9               	movwf	fsr2l,c
  5235   001BB2  6ADA               	clrf	fsr2h,c
  5236   001BB4  0E04               	movlw	4
  5237   001BB6  26D9               	addwf	fsr2l,f,c
  5238   001BB8  0E0D               	movlw	13
  5239   001BBA  5CDE               	subwf	postinc2,w,c
  5240   001BBC  0E06               	movlw	6
  5241   001BBE  58DE               	subwfb	postinc2,w,c
  5242   001BC0  B0D8               	btfsc	status,0,c
  5243   001BC2  EFE5  F00D         	goto	u2231
  5244   001BC6  EFE7  F00D         	goto	u2230
  5245   001BCA                     u2231:
  5246   001BCA  EF15  F00E         	goto	l157
  5247   001BCE                     u2230:
  5248   001BCE                     
  5249                           ;color.c: 258:         LATDbits.LATD7 = !LATDbits.LATD7;
  5250   001BCE  AE7C               	btfss	124,7,c	;volatile
  5251   001BD0  EFEC  F00D         	goto	u2241
  5252   001BD4  EFF0  F00D         	goto	u2240
  5253   001BD8                     u2241:
  5254   001BD8  6A02               	clrf	??_RGBC2colourcard^0,c
  5255   001BDA  2A02               	incf	??_RGBC2colourcard^0,f,c
  5256   001BDC  EFF1  F00D         	goto	u2258
  5257   001BE0                     u2240:
  5258   001BE0  6A02               	clrf	??_RGBC2colourcard^0,c
  5259   001BE2                     u2258:
  5260   001BE2  3202               	rrcf	??_RGBC2colourcard^0,f,c
  5261   001BE4  3202               	rrcf	??_RGBC2colourcard^0,f,c
  5262   001BE6  507C               	movf	124,w,c	;volatile
  5263   001BE8  1802               	xorwf	??_RGBC2colourcard^0,w,c
  5264   001BEA  0B7F               	andlw	-129
  5265   001BEC  1802               	xorwf	??_RGBC2colourcard^0,w,c
  5266   001BEE  6E7C               	movwf	124,c	;volatile
  5267   001BF0                     
  5268                           ;color.c: 259:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5269   001BF0  0E29               	movlw	41
  5270   001BF2  6E03               	movwf	(??_RGBC2colourcard+1)^0,c
  5271   001BF4  0E96               	movlw	150
  5272   001BF6  6E02               	movwf	??_RGBC2colourcard^0,c
  5273   001BF8  0E7F               	movlw	127
  5274   001BFA                     u2407:
  5275   001BFA  2EE8               	decfsz	wreg,f,c
  5276   001BFC  D7FE               	bra	u2407
  5277   001BFE  2E02               	decfsz	??_RGBC2colourcard^0,f,c
  5278   001C00  D7FC               	bra	u2407
  5279   001C02  2E03               	decfsz	(??_RGBC2colourcard+1)^0,f,c
  5280   001C04  D7FA               	bra	u2407
  5281   001C06  0000               	nop	
  5282   001C08                     
  5283                           ;color.c: 260:         LATDbits.LATD7 = !LATDbits.LATD7;
  5284   001C08  AE7C               	btfss	124,7,c	;volatile
  5285   001C0A  EF09  F00E         	goto	u2261
  5286   001C0E  EF0D  F00E         	goto	u2260
  5287   001C12                     u2261:
  5288   001C12  6A02               	clrf	??_RGBC2colourcard^0,c
  5289   001C14  2A02               	incf	??_RGBC2colourcard^0,f,c
  5290   001C16  EF0E  F00E         	goto	u2278
  5291   001C1A                     u2260:
  5292   001C1A  6A02               	clrf	??_RGBC2colourcard^0,c
  5293   001C1C                     u2278:
  5294   001C1C  3202               	rrcf	??_RGBC2colourcard^0,f,c
  5295   001C1E  3202               	rrcf	??_RGBC2colourcard^0,f,c
  5296   001C20  507C               	movf	124,w,c	;volatile
  5297   001C22  1802               	xorwf	??_RGBC2colourcard^0,w,c
  5298   001C24  0B7F               	andlw	-129
  5299   001C26  1802               	xorwf	??_RGBC2colourcard^0,w,c
  5300   001C28  6E7C               	movwf	124,c	;volatile
  5301   001C2A                     l157:
  5302   001C2A  0012               	return		;funcret
  5303   001C2C                     __end_of_RGBC2colourcard:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _ISR *****************
  5307 ;; Defined at:
  5308 ;;		line 116 in file "timers.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		Interrupt level 2
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	intcode
  5336   000008                     __pintcode:
  5337                           	callstack 0
  5338   000008                     _ISR:
  5339                           	callstack 26
  5340                           
  5341                           ;incstack = 0
  5342   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5343   00000A                     
  5344                           ;timers.c: 119:     if (PIR0bits.TMR0IF) {
  5345   00000A  010E               	movlb	14	; () banked
  5346   00000C  AB33               	btfss	51,5,b	;volatile
  5347   00000E  EF0B  F000         	goto	i2u124_41
  5348   000012  EF0D  F000         	goto	i2u124_40
  5349   000016                     i2u124_41:
  5350   000016  EF18  F000         	goto	i2l725
  5351   00001A                     i2u124_40:
  5352   00001A                     
  5353                           ; BSR set to: 14
  5354                           ;timers.c: 120:         if (returning) {
  5355   00001A  505D               	movf	_returning^0,w,c
  5356   00001C  B4D8               	btfsc	status,2,c
  5357   00001E  EF13  F000         	goto	i2u125_41
  5358   000022  EF15  F000         	goto	i2u125_40
  5359   000026                     i2u125_41:
  5360   000026  EF17  F000         	goto	i2l724
  5361   00002A                     i2u125_40:
  5362   00002A                     
  5363                           ; BSR set to: 14
  5364                           ;timers.c: 121:             return_flag = 1;
  5365   00002A  0E01               	movlw	1
  5366   00002C  6E5C               	movwf	_return_flag^0,c
  5367   00002E                     i2l724:
  5368                           
  5369                           ; BSR set to: 14
  5370                           ;timers.c: 126:         PIR0bits.TMR0IF = 0;
  5371   00002E  9B33               	bcf	51,5,b	;volatile
  5372   000030                     i2l725:
  5373                           
  5374                           ; BSR set to: 14
  5375   000030  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5376   000032  0011               	retfie		f
  5377   000034                     __end_of_ISR:
  5378                           	callstack 0
  5379                           
  5380                           	psect	rparam
  5381   000000                     
  5382                           	psect	temp
  5383   00005E                     btemp:
  5384                           	callstack 0
  5385   00005E                     	ds	1
  5386   000000                     int$flags	set	btemp
  5387   000000                     wtemp8	set	btemp+1
  5388   000000                     ttemp5	set	btemp+1
  5389   000000                     ttemp6	set	btemp+4
  5390   000000                     ttemp7	set	btemp+8
  5391                           
  5392                           	psect	idloc
  5393                           
  5394                           ;Config register IDLOC0 @ 0x200000
  5395                           ;	unspecified, using default values
  5396   200000                     	org	2097152
  5397   200000  FFFF               	dw	65535
  5398                           
  5399                           ;Config register IDLOC1 @ 0x200002
  5400                           ;	unspecified, using default values
  5401   200002                     	org	2097154
  5402   200002  FFFF               	dw	65535
  5403                           
  5404                           ;Config register IDLOC2 @ 0x200004
  5405                           ;	unspecified, using default values
  5406   200004                     	org	2097156
  5407   200004  FFFF               	dw	65535
  5408                           
  5409                           ;Config register IDLOC3 @ 0x200006
  5410                           ;	unspecified, using default values
  5411   200006                     	org	2097158
  5412   200006  FFFF               	dw	65535
  5413                           
  5414                           ;Config register IDLOC4 @ 0x200008
  5415                           ;	unspecified, using default values
  5416   200008                     	org	2097160
  5417   200008  FFFF               	dw	65535
  5418                           
  5419                           ;Config register IDLOC5 @ 0x20000A
  5420                           ;	unspecified, using default values
  5421   20000A                     	org	2097162
  5422   20000A  FFFF               	dw	65535
  5423                           
  5424                           ;Config register IDLOC6 @ 0x20000C
  5425                           ;	unspecified, using default values
  5426   20000C                     	org	2097164
  5427   20000C  FFFF               	dw	65535
  5428                           
  5429                           ;Config register IDLOC7 @ 0x20000E
  5430                           ;	unspecified, using default values
  5431   20000E                     	org	2097166
  5432   20000E  FFFF               	dw	65535
  5433                           
  5434                           	psect	config
  5435                           
  5436                           ;Config register CONFIG1L @ 0x300000
  5437                           ;	External Oscillator mode Selection bits
  5438                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5439                           ;	Power-up default value for COSC bits
  5440                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5441   300000                     	org	3145728
  5442   300000  AA                 	db	170
  5443                           
  5444                           ;Config register CONFIG1H @ 0x300001
  5445                           ;	unspecified, using default values
  5446                           ;	Clock Out Enable bit
  5447                           ;	CLKOUTEN = 0x1, unprogrammed default
  5448                           ;	Clock Switch Enable bit
  5449                           ;	CSWEN = 0x1, unprogrammed default
  5450                           ;	Fail-Safe Clock Monitor Enable bit
  5451                           ;	FCMEN = 0x1, unprogrammed default
  5452   300001                     	org	3145729
  5453   300001  FF                 	db	255
  5454                           
  5455                           ;Config register CONFIG2L @ 0x300002
  5456                           ;	unspecified, using default values
  5457                           ;	Master Clear Enable bit
  5458                           ;	MCLRE = 0x1, unprogrammed default
  5459                           ;	Power-up Timer Enable bit
  5460                           ;	PWRTE = 0x1, unprogrammed default
  5461                           ;	Low-power BOR enable bit
  5462                           ;	LPBOREN = 0x1, unprogrammed default
  5463                           ;	Brown-out Reset Enable bits
  5464                           ;	BOREN = 0x3, unprogrammed default
  5465   300002                     	org	3145730
  5466   300002  FF                 	db	255
  5467                           
  5468                           ;Config register CONFIG2H @ 0x300003
  5469                           ;	unspecified, using default values
  5470                           ;	Brown Out Reset Voltage selection bits
  5471                           ;	BORV = 0x3, unprogrammed default
  5472                           ;	ZCD Disable bit
  5473                           ;	ZCD = 0x1, unprogrammed default
  5474                           ;	PPSLOCK bit One-Way Set Enable bit
  5475                           ;	PPS1WAY = 0x1, unprogrammed default
  5476                           ;	Stack Full/Underflow Reset Enable bit
  5477                           ;	STVREN = 0x1, unprogrammed default
  5478                           ;	Debugger Enable bit
  5479                           ;	DEBUG = 0x1, unprogrammed default
  5480                           ;	Extended Instruction Set Enable bit
  5481                           ;	XINST = 0x1, unprogrammed default
  5482   300003                     	org	3145731
  5483   300003  FF                 	db	255
  5484                           
  5485                           ;Config register CONFIG3L @ 0x300004
  5486                           ;	WDT Period Select bits
  5487                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5488                           ;	WDT operating mode
  5489                           ;	WDTE = OFF, WDT Disabled
  5490   300004                     	org	3145732
  5491   300004  9F                 	db	159
  5492                           
  5493                           ;Config register CONFIG3H @ 0x300005
  5494                           ;	unspecified, using default values
  5495                           ;	WDT Window Select bits
  5496                           ;	WDTCWS = 0x7, unprogrammed default
  5497                           ;	WDT input clock selector
  5498                           ;	WDTCCS = 0x7, unprogrammed default
  5499   300005                     	org	3145733
  5500   300005  FF                 	db	255
  5501                           
  5502                           ;Config register CONFIG4L @ 0x300006
  5503                           ;	unspecified, using default values
  5504                           ;	Write Protection Block 0
  5505                           ;	WRT0 = 0x1, unprogrammed default
  5506                           ;	Write Protection Block 1
  5507                           ;	WRT1 = 0x1, unprogrammed default
  5508                           ;	Write Protection Block 2
  5509                           ;	WRT2 = 0x1, unprogrammed default
  5510                           ;	Write Protection Block 3
  5511                           ;	WRT3 = 0x1, unprogrammed default
  5512                           ;	Write Protection Block 3
  5513                           ;	WRT4 = 0x1, unprogrammed default
  5514                           ;	Write Protection Block 3
  5515                           ;	WRT5 = 0x1, unprogrammed default
  5516                           ;	Write Protection Block 3
  5517                           ;	WRT6 = 0x1, unprogrammed default
  5518                           ;	Write Protection Block 3
  5519                           ;	WRT7 = 0x1, unprogrammed default
  5520   300006                     	org	3145734
  5521   300006  FF                 	db	255
  5522                           
  5523                           ;Config register CONFIG4H @ 0x300007
  5524                           ;	unspecified, using default values
  5525                           ;	Configuration Register Write Protection bit
  5526                           ;	WRTC = 0x1, unprogrammed default
  5527                           ;	Boot Block Write Protection bit
  5528                           ;	WRTB = 0x1, unprogrammed default
  5529                           ;	Data EEPROM Write Protection bit
  5530                           ;	WRTD = 0x1, unprogrammed default
  5531                           ;	Scanner Enable bit
  5532                           ;	SCANE = 0x1, unprogrammed default
  5533                           ;	Low Voltage Programming Enable bit
  5534                           ;	LVP = 0x1, unprogrammed default
  5535   300007                     	org	3145735
  5536   300007  FF                 	db	255
  5537                           
  5538                           ;Config register CONFIG5L @ 0x300008
  5539                           ;	unspecified, using default values
  5540                           ;	UserNVM Program Memory Code Protection bit
  5541                           ;	CP = 0x1, unprogrammed default
  5542                           ;	DataNVM Memory Code Protection bit
  5543                           ;	CPD = 0x1, unprogrammed default
  5544   300008                     	org	3145736
  5545   300008  FF                 	db	255
  5546                           
  5547                           ;Config register CONFIG5H @ 0x300009
  5548                           ;	unspecified, using default values
  5549   300009                     	org	3145737
  5550   300009  FF                 	db	255
  5551                           
  5552                           ;Config register CONFIG6L @ 0x30000A
  5553                           ;	unspecified, using default values
  5554                           ;	Table Read Protection Block 0
  5555                           ;	EBTR0 = 0x1, unprogrammed default
  5556                           ;	Table Read Protection Block 1
  5557                           ;	EBTR1 = 0x1, unprogrammed default
  5558                           ;	Table Read Protection Block 2
  5559                           ;	EBTR2 = 0x1, unprogrammed default
  5560                           ;	Table Read Protection Block 3
  5561                           ;	EBTR3 = 0x1, unprogrammed default
  5562                           ;	Table Read Protection Block 4
  5563                           ;	EBTR4 = 0x1, unprogrammed default
  5564                           ;	Table Read Protection Block 5
  5565                           ;	EBTR5 = 0x1, unprogrammed default
  5566                           ;	Table Read Protection Block 6
  5567                           ;	EBTR6 = 0x1, unprogrammed default
  5568                           ;	Table Read Protection Block 7
  5569                           ;	EBTR7 = 0x1, unprogrammed default
  5570   30000A                     	org	3145738
  5571   30000A  FF                 	db	255
  5572                           
  5573                           ;Config register CONFIG6H @ 0x30000B
  5574                           ;	unspecified, using default values
  5575                           ;	Boot Block Table Read Protection bit
  5576                           ;	EBTRB = 0x1, unprogrammed default
  5577   30000B                     	org	3145739
  5578   30000B  FF                 	db	255
  5579                           tosu	equ	0xFFF
  5580                           tosh	equ	0xFFE
  5581                           tosl	equ	0xFFD
  5582                           stkptr	equ	0xFFC
  5583                           pclatu	equ	0xFFB
  5584                           pclath	equ	0xFFA
  5585                           pcl	equ	0xFF9
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           indf0	equ	0xFEF
  5593                           postinc0	equ	0xFEE
  5594                           postdec0	equ	0xFED
  5595                           preinc0	equ	0xFEC
  5596                           plusw0	equ	0xFEB
  5597                           fsr0h	equ	0xFEA
  5598                           fsr0l	equ	0xFE9
  5599                           wreg	equ	0xFE8
  5600                           indf1	equ	0xFE7
  5601                           postinc1	equ	0xFE6
  5602                           postdec1	equ	0xFE5
  5603                           preinc1	equ	0xFE4
  5604                           plusw1	equ	0xFE3
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           bsr	equ	0xFE0
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           preinc2	equ	0xFDC
  5612                           plusw2	equ	0xFDB
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        26
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      93
    BANK0           160     32      32
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    getHSVval@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    getHSVval@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    maxRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    minRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    RGBC2colourcard@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    S2770$buffer	PTR unsigned char  size(2) Largest target is 0

    S2770$source	PTR const unsigned char  size(2) Largest target is 0

    S551DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    S551DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    scaleRGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@measured_colour(BANK0[8]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllllllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllllllll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[13]), STR_6(CODE[11]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_getHSVval
    _scaleRGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _getHSVval->___lldiv
    _minRGB->_min
    _maxRGB->_max
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   14093
                                             63 COMRAM     1     1      0
                                              0 BANK0     32    32      0
                    _RGBC2colourcard
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                          _getHSVval
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                           _scaleRGB
               _toggle_tricolour_LED
 ---------------------------------------------------------------------------------
 (1) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _scaleRGB                                             3     2      1    5963
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _getHSVval                                           52    50      2    5761
                                             13 COMRAM    50    48      2
                            ___lldiv
                             ___lmul
                             _maxRGB
                             _minRGB
 ---------------------------------------------------------------------------------
 (2) _minRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _min
 ---------------------------------------------------------------------------------
 (3) _min                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _maxRGB                                               4     2      2     581
                                              6 COMRAM     4     2      2
                                _max
 ---------------------------------------------------------------------------------
 (3) _max                                                  6     2      4     416
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1226
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _RGBC2colourcard                                     23    22      1     495
                                              0 COMRAM    21    20      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RGBC2colourcard
   _Timer0_init
     _reset_timer
       _write_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getHSVval
     ___lldiv
     ___lmul
     _maxRGB
       _max
     _minRGB
       _min
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _scaleRGB
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _toggle_tricolour_LED

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      20       5       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      5D       1       98.9%
BITBIGSFRlllh       52      0       0      41        0.0%
BITBIGSFRlllllh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllllh     20      0       0      46        0.0%
BITBIGSFRlllllh     1E      0       0      48        0.0%
BITBIGSFRhhll       1D      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      49        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllllh      C      0       0      47        0.0%
BITBIGSFRllllll      B      0       0      57        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRlllllh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      3      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllh       2      0       0      42        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9      60        0.0%
DATA                 0      0      B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Mar 10 20:07:44 2024

                 _turn180Delay 004D                 _color_read_Red 2270                _color_read_Blue 2360  
              _trail_timer_low 0114                             l42 1FD2                             l27 24EE  
                           l95 2460                             l98 2584               _trail_timer_high 0128  
             _color_read_Clear 2310               _color_read_Green 22C0                            l101 22BE  
                          l110 235E                            l104 230E                            l113 21C6  
                          l123 24B8                            l131 226E                            l107 23AE  
                          l124 24C0                            l134 221A                            l230 2106  
                          l127 2488                            l128 2490                            l153 14EE  
                          l137 1F0A                            l331 2540                            l340 25F4  
                          l157 1C2A                            l325 2518                            l334 25FE  
                          l343 25C8                            l328 251A                            l337 25EA  
                          l346 23F0                            l485 25A2                            l782 2066  
                          l766 2160                            l695 25E0                            l767 2170  
                          l689 2564                            l698 25D4                            l789 2076  
                          _ISR 0008         ??_toggle_tricolour_LED 0001                            _max 2492  
                          _min 2462                            wreg 0FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                    _squareDelay 0049                           ?_ISR 0001  
                 ___fltol@exp1 0031                           l1052 1D30                           l3001 1CE4  
                         l1410 1970                           l3003 1CF0                           l3101 0ECE  
                         l3005 1D00                           l1413 1ACC                           l3021 1996  
                         l3013 191C                           l3111 0F82                           l3103 0ECE  
                         l3007 1D10                           l3031 19F0                           l3015 192C  
                         l1424 1A64                           l3201 1ADA                           l3121 1046  
                         l3105 0EDE                           l3113 0F8E                           l3009 1D20  
                         l3041 1A54                           l3033 19F2                           l1417 1A08  
                         l3025 19AA                           l3017 193A                           l3211 1B0E  
                         l3203 1AE2                           l3131 10D2                           l3123 1076  
                         l3115 0F9A                           l3107 0F1E                           l3051 1AAC  
                         l3043 1A72                           l3035 19FE                           l3027 19B2  
                         l3019 1980                           l3221 1B8E                           l3213 1B16  
                         l3205 1AEA                           l3301 2560                           l3133 10DC  
                         l3141 1188                           l3117 0FCE                           l3109 0F52  
                         l3125 107E                           l1373 1918                           l3053 1ABA  
                         l3045 1A74                           l3037 1A3A                           l3029 19BE  
                         l3061 1F0C                           l3223 1BAE                           l3215 1B32  
                         l3207 1AFE                           l3303 2562                           l3071 2456  
                         l3063 242E                           l3151 1242                           l3143 1194  
                         l3135 1118                           l3127 10A0                           l3119 1012  
                         l3231 2078                           l3055 1ABC                           l3047 1A78  
                         l3039 1A46                           l1376 17AA                           l3225 1BCE  
                         l3217 1B4E                           l3209 1B06                           l3065 2432  
                         l3161 12B0                           l3145 119E                           l3137 114C  
                         l3129 10C6                           l3153 124A                           l3073 2172  
                         l3241 20E0                           l3233 2088                           l1369 15B4  
                         l3049 1A9C                           l3401 1DD8                           l1386 18DA  
                         l1378 1822                           l3227 1BF0                           l3219 1B6E  
                         l3059 24C2                           l3067 243C                           l3171 1368  
                         l3163 12EC                           l3155 126C                           l3147 11DE  
                         l3139 117C                           l3091 0E5C                           l3251 20FA  
                         l3243 20E2                           l3235 20AE                           l1379 1810  
                         l3083 1E36                           l3411 1E0A                           l3403 1DDA  
                         l3229 1C08                           l3069 244C                           l3173 137A  
                         l3165 1320                           l3157 1292                           l3149 1212  
                         l3181 1426                           l3093 0E68                           l3085 0E24  
                         l3253 2104                           l3245 20EC                           l3237 20B2  
                         l3413 1E12                           l3405 1DDC                           l3191 14B4  
                         l3183 1438                           l3175 13BA                           l3167 1350  
                         l3159 129E                           l3095 0E7A                           l3087 0E3C  
                         l3247 20EE                           l3239 20D6                           l3415 1E1A  
                         l3407 1DE0                           l2561 25FA                           l3193 14BC  
                         l3185 1444                           l3177 13EE                           l3169 135C  
                         l3097 0E86                           l3089 0E4C                           l3249 20F8  
                         l3281 2592                           l3417 1E26                           l3409 1E06  
                         l3291 254A                           l2651 24F0                           l2555 251A  
                         l2563 25C0                           l2811 2126                           l3195 14CA  
                         l3187 1450                           l3179 141E                           l3099 0EA4  
                         l2571 25E2                           l3283 259C                           l3371 1D32  
                         l2805 25CA                           l3293 254C                           l2661 2506  
                         l2653 24FA                           l2557 252A                           l2565 25C4  
                         l2821 1FFA                           l2813 2136                           l3197 14DC  
                         l3189 1484                           l2581 23C6                           l2573 25E6  
                         l3285 259E                           l3277 2586                           l2901 1686  
                         l3381 1DA4                           l3373 1D78                           l3199 1ACE  
                         l2647 25D8                           l3295 2556                           l2655 2500  
                         l2559 25F6                           l2567 25EC                           l2663 2568  
                         l2831 2044                           l2823 2002                           l2815 2140  
                         l2807 2108                           l2591 249A                           l2583 23EC  
                         l2575 23B2                           l2671 22C0                           l3287 25A0  
                         l3279 2590                           l2911 16E8                           l2903 1696  
                         l3391 1DCC                           l3383 1DAC                           l3375 1D80  
                         l2649 25DC                           l3297 255A                           l3289 2542  
                         l2657 2502                           l2569 25F0                           l2833 2054  
                         l2825 200E                           l2817 1FD4                           l2809 2118  
                         l2593 24B0                           l2585 23EE                           l2577 23B6  
                         l2673 2306                           l2665 2270                           l2921 1790  
                         l2913 1704                           l2905 16B0                           l2841 14FC  
                         l3393 1DD0                           l3385 1DB4                           l3377 1D88  
                         l3299 255C                           l2659 2504                           l2835 2056  
                         l2827 201C                           l2819 1FE4                           l2595 2462  
                         l2579 23BE                           l2683 2310                           l2667 22B6  
                         l2931 17CC                           l2923 179A                           l2915 172E  
                         l2907 16C0                           l2851 153C                           l2843 150A  
                         l3395 1DD2                           l3387 1DC4                           l3379 1D9C  
                         l2837 2060                           l2829 2026                           l2589 2492  
                         l2597 246A                           l2693 21C8                           l2677 2360  
                         l2685 2356                           l2941 183E                           l2933 17DA  
                         l2925 17A8                           l2917 1764                           l2909 16DC  
                         l2861 156C                           l2853 1542                           l2845 150C  
                         l3397 1DD4                           l3389 1DC8                           l2599 2480  
                         l2679 23A6                           l2951 18A8                           l2943 184C  
                         l2935 1808                           l2927 17BA                           l2919 1772  
                         l2871 15A4                           l2863 156E                           l2855 1552  
                         l2847 151C                           l2839 14F0                           l3399 1DD6  
                         l2689 221C                           l2961 18FE                           l2953 18C2  
                         l2945 1876                           l2929 17C8                           l2881 15F4  
                         l2873 15C4                           l2865 157E                           l2857 1558  
                         l2849 152C                           l2955 18DE                           l2963 1904  
                         l2939 1832                           l2947 187A                           l2891 1644  
                         l2883 15FE                           l2875 15D4                           l2867 158E  
                         l2859 155E                           l2971 1C42                           l2965 1908  
                         l2957 18EE                           l2949 1894                           l2893 1650  
                         l2885 1614                           l2869 159E                           l2981 1C92  
                         ?_max 0001                           l2959 18FC                           l2895 165E  
                         l2887 1620                           l2879 15E8                           l2991 1CBC  
                         l2983 1C96                           l2975 1C56                           l2897 166A  
                         l2889 1638                           l2993 1CC6                           l2985 1CA4  
                         l2977 1C80                           l2969 1C2C                           l2899 167A  
                         l2995 1CD0                           l2979 1C82                           ?_min 0001  
                         STR_1 0E19                           STR_2 0E1E                           STR_5 0E01  
                         STR_6 0E0E                           u2010 1F9E                           u2011 1F96  
                         u2100 0ECE                           u2101 0ECA                           u2110 10A0  
                         u2030 1FC0                           u2111 109C                           u2031 1FB8  
                         u2200 1B6E                           u2120 10C6                           u2008 1F82  
                         u2201 1B6A                           u2121 10C2                           u2210 1B8E  
                         u2130 126C                           u2211 1B8A                           u2131 1268  
                         u2220 1BAE                           u1420 252A                           u2140 1292  
                         u2028 1FA0                           u2221 1BAA                           u1421 2526  
                         u2141 128E                           u2230 1BCE                           u1430 2540  
                         u2231 1BCA                           u1431 253C                           u2240 1BE0  
                         u1520 2126                           u2080 0E7A                           u1440 23DA  
                         u1600 156C                           u2048 1FC2                   _BAUD4CONbits 0EE9  
                         u2241 1BD8                           u1521 2122                           u2081 0E76  
                         u1441 23D2                           u1601 1568                           u1530 2160  
                         u2170 1438                           u2090 0EA4                           u1610 157E  
                         u2330 1DF4                           u1531 215C                           u2171 1434  
                         u2155 12A0                           u2091 0EA0                           u1611 157A  
                         u2331 1DEC                           u2260 1C1A                           u2180 1B32  
                         u1540 1FFA                           u1460 24B0                           u1700 181E  
                         u1620 158E                           u2261 1C12                           u2181 1B2E  
                         u1541 1FF6                           u1461 24AC                           u2165 136A  
                         u1701 181A                           u1621 158A                           u2190 1B4E  
                         u1550 201C                           u1470 2480                           u1710 1832  
                         u1630 15C4                           u2407 1BFA                           u2191 1B4A  
                         u1551 2018                           u1471 247C                           u1711 182E  
                         u1631 15C0                           u1560 2044                           u1720 184C  
                         u1640 15D4                           u1800 1CE0                           u1561 2040  
                         u1721 1848                           u1641 15D0                           u1801 1CDC  
                         u2258 1BE2                           u1458 23DC                           u1730 1894  
                         u1650 174E                           u1570 150A                           u1810 1D00  
                         _T2PR 0FBC                           u1731 1890                           u1571 1506  
                         u1811 1CFC                           u1740 18C2                           u1660 17A8  
                         u1580 151C                           u1820 1D10                           u1900 1A72  
                         u2348 1DF6                           u1741 18BE                           u1661 17A4  
                         u1581 1518                           u1821 1D0C                           u1901 1A6E  
                         u2278 1C1C                           u1750 18FC                           u1670 17C8  
                         u1590 152C                           u1910 1AAC                           u1830 192C  
                         u1751 18F8                           u1671 17C4                           u1655 1744  
                         u1591 1528                           u1911 1AA8                           u1831 1928  
                         u1680 17DA                           u1760 1C42                           u1920 1ABA  
                         u1840 193A                           u1681 17D6                           u1761 1C3E  
                         u1921 1AB6                           u1841 1936                           u1690 1808  
                         u1770 1C76                           u1850 1996                           u1930 1F1E  
                         u1691 1804                           u1851 1992                           u1931 1F16  
                         u1780 1CA4                           u1860 19EC                           u2397 2442  
                         u1781 1CA0                           u1861 19E8                           u1790 1CB8  
                         u1870 1A36                           u1950 1F3E                           u1791 1CB4  
                         u1775 1C6C                           u1871 1A32                           u1951 1F36  
                         u1880 1A54                           u1881 1A50                           u1890 1A64  
                         u1970 1F5E                           u1891 1A60                           u1971 1F56  
                         u1948 1F20                           u1990 1F80                           u1991 1F78  
                         u1968 1F40                           u1988 1F60                           _main 1D32  
                         fsr1h 0FE2                           fsr2h 0FDA                           fsr1l 0FE1  
                         fsr2l 0FD9                           max@a 0001                           max@b 0003  
                         btemp 005E                           min@a 0001                           min@b 0003  
                         prodh 0FF4                           prodl 0FF3                           start 0034  
       __end_of_color_read_Red 22C0                   ___param_bank 0000                          ??_ISR 0001  
                write_timer@tH 0002                  write_timer@tL 0001                          ??_max 0005  
                        ??_min 0005                  ___fltol@sign1 0030                          ?_main 0001  
           _timer_high_pointer 0045                __end_of___flmul 191A                __end_of___fltol 1D32  
              __end_of___lldiv 2078                          i2l724 002E                          i2l725 0030  
                        _TMR0H 0FD4                          _TMR0L 0FD3            ___lmul@multiplicand 0005  
   __end_of_I2C_2_Master_Start 2600                    _write_timer 25D6     __end_of_I2C_2_Master_Write 25CA  
                  _turningGear 0057              _turnRight135Delay 004F                          tablat 0FF5  
              _turnLeft90Delay 0055                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 0FD8                          wtemp8 005F  
      __end_of_color_read_Blue 23B0          _I2C_2_Master_RepStart 25E2                ?_color_read_Red 0005  
              __initialization 23F2                   __end_of_main 1E36                         ??_main 0040  
                __activetblptr 0003                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RD6PPS 0E70                         _RE4PPS 0E76  
                       i2l2461 000A                         i2l2463 001A                         i2l2465 002A  
                       _RG6PPS 0E88       __end_of_color_click_init 2462                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 1ACE               _turnLeft135Delay 0051  
                ??_Timer0_init 0003                   ?_reset_timer 0001                   _CCPTMRS0bits 0FAD  
                       ___lmul 2108                      ??___flmul 0017                      ??___fltol 002C  
                    ??___lldiv 0009                         _maxRGB 221C                         _minRGB 21C8  
             __end_of_scaleRGB 1F0C                         clear_0 2418                         isa$std 0001  
                 __pdataCOMRAM 0041              _timer_low_pointer 0043                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
            ??_initDCmotorsPWM 0003                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001              _buggy_lights_init 24C2                     __accesstop 0060  
      __end_of__initialization 2424       __end_of_color_read_Clear 2360       __end_of_color_read_Green 2310  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
                   ___fltol@f1 0028               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
            getHSVval@temp_650 002C              getHSVval@temp_651 0030              getHSVval@temp_652 0034  
            getHSVval@temp_653 0020              getHSVval@temp_648 0038              getHSVval@temp_649 0028  
          ??_buggy_lights_init 0001            __end_of_Timer0_init 2566      __end_of_buggy_lights_init 24F0  
                   __pbssBANK1 0100                     _getRGBCval 2172              _color_writetoaddr 2566  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___lmul 0001  
                      ?_maxRGB 0007                        ?_minRGB 0007                 ___lmul@product 0009  
          ??_color_writetoaddr 0004                      ?___xxtofl 0001                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                   ?_write_timer 0001                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5              __end_of_getHSVval 14F0         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                      ?_scaleRGB 0032      __end_of_color_writetoaddr 2586  
           _I2C_2_Master_Start 25F6                     _initUSART4 2586             _I2C_2_Master_Write 25BE  
            ??_RGBC2colourcard 0002                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 2542                        ___flmul 14F0  
                      ___fltol 1C2C                        ___lldiv 1FD4            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                   __psmallconst 0E00                        __pcinit 23F2  
                      __ramtop 0E00                        __ptext0 1D32                        __ptext1 1F0C  
                      __ptext2 1E36                        __ptext3 191A                        __ptext4 1C2C  
                      __ptext5 14F0                        __ptext6 2586                        __ptext7 2078  
                      __ptext8 2172                        __ptext9 2270                      _T2CONbits 0FBD  
                   ??___xxtofl 0005                     getHSVval@C 003E                     getHSVval@H 001E  
                   getHSVval@M 003C                      _T2HLTbits 0FBE                     getHSVval@S 001C  
                   getHSVval@m 001A                        maxRGB@p 0007                        minRGB@p 0007  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 2424  
                  ?_getRGBCval 000C                     ??_scaleRGB 0033              ?_color_click_init 0001  
                getHSVval@temp 0024                ___lldiv@divisor 0005             ??_color_click_init 0005  
              ___lldiv@counter 000D                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
              _initDCmotorsPWM 2078                  ___xxtofl@sign 0009                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22                     main@motorL 0066                     main@motorR 006F  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                     max@max_val 0005  
               __end_of___lmul 2172                  __pidataCOMRAM 25A4                 __end_of_maxRGB 2270  
               __end_of_minRGB 221C                     min@min_val 0005            color_read_Clear@tmp 000A  
          start_initialization 23F2                    __end_of_ISR 0034                    __end_of_max 24C2  
                  __end_of_min 2492               _turnRight90Delay 0053            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 2108                       ??___lmul 0009                       ??_maxRGB 0009  
                     ??_minRGB 0009                      ___flmul@a 0013                      ___flmul@b 000F  
                  __pbssCOMRAM 005B                  __pcstackBANK0 0060                _RGBC2colourcard 1ACE  
               _wall_threshold 0047   __end_of_toggle_tricolour_LED 1FD4                      _getHSVval 0E24  
                 ?_Timer0_init 0001                      __pintcode 0008                       ?___flmul 000F  
                     ?___fltol 0028                       ?___lldiv 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 251A  
            _I2C_2_Master_Init 24F0              _I2C_2_Master_Read 23B0              _I2C_2_Master_Stop 25EC  
                  _maxRGB$3104 0009             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                  _headbuttDelay 004B  
     initDCmotorsPWM@PWMperiod 0001                      _rampDelay 005A                   ??_getRGBCval 000D  
             RGBC2colourcard@p 0001            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E                       _LATGbits 0F7F                       _LATHbits 0F80  
                  _minRGB$3105 0009                       _PIE0bits 0E29                     ?_getHSVval 000E  
                ??_reset_timer 0003                       i2u124_40 001A                       i2u124_41 0016  
                     i2u125_40 002A                       i2u125_41 0026                       _PIR0bits 0E33  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8                      _returning 005D      __end_of_I2C_2_Master_Idle 2542  
    __end_of_I2C_2_Master_Init 251A      __end_of_I2C_2_Master_Read 23F2      __end_of_I2C_2_Master_Stop 25F6  
      __end_of_RGBC2colourcard 1C2C    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 21C8  
            ??_color_read_Blue 0007              ___lmul@multiplier 0001                      copy_data0 2406  
__end_of_I2C_2_Master_RepStart 25EC             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                       __Lrparam 0000                      scaleRGB@p 0032  
          __end_of_reset_timer 25D6                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                     ___xxtofl 191A                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
         _toggle_tricolour_LED 1F0C             __end_of_initUSART4 25A4                       __ptext10 22C0  
                     __ptext11 2310                       __ptext20 2108                       __ptext12 2360  
                     __ptext21 1FD4                       __ptext13 25E2                       __ptext30 2542  
                     __ptext22 242E                       __ptext14 23B0                       __ptext31 25CA  
                     __ptext23 2566                       __ptext15 0E24                       __ptext32 25D6  
                     __ptext24 25BE                       __ptext16 21C8                       __ptext33 1ACE  
                     __ptext25 25EC                       __ptext17 2462                       __ptext26 25F6  
                     __ptext18 221C                       __ptext27 251A                       __ptext19 2492  
                     __ptext28 24F0                       __ptext29 24C2                    getRGBCval@p 000C  
          main@measured_colour 0078                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     _scaleRGB 1E36                    ??_getHSVval 0010                    getHSVval@p1 000E  
                  getHSVval@p2 000F                    getHSVval@Sz 0018                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E               ?_RGBC2colourcard 0001  
                   _INTCONbits 0FF2          ?_toggle_tricolour_LED 0001                  ??_write_timer 0002  
                     intlevel2 0000                   _topGearRight 0058              _manoeuvre_pointer 0041  
             ___lldiv@dividend 0001                 main@HSV_colour 0060                    _reset_timer 25CA  
             _color_click_init 242E                    _topGearLeft 0059                     _SSP2DATPPS 0E1D  
             ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C          RGBC2colourcard@motorL 0004  
        RGBC2colourcard@motorR 000D                _trail_manoeuvre 0100                    _return_flag 005C  
              _manoeuvre_count 005B                     _TX4STAbits 0EE8            __end_of_write_timer 25E2  
