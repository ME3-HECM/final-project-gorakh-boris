

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 14:43:26 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 21/07/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   0017BA                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _turnLeft90Delay
    89   0017BA  00AF               	dw	175
    90                           
    91                           ;initializer for _timer_low_pointer
    92   0017BC  81                 	db	low _trail_timer_low
    93                           
    94                           ;initializer for _timer_high_pointer
    95   0017BD  95                 	db	low _trail_timer_high
    96                           
    97                           ;initializer for _turningGear
    98   0017BE  2A                 	db	42
    99                           
   100                           ;initializer for _topGearRight
   101   0017BF  14                 	db	20
   102                           
   103                           ;initializer for _topGearLeft
   104   0017C0  14                 	db	20
   105                           
   106                           ;initializer for _rampDelay
   107   0017C1  08                 	db	8
   108                           
   109                           	psect	idataBANK0
   110   001572                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _squareDelay
   114   001572  012C               	dw	300
   115                           
   116                           ;initializer for _headbuttDelay
   117   001574  0046               	dw	70
   118                           
   119                           ;initializer for _turn180Delay
   120   001576  01FE               	dw	510
   121                           
   122                           ;initializer for _turnRight135Delay
   123   001578  012C               	dw	300
   124                           
   125                           ;initializer for _turnLeft135Delay
   126   00157A  012C               	dw	300
   127                           
   128                           ;initializer for _turnRight90Delay
   129   00157C  00AF               	dw	175
   130                           
   131                           ;initializer for _manoeuvre_pointer
   132   00157E  6D                 	db	low _trail_manoeuvre
   133                           
   134                           ;initializer for _trail_manoeuvre
   135   00157F  01                 	db	1
   136   001580  02                 	db	2
   137   001581  03                 	db	3
   138   001582  04                 	db	4
   139   001583  05                 	db	5
   140   001584  06                 	db	6
   141   001585  07                 	db	7
   142   001586  08                 	db	8
   143   001587  09                 	db	9
   144   001588  00                 	db	0
   145   001589  01                 	db	1
   146   00158A  02                 	db	2
   147   00158B  03                 	db	3
   148   00158C  04                 	db	4
   149   00158D  05                 	db	5
   150   00158E  06                 	db	6
   151   00158F  07                 	db	7
   152   001590  08                 	db	8
   153   001591  09                 	db	9
   154   001592  00                 	db	0
   155                           
   156                           ;initializer for _trail_timer_low
   157   001593  01                 	db	1
   158   001594  02                 	db	2
   159   001595  03                 	db	3
   160   001596  04                 	db	4
   161   001597  05                 	db	5
   162   001598  06                 	db	6
   163   001599  07                 	db	7
   164   00159A  08                 	db	8
   165   00159B  09                 	db	9
   166   00159C  00                 	db	0
   167   00159D  01                 	db	1
   168   00159E  02                 	db	2
   169   00159F  03                 	db	3
   170   0015A0  04                 	db	4
   171   0015A1  05                 	db	5
   172   0015A2  06                 	db	6
   173   0015A3  07                 	db	7
   174   0015A4  08                 	db	8
   175   0015A5  09                 	db	9
   176   0015A6  00                 	db	0
   177                           
   178                           ;initializer for _trail_timer_high
   179   0015A7  01                 	db	1
   180   0015A8  02                 	db	2
   181   0015A9  03                 	db	3
   182   0015AA  04                 	db	4
   183   0015AB  05                 	db	5
   184   0015AC  06                 	db	6
   185   0015AD  07                 	db	7
   186   0015AE  08                 	db	8
   187   0015AF  09                 	db	9
   188   0015B0  00                 	db	0
   189   0015B1  01                 	db	1
   190   0015B2  02                 	db	2
   191   0015B3  03                 	db	3
   192   0015B4  04                 	db	4
   193   0015B5  05                 	db	5
   194   0015B6  06                 	db	6
   195   0015B7  07                 	db	7
   196   0015B8  08                 	db	8
   197   0015B9  09                 	db	9
   198   0015BA  00                 	db	0
   199   000000                     _TX4REG	set	3812
   200   000000                     _RC4STAbits	set	3815
   201   000000                     _SP4BRGH	set	3814
   202   000000                     _LATEbits	set	3965
   203   000000                     _TRISEbits	set	3973
   204   000000                     _LATGbits	set	3967
   205   000000                     _TRISGbits	set	3975
   206   000000                     _LATFbits	set	3966
   207   000000                     _LATHbits	set	3968
   208   000000                     _TRISFbits	set	3974
   209   000000                     _TRISHbits	set	3976
   210   000000                     _SSP2CON2bits	set	3802
   211   000000                     _RX4PPS	set	3605
   212   000000                     _SSP2CLKPPS	set	3612
   213   000000                     _SSP2DATPPS	set	3613
   214   000000                     _RC7PPS	set	3689
   215   000000                     _RE2PPS	set	3700
   216   000000                     _LATAbits	set	3961
   217   000000                     _LATDbits	set	3964
   218   000000                     _TRISDbits	set	3972
   219   000000                     _PORTFbits	set	3982
   220   000000                     _T2PR	set	4028
   221   000000                     _T2CONbits	set	4029
   222   000000                     _CCPR2H	set	4006
   223   000000                     _CCPR1H	set	4010
   224   000000                     _TRISCbits	set	3971
   225   000000                     _TRISAbits	set	3969
   226   000000                     _LATCbits	set	3963
   227   000000                     _RE4PPS	set	3702
   228   000000                     _RG6PPS	set	3720
   229   000000                     _RD5PPS	set	3695
   230   000000                     _ANSELDbits	set	3751
   231   000000                     _SSP2ADD	set	3798
   232   000000                     _SSP2CON1bits	set	3801
   233   000000                     _CCPR4H	set	3873
   234   000000                     _CCPR3H	set	3877
   235   000000                     _TMR0L	set	4051
   236   000000                     _TMR0H	set	4052
   237   000000                     _T0CON0bits	set	4053
   238   000000                     _T0CON1bits	set	4054
   239   000000                     _T2CLKCONbits	set	4031
   240   000000                     _T2HLTbits	set	4030
   241   000000                     _CCP1CONbits	set	4011
   242   000000                     _CCPTMRS0bits	set	4013
   243   000000                     _CCP2CONbits	set	4007
   244   000000                     _CCP3CONbits	set	3878
   245   000000                     _CCP4CONbits	set	3874
   246   000000                     _RC4REG	set	3811
   247   000000                     _SP4BRGL	set	3813
   248   000000                     _TX4STAbits	set	3816
   249   000000                     _BAUD4CONbits	set	3817
   250   000000                     _SSP2CON2	set	3802
   251   000000                     _SSP2STAT	set	3800
   252   000000                     _ANSELFbits	set	3764
   253   000000                     _SSP2BUF	set	3797
   254   000000                     _PIE0bits	set	3625
   255   000000                     _PIE4bits	set	3629
   256   000000                     _PIR4bits	set	3639
   257   000000                     _RC0PPS	set	3682
   258   000000                     _RD6PPS	set	3696
   259   000000                     _PIR0bits	set	3635
   260   000000                     _INTCONbits	set	4082
   261                           
   262                           	psect	smallconst
   263   000E00                     __psmallconst:
   264                           	callstack 0
   265   000E00  00                 	db	0
   266   000E01                     STR_1:
   267   000E01  25                 	db	37
   268   000E02  64                 	db	100	;'d'
   269   000E03  20                 	db	32
   270   000E04  0D                 	db	13
   271   000E05  00                 	db	0
   272   000E06                     STR_2:
   273   000E06  25                 	db	37
   274   000E07  64                 	db	100	;'d'
   275   000E08  00                 	db	0
   276   000E09  00                 	db	0	; dummy byte at the end
   277   000000                     
   278                           ; #config settings
   279                           
   280                           	psect	cinit
   281   001398                     __pcinit:
   282                           	callstack 0
   283   001398                     start_initialization:
   284                           	callstack 0
   285   001398                     __initialization:
   286                           	callstack 0
   287                           
   288                           ; Initialize objects allocated to BANK0 (73 bytes)
   289                           ; load TBLPTR registers with __pidataBANK0
   290   001398  0E72               	movlw	low __pidataBANK0
   291   00139A  6EF6               	movwf	tblptrl,c
   292   00139C  0E15               	movlw	high __pidataBANK0
   293   00139E  6EF7               	movwf	tblptrh,c
   294   0013A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   295   0013A2  6EF8               	movwf	tblptru,c
   296   0013A4  EE00  F060         	lfsr	0,__pdataBANK0
   297   0013A8  EE10 F049          	lfsr	1,73
   298   0013AC                     copy_data0:
   299   0013AC  0009               	tblrd		*+
   300   0013AE  CFF5 FFEE          	movff	tablat,postinc0
   301   0013B2  50E5               	movf	postdec1,w,c
   302   0013B4  50E1               	movf	fsr1l,w,c
   303   0013B6  E1FA               	bnz	copy_data0
   304                           
   305                           ; Initialize objects allocated to COMRAM (8 bytes)
   306                           ; load TBLPTR registers with __pidataCOMRAM
   307   0013B8  0EBA               	movlw	low __pidataCOMRAM
   308   0013BA  6EF6               	movwf	tblptrl,c
   309   0013BC  0E17               	movlw	high __pidataCOMRAM
   310   0013BE  6EF7               	movwf	tblptrh,c
   311   0013C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   312   0013C2  6EF8               	movwf	tblptru,c
   313   0013C4  EE00  F051         	lfsr	0,__pdataCOMRAM
   314   0013C8  EE10 F008          	lfsr	1,8
   315   0013CC                     copy_data1:
   316   0013CC  0009               	tblrd		*+
   317   0013CE  CFF5 FFEE          	movff	tablat,postinc0
   318   0013D2  50E5               	movf	postdec1,w,c
   319   0013D4  50E1               	movf	fsr1l,w,c
   320   0013D6  E1FA               	bnz	copy_data1
   321                           
   322                           ; Clear objects allocated to BANK1 (60 bytes)
   323   0013D8  EE01  F000         	lfsr	0,__pbssBANK1
   324   0013DC  0E3C               	movlw	60
   325   0013DE                     clear_0:
   326   0013DE  6AEE               	clrf	postinc0,c
   327   0013E0  06E8               	decf	wreg,f,c
   328   0013E2  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to BANK0 (56 bytes)
   331   0013E4  EE00  F0A9         	lfsr	0,__pbssBANK0
   332   0013E8  0E38               	movlw	56
   333   0013EA                     clear_1:
   334   0013EA  6AEE               	clrf	postinc0,c
   335   0013EC  06E8               	decf	wreg,f,c
   336   0013EE  E1FD               	bnz	clear_1
   337                           
   338                           ; Clear objects allocated to COMRAM (8 bytes)
   339   0013F0  EE00  F049         	lfsr	0,__pbssCOMRAM
   340   0013F4  0E08               	movlw	8
   341   0013F6                     clear_2:
   342   0013F6  6AEE               	clrf	postinc0,c
   343   0013F8  06E8               	decf	wreg,f,c
   344   0013FA  E1FD               	bnz	clear_2
   345   0013FC                     end_of_initialization:
   346                           	callstack 0
   347   0013FC                     __end_of__initialization:
   348                           	callstack 0
   349   0013FC  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350   0013FE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351   001400  0100               	movlb	0
   352   001402  EF00  F008         	goto	_main	;jump to C main() function
   353                           
   354                           	psect	bssCOMRAM
   355   000049                     __pbssCOMRAM:
   356                           	callstack 0
   357   000049                     _nout:
   358                           	callstack 0
   359   000049                     	ds	2
   360   00004B                     _flags:
   361                           	callstack 0
   362   00004B                     	ds	1
   363   00004C                     _backtrack:
   364                           	callstack 0
   365   00004C                     	ds	1
   366   00004D                     _TxBufReadCnt:
   367                           	callstack 0
   368   00004D                     	ds	1
   369   00004E                     _TxBufWriteCnt:
   370                           	callstack 0
   371   00004E                     	ds	1
   372   00004F                     _RxBufReadCnt:
   373                           	callstack 0
   374   00004F                     	ds	1
   375   000050                     _RxBufWriteCnt:
   376                           	callstack 0
   377   000050                     	ds	1
   378                           
   379                           	psect	dataCOMRAM
   380   000051                     __pdataCOMRAM:
   381                           	callstack 0
   382   000051                     _turnLeft90Delay:
   383                           	callstack 0
   384   000051                     	ds	2
   385   000053                     _timer_low_pointer:
   386                           	callstack 0
   387   000053                     	ds	1
   388   000054                     _timer_high_pointer:
   389                           	callstack 0
   390   000054                     	ds	1
   391   000055                     _turningGear:
   392                           	callstack 0
   393   000055                     	ds	1
   394   000056                     _topGearRight:
   395                           	callstack 0
   396   000056                     	ds	1
   397   000057                     _topGearLeft:
   398                           	callstack 0
   399   000057                     	ds	1
   400   000058                     _rampDelay:
   401                           	callstack 0
   402   000058                     	ds	1
   403                           
   404                           	psect	bssBANK0
   405   0000A9                     __pbssBANK0:
   406                           	callstack 0
   407   0000A9                     _dbuf:
   408                           	callstack 0
   409   0000A9                     	ds	32
   410   0000C9                     _EUSART4RXbuf:
   411                           	callstack 0
   412   0000C9                     	ds	20
   413   0000DD                     _width:
   414                           	callstack 0
   415   0000DD                     	ds	2
   416   0000DF                     _prec:
   417                           	callstack 0
   418   0000DF                     	ds	2
   419                           
   420                           	psect	dataBANK0
   421   000060                     __pdataBANK0:
   422                           	callstack 0
   423   000060                     _squareDelay:
   424                           	callstack 0
   425   000060                     	ds	2
   426   000062                     _headbuttDelay:
   427                           	callstack 0
   428   000062                     	ds	2
   429   000064                     _turn180Delay:
   430                           	callstack 0
   431   000064                     	ds	2
   432   000066                     _turnRight135Delay:
   433                           	callstack 0
   434   000066                     	ds	2
   435   000068                     _turnLeft135Delay:
   436                           	callstack 0
   437   000068                     	ds	2
   438   00006A                     _turnRight90Delay:
   439                           	callstack 0
   440   00006A                     	ds	2
   441   00006C                     _manoeuvre_pointer:
   442                           	callstack 0
   443   00006C                     	ds	1
   444   00006D                     _trail_manoeuvre:
   445                           	callstack 0
   446   00006D                     	ds	20
   447   000081                     _trail_timer_low:
   448                           	callstack 0
   449   000081                     	ds	20
   450   000095                     _trail_timer_high:
   451                           	callstack 0
   452   000095                     	ds	20
   453                           
   454                           	psect	bssBANK1
   455   000100                     __pbssBANK1:
   456                           	callstack 0
   457   000100                     _EUSART4TXbuf:
   458                           	callstack 0
   459   000100                     	ds	60
   460                           
   461                           	psect	cstackBANK0
   462   0000E1                     __pcstackBANK0:
   463                           	callstack 0
   464   0000E1                     sendArraySerial4@tempStr:
   465                           	callstack 0
   466                           
   467                           ; 21 bytes @ 0x0
   468   0000E1                     	ds	21
   469   0000F6                     sendArraySerial4@index:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x15
   473   0000F6                     	ds	1
   474   0000F7                     sendArraySerial4@i:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x16
   478   0000F7                     	ds	2
   479                           
   480                           	psect	cstackCOMRAM
   481   000001                     __pcstackCOMRAM:
   482                           	callstack 0
   483   000001                     ??_getCharFromTxBuf:
   484   000001                     putCharToRxBuf@byte:
   485                           	callstack 0
   486   000001                     
   487                           ; 1 bytes @ 0x0
   488   000001                     	ds	2
   489   000003                     ??_HighISR:
   490                           
   491                           ; 1 bytes @ 0x2
   492   000003                     	ds	2
   493   000005                     ??_I2C_2_Master_Idle:
   494   000005                     ?___awdiv:
   495                           	callstack 0
   496   000005                     ?___awmod:
   497                           	callstack 0
   498   000005                     sendCharSerial4@charToSend:
   499                           	callstack 0
   500   000005                     initDCmotorsPWM@PWMperiod:
   501                           	callstack 0
   502   000005                     ___awdiv@dividend:
   503                           	callstack 0
   504   000005                     ___awmod@dividend:
   505                           	callstack 0
   506   000005                     fputc@c:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x4
   510   000005                     	ds	1
   511   000006                     I2C_2_Master_Write@data_byte:
   512                           	callstack 0
   513   000006                     sendStringSerial4@string:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x5
   517   000006                     	ds	1
   518   000007                     color_writetoaddr@value:
   519                           	callstack 0
   520   000007                     fputc@fp:
   521                           	callstack 0
   522   000007                     ___awdiv@divisor:
   523                           	callstack 0
   524   000007                     ___awmod@divisor:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x6
   528   000007                     	ds	1
   529   000008                     ??_fputc:
   530   000008                     color_writetoaddr@address:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x7
   534   000008                     	ds	1
   535   000009                     ??_color_click_init:
   536   000009                     ___awdiv@counter:
   537                           	callstack 0
   538   000009                     ___awmod@counter:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x8
   542   000009                     	ds	1
   543   00000A                     ___awdiv@sign:
   544                           	callstack 0
   545   00000A                     ___awmod@sign:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x9
   549   00000A                     	ds	1
   550   00000B                     ?_abs:
   551                           	callstack 0
   552   00000B                     ___awdiv@quotient:
   553                           	callstack 0
   554   00000B                     abs@a:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0xA
   558   00000B                     	ds	2
   559   00000D                     ??_abs:
   560                           
   561                           ; 1 bytes @ 0xC
   562   00000D                     	ds	2
   563   00000F                     ?_vfpfcnvrt:
   564                           	callstack 0
   565   00000F                     vfpfcnvrt@fp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0xE
   569   00000F                     	ds	1
   570   000010                     vfpfcnvrt@fmt:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xF
   574   000010                     	ds	1
   575   000011                     vfpfcnvrt@ap:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x10
   579   000011                     	ds	1
   580   000012                     ??_vfpfcnvrt:
   581                           
   582                           ; 1 bytes @ 0x11
   583   000012                     	ds	1
   584   000013                     vfpfcnvrt@done:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x12
   588   000013                     	ds	1
   589   000014                     vfpfcnvrt@cnt:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x13
   593   000014                     	ds	2
   594   000016                     vfpfcnvrt@cp:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x15
   598   000016                     	ds	1
   599   000017                     vfpfcnvrt@convarg:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x16
   603   000017                     	ds	4
   604   00001B                     vfpfcnvrt@c:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x1A
   608   00001B                     	ds	1
   609   00001C                     ?_vfprintf:
   610                           	callstack 0
   611   00001C                     vfprintf@fp:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x1B
   615   00001C                     	ds	1
   616   00001D                     vfprintf@fmt:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x1C
   620   00001D                     	ds	1
   621   00001E                     vfprintf@ap:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x1D
   625   00001E                     	ds	1
   626   00001F                     vfprintf@cfmt:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x1E
   630   00001F                     	ds	1
   631   000020                     ?_sprintf:
   632                           	callstack 0
   633   000020                     sprintf@s:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x1F
   637   000020                     	ds	1
   638   000021                     sprintf@fmt:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x20
   642   000021                     	ds	3
   643   000024                     sprintf@ret:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x23
   647   000024                     	ds	2
   648   000026                     sprintf@ap:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x25
   652   000026                     	ds	1
   653   000027                     sprintf@f:
   654                           	callstack 0
   655                           
   656                           ; 12 bytes @ 0x26
   657   000027                     	ds	12
   658   000033                     sendArraySerial4@arr:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x32
   662   000033                     	ds	1
   663   000034                     ??_sendArraySerial4:
   664                           
   665                           ; 1 bytes @ 0x33
   666   000034                     	ds	1
   667   000035                     ??_main:
   668                           
   669                           ; 1 bytes @ 0x34
   670   000035                     	ds	2
   671   000037                     main@motorL:
   672                           	callstack 0
   673                           
   674                           ; 9 bytes @ 0x36
   675   000037                     	ds	9
   676   000040                     main@motorR:
   677                           	callstack 0
   678                           
   679                           ; 9 bytes @ 0x3F
   680   000040                     	ds	9
   681                           
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 26 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  motorR          9   63[COMRAM] struct DC_motor
   692 ;;  motorL          9   54[COMRAM] struct DC_motor
   693 ;;  PWMcycle        2    0        unsigned int 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   704 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;Total ram usage:       20 bytes
   708 ;; Hardware stack levels required when called: 8
   709 ;; This function calls:
   710 ;;		_Timer0_init
   711 ;;		_buggy_lights_init
   712 ;;		_color_click_init
   713 ;;		_initDCmotorsPWM
   714 ;;		_initUSART4
   715 ;;		_sendArraySerial4
   716 ;; This function is called by:
   717 ;;		Startup code after reset
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text0
   722   001000                     __ptext0:
   723                           	callstack 0
   724   001000                     _main:
   725                           	callstack 23
   726   001000                     
   727                           ;main.c: 27:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   728   001000  0E52               	movlw	82
   729   001002  6E36               	movwf	(??_main+1)^0,c
   730   001004  0E2B               	movlw	43
   731   001006  6E35               	movwf	??_main^0,c
   732   001008  0E00               	movlw	0
   733   00100A                     u2347:
   734   00100A  2EE8               	decfsz	wreg,f,c
   735   00100C  D7FE               	bra	u2347
   736   00100E  2E35               	decfsz	??_main^0,f,c
   737   001010  D7FC               	bra	u2347
   738   001012  2E36               	decfsz	(??_main+1)^0,f,c
   739   001014  D7FA               	bra	u2347
   740   001016  D000               	nop2	
   741   001018                     
   742                           ;main.c: 30:     initDCmotorsPWM(PWMcycle);
   743   001018  0E00               	movlw	0
   744   00101A  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   745   00101C  0E63               	movlw	99
   746   00101E  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   747   001020  EC84  F009         	call	_initDCmotorsPWM	;wreg free
   748   001024                     
   749                           ;main.c: 32:     struct DC_motor motorL, motorR;;main.c: 34:     motorL.power = 0;
   750   001024  0E00               	movlw	0
   751   001026  6E37               	movwf	main@motorL^0,c
   752   001028                     
   753                           ;main.c: 35:     motorL.direction = 1;
   754   001028  0E01               	movlw	1
   755   00102A  6E38               	movwf	(main@motorL+1)^0,c
   756   00102C                     
   757                           ;main.c: 36:     motorL.brakemode = 1;
   758   00102C  0E01               	movlw	1
   759   00102E  6E39               	movwf	(main@motorL+2)^0,c
   760   001030                     
   761                           ;main.c: 37:     motorL.PWMperiod = PWMcycle;
   762   001030  0E00               	movlw	0
   763   001032  6E3B               	movwf	(main@motorL+4)^0,c
   764   001034  0E63               	movlw	99
   765   001036  6E3A               	movwf	(main@motorL+3)^0,c
   766   001038                     
   767                           ;main.c: 38:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   768   001038  0EAA               	movlw	170
   769   00103A  6E3C               	movwf	(main@motorL+5)^0,c
   770   00103C  0E0F               	movlw	15
   771   00103E  6E3D               	movwf	(main@motorL+6)^0,c
   772   001040                     
   773                           ;main.c: 39:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   774   001040  0EA6               	movlw	166
   775   001042  6E3E               	movwf	(main@motorL+7)^0,c
   776   001044  0E0F               	movlw	15
   777   001046  6E3F               	movwf	(main@motorL+8)^0,c
   778   001048                     
   779                           ;main.c: 41:     motorR.power = 0;
   780   001048  0E00               	movlw	0
   781   00104A  6E40               	movwf	main@motorR^0,c
   782   00104C                     
   783                           ;main.c: 42:     motorR.direction = 1;
   784   00104C  0E01               	movlw	1
   785   00104E  6E41               	movwf	(main@motorR+1)^0,c
   786   001050                     
   787                           ;main.c: 43:     motorR.brakemode = 1;
   788   001050  0E01               	movlw	1
   789   001052  6E42               	movwf	(main@motorR+2)^0,c
   790   001054                     
   791                           ;main.c: 44:     motorR.PWMperiod = PWMcycle;
   792   001054  0E00               	movlw	0
   793   001056  6E44               	movwf	(main@motorR+4)^0,c
   794   001058  0E63               	movlw	99
   795   00105A  6E43               	movwf	(main@motorR+3)^0,c
   796   00105C                     
   797                           ;main.c: 45:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   798   00105C  0E25               	movlw	37
   799   00105E  6E45               	movwf	(main@motorR+5)^0,c
   800   001060  0E0F               	movlw	15
   801   001062  6E46               	movwf	(main@motorR+6)^0,c
   802   001064                     
   803                           ;main.c: 46:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   804   001064  0E21               	movlw	33
   805   001066  6E47               	movwf	(main@motorR+7)^0,c
   806   001068  0E0F               	movlw	15
   807   00106A  6E48               	movwf	(main@motorR+8)^0,c
   808   00106C                     
   809                           ;main.c: 48:     buggy_lights_init();
   810   00106C  EC92  F00A         	call	_buggy_lights_init	;wreg free
   811   001070                     
   812                           ;main.c: 49:     color_click_init();
   813   001070  EC1A  F00B         	call	_color_click_init	;wreg free
   814   001074                     
   815                           ;main.c: 50:     initUSART4();
   816   001074  ECA6  F00B         	call	_initUSART4	;wreg free
   817   001078                     
   818                           ;main.c: 51:     Timer0_init();
   819   001078  EC96  F00B         	call	_Timer0_init	;wreg free
   820   00107C                     
   821                           ;main.c: 55:     TRISFbits.TRISF2 = 1;
   822   00107C  8486               	bsf	134,2,c	;volatile
   823   00107E                     
   824                           ;main.c: 56:     TRISFbits.TRISF3 = 1;
   825   00107E  8686               	bsf	134,3,c	;volatile
   826   001080                     
   827                           ;main.c: 58:     ANSELFbits.ANSELF2 = 0;
   828   001080  010E               	movlb	14	; () banked
   829   001082  95B4               	bcf	180,2,b	;volatile
   830   001084                     
   831                           ; BSR set to: 14
   832                           ;main.c: 59:     ANSELFbits.ANSELF3 = 0;
   833   001084  97B4               	bcf	180,3,b	;volatile
   834   001086                     l3498:
   835                           
   836                           ;main.c: 75:         if (!PORTFbits.RF2) {
   837   001086  B48E               	btfsc	142,2,c	;volatile
   838   001088  EF48  F008         	goto	u2311
   839   00108C  EF4A  F008         	goto	u2310
   840   001090                     u2311:
   841   001090  EF61  F008         	goto	l3506
   842   001094                     u2310:
   843   001094                     
   844                           ;main.c: 76:             *manoeuvre_pointer = 0;
   845   001094  0100               	movlb	0	; () banked
   846   001096  516C               	movf	_manoeuvre_pointer& (0+255),w,b
   847   001098  6ED9               	movwf	fsr2l,c
   848   00109A  6ADA               	clrf	fsr2h,c
   849   00109C  6ADF               	clrf	indf2,c
   850   00109E                     
   851                           ; BSR set to: 0
   852                           ;main.c: 77:             manoeuvre_pointer ++;
   853   00109E  2B6C               	incf	_manoeuvre_pointer& (0+255),f,b
   854   0010A0                     
   855                           ; BSR set to: 0
   856                           ;main.c: 78:             LATDbits.LATD7 = !LATDbits.LATD7;
   857   0010A0  AE7C               	btfss	124,7,c	;volatile
   858   0010A2  EF55  F008         	goto	u2321
   859   0010A6  EF59  F008         	goto	u2320
   860   0010AA                     u2321:
   861   0010AA  6A35               	clrf	??_main^0,c
   862   0010AC  2A35               	incf	??_main^0,f,c
   863   0010AE  EF5A  F008         	goto	u2338
   864   0010B2                     u2320:
   865   0010B2  6A35               	clrf	??_main^0,c
   866   0010B4                     u2338:
   867   0010B4  3235               	rrcf	??_main^0,f,c
   868   0010B6  3235               	rrcf	??_main^0,f,c
   869   0010B8  507C               	movf	124,w,c	;volatile
   870   0010BA  1835               	xorwf	??_main^0,w,c
   871   0010BC  0B7F               	andlw	-129
   872   0010BE  1835               	xorwf	??_main^0,w,c
   873   0010C0  6E7C               	movwf	124,c	;volatile
   874   0010C2                     l3506:
   875                           
   876                           ;main.c: 80:         sendArraySerial4(trail_manoeuvre);
   877   0010C2  0E6D               	movlw	low _trail_manoeuvre
   878   0010C4  6E33               	movwf	sendArraySerial4@arr^0,c
   879   0010C6  EC03  F00A         	call	_sendArraySerial4	;wreg free
   880   0010CA                     
   881                           ;main.c: 81:         _delay((unsigned long)((500)*(64000000/4000.0)));
   882   0010CA  0E29               	movlw	41
   883   0010CC  6E36               	movwf	(??_main+1)^0,c
   884   0010CE  0E96               	movlw	150
   885   0010D0  6E35               	movwf	??_main^0,c
   886   0010D2  0E7F               	movlw	127
   887   0010D4                     u2357:
   888   0010D4  2EE8               	decfsz	wreg,f,c
   889   0010D6  D7FE               	bra	u2357
   890   0010D8  2E35               	decfsz	??_main^0,f,c
   891   0010DA  D7FC               	bra	u2357
   892   0010DC  2E36               	decfsz	(??_main+1)^0,f,c
   893   0010DE  D7FA               	bra	u2357
   894   0010E0  0000               	nop	
   895   0010E2  EF43  F008         	goto	l3498
   896   0010E6  EF3A  F000         	goto	start
   897   0010EA                     __end_of_main:
   898                           	callstack 0
   899                           
   900 ;; *************** function _sendArraySerial4 *****************
   901 ;; Defined at:
   902 ;;		line 50 in file "serial.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  arr             1   50[COMRAM] PTR unsigned char 
   905 ;;		 -> trail_manoeuvre(20), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  i               2   22[BANK0 ] unsigned int 
   908 ;;  tempStr        21    0[BANK0 ] unsigned char [21]
   909 ;;  index           1   21[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Totals:         2      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;Total ram usage:       26 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 7
   926 ;; This function calls:
   927 ;;		_sendStringSerial4
   928 ;;		_sprintf
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text1
   935   001406                     __ptext1:
   936                           	callstack 0
   937   001406                     _sendArraySerial4:
   938                           	callstack 23
   939   001406                     
   940                           ;serial.c: 51:     unsigned char index = 0;
   941   001406  0E00               	movlw	0
   942   001408  0100               	movlb	0	; () banked
   943   00140A  6FF6               	movwf	sendArraySerial4@index& (0+255),b
   944                           
   945                           ;serial.c: 54:     char tempStr[20 + 1];;serial.c: 55:     for (unsigned int i = 0; i < 
      +                          20; i++) {
   946   00140C  0E00               	movlw	0
   947   00140E  6FF8               	movwf	(sendArraySerial4@i+1)& (0+255),b
   948   001410  0E00               	movlw	0
   949   001412  6FF7               	movwf	sendArraySerial4@i& (0+255),b
   950   001414                     l3424:
   951                           
   952                           ; BSR set to: 0
   953                           ;serial.c: 56:         index += sprintf(&tempStr[index], "%d", arr[i]);
   954   001414  51F6               	movf	sendArraySerial4@index& (0+255),w,b
   955   001416  0FE1               	addlw	low sendArraySerial4@tempStr
   956   001418  6E20               	movwf	sprintf@s^0,c
   957   00141A  0E06               	movlw	low STR_2
   958   00141C  6E21               	movwf	sprintf@fmt^0,c
   959   00141E  5033               	movf	sendArraySerial4@arr^0,w,c
   960   001420  25F7               	addwf	sendArraySerial4@i& (0+255),w,b
   961   001422  6ED9               	movwf	fsr2l,c
   962   001424  6ADA               	clrf	fsr2h,c
   963   001426  50DF               	movf	indf2,w,c
   964   001428  6E34               	movwf	??_sendArraySerial4^0,c
   965   00142A  5034               	movf	??_sendArraySerial4^0,w,c
   966   00142C  6E22               	movwf	(?_sprintf+2)^0,c
   967   00142E  6A23               	clrf	(?_sprintf+3)^0,c
   968   001430  ECDE  F00A         	call	_sprintf	;wreg free
   969   001434  5020               	movf	?_sprintf^0,w,c
   970   001436  0100               	movlb	0	; () banked
   971   001438  27F6               	addwf	sendArraySerial4@index& (0+255),f,b
   972   00143A                     
   973                           ; BSR set to: 0
   974                           ;serial.c: 57:     }
   975   00143A  4BF7               	infsnz	sendArraySerial4@i& (0+255),f,b
   976   00143C  2BF8               	incf	(sendArraySerial4@i+1)& (0+255),f,b
   977   00143E                     
   978                           ; BSR set to: 0
   979   00143E  51F8               	movf	(sendArraySerial4@i+1)& (0+255),w,b
   980   001440  E109               	bnz	u2280
   981   001442  0E14               	movlw	20
   982   001444  5DF7               	subwf	sendArraySerial4@i& (0+255),w,b
   983   001446  A0D8               	btfss	status,0,c
   984   001448  EF28  F00A         	goto	u2281
   985   00144C  EF2A  F00A         	goto	u2280
   986   001450                     u2281:
   987   001450  EF0A  F00A         	goto	l3424
   988   001454                     u2280:
   989   001454                     
   990                           ; BSR set to: 0
   991                           ;serial.c: 58:     sendStringSerial4(tempStr);
   992   001454  0EE1               	movlw	low sendArraySerial4@tempStr
   993   001456  6E06               	movwf	sendStringSerial4@string^0,c
   994   001458  6A07               	clrf	(sendStringSerial4@string+1)^0,c
   995   00145A  EC38  F00A         	call	_sendStringSerial4	;wreg free
   996                           
   997                           ;serial.c: 59:     sendStringSerial4(" \r");
   998   00145E  0E03               	movlw	low (STR_1+2)
   999   001460  6E06               	movwf	sendStringSerial4@string^0,c
  1000   001462  5006               	movf	sendStringSerial4@string^0,w,c
  1001   001464  A4D8               	btfss	status,2,c
  1002   001466  0E0E               	movlw	high __smallconst
  1003   001468  6E07               	movwf	(sendStringSerial4@string+1)^0,c
  1004   00146A  EC38  F00A         	call	_sendStringSerial4	;wreg free
  1005   00146E  0012               	return		;funcret
  1006   001470                     __end_of_sendArraySerial4:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _sprintf *****************
  1010 ;; Defined at:
  1011 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  s               1   31[COMRAM] PTR unsigned char 
  1014 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
  1015 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  1016 ;;		 -> STR_3(3), STR_1(5), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  f              12   38[COMRAM] struct _IO_FILE
  1019 ;;  ret             2   35[COMRAM] int 
  1020 ;;  ap              1   37[COMRAM] PTR void [1]
  1021 ;;		 -> ?_sprintf(2), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2   31[COMRAM] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;Total ram usage:       19 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 6
  1038 ;; This function calls:
  1039 ;;		_vfprintf
  1040 ;; This function is called by:
  1041 ;;		_sendArraySerial4
  1042 ;;		_sendIntSerial4
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047   0015BC                     __ptext2:
  1048                           	callstack 0
  1049   0015BC                     _sprintf:
  1050                           	callstack 23
  1051   0015BC  0E22               	movlw	low (?_sprintf+2)
  1052   0015BE  6E26               	movwf	sprintf@ap^0,c
  1053   0015C0  C020  F027         	movff	sprintf@s,sprintf@f
  1054   0015C4  0E00               	movlw	0
  1055   0015C6  6E2B               	movwf	(sprintf@f+4)^0,c
  1056   0015C8  0E00               	movlw	0
  1057   0015CA  6E2A               	movwf	(sprintf@f+3)^0,c
  1058   0015CC  0E00               	movlw	0
  1059   0015CE  6E32               	movwf	(sprintf@f+11)^0,c
  1060   0015D0  0E00               	movlw	0
  1061   0015D2  6E31               	movwf	(sprintf@f+10)^0,c
  1062   0015D4  0E27               	movlw	low sprintf@f
  1063   0015D6  6E1C               	movwf	vfprintf@fp^0,c
  1064   0015D8  C021  F01D         	movff	sprintf@fmt,vfprintf@fmt
  1065   0015DC  0E26               	movlw	low sprintf@ap
  1066   0015DE  6E1E               	movwf	vfprintf@ap^0,c
  1067   0015E0  EC69  F00A         	call	_vfprintf	;wreg free
  1068   0015E4  C01C  F024         	movff	?_vfprintf,sprintf@ret
  1069   0015E8  C01D  F025         	movff	?_vfprintf+1,sprintf@ret+1
  1070   0015EC  5020               	movf	sprintf@s^0,w,c
  1071   0015EE  242A               	addwf	(sprintf@f+3)^0,w,c
  1072   0015F0  6ED9               	movwf	fsr2l,c
  1073   0015F2  6ADA               	clrf	fsr2h,c
  1074   0015F4  6ADF               	clrf	indf2,c
  1075   0015F6  C024  F020         	movff	sprintf@ret,?_sprintf
  1076   0015FA  C025  F021         	movff	sprintf@ret+1,?_sprintf+1
  1077   0015FE  0012               	return		;funcret
  1078   001600                     __end_of_sprintf:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _vfprintf *****************
  1082 ;; Defined at:
  1083 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  1086 ;;		 -> sprintf@f(12), 
  1087 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1088 ;;		 -> STR_3(3), STR_1(5), 
  1089 ;;  ap              1   29[COMRAM] PTR PTR void 
  1090 ;;		 -> sprintf@ap(1), 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1093 ;;		 -> STR_3(3), STR_1(5), 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  2   27[COMRAM] int 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1103 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;Total ram usage:        4 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 5
  1110 ;; This function calls:
  1111 ;;		_vfpfcnvrt
  1112 ;; This function is called by:
  1113 ;;		_sprintf
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text3
  1118   0014D2                     __ptext3:
  1119                           	callstack 0
  1120   0014D2                     _vfprintf:
  1121                           	callstack 23
  1122   0014D2                     
  1123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1124   0014D2  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1125   0014D6                     
  1126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1127   0014D6  0E00               	movlw	0
  1128   0014D8  6E4A               	movwf	(_nout+1)^0,c
  1129   0014DA  0E00               	movlw	0
  1130   0014DC  6E49               	movwf	_nout^0,c
  1131                           
  1132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1133   0014DE  EF7D  F00A         	goto	l3300
  1134   0014E2                     l3298:
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1137   0014E2  C01C  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1138   0014E6  0E1F               	movlw	low vfprintf@cfmt
  1139   0014E8  6E10               	movwf	vfpfcnvrt@fmt^0,c
  1140   0014EA  C01E  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  1141   0014EE  EC05  F007         	call	_vfpfcnvrt	;wreg free
  1142   0014F2  500F               	movf	?_vfpfcnvrt^0,w,c
  1143   0014F4  2649               	addwf	_nout^0,f,c
  1144   0014F6  5010               	movf	(?_vfpfcnvrt+1)^0,w,c
  1145   0014F8  224A               	addwfc	(_nout+1)^0,f,c
  1146   0014FA                     l3300:
  1147                           
  1148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1149   0014FA  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1150   0014FE                     	if	1	;There is more than 1 active tblptr byte
  1151   0014FE  0E0E               	movlw	high __smallconst
  1152   001500  6EF7               	movwf	tblptrh,c
  1153   001502                     	endif
  1154   001502                     	if	0	;tblptru may be non-zero
  1155   001502                     	endif
  1156   001502                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1157   001502  0E00               	movlw	low (__smallconst shr (0+16))
  1158   001504  6EF8               	movwf	tblptru,c
  1159   001506                     	endif
  1160   001506  0008               	tblrd		*
  1161   001508  50F5               	movf	tablat,w,c
  1162   00150A  0900               	iorlw	0
  1163   00150C  A4D8               	btfss	status,2,c
  1164   00150E  EF8B  F00A         	goto	u2241
  1165   001512  EF8D  F00A         	goto	u2240
  1166   001516                     u2241:
  1167   001516  EF71  F00A         	goto	l3298
  1168   00151A                     u2240:
  1169   00151A                     
  1170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1171   00151A  C049  F01C         	movff	_nout,?_vfprintf
  1172   00151E  C04A  F01D         	movff	_nout+1,?_vfprintf+1
  1173   001522  0012               	return		;funcret
  1174   001524                     __end_of_vfprintf:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _vfpfcnvrt *****************
  1178 ;; Defined at:
  1179 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1182 ;;		 -> sprintf@f(12), 
  1183 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1184 ;;		 -> vfprintf@cfmt(1), 
  1185 ;;  ap              1   16[COMRAM] PTR PTR void 
  1186 ;;		 -> sprintf@ap(1), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  convarg         4   22[COMRAM] struct .
  1189 ;;  cnt             2   19[COMRAM] int 
  1190 ;;  c               1   26[COMRAM] unsigned char 
  1191 ;;  cp              1   21[COMRAM] PTR unsigned char 
  1192 ;;		 -> STR_3(3), STR_1(5), 
  1193 ;;  done            1   18[COMRAM] _Bool 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   14[COMRAM] int 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;Total ram usage:       13 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 4
  1210 ;; This function calls:
  1211 ;;		___awdiv
  1212 ;;		___awmod
  1213 ;;		_abs
  1214 ;;		_fputc
  1215 ;; This function is called by:
  1216 ;;		_vfprintf
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text4
  1221   000E0A                     __ptext4:
  1222                           	callstack 0
  1223   000E0A                     _vfpfcnvrt:
  1224                           	callstack 23
  1225   000E0A                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1227   000E0A  0E00               	movlw	0
  1228   000E0C  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1229   000E0E  0E00               	movlw	0
  1230   000E10  6E14               	movwf	vfpfcnvrt@cnt^0,c
  1231   000E12                     
  1232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1233   000E12  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1234   000E14  6ED9               	movwf	fsr2l,c
  1235   000E16  6ADA               	clrf	fsr2h,c
  1236   000E18  CFDF FFF6          	movff	indf2,tblptrl
  1237   000E1C                     	if	1	;There is more than 1 active tblptr byte
  1238   000E1C  0E0E               	movlw	high __smallconst
  1239   000E1E  6EF7               	movwf	tblptrh,c
  1240   000E20                     	endif
  1241   000E20                     	if	0	;tblptru may be non-zero
  1242   000E20                     	endif
  1243   000E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1244   000E20  0E00               	movlw	low (__smallconst shr (0+16))
  1245   000E22  6EF8               	movwf	tblptru,c
  1246   000E24                     	endif
  1247   000E24  0008               	tblrd		*
  1248   000E26  50F5               	movf	tablat,w,c
  1249   000E28  0A25               	xorlw	37
  1250   000E2A  A4D8               	btfss	status,2,c
  1251   000E2C  EF1A  F007         	goto	u2131
  1252   000E30  EF1C  F007         	goto	u2130
  1253   000E34                     u2131:
  1254   000E34  EFE6  F007         	goto	l3270
  1255   000E38                     u2130:
  1256   000E38                     
  1257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1258   000E38  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1259   000E3A  6ED9               	movwf	fsr2l,c
  1260   000E3C  6ADA               	clrf	fsr2h,c
  1261   000E3E  2ADF               	incf	indf2,f,c
  1262   000E40                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1264   000E40  0E00               	movlw	0
  1265   000E42  0100               	movlb	0	; () banked
  1266   000E44  6FDE               	movwf	(_width+1)& (0+255),b
  1267   000E46  0E00               	movlw	0
  1268   000E48  6FDD               	movwf	_width& (0+255),b
  1269   000E4A  C0DD  F04B         	movff	_width,_flags
  1270   000E4E                     
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1273   000E4E  69DF               	setf	_prec& (0+255),b
  1274   000E50  69E0               	setf	(_prec+1)& (0+255),b
  1275   000E52                     
  1276                           ; BSR set to: 0
  1277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1278   000E52  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1279   000E54  6ED9               	movwf	fsr2l,c
  1280   000E56  6ADA               	clrf	fsr2h,c
  1281   000E58  50DF               	movf	indf2,w,c
  1282   000E5A  6E16               	movwf	vfpfcnvrt@cp^0,c
  1283   000E5C                     
  1284                           ; BSR set to: 0
  1285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1286   000E5C  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1287   000E60                     	if	1	;There is more than 1 active tblptr byte
  1288   000E60  0E0E               	movlw	high __smallconst
  1289   000E62  6EF7               	movwf	tblptrh,c
  1290   000E64                     	endif
  1291   000E64                     	if	0	;tblptru may be non-zero
  1292   000E64                     	endif
  1293   000E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1294   000E64  0E00               	movlw	low (__smallconst shr (0+16))
  1295   000E66  6EF8               	movwf	tblptru,c
  1296   000E68                     	endif
  1297   000E68  0008               	tblrd		*
  1298   000E6A  50F5               	movf	tablat,w,c
  1299   000E6C  0A64               	xorlw	100
  1300   000E6E  B4D8               	btfsc	status,2,c
  1301   000E70  EF3C  F007         	goto	u2141
  1302   000E74  EF3E  F007         	goto	u2140
  1303   000E78                     u2141:
  1304   000E78  EF4E  F007         	goto	l3234
  1305   000E7C                     u2140:
  1306   000E7C                     
  1307                           ; BSR set to: 0
  1308   000E7C  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1309   000E80                     	if	1	;There is more than 1 active tblptr byte
  1310   000E80  0E0E               	movlw	high __smallconst
  1311   000E82  6EF7               	movwf	tblptrh,c
  1312   000E84                     	endif
  1313   000E84                     	if	0	;tblptru may be non-zero
  1314   000E84                     	endif
  1315   000E84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1316   000E84  0E00               	movlw	low (__smallconst shr (0+16))
  1317   000E86  6EF8               	movwf	tblptru,c
  1318   000E88                     	endif
  1319   000E88  0008               	tblrd		*
  1320   000E8A  50F5               	movf	tablat,w,c
  1321   000E8C  0A69               	xorlw	105
  1322   000E8E  A4D8               	btfss	status,2,c
  1323   000E90  EF4C  F007         	goto	u2151
  1324   000E94  EF4E  F007         	goto	u2150
  1325   000E98                     u2151:
  1326   000E98  EFDC  F007         	goto	l3264
  1327   000E9C                     u2150:
  1328   000E9C                     l3234:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1332   000E9C  5011               	movf	vfpfcnvrt@ap^0,w,c
  1333   000E9E  6ED9               	movwf	fsr2l,c
  1334   000EA0  6ADA               	clrf	fsr2h,c
  1335   000EA2  0E02               	movlw	2
  1336   000EA4  26DF               	addwf	indf2,f,c
  1337   000EA6  5CDF               	subwf	indf2,w,c
  1338   000EA8  6ED9               	movwf	fsr2l,c
  1339   000EAA  6ADA               	clrf	fsr2h,c
  1340   000EAC  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  1341   000EB0  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  1342   000EB4                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1345   000EB4  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1346   000EB6  6ED9               	movwf	fsr2l,c
  1347   000EB8  6ADA               	clrf	fsr2h,c
  1348   000EBA  2816               	incf	vfpfcnvrt@cp^0,w,c
  1349   000EBC  6EDF               	movwf	indf2,c
  1350   000EBE                     
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1353   000EBE  0E20               	movlw	32
  1354   000EC0  6E1B               	movwf	vfpfcnvrt@c^0,c
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1357   000EC2  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1358   000EC4  EF66  F007         	goto	u2161
  1359   000EC8  EF69  F007         	goto	u2160
  1360   000ECC                     u2161:
  1361   000ECC  0E01               	movlw	1
  1362   000ECE  EF6A  F007         	goto	u2170
  1363   000ED2                     u2160:
  1364   000ED2  0E00               	movlw	0
  1365   000ED4                     u2170:
  1366   000ED4  6E13               	movwf	vfpfcnvrt@done^0,c
  1367   000ED6                     l3240:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1370   000ED6  061B               	decf	vfpfcnvrt@c^0,f,c
  1371   000ED8  501B               	movf	vfpfcnvrt@c^0,w,c
  1372   000EDA  0FA9               	addlw	low _dbuf
  1373   000EDC  6ED9               	movwf	fsr2l,c
  1374   000EDE  6ADA               	clrf	fsr2h,c
  1375   000EE0  C017  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1376   000EE4  C018  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1377   000EE8  0E00               	movlw	0
  1378   000EEA  6E08               	movwf	(___awmod@divisor+1)^0,c
  1379   000EEC  0E0A               	movlw	10
  1380   000EEE  6E07               	movwf	___awmod@divisor^0,c
  1381   000EF0  ECD7  F008         	call	___awmod	;wreg free
  1382   000EF4  C005  F00B         	movff	?___awmod,abs@a
  1383   000EF8  C006  F00C         	movff	?___awmod+1,abs@a+1
  1384   000EFC  EC00  F00B         	call	_abs	;wreg free
  1385   000F00  500B               	movf	?_abs^0,w,c
  1386   000F02  0F30               	addlw	48
  1387   000F04  6EDF               	movwf	indf2,c
  1388   000F06                     
  1389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1390   000F06  C017  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1391   000F0A  C018  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1392   000F0E  0E00               	movlw	0
  1393   000F10  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1394   000F12  0E0A               	movlw	10
  1395   000F14  6E07               	movwf	___awdiv@divisor^0,c
  1396   000F16  EC75  F008         	call	___awdiv	;wreg free
  1397   000F1A  C005  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  1398   000F1E  C006  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1399   000F22                     
  1400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1401   000F22  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1402   000F24  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1403   000F26                     
  1404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1405   000F26  5017               	movf	vfpfcnvrt@convarg^0,w,c
  1406   000F28  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1407   000F2A  B4D8               	btfsc	status,2,c
  1408   000F2C  EF9A  F007         	goto	u2181
  1409   000F30  EF9C  F007         	goto	u2180
  1410   000F34                     u2181:
  1411   000F34  EFA4  F007         	goto	l3250
  1412   000F38                     u2180:
  1413   000F38  501B               	movf	vfpfcnvrt@c^0,w,c
  1414   000F3A  A4D8               	btfss	status,2,c
  1415   000F3C  EFA2  F007         	goto	u2191
  1416   000F40  EFA4  F007         	goto	u2190
  1417   000F44                     u2191:
  1418   000F44  EF6B  F007         	goto	l3240
  1419   000F48                     u2190:
  1420   000F48                     l3250:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1423   000F48  501B               	movf	vfpfcnvrt@c^0,w,c
  1424   000F4A  B4D8               	btfsc	status,2,c
  1425   000F4C  EFAA  F007         	goto	u2201
  1426   000F50  EFAC  F007         	goto	u2200
  1427   000F54                     u2201:
  1428   000F54  EFCD  F007         	goto	l3262
  1429   000F58                     u2200:
  1430   000F58  5013               	movf	vfpfcnvrt@done^0,w,c
  1431   000F5A  B4D8               	btfsc	status,2,c
  1432   000F5C  EFB2  F007         	goto	u2211
  1433   000F60  EFB4  F007         	goto	u2210
  1434   000F64                     u2211:
  1435   000F64  EFCD  F007         	goto	l3262
  1436   000F68                     u2210:
  1437   000F68                     
  1438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1439   000F68  061B               	decf	vfpfcnvrt@c^0,f,c
  1440   000F6A  501B               	movf	vfpfcnvrt@c^0,w,c
  1441   000F6C  0FA9               	addlw	low _dbuf
  1442   000F6E  6ED9               	movwf	fsr2l,c
  1443   000F70  6ADA               	clrf	fsr2h,c
  1444   000F72  0E2D               	movlw	45
  1445   000F74  6EDF               	movwf	indf2,c
  1446   000F76                     
  1447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1448   000F76  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1449   000F78  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1450   000F7A  EFCD  F007         	goto	l3262
  1451   000F7E                     l3258:
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1454   000F7E  501B               	movf	vfpfcnvrt@c^0,w,c
  1455   000F80  0FA9               	addlw	low _dbuf
  1456   000F82  6ED9               	movwf	fsr2l,c
  1457   000F84  6ADA               	clrf	fsr2h,c
  1458   000F86  50DF               	movf	indf2,w,c
  1459   000F88  6E12               	movwf	??_vfpfcnvrt^0,c
  1460   000F8A  5012               	movf	??_vfpfcnvrt^0,w,c
  1461   000F8C  6E05               	movwf	fputc@c^0,c
  1462   000F8E  6A06               	clrf	(fputc@c+1)^0,c
  1463   000F90  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1464   000F94  EC2F  F009         	call	_fputc	;wreg free
  1465   000F98  2A1B               	incf	vfpfcnvrt@c^0,f,c
  1466   000F9A                     l3262:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1469   000F9A  0E20               	movlw	32
  1470   000F9C  181B               	xorwf	vfpfcnvrt@c^0,w,c
  1471   000F9E  A4D8               	btfss	status,2,c
  1472   000FA0  EFD4  F007         	goto	u2221
  1473   000FA4  EFD6  F007         	goto	u2220
  1474   000FA8                     u2221:
  1475   000FA8  EFBF  F007         	goto	l3258
  1476   000FAC                     u2220:
  1477   000FAC                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1479   000FAC  C014  F00F         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1480   000FB0  C015  F010         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1481   000FB4  EFFF  F007         	goto	l1340
  1482   000FB8                     l3264:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1486   000FB8  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1487   000FBA  6ED9               	movwf	fsr2l,c
  1488   000FBC  6ADA               	clrf	fsr2h,c
  1489   000FBE  2ADF               	incf	indf2,f,c
  1490   000FC0                     
  1491                           ; BSR set to: 0
  1492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1493   000FC0  0E00               	movlw	0
  1494   000FC2  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1495   000FC4  0E00               	movlw	0
  1496   000FC6  6E0F               	movwf	?_vfpfcnvrt^0,c
  1497   000FC8  EFFF  F007         	goto	l1340
  1498   000FCC                     l3270:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1501   000FCC  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1502   000FCE  6ED9               	movwf	fsr2l,c
  1503   000FD0  6ADA               	clrf	fsr2h,c
  1504   000FD2  CFDF FFF6          	movff	indf2,tblptrl
  1505   000FD6                     	if	1	;There is more than 1 active tblptr byte
  1506   000FD6  0E0E               	movlw	high __smallconst
  1507   000FD8  6EF7               	movwf	tblptrh,c
  1508   000FDA                     	endif
  1509   000FDA                     	if	0	;tblptru may be non-zero
  1510   000FDA                     	endif
  1511   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1512   000FDA  0E00               	movlw	low (__smallconst shr (0+16))
  1513   000FDC  6EF8               	movwf	tblptru,c
  1514   000FDE                     	endif
  1515   000FDE  0008               	tblrd		*
  1516   000FE0  50F5               	movf	tablat,w,c
  1517   000FE2  6E05               	movwf	fputc@c^0,c
  1518   000FE4  6A06               	clrf	(fputc@c+1)^0,c
  1519   000FE6  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1520   000FEA  EC2F  F009         	call	_fputc	;wreg free
  1521   000FEE                     
  1522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1523   000FEE  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1524   000FF0  6ED9               	movwf	fsr2l,c
  1525   000FF2  6ADA               	clrf	fsr2h,c
  1526   000FF4  2ADF               	incf	indf2,f,c
  1527   000FF6                     
  1528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1529   000FF6  0E00               	movlw	0
  1530   000FF8  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1531   000FFA  0E01               	movlw	1
  1532   000FFC  6E0F               	movwf	?_vfpfcnvrt^0,c
  1533   000FFE                     l1340:
  1534   000FFE  0012               	return		;funcret
  1535   001000                     __end_of_vfpfcnvrt:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _fputc *****************
  1539 ;; Defined at:
  1540 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  c               2    4[COMRAM] int 
  1543 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1544 ;;		 -> sprintf@f(12), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2    4[COMRAM] int 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;Total ram usage:        8 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 3
  1563 ;; This function calls:
  1564 ;;		_putch
  1565 ;; This function is called by:
  1566 ;;		_vfpfcnvrt
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text5
  1571   00125E                     __ptext5:
  1572                           	callstack 0
  1573   00125E                     _fputc:
  1574                           	callstack 23
  1575   00125E  5007               	movf	fputc@fp^0,w,c
  1576   001260  B4D8               	btfsc	status,2,c
  1577   001262  EF35  F009         	goto	u2061
  1578   001266  EF37  F009         	goto	u2060
  1579   00126A                     u2061:
  1580   00126A  EF3F  F009         	goto	l3200
  1581   00126E                     u2060:
  1582   00126E  5007               	movf	fputc@fp^0,w,c
  1583   001270  A4D8               	btfss	status,2,c
  1584   001272  EF3D  F009         	goto	u2071
  1585   001276  EF3F  F009         	goto	u2070
  1586   00127A                     u2071:
  1587   00127A  EF44  F009         	goto	l3202
  1588   00127E                     u2070:
  1589   00127E                     l3200:
  1590   00127E  5005               	movf	fputc@c^0,w,c
  1591   001280  ECE1  F00B         	call	_putch
  1592   001284  EF83  F009         	goto	l1365
  1593   001288                     l3202:
  1594   001288  5007               	movf	fputc@fp^0,w,c
  1595   00128A  6ED9               	movwf	fsr2l,c
  1596   00128C  6ADA               	clrf	fsr2h,c
  1597   00128E  0E0A               	movlw	10
  1598   001290  26D9               	addwf	fsr2l,f,c
  1599   001292  50DE               	movf	postinc2,w,c
  1600   001294  10DE               	iorwf	postinc2,w,c
  1601   001296  B4D8               	btfsc	status,2,c
  1602   001298  EF50  F009         	goto	u2081
  1603   00129C  EF52  F009         	goto	u2080
  1604   0012A0                     u2081:
  1605   0012A0  EF6B  F009         	goto	l3206
  1606   0012A4                     u2080:
  1607   0012A4  5007               	movf	fputc@fp^0,w,c
  1608   0012A6  6ED9               	movwf	fsr2l,c
  1609   0012A8  6ADA               	clrf	fsr2h,c
  1610   0012AA  0E0A               	movlw	10
  1611   0012AC  26D9               	addwf	fsr2l,f,c
  1612   0012AE  5007               	movf	fputc@fp^0,w,c
  1613   0012B0  6EE1               	movwf	fsr1l,c
  1614   0012B2  6AE2               	clrf	fsr1h,c
  1615   0012B4  0E03               	movlw	3
  1616   0012B6  26E1               	addwf	fsr1l,f,c
  1617   0012B8  50DE               	movf	postinc2,w,c
  1618   0012BA  5CE6               	subwf	postinc1,w,c
  1619   0012BC  50E6               	movf	postinc1,w,c
  1620   0012BE  0A80               	xorlw	128
  1621   0012C0  6E0C               	movwf	(??_fputc+4)^0,c
  1622   0012C2  50DE               	movf	postinc2,w,c
  1623   0012C4  0A80               	xorlw	128
  1624   0012C6  580C               	subwfb	(??_fputc+4)^0,w,c
  1625   0012C8  B0D8               	btfsc	status,0,c
  1626   0012CA  EF69  F009         	goto	u2091
  1627   0012CE  EF6B  F009         	goto	u2090
  1628   0012D2                     u2091:
  1629   0012D2  EF83  F009         	goto	l1365
  1630   0012D6                     u2090:
  1631   0012D6                     l3206:
  1632   0012D6  5007               	movf	fputc@fp^0,w,c
  1633   0012D8  6ED9               	movwf	fsr2l,c
  1634   0012DA  6ADA               	clrf	fsr2h,c
  1635   0012DC  0E03               	movlw	3
  1636   0012DE  26D9               	addwf	fsr2l,f,c
  1637   0012E0  50DF               	movf	indf2,w,c
  1638   0012E2  6E08               	movwf	??_fputc^0,c
  1639   0012E4  5007               	movf	fputc@fp^0,w,c
  1640   0012E6  6ED9               	movwf	fsr2l,c
  1641   0012E8  6ADA               	clrf	fsr2h,c
  1642   0012EA  50DF               	movf	indf2,w,c
  1643   0012EC  2408               	addwf	??_fputc^0,w,c
  1644   0012EE  6ED9               	movwf	fsr2l,c
  1645   0012F0  6ADA               	clrf	fsr2h,c
  1646   0012F2  C005  FFDF         	movff	fputc@c,indf2
  1647   0012F6  5007               	movf	fputc@fp^0,w,c
  1648   0012F8  6ED9               	movwf	fsr2l,c
  1649   0012FA  6ADA               	clrf	fsr2h,c
  1650   0012FC  0E03               	movlw	3
  1651   0012FE  26D9               	addwf	fsr2l,f,c
  1652   001300  2ADE               	incf	postinc2,f,c
  1653   001302  0E00               	movlw	0
  1654   001304  22DD               	addwfc	postdec2,f,c
  1655   001306                     l1365:
  1656   001306  0012               	return		;funcret
  1657   001308                     __end_of_fputc:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _putch *****************
  1661 ;; Defined at:
  1662 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  c               1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  c               1    0[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 2
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_fputc
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text6
  1691   0017C2                     __ptext6:
  1692                           	callstack 0
  1693   0017C2                     _putch:
  1694                           	callstack 23
  1695   0017C2  0012               	return		;funcret
  1696   0017C4                     __end_of_putch:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _abs *****************
  1700 ;; Defined at:
  1701 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  a               2   10[COMRAM] int 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2   10[COMRAM] int 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 2
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_vfpfcnvrt
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text7
  1730   001600                     __ptext7:
  1731                           	callstack 0
  1732   001600                     _abs:
  1733                           	callstack 24
  1734   001600  BE0C               	btfsc	(abs@a+1)^0,7,c
  1735   001602  EF05  F00B         	goto	u2101
  1736   001606  EF07  F00B         	goto	u2100
  1737   00160A                     u2101:
  1738   00160A  EF0D  F00B         	goto	l1350
  1739   00160E                     u2100:
  1740   00160E  C00B  F00B         	movff	abs@a,?_abs
  1741   001612  C00C  F00C         	movff	abs@a+1,?_abs+1
  1742   001616  EF19  F00B         	goto	l1353
  1743   00161A                     l1350:
  1744   00161A  C00B  F00D         	movff	abs@a,??_abs
  1745   00161E  C00C  F00E         	movff	abs@a+1,??_abs+1
  1746   001622  1E0D               	comf	??_abs^0,f,c
  1747   001624  1E0E               	comf	(??_abs+1)^0,f,c
  1748   001626  4A0D               	infsnz	??_abs^0,f,c
  1749   001628  2A0E               	incf	(??_abs+1)^0,f,c
  1750   00162A  C00D  F00B         	movff	??_abs,?_abs
  1751   00162E  C00E  F00C         	movff	??_abs+1,?_abs+1
  1752   001632                     l1353:
  1753   001632  0012               	return		;funcret
  1754   001634                     __end_of_abs:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function ___awmod *****************
  1758 ;; Defined at:
  1759 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  dividend        2    4[COMRAM] int 
  1762 ;;  divisor         2    6[COMRAM] int 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  sign            1    9[COMRAM] unsigned char 
  1765 ;;  counter         1    8[COMRAM] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    4[COMRAM] int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;Total ram usage:        6 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 2
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_vfpfcnvrt
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text8
  1790   0011AE                     __ptext8:
  1791                           	callstack 0
  1792   0011AE                     ___awmod:
  1793                           	callstack 24
  1794   0011AE  0E00               	movlw	0
  1795   0011B0  6E0A               	movwf	___awmod@sign^0,c
  1796   0011B2  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1797   0011B4  EFE0  F008         	goto	u2000
  1798   0011B8  EFDE  F008         	goto	u2001
  1799   0011BC                     u2001:
  1800   0011BC  EFE6  F008         	goto	l3168
  1801   0011C0                     u2000:
  1802   0011C0  6C05               	negf	___awmod@dividend^0,c
  1803   0011C2  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1804   0011C4  B0D8               	btfsc	status,0,c
  1805   0011C6  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1806   0011C8  0E01               	movlw	1
  1807   0011CA  6E0A               	movwf	___awmod@sign^0,c
  1808   0011CC                     l3168:
  1809   0011CC  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1810   0011CE  EFED  F008         	goto	u2010
  1811   0011D2  EFEB  F008         	goto	u2011
  1812   0011D6                     u2011:
  1813   0011D6  EFF1  F008         	goto	l3172
  1814   0011DA                     u2010:
  1815   0011DA  6C07               	negf	___awmod@divisor^0,c
  1816   0011DC  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1817   0011DE  B0D8               	btfsc	status,0,c
  1818   0011E0  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1819   0011E2                     l3172:
  1820   0011E2  5007               	movf	___awmod@divisor^0,w,c
  1821   0011E4  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1822   0011E6  B4D8               	btfsc	status,2,c
  1823   0011E8  EFF8  F008         	goto	u2021
  1824   0011EC  EFFA  F008         	goto	u2020
  1825   0011F0                     u2021:
  1826   0011F0  EF1E  F009         	goto	l3188
  1827   0011F4                     u2020:
  1828   0011F4  0E01               	movlw	1
  1829   0011F6  6E09               	movwf	___awmod@counter^0,c
  1830   0011F8  EF02  F009         	goto	l3178
  1831   0011FC                     l3176:
  1832   0011FC  90D8               	bcf	status,0,c
  1833   0011FE  3607               	rlcf	___awmod@divisor^0,f,c
  1834   001200  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1835   001202  2A09               	incf	___awmod@counter^0,f,c
  1836   001204                     l3178:
  1837   001204  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1838   001206  EF07  F009         	goto	u2031
  1839   00120A  EF09  F009         	goto	u2030
  1840   00120E                     u2031:
  1841   00120E  EFFE  F008         	goto	l3176
  1842   001212                     u2030:
  1843   001212                     l3180:
  1844   001212  5007               	movf	___awmod@divisor^0,w,c
  1845   001214  5C05               	subwf	___awmod@dividend^0,w,c
  1846   001216  5008               	movf	(___awmod@divisor+1)^0,w,c
  1847   001218  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1848   00121A  A0D8               	btfss	status,0,c
  1849   00121C  EF12  F009         	goto	u2041
  1850   001220  EF14  F009         	goto	u2040
  1851   001224                     u2041:
  1852   001224  EF18  F009         	goto	l3184
  1853   001228                     u2040:
  1854   001228  5007               	movf	___awmod@divisor^0,w,c
  1855   00122A  5E05               	subwf	___awmod@dividend^0,f,c
  1856   00122C  5008               	movf	(___awmod@divisor+1)^0,w,c
  1857   00122E  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1858   001230                     l3184:
  1859   001230  90D8               	bcf	status,0,c
  1860   001232  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1861   001234  3207               	rrcf	___awmod@divisor^0,f,c
  1862   001236  2E09               	decfsz	___awmod@counter^0,f,c
  1863   001238  EF09  F009         	goto	l3180
  1864   00123C                     l3188:
  1865   00123C  500A               	movf	___awmod@sign^0,w,c
  1866   00123E  B4D8               	btfsc	status,2,c
  1867   001240  EF24  F009         	goto	u2051
  1868   001244  EF26  F009         	goto	u2050
  1869   001248                     u2051:
  1870   001248  EF2A  F009         	goto	l3192
  1871   00124C                     u2050:
  1872   00124C  6C05               	negf	___awmod@dividend^0,c
  1873   00124E  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1874   001250  B0D8               	btfsc	status,0,c
  1875   001252  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1876   001254                     l3192:
  1877   001254  C005  F005         	movff	___awmod@dividend,?___awmod
  1878   001258  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1879   00125C  0012               	return		;funcret
  1880   00125E                     __end_of___awmod:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function ___awdiv *****************
  1884 ;; Defined at:
  1885 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  dividend        2    4[COMRAM] int 
  1888 ;;  divisor         2    6[COMRAM] int 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  quotient        2   10[COMRAM] int 
  1891 ;;  sign            1    9[COMRAM] unsigned char 
  1892 ;;  counter         1    8[COMRAM] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  2    4[COMRAM] int 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;Total ram usage:        8 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 2
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_vfpfcnvrt
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text9
  1917   0010EA                     __ptext9:
  1918                           	callstack 0
  1919   0010EA                     ___awdiv:
  1920                           	callstack 24
  1921   0010EA  0E00               	movlw	0
  1922   0010EC  6E0A               	movwf	___awdiv@sign^0,c
  1923   0010EE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1924   0010F0  EF7E  F008         	goto	u1940
  1925   0010F4  EF7C  F008         	goto	u1941
  1926   0010F8                     u1941:
  1927   0010F8  EF84  F008         	goto	l3124
  1928   0010FC                     u1940:
  1929   0010FC  6C07               	negf	___awdiv@divisor^0,c
  1930   0010FE  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1931   001100  B0D8               	btfsc	status,0,c
  1932   001102  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1933   001104  0E01               	movlw	1
  1934   001106  6E0A               	movwf	___awdiv@sign^0,c
  1935   001108                     l3124:
  1936   001108  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1937   00110A  EF8B  F008         	goto	u1950
  1938   00110E  EF89  F008         	goto	u1951
  1939   001112                     u1951:
  1940   001112  EF91  F008         	goto	l3130
  1941   001116                     u1950:
  1942   001116  6C05               	negf	___awdiv@dividend^0,c
  1943   001118  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1944   00111A  B0D8               	btfsc	status,0,c
  1945   00111C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1946   00111E  0E01               	movlw	1
  1947   001120  1A0A               	xorwf	___awdiv@sign^0,f,c
  1948   001122                     l3130:
  1949   001122  0E00               	movlw	0
  1950   001124  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1951   001126  0E00               	movlw	0
  1952   001128  6E0B               	movwf	___awdiv@quotient^0,c
  1953   00112A  5007               	movf	___awdiv@divisor^0,w,c
  1954   00112C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1955   00112E  B4D8               	btfsc	status,2,c
  1956   001130  EF9C  F008         	goto	u1961
  1957   001134  EF9E  F008         	goto	u1960
  1958   001138                     u1961:
  1959   001138  EFC6  F008         	goto	l3152
  1960   00113C                     u1960:
  1961   00113C  0E01               	movlw	1
  1962   00113E  6E09               	movwf	___awdiv@counter^0,c
  1963   001140  EFA6  F008         	goto	l3138
  1964   001144                     l3136:
  1965   001144  90D8               	bcf	status,0,c
  1966   001146  3607               	rlcf	___awdiv@divisor^0,f,c
  1967   001148  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  1968   00114A  2A09               	incf	___awdiv@counter^0,f,c
  1969   00114C                     l3138:
  1970   00114C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  1971   00114E  EFAB  F008         	goto	u1971
  1972   001152  EFAD  F008         	goto	u1970
  1973   001156                     u1971:
  1974   001156  EFA2  F008         	goto	l3136
  1975   00115A                     u1970:
  1976   00115A                     l3140:
  1977   00115A  90D8               	bcf	status,0,c
  1978   00115C  360B               	rlcf	___awdiv@quotient^0,f,c
  1979   00115E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1980   001160  5007               	movf	___awdiv@divisor^0,w,c
  1981   001162  5C05               	subwf	___awdiv@dividend^0,w,c
  1982   001164  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1983   001166  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  1984   001168  A0D8               	btfss	status,0,c
  1985   00116A  EFB9  F008         	goto	u1981
  1986   00116E  EFBB  F008         	goto	u1980
  1987   001172                     u1981:
  1988   001172  EFC0  F008         	goto	l3148
  1989   001176                     u1980:
  1990   001176  5007               	movf	___awdiv@divisor^0,w,c
  1991   001178  5E05               	subwf	___awdiv@dividend^0,f,c
  1992   00117A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  1993   00117C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  1994   00117E  800B               	bsf	___awdiv@quotient^0,0,c
  1995   001180                     l3148:
  1996   001180  90D8               	bcf	status,0,c
  1997   001182  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  1998   001184  3207               	rrcf	___awdiv@divisor^0,f,c
  1999   001186  2E09               	decfsz	___awdiv@counter^0,f,c
  2000   001188  EFAD  F008         	goto	l3140
  2001   00118C                     l3152:
  2002   00118C  500A               	movf	___awdiv@sign^0,w,c
  2003   00118E  B4D8               	btfsc	status,2,c
  2004   001190  EFCC  F008         	goto	u1991
  2005   001194  EFCE  F008         	goto	u1990
  2006   001198                     u1991:
  2007   001198  EFD2  F008         	goto	l3156
  2008   00119C                     u1990:
  2009   00119C  6C0B               	negf	___awdiv@quotient^0,c
  2010   00119E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2011   0011A0  B0D8               	btfsc	status,0,c
  2012   0011A2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2013   0011A4                     l3156:
  2014   0011A4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2015   0011A8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2016   0011AC  0012               	return		;funcret
  2017   0011AE                     __end_of___awdiv:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _sendStringSerial4 *****************
  2021 ;; Defined at:
  2022 ;;		line 35 in file "serial.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  string          2    5[COMRAM] PTR unsigned char 
  2025 ;;		 -> STR_4(3), sendArraySerial4@tempStr(21), sendIntSerial4@string(17), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;Total ram usage:        2 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 3
  2044 ;; This function calls:
  2045 ;;		_sendCharSerial4
  2046 ;; This function is called by:
  2047 ;;		_sendArraySerial4
  2048 ;;		_sendIntSerial4
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text10
  2053   001470                     __ptext10:
  2054                           	callstack 0
  2055   001470                     _sendStringSerial4:
  2056                           	callstack 26
  2057   001470                     
  2058                           ;serial.c: 37:     while(*string != 0){
  2059   001470  EF4F  F00A         	goto	l3322
  2060   001474                     l3318:
  2061                           
  2062                           ;serial.c: 38:   sendCharSerial4(*string++);
  2063   001474  C006  FFF6         	movff	sendStringSerial4@string,tblptrl
  2064   001478  C007  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2065   00147C  0E00               	movlw	low (__smallconst shr (0+16))
  2066   00147E  6EF8               	movwf	tblptru,c
  2067   001480  0E0D               	movlw	(high __ramtop+-1)
  2068   001482  64F7               	cpfsgt	tblptrh,c
  2069   001484  D003               	bra	u2257
  2070   001486  0008               	tblrd		*
  2071   001488  50F5               	movf	tablat,w,c
  2072   00148A  D005               	bra	u2250
  2073   00148C                     u2257:
  2074   00148C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2075   001490  CFF7 FFEA          	movff	tblptrh,fsr0h
  2076   001494  50EF               	movf	indf0,w,c
  2077   001496                     u2250:
  2078   001496  ECB5  F00B         	call	_sendCharSerial4
  2079   00149A  4A06               	infsnz	sendStringSerial4@string^0,f,c
  2080   00149C  2A07               	incf	(sendStringSerial4@string+1)^0,f,c
  2081   00149E                     l3322:
  2082                           
  2083                           ;serial.c: 37:     while(*string != 0){
  2084   00149E  C006  FFF6         	movff	sendStringSerial4@string,tblptrl
  2085   0014A2  C007  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  2086   0014A6  0E00               	movlw	low (__smallconst shr (0+16))
  2087   0014A8  6EF8               	movwf	tblptru,c
  2088   0014AA  0E0D               	movlw	(high __ramtop+-1)
  2089   0014AC  64F7               	cpfsgt	tblptrh,c
  2090   0014AE  D003               	bra	u2267
  2091   0014B0  0008               	tblrd		*
  2092   0014B2  50F5               	movf	tablat,w,c
  2093   0014B4  D005               	bra	u2260
  2094   0014B6                     u2267:
  2095   0014B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2096   0014BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2097   0014BE  50EF               	movf	indf0,w,c
  2098   0014C0                     u2260:
  2099   0014C0  0900               	iorlw	0
  2100   0014C2  A4D8               	btfss	status,2,c
  2101   0014C4  EF66  F00A         	goto	u2271
  2102   0014C8  EF68  F00A         	goto	u2270
  2103   0014CC                     u2271:
  2104   0014CC  EF3A  F00A         	goto	l3318
  2105   0014D0                     u2270:
  2106   0014D0  0012               	return		;funcret
  2107   0014D2                     __end_of_sendStringSerial4:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _sendCharSerial4 *****************
  2111 ;; Defined at:
  2112 ;;		line 29 in file "serial.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  charToSend      1    wreg     unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  charToSend      1    4[COMRAM] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;Total ram usage:        1 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 2
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_sendStringSerial4
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text11
  2141   00176A                     __ptext11:
  2142                           	callstack 0
  2143   00176A                     _sendCharSerial4:
  2144                           	callstack 26
  2145                           
  2146                           ;incstack = 0
  2147                           ;sendCharSerial4@charToSend stored from wreg
  2148   00176A  6E05               	movwf	sendCharSerial4@charToSend^0,c
  2149   00176C                     l395:
  2150   00176C  010E               	movlb	14	; () banked
  2151   00176E  A537               	btfss	55,2,b	;volatile
  2152   001770  EFBC  F00B         	goto	u2231
  2153   001774  EFBE  F00B         	goto	u2230
  2154   001778                     u2231:
  2155   001778  EFB6  F00B         	goto	l395
  2156   00177C                     u2230:
  2157   00177C                     
  2158                           ; BSR set to: 14
  2159                           ;serial.c: 31:     TX4REG = charToSend;
  2160   00177C  C005  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2161   001780                     
  2162                           ; BSR set to: 14
  2163   001780  0012               	return		;funcret
  2164   001782                     __end_of_sendCharSerial4:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _initUSART4 *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "serial.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text12
  2198   00174C                     __ptext12:
  2199                           	callstack 0
  2200   00174C                     _initUSART4:
  2201                           	callstack 28
  2202   00174C                     
  2203                           ;serial.c: 9:     RC0PPS = 0x12;
  2204   00174C  0E12               	movlw	18
  2205   00174E  010E               	movlb	14	; () banked
  2206   001750  6F62               	movwf	98,b	;volatile
  2207                           
  2208                           ;serial.c: 10:     RX4PPS = 0x11;
  2209   001752  0E11               	movlw	17
  2210   001754  6F15               	movwf	21,b	;volatile
  2211   001756                     
  2212                           ; BSR set to: 14
  2213                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2214   001756  97E9               	bcf	233,3,b	;volatile
  2215   001758                     
  2216                           ; BSR set to: 14
  2217                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2218   001758  95E8               	bcf	232,2,b	;volatile
  2219                           
  2220                           ;serial.c: 14:     SP4BRGL = 51;
  2221   00175A  0E33               	movlw	51
  2222   00175C  6FE5               	movwf	229,b	;volatile
  2223                           
  2224                           ;serial.c: 15:     SP4BRGH = 0;
  2225   00175E  0E00               	movlw	0
  2226   001760  6FE6               	movwf	230,b	;volatile
  2227   001762                     
  2228                           ; BSR set to: 14
  2229                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2230   001762  89E7               	bsf	231,4,b	;volatile
  2231   001764                     
  2232                           ; BSR set to: 14
  2233                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2234   001764  8BE8               	bsf	232,5,b	;volatile
  2235   001766                     
  2236                           ; BSR set to: 14
  2237                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2238   001766  8FE7               	bsf	231,7,b	;volatile
  2239   001768                     
  2240                           ; BSR set to: 14
  2241   001768  0012               	return		;funcret
  2242   00176A                     __end_of_initUSART4:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _initDCmotorsPWM *****************
  2246 ;; Defined at:
  2247 ;;		line 5 in file "dc_motor.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:        2 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 2
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text13
  2276   001308                     __ptext13:
  2277                           	callstack 0
  2278   001308                     _initDCmotorsPWM:
  2279                           	callstack 28
  2280   001308                     
  2281                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2282   001308  9485               	bcf	133,2,c	;volatile
  2283                           
  2284                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2285   00130A  9885               	bcf	133,4,c	;volatile
  2286                           
  2287                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2288   00130C  9E83               	bcf	131,7,c	;volatile
  2289                           
  2290                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2291   00130E  9C87               	bcf	135,6,c	;volatile
  2292                           
  2293                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2294   001310  947D               	bcf	125,2,c	;volatile
  2295                           
  2296                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2297   001312  987D               	bcf	125,4,c	;volatile
  2298                           
  2299                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2300   001314  9E7B               	bcf	123,7,c	;volatile
  2301                           
  2302                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2303   001316  9C7F               	bcf	127,6,c	;volatile
  2304   001318                     
  2305                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2306   001318  0E05               	movlw	5
  2307   00131A  010E               	movlb	14	; () banked
  2308   00131C  6F74               	movwf	116,b	;volatile
  2309                           
  2310                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2311   00131E  0E06               	movlw	6
  2312   001320  6F76               	movwf	118,b	;volatile
  2313                           
  2314                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2315   001322  0E07               	movlw	7
  2316   001324  6F69               	movwf	105,b	;volatile
  2317                           
  2318                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2319   001326  0E08               	movlw	8
  2320   001328  6F88               	movwf	136,b	;volatile
  2321                           
  2322                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2323   00132A  50BD               	movf	189,w,c	;volatile
  2324   00132C  0B8F               	andlw	-113
  2325   00132E  0940               	iorlw	64
  2326   001330  6EBD               	movwf	189,c	;volatile
  2327                           
  2328                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2329   001332  0EE0               	movlw	-32
  2330   001334  16BE               	andwf	190,f,c	;volatile
  2331                           
  2332                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2333   001336  50BF               	movf	191,w,c	;volatile
  2334   001338  0BF0               	andlw	-16
  2335   00133A  0901               	iorlw	1
  2336   00133C  6EBF               	movwf	191,c	;volatile
  2337   00133E                     
  2338                           ; BSR set to: 14
  2339                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2340   00133E  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2341   001342                     
  2342                           ; BSR set to: 14
  2343                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2344   001342  8EBD               	bsf	189,7,c	;volatile
  2345                           
  2346                           ;dc_motor.c: 35:     CCPR1H=0;
  2347   001344  0E00               	movlw	0
  2348   001346  6EAA               	movwf	170,c	;volatile
  2349                           
  2350                           ;dc_motor.c: 36:     CCPR2H=0;
  2351   001348  0E00               	movlw	0
  2352   00134A  6EA6               	movwf	166,c	;volatile
  2353                           
  2354                           ;dc_motor.c: 37:     CCPR3H=0;
  2355   00134C  0E00               	movlw	0
  2356   00134E  010F               	movlb	15	; () banked
  2357   001350  6F25               	movwf	37,b	;volatile
  2358                           
  2359                           ;dc_motor.c: 38:     CCPR4H=0;
  2360   001352  0E00               	movlw	0
  2361   001354  6F21               	movwf	33,b	;volatile
  2362                           
  2363                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2364   001356  0EFC               	movlw	-4
  2365   001358  16AD               	andwf	173,f,c	;volatile
  2366                           
  2367                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2368   00135A  0EF3               	movlw	-13
  2369   00135C  16AD               	andwf	173,f,c	;volatile
  2370                           
  2371                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2372   00135E  0ECF               	movlw	-49
  2373   001360  16AD               	andwf	173,f,c	;volatile
  2374                           
  2375                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2376   001362  0E3F               	movlw	-193
  2377   001364  16AD               	andwf	173,f,c	;volatile
  2378   001366                     
  2379                           ; BSR set to: 15
  2380                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2381   001366  88AB               	bsf	171,4,c	;volatile
  2382                           
  2383                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2384   001368  50AB               	movf	171,w,c	;volatile
  2385   00136A  0BF0               	andlw	-16
  2386   00136C  090C               	iorlw	12
  2387   00136E  6EAB               	movwf	171,c	;volatile
  2388   001370                     
  2389                           ; BSR set to: 15
  2390                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2391   001370  8EAB               	bsf	171,7,c	;volatile
  2392   001372                     
  2393                           ; BSR set to: 15
  2394                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2395   001372  88A7               	bsf	167,4,c	;volatile
  2396                           
  2397                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2398   001374  50A7               	movf	167,w,c	;volatile
  2399   001376  0BF0               	andlw	-16
  2400   001378  090C               	iorlw	12
  2401   00137A  6EA7               	movwf	167,c	;volatile
  2402   00137C                     
  2403                           ; BSR set to: 15
  2404                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2405   00137C  8EA7               	bsf	167,7,c	;volatile
  2406   00137E                     
  2407                           ; BSR set to: 15
  2408                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2409   00137E  8926               	bsf	38,4,b	;volatile
  2410                           
  2411                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2412   001380  5126               	movf	38,w,b	;volatile
  2413   001382  0BF0               	andlw	-16
  2414   001384  090C               	iorlw	12
  2415   001386  6F26               	movwf	38,b	;volatile
  2416   001388                     
  2417                           ; BSR set to: 15
  2418                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2419   001388  8F26               	bsf	38,7,b	;volatile
  2420   00138A                     
  2421                           ; BSR set to: 15
  2422                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2423   00138A  8922               	bsf	34,4,b	;volatile
  2424                           
  2425                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2426   00138C  5122               	movf	34,w,b	;volatile
  2427   00138E  0BF0               	andlw	-16
  2428   001390  090C               	iorlw	12
  2429   001392  6F22               	movwf	34,b	;volatile
  2430   001394                     
  2431                           ; BSR set to: 15
  2432                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2433   001394  8F22               	bsf	34,7,b	;volatile
  2434   001396                     
  2435                           ; BSR set to: 15
  2436   001396  0012               	return		;funcret
  2437   001398                     __end_of_initDCmotorsPWM:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _color_click_init *****************
  2441 ;; Defined at:
  2442 ;;		line 5 in file "color.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 5
  2463 ;; This function calls:
  2464 ;;		_I2C_2_Master_Init
  2465 ;;		_color_writetoaddr
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text14
  2472   001634                     __ptext14:
  2473                           	callstack 0
  2474   001634                     _color_click_init:
  2475                           	callstack 25
  2476   001634                     
  2477                           ;color.c: 8:     I2C_2_Master_Init();
  2478   001634  EC4A  F00B         	call	_I2C_2_Master_Init	;wreg free
  2479   001638                     
  2480                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2481   001638  0E01               	movlw	1
  2482   00163A  6E07               	movwf	color_writetoaddr@value^0,c
  2483   00163C  0E00               	movlw	0
  2484   00163E  EC86  F00B         	call	_color_writetoaddr
  2485   001642                     
  2486                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2487   001642  0E3F               	movlw	63
  2488   001644  6E09               	movwf	??_color_click_init^0,c
  2489   001646  0E55               	movlw	85
  2490   001648                     u2367:
  2491   001648  2EE8               	decfsz	wreg,f,c
  2492   00164A  D7FE               	bra	u2367
  2493   00164C  2E09               	decfsz	??_color_click_init^0,f,c
  2494   00164E  D7FC               	bra	u2367
  2495   001650  0000               	nop	
  2496   001652                     
  2497                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2498   001652  0E03               	movlw	3
  2499   001654  6E07               	movwf	color_writetoaddr@value^0,c
  2500   001656  0E00               	movlw	0
  2501   001658  EC86  F00B         	call	_color_writetoaddr
  2502   00165C                     
  2503                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2504   00165C  0ED5               	movlw	213
  2505   00165E  6E07               	movwf	color_writetoaddr@value^0,c
  2506   001660  0E01               	movlw	1
  2507   001662  EC86  F00B         	call	_color_writetoaddr
  2508   001666  0012               	return		;funcret
  2509   001668                     __end_of_color_click_init:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _color_writetoaddr *****************
  2513 ;; Defined at:
  2514 ;;		line 21 in file "color.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  address         1    wreg     unsigned char 
  2517 ;;  value           1    6[COMRAM] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  address         1    7[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2529 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 4
  2536 ;; This function calls:
  2537 ;;		_I2C_2_Master_Start
  2538 ;;		_I2C_2_Master_Stop
  2539 ;;		_I2C_2_Master_Write
  2540 ;; This function is called by:
  2541 ;;		_color_click_init
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text15
  2546   00170C                     __ptext15:
  2547                           	callstack 0
  2548   00170C                     _color_writetoaddr:
  2549                           	callstack 25
  2550                           
  2551                           ;incstack = 0
  2552                           ;color_writetoaddr@address stored from wreg
  2553   00170C  6E08               	movwf	color_writetoaddr@address^0,c
  2554   00170E                     
  2555                           ;color.c: 22:     I2C_2_Master_Start();
  2556   00170E  ECD8  F00B         	call	_I2C_2_Master_Start	;wreg free
  2557                           
  2558                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2559   001712  0E52               	movlw	82
  2560   001714  ECCD  F00B         	call	_I2C_2_Master_Write
  2561                           
  2562                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2563   001718  5008               	movf	color_writetoaddr@address^0,w,c
  2564   00171A  0980               	iorlw	128
  2565   00171C  ECCD  F00B         	call	_I2C_2_Master_Write
  2566                           
  2567                           ;color.c: 25:     I2C_2_Master_Write(value);
  2568   001720  5007               	movf	color_writetoaddr@value^0,w,c
  2569   001722  ECCD  F00B         	call	_I2C_2_Master_Write
  2570                           
  2571                           ;color.c: 26:     I2C_2_Master_Stop();
  2572   001726  ECD3  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2573   00172A  0012               	return		;funcret
  2574   00172C                     __end_of_color_writetoaddr:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _I2C_2_Master_Write *****************
  2578 ;; Defined at:
  2579 ;;		line 45 in file "i2c.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  data_byte       1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  data_byte       1    5[COMRAM] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;Total ram usage:        1 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 3
  2600 ;; This function calls:
  2601 ;;		_I2C_2_Master_Idle
  2602 ;; This function is called by:
  2603 ;;		_color_writetoaddr
  2604 ;;		_color_read_Red
  2605 ;;		_color_read_Blue
  2606 ;;		_color_read_Green
  2607 ;;		_color_read_Clear
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text16
  2612   00179A                     __ptext16:
  2613                           	callstack 0
  2614   00179A                     _I2C_2_Master_Write:
  2615                           	callstack 25
  2616                           
  2617                           ;incstack = 0
  2618                           ;I2C_2_Master_Write@data_byte stored from wreg
  2619   00179A  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  2620   00179C                     
  2621                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2622   00179C  EC5F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2623   0017A0                     
  2624                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2625   0017A0  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2626   0017A4  0012               	return		;funcret
  2627   0017A6                     __end_of_I2C_2_Master_Write:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _I2C_2_Master_Stop *****************
  2631 ;; Defined at:
  2632 ;;		line 39 in file "i2c.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 3
  2653 ;; This function calls:
  2654 ;;		_I2C_2_Master_Idle
  2655 ;; This function is called by:
  2656 ;;		_color_writetoaddr
  2657 ;;		_color_read_Red
  2658 ;;		_color_read_Blue
  2659 ;;		_color_read_Green
  2660 ;;		_color_read_Clear
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text17
  2665   0017A6                     __ptext17:
  2666                           	callstack 0
  2667   0017A6                     _I2C_2_Master_Stop:
  2668                           	callstack 25
  2669   0017A6                     
  2670                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2671   0017A6  EC5F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2672   0017AA                     
  2673                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2674   0017AA  010E               	movlb	14	; () banked
  2675   0017AC  85DA               	bsf	218,2,b	;volatile
  2676   0017AE                     
  2677                           ; BSR set to: 14
  2678   0017AE  0012               	return		;funcret
  2679   0017B0                     __end_of_I2C_2_Master_Stop:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _I2C_2_Master_Start *****************
  2683 ;; Defined at:
  2684 ;;		line 27 in file "i2c.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 3
  2705 ;; This function calls:
  2706 ;;		_I2C_2_Master_Idle
  2707 ;; This function is called by:
  2708 ;;		_color_writetoaddr
  2709 ;;		_color_read_Red
  2710 ;;		_color_read_Blue
  2711 ;;		_color_read_Green
  2712 ;;		_color_read_Clear
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text18
  2717   0017B0                     __ptext18:
  2718                           	callstack 0
  2719   0017B0                     _I2C_2_Master_Start:
  2720                           	callstack 25
  2721   0017B0                     
  2722                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2723   0017B0  EC5F  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2724   0017B4                     
  2725                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2726   0017B4  010E               	movlb	14	; () banked
  2727   0017B6  81DA               	bsf	218,0,b	;volatile
  2728   0017B8                     
  2729                           ; BSR set to: 14
  2730   0017B8  0012               	return		;funcret
  2731   0017BA                     __end_of_I2C_2_Master_Start:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _I2C_2_Master_Idle *****************
  2735 ;; Defined at:
  2736 ;;		line 22 in file "i2c.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:        1 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 2
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_I2C_2_Master_Start
  2761 ;;		_I2C_2_Master_Stop
  2762 ;;		_I2C_2_Master_Write
  2763 ;;		_I2C_2_Master_RepStart
  2764 ;;		_I2C_2_Master_Read
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text19
  2769   0016BE                     __ptext19:
  2770                           	callstack 0
  2771   0016BE                     _I2C_2_Master_Idle:
  2772                           	callstack 25
  2773   0016BE                     l242:
  2774   0016BE  010E               	movlb	14	; () banked
  2775   0016C0  B5D8               	btfsc	216,2,b	;volatile
  2776   0016C2  EF65  F00B         	goto	u2111
  2777   0016C6  EF67  F00B         	goto	u2110
  2778   0016CA                     u2111:
  2779   0016CA  EF5F  F00B         	goto	l242
  2780   0016CE                     u2110:
  2781   0016CE                     
  2782                           ; BSR set to: 14
  2783   0016CE  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2784   0016D2  0E1F               	movlw	31
  2785   0016D4  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  2786   0016D6  A4D8               	btfss	status,2,c
  2787   0016D8  EF70  F00B         	goto	u2121
  2788   0016DC  EF72  F00B         	goto	u2120
  2789   0016E0                     u2121:
  2790   0016E0  EF5F  F00B         	goto	l242
  2791   0016E4                     u2120:
  2792   0016E4                     
  2793                           ; BSR set to: 14
  2794   0016E4  0012               	return		;funcret
  2795   0016E6                     __end_of_I2C_2_Master_Idle:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _I2C_2_Master_Init *****************
  2799 ;; Defined at:
  2800 ;;		line 4 in file "i2c.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 2
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_color_click_init
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text20
  2829   001694                     __ptext20:
  2830                           	callstack 0
  2831   001694                     _I2C_2_Master_Init:
  2832                           	callstack 27
  2833   001694                     
  2834                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2835   001694  010E               	movlb	14	; () banked
  2836   001696  51D9               	movf	217,w,b	;volatile
  2837   001698  0BF0               	andlw	-16
  2838   00169A  0908               	iorlw	8
  2839   00169C  6FD9               	movwf	217,b	;volatile
  2840   00169E                     
  2841                           ; BSR set to: 14
  2842                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2843   00169E  8BD9               	bsf	217,5,b	;volatile
  2844                           
  2845                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2846   0016A0  0E9F               	movlw	159
  2847   0016A2  6FD6               	movwf	214,b	;volatile
  2848   0016A4                     
  2849                           ; BSR set to: 14
  2850                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2851   0016A4  8A84               	bsf	132,5,c	;volatile
  2852   0016A6                     
  2853                           ; BSR set to: 14
  2854                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2855   0016A6  8C84               	bsf	132,6,c	;volatile
  2856   0016A8                     
  2857                           ; BSR set to: 14
  2858                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2859   0016A8  9BA7               	bcf	167,5,b	;volatile
  2860   0016AA                     
  2861                           ; BSR set to: 14
  2862                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2863   0016AA  9DA7               	bcf	167,6,b	;volatile
  2864                           
  2865                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2866   0016AC  0E1D               	movlw	29
  2867   0016AE  6F1D               	movwf	29,b	;volatile
  2868                           
  2869                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2870   0016B0  0E1E               	movlw	30
  2871   0016B2  6F1C               	movwf	28,b	;volatile
  2872                           
  2873                           ;i2c.c: 18:   RD5PPS=0x1C;
  2874   0016B4  0E1C               	movlw	28
  2875   0016B6  6F6F               	movwf	111,b	;volatile
  2876                           
  2877                           ;i2c.c: 19:   RD6PPS=0x1B;
  2878   0016B8  0E1B               	movlw	27
  2879   0016BA  6F70               	movwf	112,b	;volatile
  2880   0016BC                     
  2881                           ; BSR set to: 14
  2882   0016BC  0012               	return		;funcret
  2883   0016BE                     __end_of_I2C_2_Master_Init:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _buggy_lights_init *****************
  2887 ;; Defined at:
  2888 ;;		line 4 in file "buggy_lights.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		None
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text21
  2917   001524                     __ptext21:
  2918                           	callstack 0
  2919   001524                     _buggy_lights_init:
  2920                           	callstack 28
  2921   001524                     
  2922                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  2923   001524  9884               	bcf	132,4,c	;volatile
  2924                           
  2925                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  2926   001526  9288               	bcf	136,1,c	;volatile
  2927                           
  2928                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  2929   001528  9684               	bcf	132,3,c	;volatile
  2930                           
  2931                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  2932   00152A  9086               	bcf	134,0,c	;volatile
  2933                           
  2934                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  2935   00152C  9088               	bcf	136,0,c	;volatile
  2936                           
  2937                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  2938   00152E  887C               	bsf	124,4,c	;volatile
  2939                           
  2940                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  2941   001530  8280               	bsf	128,1,c	;volatile
  2942                           
  2943                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  2944   001532  867C               	bsf	124,3,c	;volatile
  2945                           
  2946                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  2947   001534  807E               	bsf	126,0,c	;volatile
  2948                           
  2949                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  2950   001536  8080               	bsf	128,0,c	;volatile
  2951                           
  2952                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  2953   001538  9E84               	bcf	132,7,c	;volatile
  2954                           
  2955                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  2956   00153A  9688               	bcf	136,3,c	;volatile
  2957                           
  2958                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  2959   00153C  8E7C               	bsf	124,7,c	;volatile
  2960                           
  2961                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  2962   00153E  8680               	bsf	128,3,c	;volatile
  2963                           
  2964                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  2965   001540  9081               	bcf	129,0,c	;volatile
  2966                           
  2967                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  2968   001542  9483               	bcf	131,2,c	;volatile
  2969                           
  2970                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  2971   001544  9084               	bcf	132,0,c	;volatile
  2972                           
  2973                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  2974   001546  8079               	bsf	121,0,c	;volatile
  2975                           
  2976                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  2977   001548  847B               	bsf	123,2,c	;volatile
  2978                           
  2979                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  2980   00154A  807C               	bsf	124,0,c	;volatile
  2981                           
  2982                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  2983   00154C  9281               	bcf	129,1,c	;volatile
  2984                           
  2985                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  2986   00154E  9C83               	bcf	131,6,c	;volatile
  2987                           
  2988                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  2989   001550  9488               	bcf	136,2,c	;volatile
  2990                           
  2991                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  2992   001552  8279               	bsf	121,1,c	;volatile
  2993                           
  2994                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  2995   001554  8C7B               	bsf	123,6,c	;volatile
  2996                           
  2997                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  2998   001556  8480               	bsf	128,2,c	;volatile
  2999                           
  3000                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  3001   001558  9287               	bcf	135,1,c	;volatile
  3002                           
  3003                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  3004   00155A  9881               	bcf	129,4,c	;volatile
  3005                           
  3006                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  3007   00155C  9E86               	bcf	134,7,c	;volatile
  3008                           
  3009                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  3010   00155E  827F               	bsf	127,1,c	;volatile
  3011                           
  3012                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  3013   001560  8879               	bsf	121,4,c	;volatile
  3014                           
  3015                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  3016   001562  8E7E               	bsf	126,7,c	;volatile
  3017                           
  3018                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  3019   001564  9087               	bcf	135,0,c	;volatile
  3020                           
  3021                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  3022   001566  9E85               	bcf	133,7,c	;volatile
  3023                           
  3024                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  3025   001568  9681               	bcf	129,3,c	;volatile
  3026                           
  3027                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  3028   00156A  807F               	bsf	127,0,c	;volatile
  3029                           
  3030                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  3031   00156C  8E7D               	bsf	125,7,c	;volatile
  3032                           
  3033                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  3034   00156E  8679               	bsf	121,3,c	;volatile
  3035   001570  0012               	return		;funcret
  3036   001572                     __end_of_buggy_lights_init:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _Timer0_init *****************
  3040 ;; Defined at:
  3041 ;;		line 7 in file "timers.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 2
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text22
  3070   00172C                     __ptext22:
  3071                           	callstack 0
  3072   00172C                     _Timer0_init:
  3073                           	callstack 28
  3074   00172C                     
  3075                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3076   00172C  50D6               	movf	214,w,c	;volatile
  3077   00172E  0B1F               	andlw	-225
  3078   001730  0940               	iorlw	64
  3079   001732  6ED6               	movwf	214,c	;volatile
  3080   001734                     
  3081                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3082   001734  88D6               	bsf	214,4,c	;volatile
  3083   001736                     
  3084                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3085   001736  88D5               	bsf	213,4,c	;volatile
  3086                           
  3087                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3088   001738  50D6               	movf	214,w,c	;volatile
  3089   00173A  0BF0               	andlw	-16
  3090   00173C  090E               	iorlw	14
  3091   00173E  6ED6               	movwf	214,c	;volatile
  3092                           
  3093                           ;timers.c: 20:     TMR0H = 0;
  3094   001740  0E00               	movlw	0
  3095   001742  6ED4               	movwf	212,c	;volatile
  3096                           
  3097                           ;timers.c: 21:     TMR0L = 0;
  3098   001744  0E00               	movlw	0
  3099   001746  6ED3               	movwf	211,c	;volatile
  3100   001748                     
  3101                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3102   001748  8ED5               	bsf	213,7,c	;volatile
  3103   00174A  0012               	return		;funcret
  3104   00174C                     __end_of_Timer0_init:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _HighISR *****************
  3108 ;; Defined at:
  3109 ;;		line 19 in file "interrupts.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 1
  3130 ;; This function calls:
  3131 ;;		_getCharFromTxBuf
  3132 ;;		_isDataInTxBuf
  3133 ;;		_putCharToRxBuf
  3134 ;; This function is called by:
  3135 ;;		Interrupt level 2
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	intcode
  3140   000008                     __pintcode:
  3141                           	callstack 0
  3142   000008                     _HighISR:
  3143                           	callstack 23
  3144                           
  3145                           ;incstack = 0
  3146   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3147   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3148   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3149   000012                     
  3150                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF) {
  3151   000012  010E               	movlb	14	; () banked
  3152   000014  AB33               	btfss	51,5,b	;volatile
  3153   000016  EF0F  F000         	goto	i2u151_41
  3154   00001A  EF11  F000         	goto	i2u151_40
  3155   00001E                     i2u151_41:
  3156   00001E  EF12  F000         	goto	i2l611
  3157   000022                     i2u151_40:
  3158   000022                     
  3159                           ; BSR set to: 14
  3160                           ;interrupts.c: 30:         PIR0bits.TMR0IF = 0;
  3161   000022  9B33               	bcf	51,5,b	;volatile
  3162   000024                     i2l611:
  3163                           
  3164                           ; BSR set to: 14
  3165                           ;interrupts.c: 35:     if (PIR4bits.TX4IF) {
  3166   000024  A537               	btfss	55,2,b	;volatile
  3167   000026  EF17  F000         	goto	i2u152_41
  3168   00002A  EF19  F000         	goto	i2u152_40
  3169   00002E                     i2u152_41:
  3170   00002E  EF29  F000         	goto	i2l614
  3171   000032                     i2u152_40:
  3172   000032                     
  3173                           ; BSR set to: 14
  3174                           ;interrupts.c: 36:         TX4REG = getCharFromTxBuf();
  3175   000032  EC34  F00B         	call	_getCharFromTxBuf	;wreg free
  3176   000036  010E               	movlb	14	; () banked
  3177   000038  6FE4               	movwf	228,b	;volatile
  3178   00003A                     
  3179                           ; BSR set to: 14
  3180                           ;interrupts.c: 37:         if (!isDataInTxBuf()) {PIE4bits.TX4IE = 0;}
  3181   00003A  ECC1  F00B         	call	_isDataInTxBuf	;wreg free
  3182   00003E  0900               	iorlw	0
  3183   000040  A4D8               	btfss	status,2,c
  3184   000042  EF25  F000         	goto	i2u153_41
  3185   000046  EF27  F000         	goto	i2u153_40
  3186   00004A                     i2u153_41:
  3187   00004A  EF29  F000         	goto	i2l614
  3188   00004E                     i2u153_40:
  3189   00004E  010E               	movlb	14	; () banked
  3190   000050  952D               	bcf	45,2,b	;volatile
  3191   000052                     i2l614:
  3192                           
  3193                           ;interrupts.c: 40:     if (PIR4bits.RC4IF) {putCharToRxBuf(RC4REG);}
  3194   000052  010E               	movlb	14	; () banked
  3195   000054  A737               	btfss	55,3,b	;volatile
  3196   000056  EF2F  F000         	goto	i2u154_41
  3197   00005A  EF31  F000         	goto	i2u154_40
  3198   00005E                     i2u154_41:
  3199   00005E  EF34  F000         	goto	i2l617
  3200   000062                     i2u154_40:
  3201   000062                     
  3202                           ; BSR set to: 14
  3203   000062  51E3               	movf	227,w,b	;volatile
  3204   000064  EC73  F00B         	call	_putCharToRxBuf
  3205   000068                     i2l617:
  3206   000068  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3207   00006C  C003  FFD9         	movff	??_HighISR,fsr2l
  3208   000070  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3209   000072  0011               	retfie		f
  3210   000074                     __end_of_HighISR:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _putCharToRxBuf *****************
  3214 ;; Defined at:
  3215 ;;		line 72 in file "serial.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  byte            1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  byte            1    0[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_HighISR
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text24
  3243   0016E6                     __ptext24:
  3244                           	callstack 0
  3245   0016E6                     _putCharToRxBuf:
  3246                           	callstack 23
  3247                           
  3248                           ;incstack = 0
  3249                           ;putCharToRxBuf@byte stored from wreg
  3250   0016E6  6E01               	movwf	putCharToRxBuf@byte^0,c
  3251   0016E8                     
  3252                           ;serial.c: 73:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3253   0016E8  0E13               	movlw	19
  3254   0016EA  6450               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3255   0016EC  EF7A  F00B         	goto	i2u137_41
  3256   0016F0  EF7C  F00B         	goto	i2u137_40
  3257   0016F4                     i2u137_41:
  3258   0016F4  EF7E  F00B         	goto	i2l2612
  3259   0016F8                     i2u137_40:
  3260   0016F8  0E00               	movlw	0
  3261   0016FA  6E50               	movwf	_RxBufWriteCnt^0,c	;volatile
  3262   0016FC                     i2l2612:
  3263                           
  3264                           ;serial.c: 74:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3265   0016FC  5050               	movf	_RxBufWriteCnt^0,w,c
  3266   0016FE  0FC9               	addlw	low _EUSART4RXbuf
  3267   001700  6ED9               	movwf	fsr2l,c
  3268   001702  6ADA               	clrf	fsr2h,c
  3269   001704  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3270   001708  2A50               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3271   00170A  0012               	return		;funcret
  3272   00170C                     __end_of_putCharToRxBuf:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _isDataInTxBuf *****************
  3276 ;; Defined at:
  3277 ;;		line 100 in file "serial.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      unsigned char 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_HighISR
  3301 ;;		_sendTxBuf
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text25
  3306   001782                     __ptext25:
  3307                           	callstack 0
  3308   001782                     _isDataInTxBuf:
  3309                           	callstack 23
  3310   001782                     
  3311                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  3312   001782  504D               	movf	_TxBufReadCnt^0,w,c	;volatile
  3313   001784  184E               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3314   001786  A4D8               	btfss	status,2,c
  3315   001788  EFC8  F00B         	goto	i2u57_41
  3316   00178C  EFCB  F00B         	goto	i2u57_40
  3317   001790                     i2u57_41:
  3318   001790  0E01               	movlw	1
  3319   001792  EFCC  F00B         	goto	i2u58_40
  3320   001796                     i2u57_40:
  3321   001796  0E00               	movlw	0
  3322   001798                     i2u58_40:
  3323   001798  0012               	return		;funcret
  3324   00179A                     __end_of_isDataInTxBuf:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _getCharFromTxBuf *****************
  3328 ;; Defined at:
  3329 ;;		line 86 in file "serial.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      unsigned char 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;Total ram usage:        2 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_HighISR
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text26
  3357   001668                     __ptext26:
  3358                           	callstack 0
  3359   001668                     _getCharFromTxBuf:
  3360                           	callstack 23
  3361   001668                     
  3362                           ;serial.c: 87:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3363   001668  0E3B               	movlw	59
  3364   00166A  644D               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3365   00166C  EF3A  F00B         	goto	i2u138_41
  3366   001670  EF3C  F00B         	goto	i2u138_40
  3367   001674                     i2u138_41:
  3368   001674  EF3E  F00B         	goto	i2l2620
  3369   001678                     i2u138_40:
  3370   001678  0E00               	movlw	0
  3371   00167A  6E4D               	movwf	_TxBufReadCnt^0,c	;volatile
  3372   00167C                     i2l2620:
  3373                           
  3374                           ;serial.c: 88:     return EUSART4TXbuf[TxBufReadCnt++];
  3375   00167C  2A4D               	incf	_TxBufReadCnt^0,f,c	;volatile
  3376   00167E  044D               	decf	_TxBufReadCnt^0,w,c	;volatile
  3377   001680  6E01               	movwf	??_getCharFromTxBuf^0,c
  3378   001682  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3379   001684  0E00               	movlw	low _EUSART4TXbuf
  3380   001686  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3381   001688  6ED9               	movwf	fsr2l,c
  3382   00168A  0E01               	movlw	high _EUSART4TXbuf
  3383   00168C  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3384   00168E  6EDA               	movwf	fsr2h,c
  3385   001690  50DF               	movf	indf2,w,c
  3386   001692  0012               	return		;funcret
  3387   001694                     __end_of_getCharFromTxBuf:
  3388                           	callstack 0
  3389                           
  3390                           	psect	rparam
  3391   000000                     
  3392                           	psect	temp
  3393   000059                     btemp:
  3394                           	callstack 0
  3395   000059                     	ds	1
  3396   000000                     int$flags	set	btemp
  3397   000000                     wtemp8	set	btemp+1
  3398   000000                     ttemp5	set	btemp+1
  3399   000000                     ttemp6	set	btemp+4
  3400   000000                     ttemp7	set	btemp+8
  3401                           
  3402                           	psect	idloc
  3403                           
  3404                           ;Config register IDLOC0 @ 0x200000
  3405                           ;	unspecified, using default values
  3406   200000                     	org	2097152
  3407   200000  FFFF               	dw	65535
  3408                           
  3409                           ;Config register IDLOC1 @ 0x200002
  3410                           ;	unspecified, using default values
  3411   200002                     	org	2097154
  3412   200002  FFFF               	dw	65535
  3413                           
  3414                           ;Config register IDLOC2 @ 0x200004
  3415                           ;	unspecified, using default values
  3416   200004                     	org	2097156
  3417   200004  FFFF               	dw	65535
  3418                           
  3419                           ;Config register IDLOC3 @ 0x200006
  3420                           ;	unspecified, using default values
  3421   200006                     	org	2097158
  3422   200006  FFFF               	dw	65535
  3423                           
  3424                           ;Config register IDLOC4 @ 0x200008
  3425                           ;	unspecified, using default values
  3426   200008                     	org	2097160
  3427   200008  FFFF               	dw	65535
  3428                           
  3429                           ;Config register IDLOC5 @ 0x20000A
  3430                           ;	unspecified, using default values
  3431   20000A                     	org	2097162
  3432   20000A  FFFF               	dw	65535
  3433                           
  3434                           ;Config register IDLOC6 @ 0x20000C
  3435                           ;	unspecified, using default values
  3436   20000C                     	org	2097164
  3437   20000C  FFFF               	dw	65535
  3438                           
  3439                           ;Config register IDLOC7 @ 0x20000E
  3440                           ;	unspecified, using default values
  3441   20000E                     	org	2097166
  3442   20000E  FFFF               	dw	65535
  3443                           
  3444                           	psect	config
  3445                           
  3446                           ;Config register CONFIG1L @ 0x300000
  3447                           ;	External Oscillator mode Selection bits
  3448                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3449                           ;	Power-up default value for COSC bits
  3450                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3451   300000                     	org	3145728
  3452   300000  AA                 	db	170
  3453                           
  3454                           ;Config register CONFIG1H @ 0x300001
  3455                           ;	unspecified, using default values
  3456                           ;	Clock Out Enable bit
  3457                           ;	CLKOUTEN = 0x1, unprogrammed default
  3458                           ;	Clock Switch Enable bit
  3459                           ;	CSWEN = 0x1, unprogrammed default
  3460                           ;	Fail-Safe Clock Monitor Enable bit
  3461                           ;	FCMEN = 0x1, unprogrammed default
  3462   300001                     	org	3145729
  3463   300001  FF                 	db	255
  3464                           
  3465                           ;Config register CONFIG2L @ 0x300002
  3466                           ;	unspecified, using default values
  3467                           ;	Master Clear Enable bit
  3468                           ;	MCLRE = 0x1, unprogrammed default
  3469                           ;	Power-up Timer Enable bit
  3470                           ;	PWRTE = 0x1, unprogrammed default
  3471                           ;	Low-power BOR enable bit
  3472                           ;	LPBOREN = 0x1, unprogrammed default
  3473                           ;	Brown-out Reset Enable bits
  3474                           ;	BOREN = 0x3, unprogrammed default
  3475   300002                     	org	3145730
  3476   300002  FF                 	db	255
  3477                           
  3478                           ;Config register CONFIG2H @ 0x300003
  3479                           ;	unspecified, using default values
  3480                           ;	Brown Out Reset Voltage selection bits
  3481                           ;	BORV = 0x3, unprogrammed default
  3482                           ;	ZCD Disable bit
  3483                           ;	ZCD = 0x1, unprogrammed default
  3484                           ;	PPSLOCK bit One-Way Set Enable bit
  3485                           ;	PPS1WAY = 0x1, unprogrammed default
  3486                           ;	Stack Full/Underflow Reset Enable bit
  3487                           ;	STVREN = 0x1, unprogrammed default
  3488                           ;	Debugger Enable bit
  3489                           ;	DEBUG = 0x1, unprogrammed default
  3490                           ;	Extended Instruction Set Enable bit
  3491                           ;	XINST = 0x1, unprogrammed default
  3492   300003                     	org	3145731
  3493   300003  FF                 	db	255
  3494                           
  3495                           ;Config register CONFIG3L @ 0x300004
  3496                           ;	WDT Period Select bits
  3497                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3498                           ;	WDT operating mode
  3499                           ;	WDTE = OFF, WDT Disabled
  3500   300004                     	org	3145732
  3501   300004  9F                 	db	159
  3502                           
  3503                           ;Config register CONFIG3H @ 0x300005
  3504                           ;	unspecified, using default values
  3505                           ;	WDT Window Select bits
  3506                           ;	WDTCWS = 0x7, unprogrammed default
  3507                           ;	WDT input clock selector
  3508                           ;	WDTCCS = 0x7, unprogrammed default
  3509   300005                     	org	3145733
  3510   300005  FF                 	db	255
  3511                           
  3512                           ;Config register CONFIG4L @ 0x300006
  3513                           ;	unspecified, using default values
  3514                           ;	Write Protection Block 0
  3515                           ;	WRT0 = 0x1, unprogrammed default
  3516                           ;	Write Protection Block 1
  3517                           ;	WRT1 = 0x1, unprogrammed default
  3518                           ;	Write Protection Block 2
  3519                           ;	WRT2 = 0x1, unprogrammed default
  3520                           ;	Write Protection Block 3
  3521                           ;	WRT3 = 0x1, unprogrammed default
  3522                           ;	Write Protection Block 3
  3523                           ;	WRT4 = 0x1, unprogrammed default
  3524                           ;	Write Protection Block 3
  3525                           ;	WRT5 = 0x1, unprogrammed default
  3526                           ;	Write Protection Block 3
  3527                           ;	WRT6 = 0x1, unprogrammed default
  3528                           ;	Write Protection Block 3
  3529                           ;	WRT7 = 0x1, unprogrammed default
  3530   300006                     	org	3145734
  3531   300006  FF                 	db	255
  3532                           
  3533                           ;Config register CONFIG4H @ 0x300007
  3534                           ;	unspecified, using default values
  3535                           ;	Configuration Register Write Protection bit
  3536                           ;	WRTC = 0x1, unprogrammed default
  3537                           ;	Boot Block Write Protection bit
  3538                           ;	WRTB = 0x1, unprogrammed default
  3539                           ;	Data EEPROM Write Protection bit
  3540                           ;	WRTD = 0x1, unprogrammed default
  3541                           ;	Scanner Enable bit
  3542                           ;	SCANE = 0x1, unprogrammed default
  3543                           ;	Low Voltage Programming Enable bit
  3544                           ;	LVP = 0x1, unprogrammed default
  3545   300007                     	org	3145735
  3546   300007  FF                 	db	255
  3547                           
  3548                           ;Config register CONFIG5L @ 0x300008
  3549                           ;	unspecified, using default values
  3550                           ;	UserNVM Program Memory Code Protection bit
  3551                           ;	CP = 0x1, unprogrammed default
  3552                           ;	DataNVM Memory Code Protection bit
  3553                           ;	CPD = 0x1, unprogrammed default
  3554   300008                     	org	3145736
  3555   300008  FF                 	db	255
  3556                           
  3557                           ;Config register CONFIG5H @ 0x300009
  3558                           ;	unspecified, using default values
  3559   300009                     	org	3145737
  3560   300009  FF                 	db	255
  3561                           
  3562                           ;Config register CONFIG6L @ 0x30000A
  3563                           ;	unspecified, using default values
  3564                           ;	Table Read Protection Block 0
  3565                           ;	EBTR0 = 0x1, unprogrammed default
  3566                           ;	Table Read Protection Block 1
  3567                           ;	EBTR1 = 0x1, unprogrammed default
  3568                           ;	Table Read Protection Block 2
  3569                           ;	EBTR2 = 0x1, unprogrammed default
  3570                           ;	Table Read Protection Block 3
  3571                           ;	EBTR3 = 0x1, unprogrammed default
  3572                           ;	Table Read Protection Block 4
  3573                           ;	EBTR4 = 0x1, unprogrammed default
  3574                           ;	Table Read Protection Block 5
  3575                           ;	EBTR5 = 0x1, unprogrammed default
  3576                           ;	Table Read Protection Block 6
  3577                           ;	EBTR6 = 0x1, unprogrammed default
  3578                           ;	Table Read Protection Block 7
  3579                           ;	EBTR7 = 0x1, unprogrammed default
  3580   30000A                     	org	3145738
  3581   30000A  FF                 	db	255
  3582                           
  3583                           ;Config register CONFIG6H @ 0x30000B
  3584                           ;	unspecified, using default values
  3585                           ;	Boot Block Table Read Protection bit
  3586                           ;	EBTRB = 0x1, unprogrammed default
  3587   30000B                     	org	3145739
  3588   30000B  FF                 	db	255
  3589                           tosu	equ	0xFFF
  3590                           tosh	equ	0xFFE
  3591                           tosl	equ	0xFFD
  3592                           stkptr	equ	0xFFC
  3593                           pclatu	equ	0xFFB
  3594                           pclath	equ	0xFFA
  3595                           pcl	equ	0xFF9
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           indf0	equ	0xFEF
  3603                           postinc0	equ	0xFEE
  3604                           postdec0	equ	0xFED
  3605                           preinc0	equ	0xFEC
  3606                           plusw0	equ	0xFEB
  3607                           fsr0h	equ	0xFEA
  3608                           fsr0l	equ	0xFE9
  3609                           wreg	equ	0xFE8
  3610                           indf1	equ	0xFE7
  3611                           postinc1	equ	0xFE6
  3612                           postdec1	equ	0xFE5
  3613                           preinc1	equ	0xFE4
  3614                           plusw1	equ	0xFE3
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           bsr	equ	0xFE0
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           preinc2	equ	0xFDC
  3622                           plusw2	equ	0xFDB
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        81
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     72      88
    BANK0           160     24     153
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2580$buffer	PTR unsigned char  size(2) Largest target is 0

    S2580$source	PTR const unsigned char  size(2) Largest target is 0

    sendArraySerial4@arr	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 21
		 -> sendArraySerial4@tempStr(BANK0[21]), sendIntSerial4@string(COMRAM[17]), STR_4(CODE[3]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 21
		 -> sendArraySerial4@tempStr(BANK0[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sendArraySerial4
    _sendArraySerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sendArraySerial4

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6260
                                             52 COMRAM    20    20      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                   _sendArraySerial4
 ---------------------------------------------------------------------------------
 (1) _sendArraySerial4                                    26    25      1    5304
                                             50 COMRAM     2     1      1
                                              0 BANK0     24    24      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4601
                                             31 COMRAM    19    15      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3911
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3450
                                             14 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     366
                                              5 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (8) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _sendArraySerial4
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     48      58       1       93.6%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      62        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 14:43:26 2024

               _turn180Delay 0064              _trail_timer_low 0081                           l31 1570  
                         l53 1666                           l56 172A                 ___awdiv@sign 000A  
           _trail_timer_high 0095                          l144 1396                          l242 16BE  
                        l404 14D0                          l412 146E                          l245 16E4  
                        l254 17AE                          l239 16BC                          l248 17B8  
                        l257 17A4                          l386 1768                          l395 176C  
                        l557 174A                          l398 1780                          l851 11AC  
                        l864 125C                          _abs 1600                 ___awmod@sign 000A  
                        wreg 0FE8                  _squareDelay 0060                         ?_abs 000B  
                       l1340 0FFE                         l1350 161A                         l3120 10FC  
                       l3200 127E                         l1353 1632                         l1345 151A  
                       l3130 1122                         l3122 1104                         l3210 1600  
                       l3202 1288                         l1346 1522                         l1339 0FAC  
                       l3140 115A                         l3132 112A                         l3124 1108  
                       l3116 10EA                         l3212 160E                         l3204 12A4  
                       l3220 0E12                         l3300 14FA                         l1365 1306  
                       l3310 16A8                         l3302 1694                         l3214 16BE  
                       l3150 1186                         l3142 1160                         l3134 113C  
                       l3126 1116                         l3118 10EE                         l3206 12D6  
                       l3230 0E5C                         l3222 0E38                         l3312 16AA  
                       l3304 169E                         l3216 16CE                         l3400 1756  
                       l3320 149A                         l3144 1176                         l3136 1144  
                       l3152 118C                         l3128 111E                         l3160 11AE  
                       l1376 17C2                         l3240 0ED6                         l3232 0E7C  
                       l3224 0E40                         l3410 172C                         l3306 16A4  
                       l3314 170E                         l3402 1758                         l3322 149E  
                       l3154 119C                         l3146 117E                         l3138 114C  
                       l3170 11DA                         l3162 11B2                         l3250 0F48  
                       l3242 0F06                         l3234 0E9C                         l3226 0E4E  
                       l3218 0E0A                         l1298 15FE                         l3330 15D4  
                       l3412 1734                         l3308 16A6                         l3340 1634  
                       l3404 1762                         l3316 1470                         l3156 11A4  
                       l3148 1180                         l3180 1212                         l3172 11E2  
                       l3164 11C0                         l3260 0F98                         l3252 0F58  
                       l3244 0F22                         l3236 0EB4                         l3228 0E52  
                       l3332 15EC                         l3324 15BC                         l3500 1094  
                       l3414 1736                         l3342 1638                         l3406 1764  
                       l3318 1474                         l3190 124C                         l3182 1228  
                       l3174 11F4                         l3166 11C8                         l3254 0F68  
                       l3262 0F9A                         l3246 0F26                         l3238 0EBE  
                       l3270 0FCC                         l3334 15F6                         l3326 15C4  
                       l3430 1454                         l3502 109E                         l3416 1748  
                       l3280 17B4                         l3344 1642                         l3408 1766  
                       l3192 1254                         l3184 1230                         l3176 11FC  
                       l3168 11CC                         l3272 0FEE                         l3256 0F76  
                       l3248 0F38                         l3264 0FB8                         l3328 15CC  
                       l3424 1414                         l3504 10A0                         l3338 1524  
                       l3282 179C                         l3346 1652                         l3290 176C  
                       l3186 1236                         l3178 1204                         l3274 0FF6  
                       l3266 0FC0                         l3258 0F7E                         l3426 143A  
                       l3418 1406                         l3506 10C2                         l3284 17A0  
                       l3348 165C                         l3380 1342                         l3292 177C  
                       l3188 123C                         l3196 125E                         l3428 143E  
                       l3508 10CA                         l3460 1028                         l3452 1000  
                       l3278 17B0                         l3286 17A6                         l3390 137E  
                       l3382 1366                         l3374 1308                         l3198 126E  
                       l3294 14D2                         l3470 1048                         l3462 102C  
                       l3454 1018                         l3288 17AA                         l3392 1388  
                       l3384 1370                         l3376 1318                         l3296 14D6  
                       l3480 1064                         l3472 104C                         l3464 1030  
                       l3456 1018                         l3394 138A                         l3386 1372  
                       l3378 133E                         l3298 14E2                         l3490 107C  
                       l3482 106C                         l3474 1050                         l3466 1038  
                       l3458 1024                         l3396 1394                         l3388 137C  
                       l3492 107E                         l3484 1070                         l3476 1054  
                       l3468 1040                         l3398 174C                         l3494 1080  
                       l3486 1074                         l3478 105C                         l3496 1084  
                       l3488 1078                         l3498 1086                         STR_1 0E01  
                       STR_2 0E06                         STR_3 0E06                         STR_4 0E03  
                       u2000 11C0                         u2001 11BC                         u2010 11DA  
                       u2011 11D6                         u2020 11F4                         u2100 160E  
                       u2021 11F0                         u2101 160A                         u2110 16CE  
                       u2030 1212                         u2111 16CA                         u2031 120E  
                       u2120 16E4                         u2040 1228                         u2200 0F58  
                       u2121 16E0                         u2041 1224                         u2201 0F54  
                       u2050 124C                         u2210 0F68                         u2130 0E38  
                       u2051 1248                         u2211 0F64                         u2131 0E34  
                       u2060 126E                         u2220 0FAC                         u2140 0E7C  
                       u2061 126A                         u2221 0FA8                         u2141 0E78  
                       u2230 177C                         u2070 127E                         u2150 0E9C  
                       u2310 1094                         u2231 1778                         u2071 127A  
                       u2151 0E98                         u2311 1090                         u2080 12A4  
                       u2160 0ED2                         u2240 151A                         u2320 10B2  
               _BAUD4CONbits 0EE9                         u2081 12A0                         u2161 0ECC  
                       u2241 1516                         u2321 10AA                         u2250 1496  
                       u2090 12D6                         u2170 0ED4                         u2091 12D2  
                       u2260 14C0                         u2180 0F38                         u2181 0F34  
                       u2270 14D0                         u2190 0F48                         u2271 14CC  
                       u2191 0F44                         u2280 1454                         u2257 148C  
                       u2281 1450                         u2338 10B4                         _T2PR 0FBC  
                       u2267 14B6                         u2347 100A                         u2357 10D4  
                       u2367 1648                         u1940 10FC                         u1941 10F8  
                       u1950 1116                         u1951 1112                         u1960 113C  
                       u1961 1138                         u1970 115A                         u1971 1156  
                       u1980 1176                         u1981 1172                         u1990 119C  
                       u1991 1198                         abs@a 000B                         _dbuf 00A9  
                       _main 1000                         _prec 00DF                         _nout 0049  
                       fsr0h 0FEA                         fsr1h 0FE2                         indf0 0FEF  
                       fsr2h 0FDA                         fsr0l 0FE9                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         btemp 0059  
                       start 0074              __end_of_HighISR 0074                 ___param_bank 0000  
                      ??_abs 000D                        ?_main 0001           _timer_high_pointer 0054  
            __end_of___awdiv 11AE              __end_of___awmod 125E              ___awdiv@divisor 0007  
                      i2l420 170A                        i2l434 1798                        i2l427 1692  
                      i2l611 0024                        i2l613 0022                        i2l614 0052  
                      i2l617 0068              ___awdiv@counter 0009                 vfpfcnvrt@cnt 0014  
               vfpfcnvrt@fmt 0010                        _TMR0H 0FD4                        _TMR0L 0FD3  
    __end_of_sendCharSerial4 1782            sendArraySerial4@i 00F7   __end_of_I2C_2_Master_Start 17BA  
 __end_of_I2C_2_Master_Write 17A6                  _turningGear 0055                        _flags 004B  
                      _fputc 125E                        _width 00DD                        _putch 17C2  
          _turnRight135Delay 0066                        tablat 0FF5              _turnLeft90Delay 0051  
                      ttemp5 005A                        ttemp6 005D                        ttemp7 0061  
                      status 0FD8                        wtemp8 005A              __end_of_sprintf 1600  
         putCharToRxBuf@byte 0001              __initialization 1398                 __end_of_main 10EA  
                     ??_main 0035                __activetblptr 0003                       ?_fputc 0005  
                     _CCPR1H 0FAA                       _CCPR2H 0FA6                       _CCPR3H 0F25  
                     _CCPR4H 0F21             ___awdiv@dividend 0005                       ?_putch 0001  
                     _RC0PPS 0E62                       _RC4REG 0EE3                       _RE2PPS 0E74  
                     _RD5PPS 0E6F                       _RC7PPS 0E69                       _RD6PPS 0E70  
                     _RE4PPS 0E76                       i2l2610 16F8                       i2l2620 167C  
                     i2l2612 16FC                       i2l2614 1708                       i2l2616 1668  
                     i2l2608 16E8                       i2l2618 1678                       i2l1892 1782  
                     i2l2860 0032                       i2l2862 003A                       i2l2854 0012  
                     i2l2864 004E                       i2l2866 0062                       _RG6PPS 0E88  
              vfpfcnvrt@done 0013                    ??_HighISR 0003     __end_of_color_click_init 1668  
                     _RX4PPS 0E15                       _TX4REG 0EE4             _sendArraySerial4 1406  
           _turnLeft135Delay 0068                ??_Timer0_init 0005                 _CCPTMRS0bits 0FAD  
               vfprintf@cfmt 001F             _getCharFromTxBuf 1668                    ??___awdiv 0009  
                  ??___awmod 0009                       clear_0 13DE                       clear_1 13EA  
                     clear_2 13F6             ___awdiv@quotient 000B              ___awmod@divisor 0007  
                     isa$std 0001              ___awmod@counter 0009                       fputc@c 0005  
               __pdataCOMRAM 0051            _timer_low_pointer 0053                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           ?_sendCharSerial4 0001                       putch@c 0001             __end_of_vfprintf 1524  
          ??_initDCmotorsPWM 0007                    ??_sprintf 0024            _buggy_lights_init 1524  
      __end_of_isDataInTxBuf 179A                   __accesstop 0060      __end_of__initialization 13FC  
         ?_buggy_lights_init 0001                ___rparam_used 0001               __pcstackCOMRAM 0001  
               __pidataBANK0 1572          ??_buggy_lights_init 0005                __end_of_fputc 1308  
              __end_of_putch 17C4          __end_of_Timer0_init 174C                      ??_fputc 0008  
  __end_of_buggy_lights_init 1572                      ??_putch 0005                   __pbssBANK0 00A9  
                 __pbssBANK1 0100            _color_writetoaddr 170C                 _T2CLKCONbits 0FBF  
         ?_color_writetoaddr 0007          ??_color_writetoaddr 0008                      _SP4BRGH 0EE6  
                    _SP4BRGL 0EE5                      i2u57_40 1796                      i2u57_41 1790  
                    i2u58_40 1798                      _SSP2ADD 0ED6                      _SSP2BUF 0ED5  
     color_writetoaddr@value 0007                      _HighISR 0008    __end_of_color_writetoaddr 172C  
         _I2C_2_Master_Start 17B0                   _initUSART4 174C           _I2C_2_Master_Write 179A  
                    __Hparam 0000                      __Lparam 0000          sendArraySerial4@arr 0033  
                _Timer0_init 172C      sendStringSerial4@string 0006                      ___awdiv 10EA  
                    ___awmod 11AE          ?_I2C_2_Master_Start 0001      sendArraySerial4@tempStr 00E1  
        ?_I2C_2_Master_Write 0001                    ?_vfprintf 001C                 __psmallconst 0E00  
                    __pcinit 1398                      __ramtop 0E00                      __ptext0 1000  
                    __ptext1 1406                      __ptext2 15BC                      __ptext3 14D2  
                    __ptext4 0E0A                      __ptext5 125E                      __ptext6 17C2  
                    __ptext7 1600                      __ptext8 11AE                      __ptext9 10EA  
                  _T2CONbits 0FBD             ___awmod@dividend 0005     __end_of_sendArraySerial4 1470  
                  _T2HLTbits 0FBE                _RxBufWriteCnt 0050     __end_of_getCharFromTxBuf 1694  
                    _sprintf 15BC         ??_I2C_2_Master_Start 0006         ??_I2C_2_Master_Write 0006  
       end_of_initialization 13FC                      fputc@fp 0007            ?_color_click_init 0001  
         ??_color_click_init 0009            __end_of_vfpfcnvrt 1000                      postdec1 0FE5  
                    postdec2 0FDD                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0017                   ??_vfprintf 001F  
            _initDCmotorsPWM 1308                    _PORTFbits 0F8E                    _TRISAbits 0F81  
                  _TRISCbits 0F83                    _TRISDbits 0F84                    _TRISEbits 0F85  
                  _TRISFbits 0F86                    _TRISGbits 0F87                    _TRISHbits 0F88  
   color_writetoaddr@address 0008                  _CCP1CONbits 0FAB                 _EUSART4RXbuf 00C9  
               _EUSART4TXbuf 0100                  _CCP2CONbits 0FA7                  _CCP3CONbits 0F26  
                ?_initUSART4 0001                  _CCP4CONbits 0F22    sendCharSerial4@charToSend 0005  
                 main@motorL 0037                   main@motorR 0040                  vfpfcnvrt@ap 0011  
                vfpfcnvrt@cp 0016                  vfpfcnvrt@fp 000F                __pidataCOMRAM 17BA  
        start_initialization 1398                  __end_of_abs 1634                _TxBufWriteCnt 004E  
           _turnRight90Delay 006A        sendArraySerial4@index 00F6      __end_of_initDCmotorsPWM 1398  
                vfprintf@fmt 001D               _putCharToRxBuf 16E6                  __pdataBANK0 0060  
                __pbssCOMRAM 0049                __pcstackBANK0 00E1                    _backtrack 004C  
                   ?_HighISR 0001                 ?_Timer0_init 0001       __end_of_putCharToRxBuf 170C  
                  __pintcode 0008                     ?___awdiv 0005                     ?___awmod 0005  
                __smallconst 0E00            _I2C_2_Master_Idle 16BE            _I2C_2_Master_Init 1694  
          _I2C_2_Master_Stop 17A6            ?_sendArraySerial4 0033                 _RxBufReadCnt 004F  
         ?_I2C_2_Master_Idle 0001           ?_I2C_2_Master_Init 0001           ?_I2C_2_Master_Stop 0001  
              _headbuttDelay 0062     initDCmotorsPWM@PWMperiod 0005           ??_sendArraySerial4 0034  
                   ?_sprintf 0020            ?_getCharFromTxBuf 0001                    _rampDelay 0058  
         ??_getCharFromTxBuf 0001            _sendStringSerial4 1470          ??_I2C_2_Master_Idle 0005  
        ??_I2C_2_Master_Init 0005                     _LATAbits 0F79          ??_I2C_2_Master_Stop 0006  
                   _LATCbits 0F7B                _isDataInTxBuf 1782                     _LATDbits 0F7C  
                   _LATEbits 0F7D                     _LATFbits 0F7E                     _LATGbits 0F7F  
                   _LATHbits 0F80                     _PIE0bits 0E29           ?_sendStringSerial4 0006  
                   _PIE4bits 0E2D                     i2u151_40 0022                     i2u151_41 001E  
                   i2u152_40 0032                     i2u152_41 002E                     i2u137_40 16F8  
                   i2u153_40 004E                     i2u137_41 16F4                     i2u153_41 004A  
                   i2u138_40 1678                     i2u154_40 0062                     i2u138_41 1674  
                   i2u154_41 005E                     _PIR0bits 0E33                     _PIR4bits 0E37  
            ?_putCharToRxBuf 0001             ?_initDCmotorsPWM 0005            ??_sendCharSerial4 0005  
                   _SSP2CON2 0EDA          ??_sendStringSerial4 0008                     _SSP2STAT 0ED8  
                  _vfpfcnvrt 0E0A    __end_of_I2C_2_Master_Idle 16E6    __end_of_I2C_2_Master_Init 16BE  
  __end_of_I2C_2_Master_Stop 17B0  I2C_2_Master_Write@data_byte 0006                 _TxBufReadCnt 004D  
                 vfpfcnvrt@c 001B                    copy_data0 13AC                    copy_data1 13CC  
  __end_of_sendStringSerial4 14D2               ?_isDataInTxBuf 0001                 ??_initUSART4 0005  
                   __Hrparam 0000                   vfprintf@ap 001E                     __Lrparam 0000  
                 vfprintf@fp 001C                   ?_vfpfcnvrt 000F                   _ANSELDbits 0EA7  
                 _ANSELFbits 0EB4                   sprintf@fmt 0021                   sprintf@ret 0024  
                 _T0CON0bits 0FD5                   _T0CON1bits 0FD6           __end_of_initUSART4 176A  
                   __ptext10 1470                     __ptext11 176A                     __ptext20 1694  
                   __ptext12 174C                     __ptext21 1524                     __ptext13 1308  
                   __ptext22 172C                     __ptext14 1634                     __ptext15 170C  
                   __ptext24 16E6                     __ptext16 179A                     __ptext25 1782  
                   __ptext17 17A6                     __ptext26 1668                     __ptext18 17B0  
                   __ptext19 16BE                 _SSP2CON1bits 0ED9                 _SSP2CON2bits 0EDA  
                   isa$xinst 0000                   _RC4STAbits 0EE7                     int$flags 0059  
                   _vfprintf 14D2                   _INTCONbits 0FF2              ??_isDataInTxBuf 0001  
                   intlevel2 0000                    sprintf@ap 0026                 _topGearRight 0056  
          _manoeuvre_pointer 006C                  ??_vfpfcnvrt 0012             _color_click_init 1634  
                _topGearLeft 0057                     sprintf@f 0027                     sprintf@s 0020  
                 _SSP2DATPPS 0E1D                   _SSP2CLKPPS 0E1C              _trail_manoeuvre 006D  
                 _TX4STAbits 0EE8              _sendCharSerial4 176A             ??_putCharToRxBuf 0001  
