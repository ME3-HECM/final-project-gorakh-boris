

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 05 16:58:46 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataCOMRAM
    94   00199E                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _squareDelay
    98   00199E  012C               	dw	300
    99                           
   100                           ;initializer for _headbuttDelay
   101   0019A0  0046               	dw	70
   102                           
   103                           ;initializer for _turn180Delay
   104   0019A2  01FE               	dw	510
   105                           
   106                           ;initializer for _turnRight135Delay
   107   0019A4  012C               	dw	300
   108                           
   109                           ;initializer for _turnLeft135Delay
   110   0019A6  012C               	dw	300
   111                           
   112                           ;initializer for _turnRight90Delay
   113   0019A8  00AF               	dw	175
   114                           
   115                           ;initializer for _turnLeft90Delay
   116   0019AA  00AF               	dw	175
   117                           
   118                           ;initializer for _timer_low_pointer
   119   0019AC  B8                 	db	low _trail_timer_low
   120                           
   121                           ;initializer for _timer_high_pointer
   122   0019AD  CC                 	db	low _trail_timer_high
   123                           
   124                           ;initializer for _turningGear
   125   0019AE  2A                 	db	42
   126                           
   127                           ;initializer for _topGearRight
   128   0019AF  14                 	db	20
   129                           
   130                           ;initializer for _topGearLeft
   131   0019B0  14                 	db	20
   132                           
   133                           ;initializer for _rampDelay
   134   0019B1  08                 	db	8
   135                           
   136                           	psect	idataBANK0
   137   001758                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _manoeuvre_pointer
   141   001758  A4                 	db	low _trail_manoeuvre
   142                           
   143                           ;initializer for _trail_manoeuvre
   144   001759  01                 	db	1
   145   00175A  02                 	db	2
   146   00175B  03                 	db	3
   147   00175C  04                 	db	4
   148   00175D  05                 	db	5
   149   00175E  06                 	db	6
   150   00175F  07                 	db	7
   151   001760  08                 	db	8
   152   001761  09                 	db	9
   153   001762  00                 	db	0
   154   001763  01                 	db	1
   155   001764  02                 	db	2
   156   001765  03                 	db	3
   157   001766  04                 	db	4
   158   001767  05                 	db	5
   159   001768  06                 	db	6
   160   001769  07                 	db	7
   161   00176A  08                 	db	8
   162   00176B  09                 	db	9
   163   00176C  00                 	db	0
   164                           
   165                           ;initializer for _trail_timer_low
   166   00176D  01                 	db	1
   167   00176E  02                 	db	2
   168   00176F  03                 	db	3
   169   001770  04                 	db	4
   170   001771  05                 	db	5
   171   001772  06                 	db	6
   172   001773  07                 	db	7
   173   001774  08                 	db	8
   174   001775  09                 	db	9
   175   001776  00                 	db	0
   176   001777  01                 	db	1
   177   001778  02                 	db	2
   178   001779  03                 	db	3
   179   00177A  04                 	db	4
   180   00177B  05                 	db	5
   181   00177C  06                 	db	6
   182   00177D  07                 	db	7
   183   00177E  08                 	db	8
   184   00177F  09                 	db	9
   185   001780  00                 	db	0
   186                           
   187                           ;initializer for _trail_timer_high
   188   001781  01                 	db	1
   189   001782  02                 	db	2
   190   001783  03                 	db	3
   191   001784  04                 	db	4
   192   001785  05                 	db	5
   193   001786  06                 	db	6
   194   001787  07                 	db	7
   195   001788  08                 	db	8
   196   001789  09                 	db	9
   197   00178A  00                 	db	0
   198   00178B  01                 	db	1
   199   00178C  02                 	db	2
   200   00178D  03                 	db	3
   201   00178E  04                 	db	4
   202   00178F  05                 	db	5
   203   001790  06                 	db	6
   204   001791  07                 	db	7
   205   001792  08                 	db	8
   206   001793  09                 	db	9
   207   001794  00                 	db	0
   208   000000                     _TX4REG	set	3812
   209   000000                     _RC4STAbits	set	3815
   210   000000                     _SP4BRGH	set	3814
   211   000000                     _LATEbits	set	3965
   212   000000                     _TRISEbits	set	3973
   213   000000                     _LATGbits	set	3967
   214   000000                     _TRISGbits	set	3975
   215   000000                     _LATFbits	set	3966
   216   000000                     _LATHbits	set	3968
   217   000000                     _TRISFbits	set	3974
   218   000000                     _TRISHbits	set	3976
   219   000000                     _SSP2CON2bits	set	3802
   220   000000                     _RX4PPS	set	3605
   221   000000                     _SSP2CLKPPS	set	3612
   222   000000                     _SSP2DATPPS	set	3613
   223   000000                     _RC7PPS	set	3689
   224   000000                     _RE2PPS	set	3700
   225   000000                     _LATAbits	set	3961
   226   000000                     _LATDbits	set	3964
   227   000000                     _TRISDbits	set	3972
   228   000000                     _PORTFbits	set	3982
   229   000000                     _T2PR	set	4028
   230   000000                     _T2CONbits	set	4029
   231   000000                     _CCPR2H	set	4006
   232   000000                     _CCPR1H	set	4010
   233   000000                     _TRISCbits	set	3971
   234   000000                     _TRISAbits	set	3969
   235   000000                     _LATCbits	set	3963
   236   000000                     _RE4PPS	set	3702
   237   000000                     _RG6PPS	set	3720
   238   000000                     _RD5PPS	set	3695
   239   000000                     _ANSELDbits	set	3751
   240   000000                     _SSP2ADD	set	3798
   241   000000                     _SSP2CON1bits	set	3801
   242   000000                     _CCPR4H	set	3873
   243   000000                     _CCPR3H	set	3877
   244   000000                     _TMR0L	set	4051
   245   000000                     _TMR0H	set	4052
   246   000000                     _T0CON0bits	set	4053
   247   000000                     _T0CON1bits	set	4054
   248   000000                     _T2CLKCONbits	set	4031
   249   000000                     _T2HLTbits	set	4030
   250   000000                     _CCP1CONbits	set	4011
   251   000000                     _CCPTMRS0bits	set	4013
   252   000000                     _CCP2CONbits	set	4007
   253   000000                     _CCP3CONbits	set	3878
   254   000000                     _CCP4CONbits	set	3874
   255   000000                     _RC4REG	set	3811
   256   000000                     _SP4BRGL	set	3813
   257   000000                     _TX4STAbits	set	3816
   258   000000                     _BAUD4CONbits	set	3817
   259   000000                     _SSP2CON2	set	3802
   260   000000                     _SSP2STAT	set	3800
   261   000000                     _ANSELFbits	set	3764
   262   000000                     _SSP2BUF	set	3797
   263   000000                     _PIE0bits	set	3625
   264   000000                     _PIE4bits	set	3629
   265   000000                     _PIR4bits	set	3639
   266   000000                     _RC0PPS	set	3682
   267   000000                     _RD6PPS	set	3696
   268   000000                     _PIR0bits	set	3635
   269   000000                     _INTCONbits	set	4082
   270                           
   271                           	psect	smallconst
   272   000E00                     __psmallconst:
   273                           	callstack 0
   274   000E00  00                 	db	0
   275   000E01                     STR_1:
   276   000E01  52                 	db	82	;'R'
   277   000E02  65                 	db	101	;'e'
   278   000E03  64                 	db	100	;'d'
   279   000E04  3A                 	db	58	;':'
   280   000E05  25                 	db	37
   281   000E06  30                 	db	48	;'0'
   282   000E07  35                 	db	53	;'5'
   283   000E08  64                 	db	100	;'d'
   284   000E09  20                 	db	32
   285   000E0A  47                 	db	71	;'G'
   286   000E0B  72                 	db	114	;'r'
   287   000E0C  65                 	db	101	;'e'
   288   000E0D  65                 	db	101	;'e'
   289   000E0E  6E                 	db	110	;'n'
   290   000E0F  3A                 	db	58	;':'
   291   000E10  25                 	db	37
   292   000E11  30                 	db	48	;'0'
   293   000E12  35                 	db	53	;'5'
   294   000E13  64                 	db	100	;'d'
   295   000E14  20                 	db	32
   296   000E15  42                 	db	66	;'B'
   297   000E16  6C                 	db	108	;'l'
   298   000E17  75                 	db	117	;'u'
   299   000E18  65                 	db	101	;'e'
   300   000E19  3A                 	db	58	;':'
   301   000E1A  25                 	db	37
   302   000E1B  30                 	db	48	;'0'
   303   000E1C  35                 	db	53	;'5'
   304   000E1D  64                 	db	100	;'d'
   305   000E1E  20                 	db	32
   306   000E1F  43                 	db	67	;'C'
   307   000E20  6C                 	db	108	;'l'
   308   000E21  65                 	db	101	;'e'
   309   000E22  61                 	db	97	;'a'
   310   000E23  72                 	db	114	;'r'
   311   000E24  3A                 	db	58	;':'
   312   000E25  25                 	db	37
   313   000E26  30                 	db	48	;'0'
   314   000E27  35                 	db	53	;'5'
   315   000E28  64                 	db	100	;'d'
   316   000E29  20                 	db	32
   317   000E2A  2F                 	db	47
   318   000E2B  72                 	db	114	;'r'
   319   000E2C  2F                 	db	47
   320   000E2D  6E                 	db	110	;'n'
   321   000E2E  00                 	db	0
   322   000E2F                     STR_2:
   323   000E2F  25                 	db	37
   324   000E30  64                 	db	100	;'d'
   325   000E31  20                 	db	32
   326   000E32  0D                 	db	13
   327   000E33  00                 	db	0
   328   000E34                     STR_3:
   329   000E34  25                 	db	37
   330   000E35  64                 	db	100	;'d'
   331   000E36  00                 	db	0
   332   000E37  00                 	db	0	; dummy byte at the end
   333   000000                     
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337   00142E                     __pcinit:
   338                           	callstack 0
   339   00142E                     start_initialization:
   340                           	callstack 0
   341   00142E                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Initialize objects allocated to BANK0 (61 bytes)
   345                           ; load TBLPTR registers with __pidataBANK0
   346   00142E  0E58               	movlw	low __pidataBANK0
   347   001430  6EF6               	movwf	tblptrl,c
   348   001432  0E17               	movlw	high __pidataBANK0
   349   001434  6EF7               	movwf	tblptrh,c
   350   001436  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   351   001438  6EF8               	movwf	tblptru,c
   352   00143A  EE00  F0A3         	lfsr	0,__pdataBANK0
   353   00143E  EE10 F03D          	lfsr	1,61
   354   001442                     copy_data0:
   355   001442  0009               	tblrd		*+
   356   001444  CFF5 FFEE          	movff	tablat,postinc0
   357   001448  50E5               	movf	postdec1,w,c
   358   00144A  50E1               	movf	fsr1l,w,c
   359   00144C  E1FA               	bnz	copy_data0
   360                           
   361                           ; Initialize objects allocated to COMRAM (20 bytes)
   362                           ; load TBLPTR registers with __pidataCOMRAM
   363   00144E  0E9E               	movlw	low __pidataCOMRAM
   364   001450  6EF6               	movwf	tblptrl,c
   365   001452  0E19               	movlw	high __pidataCOMRAM
   366   001454  6EF7               	movwf	tblptrh,c
   367   001456  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   368   001458  6EF8               	movwf	tblptru,c
   369   00145A  EE00  F03B         	lfsr	0,__pdataCOMRAM
   370   00145E  EE10 F014          	lfsr	1,20
   371   001462                     copy_data1:
   372   001462  0009               	tblrd		*+
   373   001464  CFF5 FFEE          	movff	tablat,postinc0
   374   001468  50E5               	movf	postdec1,w,c
   375   00146A  50E1               	movf	fsr1l,w,c
   376   00146C  E1FA               	bnz	copy_data1
   377                           
   378                           ; Clear objects allocated to BANK1 (92 bytes)
   379   00146E  EE01  F000         	lfsr	0,__pbssBANK1
   380   001472  0E5C               	movlw	92
   381   001474                     clear_0:
   382   001474  6AEE               	clrf	postinc0,c
   383   001476  06E8               	decf	wreg,f,c
   384   001478  E1FD               	bnz	clear_0
   385                           
   386                           ; Clear objects allocated to BANK0 (20 bytes)
   387   00147A  EE00  F0E0         	lfsr	0,__pbssBANK0
   388   00147E  0E14               	movlw	20
   389   001480                     clear_1:
   390   001480  6AEE               	clrf	postinc0,c
   391   001482  06E8               	decf	wreg,f,c
   392   001484  E1FD               	bnz	clear_1
   393                           
   394                           ; Clear objects allocated to COMRAM (12 bytes)
   395   001486  EE00  F04F         	lfsr	0,__pbssCOMRAM
   396   00148A  0E0C               	movlw	12
   397   00148C                     clear_2:
   398   00148C  6AEE               	clrf	postinc0,c
   399   00148E  06E8               	decf	wreg,f,c
   400   001490  E1FD               	bnz	clear_2
   401   001492                     end_of_initialization:
   402                           	callstack 0
   403   001492                     __end_of__initialization:
   404                           	callstack 0
   405   001492  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   406   001494  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   407   001496  0100               	movlb	0
   408   001498  EF1C  F008         	goto	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMRAM
   411   00004F                     __pbssCOMRAM:
   412                           	callstack 0
   413   00004F                     _nout:
   414                           	callstack 0
   415   00004F                     	ds	2
   416   000051                     _width:
   417                           	callstack 0
   418   000051                     	ds	2
   419   000053                     _prec:
   420                           	callstack 0
   421   000053                     	ds	2
   422   000055                     _flags:
   423                           	callstack 0
   424   000055                     	ds	1
   425   000056                     _backtrack:
   426                           	callstack 0
   427   000056                     	ds	1
   428   000057                     _TxBufReadCnt:
   429                           	callstack 0
   430   000057                     	ds	1
   431   000058                     _TxBufWriteCnt:
   432                           	callstack 0
   433   000058                     	ds	1
   434   000059                     _RxBufReadCnt:
   435                           	callstack 0
   436   000059                     	ds	1
   437   00005A                     _RxBufWriteCnt:
   438                           	callstack 0
   439   00005A                     	ds	1
   440                           
   441                           	psect	dataCOMRAM
   442   00003B                     __pdataCOMRAM:
   443                           	callstack 0
   444   00003B                     _squareDelay:
   445                           	callstack 0
   446   00003B                     	ds	2
   447   00003D                     _headbuttDelay:
   448                           	callstack 0
   449   00003D                     	ds	2
   450   00003F                     _turn180Delay:
   451                           	callstack 0
   452   00003F                     	ds	2
   453   000041                     _turnRight135Delay:
   454                           	callstack 0
   455   000041                     	ds	2
   456   000043                     _turnLeft135Delay:
   457                           	callstack 0
   458   000043                     	ds	2
   459   000045                     _turnRight90Delay:
   460                           	callstack 0
   461   000045                     	ds	2
   462   000047                     _turnLeft90Delay:
   463                           	callstack 0
   464   000047                     	ds	2
   465   000049                     _timer_low_pointer:
   466                           	callstack 0
   467   000049                     	ds	1
   468   00004A                     _timer_high_pointer:
   469                           	callstack 0
   470   00004A                     	ds	1
   471   00004B                     _turningGear:
   472                           	callstack 0
   473   00004B                     	ds	1
   474   00004C                     _topGearRight:
   475                           	callstack 0
   476   00004C                     	ds	1
   477   00004D                     _topGearLeft:
   478                           	callstack 0
   479   00004D                     	ds	1
   480   00004E                     _rampDelay:
   481                           	callstack 0
   482   00004E                     	ds	1
   483                           
   484                           	psect	bssBANK0
   485   0000E0                     __pbssBANK0:
   486                           	callstack 0
   487   0000E0                     _EUSART4RXbuf:
   488                           	callstack 0
   489   0000E0                     	ds	20
   490                           
   491                           	psect	dataBANK0
   492   0000A3                     __pdataBANK0:
   493                           	callstack 0
   494   0000A3                     _manoeuvre_pointer:
   495                           	callstack 0
   496   0000A3                     	ds	1
   497   0000A4                     _trail_manoeuvre:
   498                           	callstack 0
   499   0000A4                     	ds	20
   500   0000B8                     _trail_timer_low:
   501                           	callstack 0
   502   0000B8                     	ds	20
   503   0000CC                     _trail_timer_high:
   504                           	callstack 0
   505   0000CC                     	ds	20
   506                           
   507                           	psect	bssBANK1
   508   000100                     __pbssBANK1:
   509                           	callstack 0
   510   000100                     _EUSART4TXbuf:
   511                           	callstack 0
   512   000100                     	ds	60
   513   00013C                     _dbuf:
   514                           	callstack 0
   515   00013C                     	ds	32
   516                           
   517                           	psect	cstackBANK0
   518   000060                     __pcstackBANK0:
   519                           	callstack 0
   520   000060                     main@display:
   521                           	callstack 0
   522                           
   523                           ; 41 bytes @ 0x0
   524   000060                     	ds	41
   525   000089                     main@motorL:
   526                           	callstack 0
   527                           
   528                           ; 9 bytes @ 0x29
   529   000089                     	ds	9
   530   000092                     main@motorR:
   531                           	callstack 0
   532                           
   533                           ; 9 bytes @ 0x32
   534   000092                     	ds	9
   535   00009B                     main@read_val:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x3B
   539   00009B                     	ds	8
   540                           
   541                           	psect	cstackCOMRAM
   542   000001                     __pcstackCOMRAM:
   543                           	callstack 0
   544   000001                     ??_getCharFromTxBuf:
   545   000001                     putCharToRxBuf@byte:
   546                           	callstack 0
   547   000001                     
   548                           ; 1 bytes @ 0x0
   549   000001                     	ds	2
   550   000003                     ??_HighISR:
   551                           
   552                           ; 1 bytes @ 0x2
   553   000003                     	ds	2
   554   000005                     ??_I2C_2_Master_Idle:
   555   000005                     ?___awdiv:
   556                           	callstack 0
   557   000005                     ?___awmod:
   558                           	callstack 0
   559   000005                     putCharToTxBuf@byte:
   560                           	callstack 0
   561   000005                     initDCmotorsPWM@PWMperiod:
   562                           	callstack 0
   563   000005                     ___awdiv@dividend:
   564                           	callstack 0
   565   000005                     ___awmod@dividend:
   566                           	callstack 0
   567   000005                     fputc@c:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x4
   571   000005                     	ds	1
   572   000006                     ??_I2C_2_Master_Read:
   573   000006                     I2C_2_Master_Write@data_byte:
   574                           	callstack 0
   575   000006                     TxBufferedString@string:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x5
   579   000006                     	ds	1
   580   000007                     color_writetoaddr@value:
   581                           	callstack 0
   582   000007                     I2C_2_Master_Read@ack:
   583                           	callstack 0
   584   000007                     fputc@fp:
   585                           	callstack 0
   586   000007                     ___awdiv@divisor:
   587                           	callstack 0
   588   000007                     ___awmod@divisor:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x6
   592   000007                     	ds	1
   593   000008                     ??_fputc:
   594   000008                     color_writetoaddr@address:
   595                           	callstack 0
   596   000008                     I2C_2_Master_Read@tmp:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x7
   600   000008                     	ds	1
   601   000009                     ??_color_click_init:
   602   000009                     ?_color_read_Red:
   603                           	callstack 0
   604   000009                     ?_color_read_Blue:
   605                           	callstack 0
   606   000009                     ?_color_read_Green:
   607                           	callstack 0
   608   000009                     ?_color_read_Clear:
   609                           	callstack 0
   610   000009                     ___awdiv@counter:
   611                           	callstack 0
   612   000009                     ___awmod@counter:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x8
   616   000009                     	ds	1
   617   00000A                     ___awdiv@sign:
   618                           	callstack 0
   619   00000A                     ___awmod@sign:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x9
   623   00000A                     	ds	1
   624   00000B                     ??_color_read_Red:
   625   00000B                     ??_color_read_Blue:
   626   00000B                     ??_color_read_Green:
   627   00000B                     ??_color_read_Clear:
   628   00000B                     ?_abs:
   629                           	callstack 0
   630   00000B                     ___awdiv@quotient:
   631                           	callstack 0
   632   00000B                     abs@a:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xA
   636   00000B                     	ds	2
   637   00000D                     ??_abs:
   638                           
   639                           ; 1 bytes @ 0xC
   640   00000D                     	ds	1
   641   00000E                     color_read_Red@tmp:
   642                           	callstack 0
   643   00000E                     color_read_Blue@tmp:
   644                           	callstack 0
   645   00000E                     color_read_Green@tmp:
   646                           	callstack 0
   647   00000E                     color_read_Clear@tmp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0xD
   651   00000E                     	ds	1
   652   00000F                     ?_vfpfcnvrt:
   653                           	callstack 0
   654   00000F                     vfpfcnvrt@fp:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0xE
   658   00000F                     	ds	1
   659   000010                     getRGBCval@p:
   660                           	callstack 0
   661   000010                     vfpfcnvrt@fmt:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0xF
   665   000010                     	ds	1
   666   000011                     vfpfcnvrt@ap:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x10
   670   000011                     	ds	1
   671   000012                     ??_vfpfcnvrt:
   672                           
   673                           ; 1 bytes @ 0x11
   674   000012                     	ds	1
   675   000013                     vfpfcnvrt@done:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x12
   679   000013                     	ds	1
   680   000014                     vfpfcnvrt@cnt:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x13
   684   000014                     	ds	2
   685   000016                     vfpfcnvrt@cp:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x15
   689   000016                     	ds	1
   690   000017                     vfpfcnvrt@convarg:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x16
   694   000017                     	ds	4
   695   00001B                     vfpfcnvrt@c:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x1A
   699   00001B                     	ds	1
   700   00001C                     ?_vfprintf:
   701                           	callstack 0
   702   00001C                     vfprintf@fp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x1B
   706   00001C                     	ds	1
   707   00001D                     vfprintf@fmt:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x1C
   711   00001D                     	ds	1
   712   00001E                     vfprintf@ap:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x1D
   716   00001E                     	ds	1
   717   00001F                     vfprintf@cfmt:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x1E
   721   00001F                     	ds	1
   722   000020                     ?_sprintf:
   723                           	callstack 0
   724   000020                     sprintf@s:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x1F
   728   000020                     	ds	1
   729   000021                     sprintf@fmt:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x20
   733   000021                     	ds	9
   734   00002A                     sprintf@ret:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x29
   738   00002A                     	ds	2
   739   00002C                     sprintf@ap:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x2B
   743   00002C                     	ds	1
   744   00002D                     sprintf@f:
   745                           	callstack 0
   746                           
   747                           ; 12 bytes @ 0x2C
   748   00002D                     	ds	12
   749   000039                     ??_main:
   750                           
   751                           ; 1 bytes @ 0x38
   752   000039                     	ds	2
   753                           
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 27 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  display        41    0[BANK0 ] unsigned char [41]
   764 ;;  motorR          9   50[BANK0 ] struct DC_motor
   765 ;;  motorL          9   41[BANK0 ] struct DC_motor
   766 ;;  read_val        8   59[BANK0 ] struct RGBC_val
   767 ;;  PWMcycle        2    0        unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Locals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;      Totals:         2      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   781 ;;Total ram usage:       69 bytes
   782 ;; Hardware stack levels required when called: 7
   783 ;; This function calls:
   784 ;;		_Interrupts_init
   785 ;;		_Timer0_init
   786 ;;		_TxBufferedString
   787 ;;		_buggy_lights_init
   788 ;;		_color_click_init
   789 ;;		_getRGBCval
   790 ;;		_initDCmotorsPWM
   791 ;;		_initUSART4
   792 ;;		_sendTxBuf
   793 ;;		_sprintf
   794 ;; This function is called by:
   795 ;;		Startup code after reset
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text0
   800   001038                     __ptext0:
   801                           	callstack 0
   802   001038                     _main:
   803                           	callstack 24
   804   001038                     
   805                           ;main.c: 28:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   806   001038  0E52               	movlw	82
   807   00103A  6E3A               	movwf	(??_main+1)^0,c
   808   00103C  0E2B               	movlw	43
   809   00103E  6E39               	movwf	??_main^0,c
   810   001040  0E00               	movlw	0
   811   001042                     u1347:
   812   001042  2EE8               	decfsz	wreg,f,c
   813   001044  D7FE               	bra	u1347
   814   001046  2E39               	decfsz	??_main^0,f,c
   815   001048  D7FC               	bra	u1347
   816   00104A  2E3A               	decfsz	(??_main+1)^0,f,c
   817   00104C  D7FA               	bra	u1347
   818   00104E  D000               	nop2	
   819   001050                     
   820                           ;main.c: 31:     initDCmotorsPWM(PWMcycle);
   821   001050  0E00               	movlw	0
   822   001052  6E06               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   823   001054  0E63               	movlw	99
   824   001056  6E05               	movwf	initDCmotorsPWM@PWMperiod^0,c
   825   001058  ECCF  F009         	call	_initDCmotorsPWM	;wreg free
   826   00105C                     
   827                           ;main.c: 33:     struct DC_motor motorL, motorR;;main.c: 35:     motorL.power = 0;
   828   00105C  0E00               	movlw	0
   829   00105E  0100               	movlb	0	; () banked
   830   001060  6F89               	movwf	main@motorL& (0+255),b
   831   001062                     
   832                           ; BSR set to: 0
   833                           ;main.c: 36:     motorL.direction = 1;
   834   001062  0E01               	movlw	1
   835   001064  6F8A               	movwf	(main@motorL+1)& (0+255),b
   836   001066                     
   837                           ; BSR set to: 0
   838                           ;main.c: 37:     motorL.brakemode = 1;
   839   001066  0E01               	movlw	1
   840   001068  6F8B               	movwf	(main@motorL+2)& (0+255),b
   841   00106A                     
   842                           ; BSR set to: 0
   843                           ;main.c: 38:     motorL.PWMperiod = PWMcycle;
   844   00106A  0E00               	movlw	0
   845   00106C  6F8D               	movwf	(main@motorL+4)& (0+255),b
   846   00106E  0E63               	movlw	99
   847   001070  6F8C               	movwf	(main@motorL+3)& (0+255),b
   848   001072                     
   849                           ; BSR set to: 0
   850                           ;main.c: 39:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   851   001072  0EAA               	movlw	170
   852   001074  6F8E               	movwf	(main@motorL+5)& (0+255),b
   853   001076  0E0F               	movlw	15
   854   001078  6F8F               	movwf	(main@motorL+6)& (0+255),b
   855   00107A                     
   856                           ; BSR set to: 0
   857                           ;main.c: 40:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   858   00107A  0EA6               	movlw	166
   859   00107C  6F90               	movwf	(main@motorL+7)& (0+255),b
   860   00107E  0E0F               	movlw	15
   861   001080  6F91               	movwf	(main@motorL+8)& (0+255),b
   862   001082                     
   863                           ; BSR set to: 0
   864                           ;main.c: 42:     motorR.power = 0;
   865   001082  0E00               	movlw	0
   866   001084  6F92               	movwf	main@motorR& (0+255),b
   867   001086                     
   868                           ; BSR set to: 0
   869                           ;main.c: 43:     motorR.direction = 1;
   870   001086  0E01               	movlw	1
   871   001088  6F93               	movwf	(main@motorR+1)& (0+255),b
   872   00108A                     
   873                           ; BSR set to: 0
   874                           ;main.c: 44:     motorR.brakemode = 1;
   875   00108A  0E01               	movlw	1
   876   00108C  6F94               	movwf	(main@motorR+2)& (0+255),b
   877   00108E                     
   878                           ; BSR set to: 0
   879                           ;main.c: 45:     motorR.PWMperiod = PWMcycle;
   880   00108E  0E00               	movlw	0
   881   001090  6F96               	movwf	(main@motorR+4)& (0+255),b
   882   001092  0E63               	movlw	99
   883   001094  6F95               	movwf	(main@motorR+3)& (0+255),b
   884   001096                     
   885                           ; BSR set to: 0
   886                           ;main.c: 46:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   887   001096  0E25               	movlw	37
   888   001098  6F97               	movwf	(main@motorR+5)& (0+255),b
   889   00109A  0E0F               	movlw	15
   890   00109C  6F98               	movwf	(main@motorR+6)& (0+255),b
   891   00109E                     
   892                           ; BSR set to: 0
   893                           ;main.c: 47:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   894   00109E  0E21               	movlw	33
   895   0010A0  6F99               	movwf	(main@motorR+7)& (0+255),b
   896   0010A2  0E0F               	movlw	15
   897   0010A4  6F9A               	movwf	(main@motorR+8)& (0+255),b
   898   0010A6                     
   899                           ; BSR set to: 0
   900                           ;main.c: 51:     struct RGBC_val read_val;;main.c: 53:     read_val.R = 0;
   901   0010A6  0E00               	movlw	0
   902   0010A8  6F9C               	movwf	(main@read_val+1)& (0+255),b
   903   0010AA  0E00               	movlw	0
   904   0010AC  6F9B               	movwf	main@read_val& (0+255),b
   905   0010AE                     
   906                           ; BSR set to: 0
   907                           ;main.c: 54:     read_val.B = 0;
   908   0010AE  0E00               	movlw	0
   909   0010B0  6FA0               	movwf	(main@read_val+5)& (0+255),b
   910   0010B2  0E00               	movlw	0
   911   0010B4  6F9F               	movwf	(main@read_val+4)& (0+255),b
   912   0010B6                     
   913                           ; BSR set to: 0
   914                           ;main.c: 55:     read_val.G = 0;
   915   0010B6  0E00               	movlw	0
   916   0010B8  6F9E               	movwf	(main@read_val+3)& (0+255),b
   917   0010BA  0E00               	movlw	0
   918   0010BC  6F9D               	movwf	(main@read_val+2)& (0+255),b
   919   0010BE                     
   920                           ; BSR set to: 0
   921                           ;main.c: 56:     read_val.C = 0;
   922   0010BE  0E00               	movlw	0
   923   0010C0  6FA2               	movwf	(main@read_val+7)& (0+255),b
   924   0010C2  0E00               	movlw	0
   925   0010C4  6FA1               	movwf	(main@read_val+6)& (0+255),b
   926   0010C6                     
   927                           ; BSR set to: 0
   928                           ;main.c: 60:     buggy_lights_init();
   929   0010C6  EC42  F00B         	call	_buggy_lights_init	;wreg free
   930   0010CA                     
   931                           ;main.c: 61:     color_click_init();
   932   0010CA  ECE5  F00B         	call	_color_click_init	;wreg free
   933   0010CE                     
   934                           ;main.c: 62:     initUSART4();
   935   0010CE  EC9B  F00C         	call	_initUSART4	;wreg free
   936   0010D2                     
   937                           ;main.c: 63:     Timer0_init();
   938   0010D2  EC8B  F00C         	call	_Timer0_init	;wreg free
   939   0010D6                     
   940                           ;main.c: 64:     Interrupts_init();
   941   0010D6  ECD9  F00C         	call	_Interrupts_init	;wreg free
   942   0010DA                     
   943                           ;main.c: 69:     TRISFbits.TRISF2 = 1;
   944   0010DA  8486               	bsf	134,2,c	;volatile
   945   0010DC                     
   946                           ;main.c: 70:     TRISFbits.TRISF3 = 1;
   947   0010DC  8686               	bsf	134,3,c	;volatile
   948   0010DE                     
   949                           ;main.c: 72:     ANSELFbits.ANSELF2 = 0;
   950   0010DE  010E               	movlb	14	; () banked
   951   0010E0  95B4               	bcf	180,2,b	;volatile
   952   0010E2                     
   953                           ; BSR set to: 14
   954                           ;main.c: 73:     ANSELFbits.ANSELF3 = 0;
   955   0010E2  97B4               	bcf	180,3,b	;volatile
   956   0010E4                     l2560:
   957                           
   958                           ;main.c: 93:         if (!PORTFbits.RF2) {
   959   0010E4  B48E               	btfsc	142,2,c	;volatile
   960   0010E6  EF77  F008         	goto	u1251
   961   0010EA  EF79  F008         	goto	u1250
   962   0010EE                     u1251:
   963   0010EE  EF90  F008         	goto	l2568
   964   0010F2                     u1250:
   965   0010F2                     
   966                           ;main.c: 94:             *manoeuvre_pointer = 0;
   967   0010F2  0100               	movlb	0	; () banked
   968   0010F4  51A3               	movf	_manoeuvre_pointer& (0+255),w,b
   969   0010F6  6ED9               	movwf	fsr2l,c
   970   0010F8  6ADA               	clrf	fsr2h,c
   971   0010FA  6ADF               	clrf	indf2,c
   972   0010FC                     
   973                           ; BSR set to: 0
   974                           ;main.c: 95:             manoeuvre_pointer ++;
   975   0010FC  2BA3               	incf	_manoeuvre_pointer& (0+255),f,b
   976   0010FE                     
   977                           ; BSR set to: 0
   978                           ;main.c: 96:             LATDbits.LATD7 = !LATDbits.LATD7;
   979   0010FE  AE7C               	btfss	124,7,c	;volatile
   980   001100  EF84  F008         	goto	u1261
   981   001104  EF88  F008         	goto	u1260
   982   001108                     u1261:
   983   001108  6A39               	clrf	??_main^0,c
   984   00110A  2A39               	incf	??_main^0,f,c
   985   00110C  EF89  F008         	goto	u1278
   986   001110                     u1260:
   987   001110  6A39               	clrf	??_main^0,c
   988   001112                     u1278:
   989   001112  3239               	rrcf	??_main^0,f,c
   990   001114  3239               	rrcf	??_main^0,f,c
   991   001116  507C               	movf	124,w,c	;volatile
   992   001118  1839               	xorwf	??_main^0,w,c
   993   00111A  0B7F               	andlw	-129
   994   00111C  1839               	xorwf	??_main^0,w,c
   995   00111E  6E7C               	movwf	124,c	;volatile
   996   001120                     l2568:
   997                           
   998                           ;main.c: 98:         getRGBCval(&read_val);
   999   001120  0E9B               	movlw	low main@read_val
  1000   001122  6E10               	movwf	getRGBCval@p^0,c
  1001   001124  EC4E  F00A         	call	_getRGBCval	;wreg free
  1002   001128                     
  1003                           ;main.c: 99:         sprintf(display, "Red:%05d Green:%05d Blue:%05d Clear:%05d /r/n",re
      +                          ad_val.R,read_val.G,read_val.B,read_val.C);
  1004   001128  0E60               	movlw	low main@display
  1005   00112A  6E20               	movwf	sprintf@s^0,c
  1006   00112C  0E01               	movlw	low STR_1
  1007   00112E  6E21               	movwf	sprintf@fmt^0,c
  1008   001130  C09B  F022         	movff	main@read_val,?_sprintf+2
  1009   001134  C09C  F023         	movff	main@read_val+1,?_sprintf+3
  1010   001138  C09D  F024         	movff	main@read_val+2,?_sprintf+4
  1011   00113C  C09E  F025         	movff	main@read_val+3,?_sprintf+5
  1012   001140  C09F  F026         	movff	main@read_val+4,?_sprintf+6
  1013   001144  C0A0  F027         	movff	main@read_val+5,?_sprintf+7
  1014   001148  C0A1  F028         	movff	main@read_val+6,?_sprintf+8
  1015   00114C  C0A2  F029         	movff	main@read_val+7,?_sprintf+9
  1016   001150  EC69  F00B         	call	_sprintf	;wreg free
  1017   001154                     
  1018                           ;main.c: 100:         TxBufferedString(display);
  1019   001154  0E60               	movlw	low main@display
  1020   001156  6E06               	movwf	TxBufferedString@string^0,c
  1021   001158  EC2A  F00C         	call	_TxBufferedString	;wreg free
  1022   00115C                     
  1023                           ;main.c: 101:         sendTxBuf();
  1024   00115C  ECAA  F00C         	call	_sendTxBuf	;wreg free
  1025   001160                     
  1026                           ;main.c: 104:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1027   001160  0E29               	movlw	41
  1028   001162  6E3A               	movwf	(??_main+1)^0,c
  1029   001164  0E96               	movlw	150
  1030   001166  6E39               	movwf	??_main^0,c
  1031   001168  0E7F               	movlw	127
  1032   00116A                     u1357:
  1033   00116A  2EE8               	decfsz	wreg,f,c
  1034   00116C  D7FE               	bra	u1357
  1035   00116E  2E39               	decfsz	??_main^0,f,c
  1036   001170  D7FC               	bra	u1357
  1037   001172  2E3A               	decfsz	(??_main+1)^0,f,c
  1038   001174  D7FA               	bra	u1357
  1039   001176  0000               	nop	
  1040   001178  EF72  F008         	goto	l2560
  1041   00117C  EF3A  F000         	goto	start
  1042   001180                     __end_of_main:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _sprintf *****************
  1046 ;; Defined at:
  1047 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  s               1   31[COMRAM] PTR unsigned char 
  1050 ;;		 -> sendArraySerial4@tempStr(21), sendIntSerial4@string(17), main@display(41), 
  1051 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
  1052 ;;		 -> STR_4(3), STR_2(5), STR_1(46), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  f              12   44[COMRAM] struct _IO_FILE
  1055 ;;  ret             2   41[COMRAM] int 
  1056 ;;  ap              1   43[COMRAM] PTR void [1]
  1057 ;;		 -> ?_sprintf(2), 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  2   31[COMRAM] int 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1067 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1068 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;Total ram usage:       25 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 6
  1074 ;; This function calls:
  1075 ;;		_vfprintf
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;;		_sendIntSerial4
  1079 ;;		_sendArraySerial4
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text1
  1084   0016D2                     __ptext1:
  1085                           	callstack 0
  1086   0016D2                     _sprintf:
  1087                           	callstack 24
  1088   0016D2  0E22               	movlw	low (?_sprintf+2)
  1089   0016D4  6E2C               	movwf	sprintf@ap^0,c
  1090   0016D6  C020  F02D         	movff	sprintf@s,sprintf@f
  1091   0016DA  0E00               	movlw	0
  1092   0016DC  6E31               	movwf	(sprintf@f+4)^0,c
  1093   0016DE  0E00               	movlw	0
  1094   0016E0  6E30               	movwf	(sprintf@f+3)^0,c
  1095   0016E2  0E00               	movlw	0
  1096   0016E4  6E38               	movwf	(sprintf@f+11)^0,c
  1097   0016E6  0E00               	movlw	0
  1098   0016E8  6E37               	movwf	(sprintf@f+10)^0,c
  1099   0016EA  0E2D               	movlw	low sprintf@f
  1100   0016EC  6E1C               	movwf	vfprintf@fp^0,c
  1101   0016EE  C021  F01D         	movff	sprintf@fmt,vfprintf@fmt
  1102   0016F2  0E2C               	movlw	low sprintf@ap
  1103   0016F4  6E1E               	movwf	vfprintf@ap^0,c
  1104   0016F6  EC79  F00A         	call	_vfprintf	;wreg free
  1105   0016FA  C01C  F02A         	movff	?_vfprintf,sprintf@ret
  1106   0016FE  C01D  F02B         	movff	?_vfprintf+1,sprintf@ret+1
  1107   001702  5020               	movf	sprintf@s^0,w,c
  1108   001704  2430               	addwf	(sprintf@f+3)^0,w,c
  1109   001706  6ED9               	movwf	fsr2l,c
  1110   001708  6ADA               	clrf	fsr2h,c
  1111   00170A  6ADF               	clrf	indf2,c
  1112   00170C  C02A  F020         	movff	sprintf@ret,?_sprintf
  1113   001710  C02B  F021         	movff	sprintf@ret+1,?_sprintf+1
  1114   001714  0012               	return		;funcret
  1115   001716                     __end_of_sprintf:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _vfprintf *****************
  1119 ;; Defined at:
  1120 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  1123 ;;		 -> sprintf@f(12), 
  1124 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1125 ;;		 -> STR_4(3), STR_2(5), STR_1(46), 
  1126 ;;  ap              1   29[COMRAM] PTR PTR void 
  1127 ;;		 -> sprintf@ap(1), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  1130 ;;		 -> STR_4(3), STR_2(5), STR_1(46), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   27[COMRAM] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;Total ram usage:        4 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 5
  1147 ;; This function calls:
  1148 ;;		_vfpfcnvrt
  1149 ;; This function is called by:
  1150 ;;		_sprintf
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text2
  1155   0014F2                     __ptext2:
  1156                           	callstack 0
  1157   0014F2                     _vfprintf:
  1158                           	callstack 24
  1159   0014F2                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1161   0014F2  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  1162   0014F6                     
  1163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  1164   0014F6  0E00               	movlw	0
  1165   0014F8  6E50               	movwf	(_nout+1)^0,c
  1166   0014FA  0E00               	movlw	0
  1167   0014FC  6E4F               	movwf	_nout^0,c
  1168                           
  1169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1170   0014FE  EF8D  F00A         	goto	l2400
  1171   001502                     l2398:
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  1174   001502  C01C  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1175   001506  0E1F               	movlw	low vfprintf@cfmt
  1176   001508  6E10               	movwf	vfpfcnvrt@fmt^0,c
  1177   00150A  C01E  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  1178   00150E  EC1C  F007         	call	_vfpfcnvrt	;wreg free
  1179   001512  500F               	movf	?_vfpfcnvrt^0,w,c
  1180   001514  264F               	addwf	_nout^0,f,c
  1181   001516  5010               	movf	(?_vfpfcnvrt+1)^0,w,c
  1182   001518  2250               	addwfc	(_nout+1)^0,f,c
  1183   00151A                     l2400:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1186   00151A  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1187   00151E                     	if	1	;There is more than 1 active tblptr byte
  1188   00151E  0E0E               	movlw	high __smallconst
  1189   001520  6EF7               	movwf	tblptrh,c
  1190   001522                     	endif
  1191   001522                     	if	0	;tblptru may be non-zero
  1192   001522                     	endif
  1193   001522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1194   001522  0E00               	movlw	low (__smallconst shr (0+16))
  1195   001524  6EF8               	movwf	tblptru,c
  1196   001526                     	endif
  1197   001526  0008               	tblrd		*
  1198   001528  50F5               	movf	tablat,w,c
  1199   00152A  0900               	iorlw	0
  1200   00152C  A4D8               	btfss	status,2,c
  1201   00152E  EF9B  F00A         	goto	u1201
  1202   001532  EF9D  F00A         	goto	u1200
  1203   001536                     u1201:
  1204   001536  EF81  F00A         	goto	l2398
  1205   00153A                     u1200:
  1206   00153A                     
  1207                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  1208   00153A  C04F  F01C         	movff	_nout,?_vfprintf
  1209   00153E  C050  F01D         	movff	_nout+1,?_vfprintf+1
  1210   001542  0012               	return		;funcret
  1211   001544                     __end_of_vfprintf:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _vfpfcnvrt *****************
  1215 ;; Defined at:
  1216 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1219 ;;		 -> sprintf@f(12), 
  1220 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1221 ;;		 -> vfprintf@cfmt(1), 
  1222 ;;  ap              1   16[COMRAM] PTR PTR void 
  1223 ;;		 -> sprintf@ap(1), 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  convarg         4   22[COMRAM] struct .
  1226 ;;  cnt             2   19[COMRAM] int 
  1227 ;;  c               1   26[COMRAM] unsigned char 
  1228 ;;  cp              1   21[COMRAM] PTR unsigned char 
  1229 ;;		 -> STR_4(3), STR_2(5), STR_1(46), 
  1230 ;;  done            1   18[COMRAM] _Bool 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2   14[COMRAM] int 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;Total ram usage:       13 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 4
  1247 ;; This function calls:
  1248 ;;		___awdiv
  1249 ;;		___awmod
  1250 ;;		_abs
  1251 ;;		_fputc
  1252 ;; This function is called by:
  1253 ;;		_vfprintf
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text3
  1258   000E38                     __ptext3:
  1259                           	callstack 0
  1260   000E38                     _vfpfcnvrt:
  1261                           	callstack 24
  1262   000E38                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  1264   000E38  0E00               	movlw	0
  1265   000E3A  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1266   000E3C  0E00               	movlw	0
  1267   000E3E  6E14               	movwf	vfpfcnvrt@cnt^0,c
  1268   000E40                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  1270   000E40  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1271   000E42  6ED9               	movwf	fsr2l,c
  1272   000E44  6ADA               	clrf	fsr2h,c
  1273   000E46  CFDF FFF6          	movff	indf2,tblptrl
  1274   000E4A                     	if	1	;There is more than 1 active tblptr byte
  1275   000E4A  0E0E               	movlw	high __smallconst
  1276   000E4C  6EF7               	movwf	tblptrh,c
  1277   000E4E                     	endif
  1278   000E4E                     	if	0	;tblptru may be non-zero
  1279   000E4E                     	endif
  1280   000E4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1281   000E4E  0E00               	movlw	low (__smallconst shr (0+16))
  1282   000E50  6EF8               	movwf	tblptru,c
  1283   000E52                     	endif
  1284   000E52  0008               	tblrd		*
  1285   000E54  50F5               	movf	tablat,w,c
  1286   000E56  0A25               	xorlw	37
  1287   000E58  A4D8               	btfss	status,2,c
  1288   000E5A  EF31  F007         	goto	u1071
  1289   000E5E  EF33  F007         	goto	u1070
  1290   000E62                     u1071:
  1291   000E62  EF02  F008         	goto	l2336
  1292   000E66                     u1070:
  1293   000E66                     
  1294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1295   000E66  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1296   000E68  6ED9               	movwf	fsr2l,c
  1297   000E6A  6ADA               	clrf	fsr2h,c
  1298   000E6C  2ADF               	incf	indf2,f,c
  1299   000E6E                     
  1300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1301   000E6E  0E00               	movlw	0
  1302   000E70  6E52               	movwf	(_width+1)^0,c
  1303   000E72  0E00               	movlw	0
  1304   000E74  6E51               	movwf	_width^0,c
  1305   000E76  C051  F055         	movff	_width,_flags
  1306   000E7A                     
  1307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1308   000E7A  6853               	setf	_prec^0,c
  1309   000E7C  6854               	setf	(_prec+1)^0,c
  1310   000E7E                     
  1311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1312   000E7E  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1313   000E80  6ED9               	movwf	fsr2l,c
  1314   000E82  6ADA               	clrf	fsr2h,c
  1315   000E84  50DF               	movf	indf2,w,c
  1316   000E86  6E16               	movwf	vfpfcnvrt@cp^0,c
  1317   000E88                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1319   000E88  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1320   000E8C                     	if	1	;There is more than 1 active tblptr byte
  1321   000E8C  0E0E               	movlw	high __smallconst
  1322   000E8E  6EF7               	movwf	tblptrh,c
  1323   000E90                     	endif
  1324   000E90                     	if	0	;tblptru may be non-zero
  1325   000E90                     	endif
  1326   000E90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1327   000E90  0E00               	movlw	low (__smallconst shr (0+16))
  1328   000E92  6EF8               	movwf	tblptru,c
  1329   000E94                     	endif
  1330   000E94  0008               	tblrd		*
  1331   000E96  50F5               	movf	tablat,w,c
  1332   000E98  0A64               	xorlw	100
  1333   000E9A  B4D8               	btfsc	status,2,c
  1334   000E9C  EF52  F007         	goto	u1081
  1335   000EA0  EF54  F007         	goto	u1080
  1336   000EA4                     u1081:
  1337   000EA4  EF64  F007         	goto	l2300
  1338   000EA8                     u1080:
  1339   000EA8  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1340   000EAC                     	if	1	;There is more than 1 active tblptr byte
  1341   000EAC  0E0E               	movlw	high __smallconst
  1342   000EAE  6EF7               	movwf	tblptrh,c
  1343   000EB0                     	endif
  1344   000EB0                     	if	0	;tblptru may be non-zero
  1345   000EB0                     	endif
  1346   000EB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1347   000EB0  0E00               	movlw	low (__smallconst shr (0+16))
  1348   000EB2  6EF8               	movwf	tblptru,c
  1349   000EB4                     	endif
  1350   000EB4  0008               	tblrd		*
  1351   000EB6  50F5               	movf	tablat,w,c
  1352   000EB8  0A69               	xorlw	105
  1353   000EBA  A4D8               	btfss	status,2,c
  1354   000EBC  EF62  F007         	goto	u1091
  1355   000EC0  EF64  F007         	goto	u1090
  1356   000EC4                     u1091:
  1357   000EC4  EFF8  F007         	goto	l2330
  1358   000EC8                     u1090:
  1359   000EC8                     l2300:
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1362   000EC8  5011               	movf	vfpfcnvrt@ap^0,w,c
  1363   000ECA  6ED9               	movwf	fsr2l,c
  1364   000ECC  6ADA               	clrf	fsr2h,c
  1365   000ECE  0E02               	movlw	2
  1366   000ED0  26DF               	addwf	indf2,f,c
  1367   000ED2  5CDF               	subwf	indf2,w,c
  1368   000ED4  6ED9               	movwf	fsr2l,c
  1369   000ED6  6ADA               	clrf	fsr2h,c
  1370   000ED8  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  1371   000EDC  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  1372   000EE0                     
  1373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1374   000EE0  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1375   000EE2  6ED9               	movwf	fsr2l,c
  1376   000EE4  6ADA               	clrf	fsr2h,c
  1377   000EE6  2816               	incf	vfpfcnvrt@cp^0,w,c
  1378   000EE8  6EDF               	movwf	indf2,c
  1379   000EEA                     
  1380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1381   000EEA  0E20               	movlw	32
  1382   000EEC  6E1B               	movwf	vfpfcnvrt@c^0,c
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1385   000EEE  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1386   000EF0  EF7C  F007         	goto	u1101
  1387   000EF4  EF7F  F007         	goto	u1100
  1388   000EF8                     u1101:
  1389   000EF8  0E01               	movlw	1
  1390   000EFA  EF80  F007         	goto	u1110
  1391   000EFE                     u1100:
  1392   000EFE  0E00               	movlw	0
  1393   000F00                     u1110:
  1394   000F00  6E13               	movwf	vfpfcnvrt@done^0,c
  1395   000F02                     l2306:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1398   000F02  061B               	decf	vfpfcnvrt@c^0,f,c
  1399   000F04  0E3C               	movlw	low _dbuf
  1400   000F06  241B               	addwf	vfpfcnvrt@c^0,w,c
  1401   000F08  6ED9               	movwf	fsr2l,c
  1402   000F0A  6ADA               	clrf	fsr2h,c
  1403   000F0C  0E01               	movlw	high _dbuf
  1404   000F0E  22DA               	addwfc	fsr2h,f,c
  1405   000F10  C017  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1406   000F14  C018  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1407   000F18  0E00               	movlw	0
  1408   000F1A  6E08               	movwf	(___awmod@divisor+1)^0,c
  1409   000F1C  0E0A               	movlw	10
  1410   000F1E  6E07               	movwf	___awmod@divisor^0,c
  1411   000F20  EC22  F009         	call	___awmod	;wreg free
  1412   000F24  C005  F00B         	movff	?___awmod,abs@a
  1413   000F28  C006  F00C         	movff	?___awmod+1,abs@a+1
  1414   000F2C  ECCB  F00B         	call	_abs	;wreg free
  1415   000F30  500B               	movf	?_abs^0,w,c
  1416   000F32  0F30               	addlw	48
  1417   000F34  6EDF               	movwf	indf2,c
  1418   000F36                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1420   000F36  C017  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1421   000F3A  C018  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1422   000F3E  0E00               	movlw	0
  1423   000F40  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1424   000F42  0E0A               	movlw	10
  1425   000F44  6E07               	movwf	___awdiv@divisor^0,c
  1426   000F46  ECC0  F008         	call	___awdiv	;wreg free
  1427   000F4A  C005  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  1428   000F4E  C006  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1429   000F52                     
  1430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1431   000F52  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1432   000F54  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1433   000F56                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1435   000F56  5017               	movf	vfpfcnvrt@convarg^0,w,c
  1436   000F58  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1437   000F5A  B4D8               	btfsc	status,2,c
  1438   000F5C  EFB2  F007         	goto	u1121
  1439   000F60  EFB4  F007         	goto	u1120
  1440   000F64                     u1121:
  1441   000F64  EFBC  F007         	goto	l2316
  1442   000F68                     u1120:
  1443   000F68  501B               	movf	vfpfcnvrt@c^0,w,c
  1444   000F6A  A4D8               	btfss	status,2,c
  1445   000F6C  EFBA  F007         	goto	u1131
  1446   000F70  EFBC  F007         	goto	u1130
  1447   000F74                     u1131:
  1448   000F74  EF81  F007         	goto	l2306
  1449   000F78                     u1130:
  1450   000F78                     l2316:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1453   000F78  501B               	movf	vfpfcnvrt@c^0,w,c
  1454   000F7A  B4D8               	btfsc	status,2,c
  1455   000F7C  EFC2  F007         	goto	u1141
  1456   000F80  EFC4  F007         	goto	u1140
  1457   000F84                     u1141:
  1458   000F84  EFE9  F007         	goto	l2328
  1459   000F88                     u1140:
  1460   000F88  5013               	movf	vfpfcnvrt@done^0,w,c
  1461   000F8A  B4D8               	btfsc	status,2,c
  1462   000F8C  EFCA  F007         	goto	u1151
  1463   000F90  EFCC  F007         	goto	u1150
  1464   000F94                     u1151:
  1465   000F94  EFE9  F007         	goto	l2328
  1466   000F98                     u1150:
  1467   000F98                     
  1468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1469   000F98  061B               	decf	vfpfcnvrt@c^0,f,c
  1470   000F9A  0E3C               	movlw	low _dbuf
  1471   000F9C  241B               	addwf	vfpfcnvrt@c^0,w,c
  1472   000F9E  6ED9               	movwf	fsr2l,c
  1473   000FA0  6ADA               	clrf	fsr2h,c
  1474   000FA2  0E01               	movlw	high _dbuf
  1475   000FA4  22DA               	addwfc	fsr2h,f,c
  1476   000FA6  0E2D               	movlw	45
  1477   000FA8  6EDF               	movwf	indf2,c
  1478   000FAA                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1480   000FAA  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  1481   000FAC  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1482   000FAE  EFE9  F007         	goto	l2328
  1483   000FB2                     l2324:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1486   000FB2  0E3C               	movlw	low _dbuf
  1487   000FB4  241B               	addwf	vfpfcnvrt@c^0,w,c
  1488   000FB6  6ED9               	movwf	fsr2l,c
  1489   000FB8  6ADA               	clrf	fsr2h,c
  1490   000FBA  0E01               	movlw	high _dbuf
  1491   000FBC  22DA               	addwfc	fsr2h,f,c
  1492   000FBE  50DF               	movf	indf2,w,c
  1493   000FC0  6E12               	movwf	??_vfpfcnvrt^0,c
  1494   000FC2  5012               	movf	??_vfpfcnvrt^0,w,c
  1495   000FC4  6E05               	movwf	fputc@c^0,c
  1496   000FC6  6A06               	clrf	(fputc@c+1)^0,c
  1497   000FC8  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1498   000FCC  EC7A  F009         	call	_fputc	;wreg free
  1499   000FD0  2A1B               	incf	vfpfcnvrt@c^0,f,c
  1500   000FD2                     l2328:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1503   000FD2  0E20               	movlw	32
  1504   000FD4  181B               	xorwf	vfpfcnvrt@c^0,w,c
  1505   000FD6  A4D8               	btfss	status,2,c
  1506   000FD8  EFF0  F007         	goto	u1161
  1507   000FDC  EFF2  F007         	goto	u1160
  1508   000FE0                     u1161:
  1509   000FE0  EFD9  F007         	goto	l2324
  1510   000FE4                     u1160:
  1511   000FE4                     
  1512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  1513   000FE4  C014  F00F         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1514   000FE8  C015  F010         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1515   000FEC  EF1B  F008         	goto	l1348
  1516   000FF0                     l2330:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1519   000FF0  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1520   000FF2  6ED9               	movwf	fsr2l,c
  1521   000FF4  6ADA               	clrf	fsr2h,c
  1522   000FF6  2ADF               	incf	indf2,f,c
  1523   000FF8                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  1525   000FF8  0E00               	movlw	0
  1526   000FFA  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1527   000FFC  0E00               	movlw	0
  1528   000FFE  6E0F               	movwf	?_vfpfcnvrt^0,c
  1529   001000  EF1B  F008         	goto	l1348
  1530   001004                     l2336:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1533   001004  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1534   001006  6ED9               	movwf	fsr2l,c
  1535   001008  6ADA               	clrf	fsr2h,c
  1536   00100A  CFDF FFF6          	movff	indf2,tblptrl
  1537   00100E                     	if	1	;There is more than 1 active tblptr byte
  1538   00100E  0E0E               	movlw	high __smallconst
  1539   001010  6EF7               	movwf	tblptrh,c
  1540   001012                     	endif
  1541   001012                     	if	0	;tblptru may be non-zero
  1542   001012                     	endif
  1543   001012                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1544   001012  0E00               	movlw	low (__smallconst shr (0+16))
  1545   001014  6EF8               	movwf	tblptru,c
  1546   001016                     	endif
  1547   001016  0008               	tblrd		*
  1548   001018  50F5               	movf	tablat,w,c
  1549   00101A  6E05               	movwf	fputc@c^0,c
  1550   00101C  6A06               	clrf	(fputc@c+1)^0,c
  1551   00101E  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1552   001022  EC7A  F009         	call	_fputc	;wreg free
  1553   001026                     
  1554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  1555   001026  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1556   001028  6ED9               	movwf	fsr2l,c
  1557   00102A  6ADA               	clrf	fsr2h,c
  1558   00102C  2ADF               	incf	indf2,f,c
  1559   00102E                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  1561   00102E  0E00               	movlw	0
  1562   001030  6E10               	movwf	(?_vfpfcnvrt+1)^0,c
  1563   001032  0E01               	movlw	1
  1564   001034  6E0F               	movwf	?_vfpfcnvrt^0,c
  1565   001036                     l1348:
  1566   001036  0012               	return		;funcret
  1567   001038                     __end_of_vfpfcnvrt:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _fputc *****************
  1571 ;; Defined at:
  1572 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  c               2    4[COMRAM] int 
  1575 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1576 ;;		 -> sprintf@f(12), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2    4[COMRAM] int 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1588 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;Total ram usage:        8 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 3
  1595 ;; This function calls:
  1596 ;;		_putch
  1597 ;; This function is called by:
  1598 ;;		_vfpfcnvrt
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text4
  1603   0012F4                     __ptext4:
  1604                           	callstack 0
  1605   0012F4                     _fputc:
  1606                           	callstack 24
  1607   0012F4  5007               	movf	fputc@fp^0,w,c
  1608   0012F6  B4D8               	btfsc	status,2,c
  1609   0012F8  EF80  F009         	goto	u1001
  1610   0012FC  EF82  F009         	goto	u1000
  1611   001300                     u1001:
  1612   001300  EF8A  F009         	goto	l2240
  1613   001304                     u1000:
  1614   001304  5007               	movf	fputc@fp^0,w,c
  1615   001306  A4D8               	btfss	status,2,c
  1616   001308  EF88  F009         	goto	u1011
  1617   00130C  EF8A  F009         	goto	u1010
  1618   001310                     u1011:
  1619   001310  EF8F  F009         	goto	l2242
  1620   001314                     u1010:
  1621   001314                     l2240:
  1622   001314  5005               	movf	fputc@c^0,w,c
  1623   001316  ECF5  F00C         	call	_putch
  1624   00131A  EFCE  F009         	goto	l1373
  1625   00131E                     l2242:
  1626   00131E  5007               	movf	fputc@fp^0,w,c
  1627   001320  6ED9               	movwf	fsr2l,c
  1628   001322  6ADA               	clrf	fsr2h,c
  1629   001324  0E0A               	movlw	10
  1630   001326  26D9               	addwf	fsr2l,f,c
  1631   001328  50DE               	movf	postinc2,w,c
  1632   00132A  10DE               	iorwf	postinc2,w,c
  1633   00132C  B4D8               	btfsc	status,2,c
  1634   00132E  EF9B  F009         	goto	u1021
  1635   001332  EF9D  F009         	goto	u1020
  1636   001336                     u1021:
  1637   001336  EFB6  F009         	goto	l2246
  1638   00133A                     u1020:
  1639   00133A  5007               	movf	fputc@fp^0,w,c
  1640   00133C  6ED9               	movwf	fsr2l,c
  1641   00133E  6ADA               	clrf	fsr2h,c
  1642   001340  0E0A               	movlw	10
  1643   001342  26D9               	addwf	fsr2l,f,c
  1644   001344  5007               	movf	fputc@fp^0,w,c
  1645   001346  6EE1               	movwf	fsr1l,c
  1646   001348  6AE2               	clrf	fsr1h,c
  1647   00134A  0E03               	movlw	3
  1648   00134C  26E1               	addwf	fsr1l,f,c
  1649   00134E  50DE               	movf	postinc2,w,c
  1650   001350  5CE6               	subwf	postinc1,w,c
  1651   001352  50E6               	movf	postinc1,w,c
  1652   001354  0A80               	xorlw	128
  1653   001356  6E0C               	movwf	(??_fputc+4)^0,c
  1654   001358  50DE               	movf	postinc2,w,c
  1655   00135A  0A80               	xorlw	128
  1656   00135C  580C               	subwfb	(??_fputc+4)^0,w,c
  1657   00135E  B0D8               	btfsc	status,0,c
  1658   001360  EFB4  F009         	goto	u1031
  1659   001364  EFB6  F009         	goto	u1030
  1660   001368                     u1031:
  1661   001368  EFCE  F009         	goto	l1373
  1662   00136C                     u1030:
  1663   00136C                     l2246:
  1664   00136C  5007               	movf	fputc@fp^0,w,c
  1665   00136E  6ED9               	movwf	fsr2l,c
  1666   001370  6ADA               	clrf	fsr2h,c
  1667   001372  0E03               	movlw	3
  1668   001374  26D9               	addwf	fsr2l,f,c
  1669   001376  50DF               	movf	indf2,w,c
  1670   001378  6E08               	movwf	??_fputc^0,c
  1671   00137A  5007               	movf	fputc@fp^0,w,c
  1672   00137C  6ED9               	movwf	fsr2l,c
  1673   00137E  6ADA               	clrf	fsr2h,c
  1674   001380  50DF               	movf	indf2,w,c
  1675   001382  2408               	addwf	??_fputc^0,w,c
  1676   001384  6ED9               	movwf	fsr2l,c
  1677   001386  6ADA               	clrf	fsr2h,c
  1678   001388  C005  FFDF         	movff	fputc@c,indf2
  1679   00138C  5007               	movf	fputc@fp^0,w,c
  1680   00138E  6ED9               	movwf	fsr2l,c
  1681   001390  6ADA               	clrf	fsr2h,c
  1682   001392  0E03               	movlw	3
  1683   001394  26D9               	addwf	fsr2l,f,c
  1684   001396  2ADE               	incf	postinc2,f,c
  1685   001398  0E00               	movlw	0
  1686   00139A  22DD               	addwfc	postdec2,f,c
  1687   00139C                     l1373:
  1688   00139C  0012               	return		;funcret
  1689   00139E                     __end_of_fputc:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _putch *****************
  1693 ;; Defined at:
  1694 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  c               1    wreg     unsigned char 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  c               1    0[COMRAM] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 2
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_fputc
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text5
  1723   0019EA                     __ptext5:
  1724                           	callstack 0
  1725   0019EA                     _putch:
  1726                           	callstack 24
  1727   0019EA  0012               	return		;funcret
  1728   0019EC                     __end_of_putch:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _abs *****************
  1732 ;; Defined at:
  1733 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  a               2   10[COMRAM] int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2   10[COMRAM] int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;Total ram usage:        4 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 2
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_vfpfcnvrt
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text6
  1762   001796                     __ptext6:
  1763                           	callstack 0
  1764   001796                     _abs:
  1765                           	callstack 25
  1766   001796  BE0C               	btfsc	(abs@a+1)^0,7,c
  1767   001798  EFD0  F00B         	goto	u1041
  1768   00179C  EFD2  F00B         	goto	u1040
  1769   0017A0                     u1041:
  1770   0017A0  EFD8  F00B         	goto	l1358
  1771   0017A4                     u1040:
  1772   0017A4  C00B  F00B         	movff	abs@a,?_abs
  1773   0017A8  C00C  F00C         	movff	abs@a+1,?_abs+1
  1774   0017AC  EFE4  F00B         	goto	l1361
  1775   0017B0                     l1358:
  1776   0017B0  C00B  F00D         	movff	abs@a,??_abs
  1777   0017B4  C00C  F00E         	movff	abs@a+1,??_abs+1
  1778   0017B8  1E0D               	comf	??_abs^0,f,c
  1779   0017BA  1E0E               	comf	(??_abs+1)^0,f,c
  1780   0017BC  4A0D               	infsnz	??_abs^0,f,c
  1781   0017BE  2A0E               	incf	(??_abs+1)^0,f,c
  1782   0017C0  C00D  F00B         	movff	??_abs,?_abs
  1783   0017C4  C00E  F00C         	movff	??_abs+1,?_abs+1
  1784   0017C8                     l1361:
  1785   0017C8  0012               	return		;funcret
  1786   0017CA                     __end_of_abs:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function ___awmod *****************
  1790 ;; Defined at:
  1791 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  dividend        2    4[COMRAM] int 
  1794 ;;  divisor         2    6[COMRAM] int 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  sign            1    9[COMRAM] unsigned char 
  1797 ;;  counter         1    8[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2    4[COMRAM] int 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;Total ram usage:        6 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 2
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_vfpfcnvrt
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text7
  1822   001244                     __ptext7:
  1823                           	callstack 0
  1824   001244                     ___awmod:
  1825                           	callstack 25
  1826   001244  0E00               	movlw	0
  1827   001246  6E0A               	movwf	___awmod@sign^0,c
  1828   001248  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1829   00124A  EF2B  F009         	goto	u940
  1830   00124E  EF29  F009         	goto	u941
  1831   001252                     u941:
  1832   001252  EF31  F009         	goto	l2208
  1833   001256                     u940:
  1834   001256  6C05               	negf	___awmod@dividend^0,c
  1835   001258  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1836   00125A  B0D8               	btfsc	status,0,c
  1837   00125C  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1838   00125E  0E01               	movlw	1
  1839   001260  6E0A               	movwf	___awmod@sign^0,c
  1840   001262                     l2208:
  1841   001262  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1842   001264  EF38  F009         	goto	u950
  1843   001268  EF36  F009         	goto	u951
  1844   00126C                     u951:
  1845   00126C  EF3C  F009         	goto	l2212
  1846   001270                     u950:
  1847   001270  6C07               	negf	___awmod@divisor^0,c
  1848   001272  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1849   001274  B0D8               	btfsc	status,0,c
  1850   001276  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1851   001278                     l2212:
  1852   001278  5007               	movf	___awmod@divisor^0,w,c
  1853   00127A  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1854   00127C  B4D8               	btfsc	status,2,c
  1855   00127E  EF43  F009         	goto	u961
  1856   001282  EF45  F009         	goto	u960
  1857   001286                     u961:
  1858   001286  EF69  F009         	goto	l2228
  1859   00128A                     u960:
  1860   00128A  0E01               	movlw	1
  1861   00128C  6E09               	movwf	___awmod@counter^0,c
  1862   00128E  EF4D  F009         	goto	l2218
  1863   001292                     l2216:
  1864   001292  90D8               	bcf	status,0,c
  1865   001294  3607               	rlcf	___awmod@divisor^0,f,c
  1866   001296  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1867   001298  2A09               	incf	___awmod@counter^0,f,c
  1868   00129A                     l2218:
  1869   00129A  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1870   00129C  EF52  F009         	goto	u971
  1871   0012A0  EF54  F009         	goto	u970
  1872   0012A4                     u971:
  1873   0012A4  EF49  F009         	goto	l2216
  1874   0012A8                     u970:
  1875   0012A8                     l2220:
  1876   0012A8  5007               	movf	___awmod@divisor^0,w,c
  1877   0012AA  5C05               	subwf	___awmod@dividend^0,w,c
  1878   0012AC  5008               	movf	(___awmod@divisor+1)^0,w,c
  1879   0012AE  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  1880   0012B0  A0D8               	btfss	status,0,c
  1881   0012B2  EF5D  F009         	goto	u981
  1882   0012B6  EF5F  F009         	goto	u980
  1883   0012BA                     u981:
  1884   0012BA  EF63  F009         	goto	l2224
  1885   0012BE                     u980:
  1886   0012BE  5007               	movf	___awmod@divisor^0,w,c
  1887   0012C0  5E05               	subwf	___awmod@dividend^0,f,c
  1888   0012C2  5008               	movf	(___awmod@divisor+1)^0,w,c
  1889   0012C4  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  1890   0012C6                     l2224:
  1891   0012C6  90D8               	bcf	status,0,c
  1892   0012C8  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  1893   0012CA  3207               	rrcf	___awmod@divisor^0,f,c
  1894   0012CC  2E09               	decfsz	___awmod@counter^0,f,c
  1895   0012CE  EF54  F009         	goto	l2220
  1896   0012D2                     l2228:
  1897   0012D2  500A               	movf	___awmod@sign^0,w,c
  1898   0012D4  B4D8               	btfsc	status,2,c
  1899   0012D6  EF6F  F009         	goto	u991
  1900   0012DA  EF71  F009         	goto	u990
  1901   0012DE                     u991:
  1902   0012DE  EF75  F009         	goto	l2232
  1903   0012E2                     u990:
  1904   0012E2  6C05               	negf	___awmod@dividend^0,c
  1905   0012E4  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1906   0012E6  B0D8               	btfsc	status,0,c
  1907   0012E8  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1908   0012EA                     l2232:
  1909   0012EA  C005  F005         	movff	___awmod@dividend,?___awmod
  1910   0012EE  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  1911   0012F2  0012               	return		;funcret
  1912   0012F4                     __end_of___awmod:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function ___awdiv *****************
  1916 ;; Defined at:
  1917 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  dividend        2    4[COMRAM] int 
  1920 ;;  divisor         2    6[COMRAM] int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  quotient        2   10[COMRAM] int 
  1923 ;;  sign            1    9[COMRAM] unsigned char 
  1924 ;;  counter         1    8[COMRAM] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2    4[COMRAM] int 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1937 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;Total ram usage:        8 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 2
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_vfpfcnvrt
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text8
  1949   001180                     __ptext8:
  1950                           	callstack 0
  1951   001180                     ___awdiv:
  1952                           	callstack 25
  1953   001180  0E00               	movlw	0
  1954   001182  6E0A               	movwf	___awdiv@sign^0,c
  1955   001184  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  1956   001186  EFC9  F008         	goto	u880
  1957   00118A  EFC7  F008         	goto	u881
  1958   00118E                     u881:
  1959   00118E  EFCF  F008         	goto	l2164
  1960   001192                     u880:
  1961   001192  6C07               	negf	___awdiv@divisor^0,c
  1962   001194  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  1963   001196  B0D8               	btfsc	status,0,c
  1964   001198  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  1965   00119A  0E01               	movlw	1
  1966   00119C  6E0A               	movwf	___awdiv@sign^0,c
  1967   00119E                     l2164:
  1968   00119E  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  1969   0011A0  EFD6  F008         	goto	u890
  1970   0011A4  EFD4  F008         	goto	u891
  1971   0011A8                     u891:
  1972   0011A8  EFDC  F008         	goto	l2170
  1973   0011AC                     u890:
  1974   0011AC  6C05               	negf	___awdiv@dividend^0,c
  1975   0011AE  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  1976   0011B0  B0D8               	btfsc	status,0,c
  1977   0011B2  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  1978   0011B4  0E01               	movlw	1
  1979   0011B6  1A0A               	xorwf	___awdiv@sign^0,f,c
  1980   0011B8                     l2170:
  1981   0011B8  0E00               	movlw	0
  1982   0011BA  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  1983   0011BC  0E00               	movlw	0
  1984   0011BE  6E0B               	movwf	___awdiv@quotient^0,c
  1985   0011C0  5007               	movf	___awdiv@divisor^0,w,c
  1986   0011C2  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  1987   0011C4  B4D8               	btfsc	status,2,c
  1988   0011C6  EFE7  F008         	goto	u901
  1989   0011CA  EFE9  F008         	goto	u900
  1990   0011CE                     u901:
  1991   0011CE  EF11  F009         	goto	l2192
  1992   0011D2                     u900:
  1993   0011D2  0E01               	movlw	1
  1994   0011D4  6E09               	movwf	___awdiv@counter^0,c
  1995   0011D6  EFF1  F008         	goto	l2178
  1996   0011DA                     l2176:
  1997   0011DA  90D8               	bcf	status,0,c
  1998   0011DC  3607               	rlcf	___awdiv@divisor^0,f,c
  1999   0011DE  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  2000   0011E0  2A09               	incf	___awdiv@counter^0,f,c
  2001   0011E2                     l2178:
  2002   0011E2  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  2003   0011E4  EFF6  F008         	goto	u911
  2004   0011E8  EFF8  F008         	goto	u910
  2005   0011EC                     u911:
  2006   0011EC  EFED  F008         	goto	l2176
  2007   0011F0                     u910:
  2008   0011F0                     l2180:
  2009   0011F0  90D8               	bcf	status,0,c
  2010   0011F2  360B               	rlcf	___awdiv@quotient^0,f,c
  2011   0011F4  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  2012   0011F6  5007               	movf	___awdiv@divisor^0,w,c
  2013   0011F8  5C05               	subwf	___awdiv@dividend^0,w,c
  2014   0011FA  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2015   0011FC  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  2016   0011FE  A0D8               	btfss	status,0,c
  2017   001200  EF04  F009         	goto	u921
  2018   001204  EF06  F009         	goto	u920
  2019   001208                     u921:
  2020   001208  EF0B  F009         	goto	l2188
  2021   00120C                     u920:
  2022   00120C  5007               	movf	___awdiv@divisor^0,w,c
  2023   00120E  5E05               	subwf	___awdiv@dividend^0,f,c
  2024   001210  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2025   001212  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  2026   001214  800B               	bsf	___awdiv@quotient^0,0,c
  2027   001216                     l2188:
  2028   001216  90D8               	bcf	status,0,c
  2029   001218  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  2030   00121A  3207               	rrcf	___awdiv@divisor^0,f,c
  2031   00121C  2E09               	decfsz	___awdiv@counter^0,f,c
  2032   00121E  EFF8  F008         	goto	l2180
  2033   001222                     l2192:
  2034   001222  500A               	movf	___awdiv@sign^0,w,c
  2035   001224  B4D8               	btfsc	status,2,c
  2036   001226  EF17  F009         	goto	u931
  2037   00122A  EF19  F009         	goto	u930
  2038   00122E                     u931:
  2039   00122E  EF1D  F009         	goto	l2196
  2040   001232                     u930:
  2041   001232  6C0B               	negf	___awdiv@quotient^0,c
  2042   001234  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2043   001236  B0D8               	btfsc	status,0,c
  2044   001238  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2045   00123A                     l2196:
  2046   00123A  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2047   00123E  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2048   001242  0012               	return		;funcret
  2049   001244                     __end_of___awdiv:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _sendTxBuf *****************
  2053 ;; Defined at:
  2054 ;;		line 114 in file "serial.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 3
  2075 ;; This function calls:
  2076 ;;		_isDataInTxBuf
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text9
  2083   001954                     __ptext9:
  2084                           	callstack 0
  2085   001954                     _sendTxBuf:
  2086                           	callstack 27
  2087   001954                     
  2088                           ;serial.c: 115:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  2089   001954  ECB7  F00C         	call	_isDataInTxBuf	;wreg free
  2090   001958  0900               	iorlw	0
  2091   00195A  B4D8               	btfsc	status,2,c
  2092   00195C  EFB2  F00C         	goto	u1221
  2093   001960  EFB4  F00C         	goto	u1220
  2094   001964                     u1221:
  2095   001964  EFB6  F00C         	goto	l452
  2096   001968                     u1220:
  2097   001968  010E               	movlb	14	; () banked
  2098   00196A  852D               	bsf	45,2,b	;volatile
  2099   00196C                     l452:
  2100   00196C  0012               	return		;funcret
  2101   00196E                     __end_of_sendTxBuf:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _isDataInTxBuf *****************
  2105 ;; Defined at:
  2106 ;;		line 100 in file "serial.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      unsigned char 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 2
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_sendTxBuf
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text10
  2135   00196E                     __ptext10:
  2136                           	callstack 0
  2137   00196E                     _isDataInTxBuf:
  2138                           	callstack 27
  2139   00196E                     
  2140                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  2141   00196E  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2142   001970  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2143   001972  A4D8               	btfss	status,2,c
  2144   001974  EFBE  F00C         	goto	u1181
  2145   001978  EFC1  F00C         	goto	u1180
  2146   00197C                     u1181:
  2147   00197C  0E01               	movlw	1
  2148   00197E  EFC2  F00C         	goto	u1190
  2149   001982                     u1180:
  2150   001982  0E00               	movlw	0
  2151   001984                     u1190:
  2152   001984  0012               	return		;funcret
  2153   001986                     __end_of_isDataInTxBuf:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _initUSART4 *****************
  2157 ;; Defined at:
  2158 ;;		line 5 in file "serial.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 2
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text11
  2187   001936                     __ptext11:
  2188                           	callstack 0
  2189   001936                     _initUSART4:
  2190                           	callstack 28
  2191   001936                     
  2192                           ;serial.c: 9:     RC0PPS = 0x12;
  2193   001936  0E12               	movlw	18
  2194   001938  010E               	movlb	14	; () banked
  2195   00193A  6F62               	movwf	98,b	;volatile
  2196                           
  2197                           ;serial.c: 10:     RX4PPS = 0x11;
  2198   00193C  0E11               	movlw	17
  2199   00193E  6F15               	movwf	21,b	;volatile
  2200   001940                     
  2201                           ; BSR set to: 14
  2202                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2203   001940  97E9               	bcf	233,3,b	;volatile
  2204   001942                     
  2205                           ; BSR set to: 14
  2206                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2207   001942  95E8               	bcf	232,2,b	;volatile
  2208                           
  2209                           ;serial.c: 14:     SP4BRGL = 51;
  2210   001944  0E33               	movlw	51
  2211   001946  6FE5               	movwf	229,b	;volatile
  2212                           
  2213                           ;serial.c: 15:     SP4BRGH = 0;
  2214   001948  0E00               	movlw	0
  2215   00194A  6FE6               	movwf	230,b	;volatile
  2216   00194C                     
  2217                           ; BSR set to: 14
  2218                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2219   00194C  89E7               	bsf	231,4,b	;volatile
  2220   00194E                     
  2221                           ; BSR set to: 14
  2222                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2223   00194E  8BE8               	bsf	232,5,b	;volatile
  2224   001950                     
  2225                           ; BSR set to: 14
  2226                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2227   001950  8FE7               	bsf	231,7,b	;volatile
  2228   001952                     
  2229                           ; BSR set to: 14
  2230   001952  0012               	return		;funcret
  2231   001954                     __end_of_initUSART4:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _initDCmotorsPWM *****************
  2235 ;; Defined at:
  2236 ;;		line 5 in file "dc_motor.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  PWMperiod       2    4[COMRAM] unsigned int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        2 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 2
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text12
  2265   00139E                     __ptext12:
  2266                           	callstack 0
  2267   00139E                     _initDCmotorsPWM:
  2268                           	callstack 28
  2269   00139E                     
  2270                           ;dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  2271   00139E  9485               	bcf	133,2,c	;volatile
  2272                           
  2273                           ;dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  2274   0013A0  9885               	bcf	133,4,c	;volatile
  2275                           
  2276                           ;dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  2277   0013A2  9E83               	bcf	131,7,c	;volatile
  2278                           
  2279                           ;dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  2280   0013A4  9C87               	bcf	135,6,c	;volatile
  2281                           
  2282                           ;dc_motor.c: 12:     LATEbits.LATE2 = 0;
  2283   0013A6  947D               	bcf	125,2,c	;volatile
  2284                           
  2285                           ;dc_motor.c: 13:     LATEbits.LATE4 = 0;
  2286   0013A8  987D               	bcf	125,4,c	;volatile
  2287                           
  2288                           ;dc_motor.c: 14:     LATCbits.LATC7 = 0;
  2289   0013AA  9E7B               	bcf	123,7,c	;volatile
  2290                           
  2291                           ;dc_motor.c: 15:     LATGbits.LATG6 = 0;
  2292   0013AC  9C7F               	bcf	127,6,c	;volatile
  2293   0013AE                     
  2294                           ;dc_motor.c: 18:     RE2PPS=0x05;
  2295   0013AE  0E05               	movlw	5
  2296   0013B0  010E               	movlb	14	; () banked
  2297   0013B2  6F74               	movwf	116,b	;volatile
  2298                           
  2299                           ;dc_motor.c: 19:     RE4PPS=0x06;
  2300   0013B4  0E06               	movlw	6
  2301   0013B6  6F76               	movwf	118,b	;volatile
  2302                           
  2303                           ;dc_motor.c: 20:     RC7PPS=0x07;
  2304   0013B8  0E07               	movlw	7
  2305   0013BA  6F69               	movwf	105,b	;volatile
  2306                           
  2307                           ;dc_motor.c: 21:     RG6PPS=0x08;
  2308   0013BC  0E08               	movlw	8
  2309   0013BE  6F88               	movwf	136,b	;volatile
  2310                           
  2311                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  2312   0013C0  50BD               	movf	189,w,c	;volatile
  2313   0013C2  0B8F               	andlw	-113
  2314   0013C4  0940               	iorlw	64
  2315   0013C6  6EBD               	movwf	189,c	;volatile
  2316                           
  2317                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  2318   0013C8  0EE0               	movlw	-32
  2319   0013CA  16BE               	andwf	190,f,c	;volatile
  2320                           
  2321                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  2322   0013CC  50BF               	movf	191,w,c	;volatile
  2323   0013CE  0BF0               	andlw	-16
  2324   0013D0  0901               	iorlw	1
  2325   0013D2  6EBF               	movwf	191,c	;volatile
  2326   0013D4                     
  2327                           ; BSR set to: 14
  2328                           ;dc_motor.c: 30:     T2PR=(unsigned char)PWMperiod;
  2329   0013D4  C005  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  2330   0013D8                     
  2331                           ; BSR set to: 14
  2332                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  2333   0013D8  8EBD               	bsf	189,7,c	;volatile
  2334                           
  2335                           ;dc_motor.c: 35:     CCPR1H=0;
  2336   0013DA  0E00               	movlw	0
  2337   0013DC  6EAA               	movwf	170,c	;volatile
  2338                           
  2339                           ;dc_motor.c: 36:     CCPR2H=0;
  2340   0013DE  0E00               	movlw	0
  2341   0013E0  6EA6               	movwf	166,c	;volatile
  2342                           
  2343                           ;dc_motor.c: 37:     CCPR3H=0;
  2344   0013E2  0E00               	movlw	0
  2345   0013E4  010F               	movlb	15	; () banked
  2346   0013E6  6F25               	movwf	37,b	;volatile
  2347                           
  2348                           ;dc_motor.c: 38:     CCPR4H=0;
  2349   0013E8  0E00               	movlw	0
  2350   0013EA  6F21               	movwf	33,b	;volatile
  2351                           
  2352                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  2353   0013EC  0EFC               	movlw	-4
  2354   0013EE  16AD               	andwf	173,f,c	;volatile
  2355                           
  2356                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  2357   0013F0  0EF3               	movlw	-13
  2358   0013F2  16AD               	andwf	173,f,c	;volatile
  2359                           
  2360                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  2361   0013F4  0ECF               	movlw	-49
  2362   0013F6  16AD               	andwf	173,f,c	;volatile
  2363                           
  2364                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  2365   0013F8  0E3F               	movlw	-193
  2366   0013FA  16AD               	andwf	173,f,c	;volatile
  2367   0013FC                     
  2368                           ; BSR set to: 15
  2369                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  2370   0013FC  88AB               	bsf	171,4,c	;volatile
  2371                           
  2372                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  2373   0013FE  50AB               	movf	171,w,c	;volatile
  2374   001400  0BF0               	andlw	-16
  2375   001402  090C               	iorlw	12
  2376   001404  6EAB               	movwf	171,c	;volatile
  2377   001406                     
  2378                           ; BSR set to: 15
  2379                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  2380   001406  8EAB               	bsf	171,7,c	;volatile
  2381   001408                     
  2382                           ; BSR set to: 15
  2383                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  2384   001408  88A7               	bsf	167,4,c	;volatile
  2385                           
  2386                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  2387   00140A  50A7               	movf	167,w,c	;volatile
  2388   00140C  0BF0               	andlw	-16
  2389   00140E  090C               	iorlw	12
  2390   001410  6EA7               	movwf	167,c	;volatile
  2391   001412                     
  2392                           ; BSR set to: 15
  2393                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  2394   001412  8EA7               	bsf	167,7,c	;volatile
  2395   001414                     
  2396                           ; BSR set to: 15
  2397                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  2398   001414  8926               	bsf	38,4,b	;volatile
  2399                           
  2400                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  2401   001416  5126               	movf	38,w,b	;volatile
  2402   001418  0BF0               	andlw	-16
  2403   00141A  090C               	iorlw	12
  2404   00141C  6F26               	movwf	38,b	;volatile
  2405   00141E                     
  2406                           ; BSR set to: 15
  2407                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  2408   00141E  8F26               	bsf	38,7,b	;volatile
  2409   001420                     
  2410                           ; BSR set to: 15
  2411                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  2412   001420  8922               	bsf	34,4,b	;volatile
  2413                           
  2414                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  2415   001422  5122               	movf	34,w,b	;volatile
  2416   001424  0BF0               	andlw	-16
  2417   001426  090C               	iorlw	12
  2418   001428  6F22               	movwf	34,b	;volatile
  2419   00142A                     
  2420                           ; BSR set to: 15
  2421                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  2422   00142A  8F22               	bsf	34,7,b	;volatile
  2423   00142C                     
  2424                           ; BSR set to: 15
  2425   00142C  0012               	return		;funcret
  2426   00142E                     __end_of_initDCmotorsPWM:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _getRGBCval *****************
  2430 ;; Defined at:
  2431 ;;		line 85 in file "color.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  p               1   15[COMRAM] PTR struct RGBC_val
  2434 ;;		 -> main@read_val(8), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:        1 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 5
  2453 ;; This function calls:
  2454 ;;		_color_read_Blue
  2455 ;;		_color_read_Clear
  2456 ;;		_color_read_Green
  2457 ;;		_color_read_Red
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text13
  2464   00149C                     __ptext13:
  2465                           	callstack 0
  2466   00149C                     _getRGBCval:
  2467                           	callstack 25
  2468   00149C                     
  2469                           ;color.c: 85: void getRGBCval(struct RGBC_val *p);color.c: 86: {;color.c: 87:     p->R =
      +                           color_read_Red();
  2470   00149C  ECA2  F00A         	call	_color_read_Red	;wreg free
  2471   0014A0  5010               	movf	getRGBCval@p^0,w,c
  2472   0014A2  6ED9               	movwf	fsr2l,c
  2473   0014A4  6ADA               	clrf	fsr2h,c
  2474   0014A6  C009  FFDE         	movff	?_color_read_Red,postinc2
  2475   0014AA  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2476                           
  2477                           ;color.c: 88:     p->B = color_read_Blue();
  2478   0014AE  EC1A  F00B         	call	_color_read_Blue	;wreg free
  2479   0014B2  5010               	movf	getRGBCval@p^0,w,c
  2480   0014B4  6ED9               	movwf	fsr2l,c
  2481   0014B6  6ADA               	clrf	fsr2h,c
  2482   0014B8  0E04               	movlw	4
  2483   0014BA  26D9               	addwf	fsr2l,f,c
  2484   0014BC  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2485   0014C0  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2486                           
  2487                           ;color.c: 89:     p->G = color_read_Green();
  2488   0014C4  ECCA  F00A         	call	_color_read_Green	;wreg free
  2489   0014C8  5010               	movf	getRGBCval@p^0,w,c
  2490   0014CA  6ED9               	movwf	fsr2l,c
  2491   0014CC  6ADA               	clrf	fsr2h,c
  2492   0014CE  0E02               	movlw	2
  2493   0014D0  26D9               	addwf	fsr2l,f,c
  2494   0014D2  C009  FFDE         	movff	?_color_read_Green,postinc2
  2495   0014D6  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2496                           
  2497                           ;color.c: 90:     p->C = color_read_Clear();
  2498   0014DA  ECF2  F00A         	call	_color_read_Clear	;wreg free
  2499   0014DE  5010               	movf	getRGBCval@p^0,w,c
  2500   0014E0  6ED9               	movwf	fsr2l,c
  2501   0014E2  6ADA               	clrf	fsr2h,c
  2502   0014E4  0E06               	movlw	6
  2503   0014E6  26D9               	addwf	fsr2l,f,c
  2504   0014E8  C009  FFDE         	movff	?_color_read_Clear,postinc2
  2505   0014EC  C00A  FFDD         	movff	?_color_read_Clear+1,postdec2
  2506   0014F0  0012               	return		;funcret
  2507   0014F2                     __end_of_getRGBCval:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _color_read_Red *****************
  2511 ;; Defined at:
  2512 ;;		line 29 in file "color.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  tmp             2   13[COMRAM] unsigned int 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  2    8[COMRAM] unsigned int 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;Total ram usage:        7 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 4
  2533 ;; This function calls:
  2534 ;;		_I2C_2_Master_Read
  2535 ;;		_I2C_2_Master_RepStart
  2536 ;;		_I2C_2_Master_Start
  2537 ;;		_I2C_2_Master_Stop
  2538 ;;		_I2C_2_Master_Write
  2539 ;; This function is called by:
  2540 ;;		_getRGBCval
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text14
  2545   001544                     __ptext14:
  2546                           	callstack 0
  2547   001544                     _color_read_Red:
  2548                           	callstack 25
  2549   001544                     
  2550                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2551   001544  ECF0  F00C         	call	_I2C_2_Master_Start	;wreg free
  2552                           
  2553                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2554   001548  0E52               	movlw	82
  2555   00154A  ECE0  F00C         	call	_I2C_2_Master_Write
  2556                           
  2557                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2558   00154E  0EB6               	movlw	182
  2559   001550  ECE0  F00C         	call	_I2C_2_Master_Write
  2560                           
  2561                           ;color.c: 35:  I2C_2_Master_RepStart();
  2562   001554  ECE6  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2563                           
  2564                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2565   001558  0E53               	movlw	83
  2566   00155A  ECE0  F00C         	call	_I2C_2_Master_Write
  2567                           
  2568                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2569   00155E  0E01               	movlw	1
  2570   001560  EC8B  F00B         	call	_I2C_2_Master_Read
  2571   001564  6E0B               	movwf	??_color_read_Red^0,c
  2572   001566  500B               	movf	??_color_read_Red^0,w,c
  2573   001568  6E0E               	movwf	color_read_Red@tmp^0,c
  2574   00156A  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2575                           
  2576                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2577   00156C  0E00               	movlw	0
  2578   00156E  EC8B  F00B         	call	_I2C_2_Master_Read
  2579   001572  6E0B               	movwf	??_color_read_Red^0,c
  2580   001574  500B               	movf	??_color_read_Red^0,w,c
  2581   001576  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2582   001578  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2583   00157A  500E               	movf	color_read_Red@tmp^0,w,c
  2584   00157C  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2585   00157E  6E0E               	movwf	color_read_Red@tmp^0,c
  2586   001580  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2587   001582  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2588   001584  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2589                           
  2590                           ;color.c: 39:  I2C_2_Master_Stop();
  2591   001586  ECEB  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2592   00158A                     
  2593                           ;color.c: 40:  return tmp;
  2594   00158A  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2595   00158E  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2596   001592  0012               	return		;funcret
  2597   001594                     __end_of_color_read_Red:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _color_read_Green *****************
  2601 ;; Defined at:
  2602 ;;		line 57 in file "color.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  tmp             2   13[COMRAM] unsigned int 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2    8[COMRAM] unsigned int 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;Total ram usage:        7 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 4
  2623 ;; This function calls:
  2624 ;;		_I2C_2_Master_Read
  2625 ;;		_I2C_2_Master_RepStart
  2626 ;;		_I2C_2_Master_Start
  2627 ;;		_I2C_2_Master_Stop
  2628 ;;		_I2C_2_Master_Write
  2629 ;; This function is called by:
  2630 ;;		_getRGBCval
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text15
  2635   001594                     __ptext15:
  2636                           	callstack 0
  2637   001594                     _color_read_Green:
  2638                           	callstack 25
  2639   001594                     
  2640                           ;color.c: 59:     unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  2641   001594  ECF0  F00C         	call	_I2C_2_Master_Start	;wreg free
  2642                           
  2643                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  2644   001598  0E52               	movlw	82
  2645   00159A  ECE0  F00C         	call	_I2C_2_Master_Write
  2646                           
  2647                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x18);
  2648   00159E  0EB8               	movlw	184
  2649   0015A0  ECE0  F00C         	call	_I2C_2_Master_Write
  2650                           
  2651                           ;color.c: 63:  I2C_2_Master_RepStart();
  2652   0015A4  ECE6  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2653                           
  2654                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  2655   0015A8  0E53               	movlw	83
  2656   0015AA  ECE0  F00C         	call	_I2C_2_Master_Write
  2657                           
  2658                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  2659   0015AE  0E01               	movlw	1
  2660   0015B0  EC8B  F00B         	call	_I2C_2_Master_Read
  2661   0015B4  6E0B               	movwf	??_color_read_Green^0,c
  2662   0015B6  500B               	movf	??_color_read_Green^0,w,c
  2663   0015B8  6E0E               	movwf	color_read_Green@tmp^0,c
  2664   0015BA  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2665                           
  2666                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2667   0015BC  0E00               	movlw	0
  2668   0015BE  EC8B  F00B         	call	_I2C_2_Master_Read
  2669   0015C2  6E0B               	movwf	??_color_read_Green^0,c
  2670   0015C4  500B               	movf	??_color_read_Green^0,w,c
  2671   0015C6  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2672   0015C8  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2673   0015CA  500E               	movf	color_read_Green@tmp^0,w,c
  2674   0015CC  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2675   0015CE  6E0E               	movwf	color_read_Green@tmp^0,c
  2676   0015D0  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2677   0015D2  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2678   0015D4  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2679                           
  2680                           ;color.c: 67:  I2C_2_Master_Stop();
  2681   0015D6  ECEB  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2682   0015DA                     
  2683                           ;color.c: 68:  return tmp;
  2684   0015DA  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2685   0015DE  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2686   0015E2  0012               	return		;funcret
  2687   0015E4                     __end_of_color_read_Green:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _color_read_Clear *****************
  2691 ;; Defined at:
  2692 ;;		line 71 in file "color.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  tmp             2   13[COMRAM] unsigned int 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    8[COMRAM] unsigned int 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;Total ram usage:        7 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 4
  2713 ;; This function calls:
  2714 ;;		_I2C_2_Master_Read
  2715 ;;		_I2C_2_Master_RepStart
  2716 ;;		_I2C_2_Master_Start
  2717 ;;		_I2C_2_Master_Stop
  2718 ;;		_I2C_2_Master_Write
  2719 ;; This function is called by:
  2720 ;;		_getRGBCval
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text16
  2725   0015E4                     __ptext16:
  2726                           	callstack 0
  2727   0015E4                     _color_read_Clear:
  2728                           	callstack 25
  2729   0015E4                     
  2730                           ;color.c: 73:     unsigned int tmp;;color.c: 74:  I2C_2_Master_Start();
  2731   0015E4  ECF0  F00C         	call	_I2C_2_Master_Start	;wreg free
  2732                           
  2733                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x00);
  2734   0015E8  0E52               	movlw	82
  2735   0015EA  ECE0  F00C         	call	_I2C_2_Master_Write
  2736                           
  2737                           ;color.c: 76:  I2C_2_Master_Write(0xA0 | 0x14);
  2738   0015EE  0EB4               	movlw	180
  2739   0015F0  ECE0  F00C         	call	_I2C_2_Master_Write
  2740                           
  2741                           ;color.c: 77:  I2C_2_Master_RepStart();
  2742   0015F4  ECE6  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2743                           
  2744                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x01);
  2745   0015F8  0E53               	movlw	83
  2746   0015FA  ECE0  F00C         	call	_I2C_2_Master_Write
  2747                           
  2748                           ;color.c: 79:  tmp=I2C_2_Master_Read(1);
  2749   0015FE  0E01               	movlw	1
  2750   001600  EC8B  F00B         	call	_I2C_2_Master_Read
  2751   001604  6E0B               	movwf	??_color_read_Clear^0,c
  2752   001606  500B               	movf	??_color_read_Clear^0,w,c
  2753   001608  6E0E               	movwf	color_read_Clear@tmp^0,c
  2754   00160A  6A0F               	clrf	(color_read_Clear@tmp+1)^0,c
  2755                           
  2756                           ;color.c: 80:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2757   00160C  0E00               	movlw	0
  2758   00160E  EC8B  F00B         	call	_I2C_2_Master_Read
  2759   001612  6E0B               	movwf	??_color_read_Clear^0,c
  2760   001614  500B               	movf	??_color_read_Clear^0,w,c
  2761   001616  6E0D               	movwf	(??_color_read_Clear+2)^0,c
  2762   001618  6A0C               	clrf	(??_color_read_Clear+1)^0,c
  2763   00161A  500E               	movf	color_read_Clear@tmp^0,w,c
  2764   00161C  100C               	iorwf	(??_color_read_Clear+1)^0,w,c
  2765   00161E  6E0E               	movwf	color_read_Clear@tmp^0,c
  2766   001620  500F               	movf	(color_read_Clear@tmp+1)^0,w,c
  2767   001622  100D               	iorwf	(??_color_read_Clear+2)^0,w,c
  2768   001624  6E0F               	movwf	(color_read_Clear@tmp+1)^0,c
  2769                           
  2770                           ;color.c: 81:  I2C_2_Master_Stop();
  2771   001626  ECEB  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2772   00162A                     
  2773                           ;color.c: 82:  return tmp;
  2774   00162A  C00E  F009         	movff	color_read_Clear@tmp,?_color_read_Clear
  2775   00162E  C00F  F00A         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2776   001632  0012               	return		;funcret
  2777   001634                     __end_of_color_read_Clear:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _color_read_Blue *****************
  2781 ;; Defined at:
  2782 ;;		line 43 in file "color.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  tmp             2   13[COMRAM] unsigned int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    8[COMRAM] unsigned int 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;Total ram usage:        7 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 4
  2803 ;; This function calls:
  2804 ;;		_I2C_2_Master_Read
  2805 ;;		_I2C_2_Master_RepStart
  2806 ;;		_I2C_2_Master_Start
  2807 ;;		_I2C_2_Master_Stop
  2808 ;;		_I2C_2_Master_Write
  2809 ;; This function is called by:
  2810 ;;		_getRGBCval
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text17
  2815   001634                     __ptext17:
  2816                           	callstack 0
  2817   001634                     _color_read_Blue:
  2818                           	callstack 25
  2819   001634                     
  2820                           ;color.c: 45:     unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  2821   001634  ECF0  F00C         	call	_I2C_2_Master_Start	;wreg free
  2822                           
  2823                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  2824   001638  0E52               	movlw	82
  2825   00163A  ECE0  F00C         	call	_I2C_2_Master_Write
  2826                           
  2827                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x1A);
  2828   00163E  0EBA               	movlw	186
  2829   001640  ECE0  F00C         	call	_I2C_2_Master_Write
  2830                           
  2831                           ;color.c: 49:  I2C_2_Master_RepStart();
  2832   001644  ECE6  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2833                           
  2834                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  2835   001648  0E53               	movlw	83
  2836   00164A  ECE0  F00C         	call	_I2C_2_Master_Write
  2837                           
  2838                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  2839   00164E  0E01               	movlw	1
  2840   001650  EC8B  F00B         	call	_I2C_2_Master_Read
  2841   001654  6E0B               	movwf	??_color_read_Blue^0,c
  2842   001656  500B               	movf	??_color_read_Blue^0,w,c
  2843   001658  6E0E               	movwf	color_read_Blue@tmp^0,c
  2844   00165A  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2845                           
  2846                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2847   00165C  0E00               	movlw	0
  2848   00165E  EC8B  F00B         	call	_I2C_2_Master_Read
  2849   001662  6E0B               	movwf	??_color_read_Blue^0,c
  2850   001664  500B               	movf	??_color_read_Blue^0,w,c
  2851   001666  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2852   001668  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2853   00166A  500E               	movf	color_read_Blue@tmp^0,w,c
  2854   00166C  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2855   00166E  6E0E               	movwf	color_read_Blue@tmp^0,c
  2856   001670  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2857   001672  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2858   001674  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2859                           
  2860                           ;color.c: 53:  I2C_2_Master_Stop();
  2861   001676  ECEB  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2862   00167A                     
  2863                           ;color.c: 54:  return tmp;
  2864   00167A  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2865   00167E  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2866   001682  0012               	return		;funcret
  2867   001684                     __end_of_color_read_Blue:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _I2C_2_Master_RepStart *****************
  2871 ;; Defined at:
  2872 ;;		line 33 in file "i2c.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;Total ram usage:        0 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 3
  2893 ;; This function calls:
  2894 ;;		_I2C_2_Master_Idle
  2895 ;; This function is called by:
  2896 ;;		_color_read_Red
  2897 ;;		_color_read_Blue
  2898 ;;		_color_read_Green
  2899 ;;		_color_read_Clear
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text18
  2904   0019CC                     __ptext18:
  2905                           	callstack 0
  2906   0019CC                     _I2C_2_Master_RepStart:
  2907                           	callstack 25
  2908   0019CC                     
  2909                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2910   0019CC  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2911   0019D0                     
  2912                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2913   0019D0  010E               	movlb	14	; () banked
  2914   0019D2  83DA               	bsf	218,1,b	;volatile
  2915   0019D4                     
  2916                           ; BSR set to: 14
  2917   0019D4  0012               	return		;funcret
  2918   0019D6                     __end_of_I2C_2_Master_RepStart:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _I2C_2_Master_Read *****************
  2922 ;; Defined at:
  2923 ;;		line 51 in file "i2c.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  ack             1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  ack             1    6[COMRAM] unsigned char 
  2928 ;;  tmp             1    7[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      unsigned char 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:        3 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		_I2C_2_Master_Idle
  2947 ;; This function is called by:
  2948 ;;		_color_read_Red
  2949 ;;		_color_read_Blue
  2950 ;;		_color_read_Green
  2951 ;;		_color_read_Clear
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text19
  2956   001716                     __ptext19:
  2957                           	callstack 0
  2958   001716                     _I2C_2_Master_Read:
  2959                           	callstack 25
  2960                           
  2961                           ; BSR set to: 14
  2962                           ;incstack = 0
  2963                           ;I2C_2_Master_Read@ack stored from wreg
  2964   001716  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2965   001718                     
  2966                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2967   001718  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2968   00171C                     
  2969                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2970   00171C  010E               	movlb	14	; () banked
  2971   00171E  87DA               	bsf	218,3,b	;volatile
  2972                           
  2973                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2974   001720  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2975   001724                     
  2976                           ;i2c.c: 57:   tmp = SSP2BUF;
  2977   001724  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2978                           
  2979                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2980   001728  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2981   00172C                     
  2982                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2983   00172C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2984   00172E  B4D8               	btfsc	status,2,c
  2985   001730  EF9C  F00B         	goto	u1051
  2986   001734  EFA0  F00B         	goto	u1050
  2987   001738                     u1051:
  2988   001738  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2989   00173A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2990   00173C  EFA1  F00B         	goto	u1068
  2991   001740                     u1050:
  2992   001740  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2993   001742                     u1068:
  2994   001742  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2995   001744  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2996   001746  010E               	movlb	14	; () banked
  2997   001748  51DA               	movf	218,w,b	;volatile
  2998   00174A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2999   00174C  0BDF               	andlw	-33
  3000   00174E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3001   001750  6FDA               	movwf	218,b	;volatile
  3002   001752                     
  3003                           ; BSR set to: 14
  3004                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3005   001752  89DA               	bsf	218,4,b	;volatile
  3006   001754                     
  3007                           ; BSR set to: 14
  3008                           ;i2c.c: 61:   return tmp;
  3009   001754  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3010   001756                     
  3011                           ; BSR set to: 14
  3012   001756  0012               	return		;funcret
  3013   001758                     __end_of_I2C_2_Master_Read:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _color_click_init *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "color.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;Total ram usage:        1 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 5
  3039 ;; This function calls:
  3040 ;;		_I2C_2_Master_Init
  3041 ;;		_color_writetoaddr
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text20
  3048   0017CA                     __ptext20:
  3049                           	callstack 0
  3050   0017CA                     _color_click_init:
  3051                           	callstack 25
  3052   0017CA                     
  3053                           ;color.c: 8:     I2C_2_Master_Init();
  3054   0017CA  EC15  F00C         	call	_I2C_2_Master_Init	;wreg free
  3055   0017CE                     
  3056                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3057   0017CE  0E01               	movlw	1
  3058   0017D0  6E07               	movwf	color_writetoaddr@value^0,c
  3059   0017D2  0E00               	movlw	0
  3060   0017D4  EC7B  F00C         	call	_color_writetoaddr
  3061   0017D8                     
  3062                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3063   0017D8  0E3F               	movlw	63
  3064   0017DA  6E09               	movwf	??_color_click_init^0,c
  3065   0017DC  0E55               	movlw	85
  3066   0017DE                     u1367:
  3067   0017DE  2EE8               	decfsz	wreg,f,c
  3068   0017E0  D7FE               	bra	u1367
  3069   0017E2  2E09               	decfsz	??_color_click_init^0,f,c
  3070   0017E4  D7FC               	bra	u1367
  3071   0017E6  0000               	nop	
  3072   0017E8                     
  3073                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3074   0017E8  0E03               	movlw	3
  3075   0017EA  6E07               	movwf	color_writetoaddr@value^0,c
  3076   0017EC  0E00               	movlw	0
  3077   0017EE  EC7B  F00C         	call	_color_writetoaddr
  3078   0017F2                     
  3079                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3080   0017F2  0ED5               	movlw	213
  3081   0017F4  6E07               	movwf	color_writetoaddr@value^0,c
  3082   0017F6  0E01               	movlw	1
  3083   0017F8  EC7B  F00C         	call	_color_writetoaddr
  3084   0017FC  0012               	return		;funcret
  3085   0017FE                     __end_of_color_click_init:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _color_writetoaddr *****************
  3089 ;; Defined at:
  3090 ;;		line 21 in file "color.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  address         1    wreg     unsigned char 
  3093 ;;  value           1    6[COMRAM] unsigned char 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  address         1    7[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;Total ram usage:        2 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 4
  3112 ;; This function calls:
  3113 ;;		_I2C_2_Master_Start
  3114 ;;		_I2C_2_Master_Stop
  3115 ;;		_I2C_2_Master_Write
  3116 ;; This function is called by:
  3117 ;;		_color_click_init
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text21
  3122   0018F6                     __ptext21:
  3123                           	callstack 0
  3124   0018F6                     _color_writetoaddr:
  3125                           	callstack 25
  3126                           
  3127                           ;incstack = 0
  3128                           ;color_writetoaddr@address stored from wreg
  3129   0018F6  6E08               	movwf	color_writetoaddr@address^0,c
  3130   0018F8                     
  3131                           ;color.c: 22:     I2C_2_Master_Start();
  3132   0018F8  ECF0  F00C         	call	_I2C_2_Master_Start	;wreg free
  3133                           
  3134                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3135   0018FC  0E52               	movlw	82
  3136   0018FE  ECE0  F00C         	call	_I2C_2_Master_Write
  3137                           
  3138                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3139   001902  5008               	movf	color_writetoaddr@address^0,w,c
  3140   001904  0980               	iorlw	128
  3141   001906  ECE0  F00C         	call	_I2C_2_Master_Write
  3142                           
  3143                           ;color.c: 25:     I2C_2_Master_Write(value);
  3144   00190A  5007               	movf	color_writetoaddr@value^0,w,c
  3145   00190C  ECE0  F00C         	call	_I2C_2_Master_Write
  3146                           
  3147                           ;color.c: 26:     I2C_2_Master_Stop();
  3148   001910  ECEB  F00C         	call	_I2C_2_Master_Stop	;wreg free
  3149   001914  0012               	return		;funcret
  3150   001916                     __end_of_color_writetoaddr:
  3151                           	callstack 0
  3152                           
  3153 ;; *************** function _I2C_2_Master_Write *****************
  3154 ;; Defined at:
  3155 ;;		line 45 in file "i2c.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  data_byte       1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  data_byte       1    5[COMRAM] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 3
  3176 ;; This function calls:
  3177 ;;		_I2C_2_Master_Idle
  3178 ;; This function is called by:
  3179 ;;		_color_writetoaddr
  3180 ;;		_color_read_Red
  3181 ;;		_color_read_Blue
  3182 ;;		_color_read_Green
  3183 ;;		_color_read_Clear
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text22
  3188   0019C0                     __ptext22:
  3189                           	callstack 0
  3190   0019C0                     _I2C_2_Master_Write:
  3191                           	callstack 25
  3192                           
  3193                           ;incstack = 0
  3194                           ;I2C_2_Master_Write@data_byte stored from wreg
  3195   0019C0  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3196   0019C2                     
  3197                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3198   0019C2  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3199   0019C6                     
  3200                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3201   0019C6  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3202   0019CA  0012               	return		;funcret
  3203   0019CC                     __end_of_I2C_2_Master_Write:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _I2C_2_Master_Stop *****************
  3207 ;; Defined at:
  3208 ;;		line 39 in file "i2c.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 3
  3229 ;; This function calls:
  3230 ;;		_I2C_2_Master_Idle
  3231 ;; This function is called by:
  3232 ;;		_color_writetoaddr
  3233 ;;		_color_read_Red
  3234 ;;		_color_read_Blue
  3235 ;;		_color_read_Green
  3236 ;;		_color_read_Clear
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text23
  3241   0019D6                     __ptext23:
  3242                           	callstack 0
  3243   0019D6                     _I2C_2_Master_Stop:
  3244                           	callstack 25
  3245   0019D6                     
  3246                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3247   0019D6  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3248   0019DA                     
  3249                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3250   0019DA  010E               	movlb	14	; () banked
  3251   0019DC  85DA               	bsf	218,2,b	;volatile
  3252   0019DE                     
  3253                           ; BSR set to: 14
  3254   0019DE  0012               	return		;funcret
  3255   0019E0                     __end_of_I2C_2_Master_Stop:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _I2C_2_Master_Start *****************
  3259 ;; Defined at:
  3260 ;;		line 27 in file "i2c.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 3
  3281 ;; This function calls:
  3282 ;;		_I2C_2_Master_Idle
  3283 ;; This function is called by:
  3284 ;;		_color_writetoaddr
  3285 ;;		_color_read_Red
  3286 ;;		_color_read_Blue
  3287 ;;		_color_read_Green
  3288 ;;		_color_read_Clear
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text24
  3293   0019E0                     __ptext24:
  3294                           	callstack 0
  3295   0019E0                     _I2C_2_Master_Start:
  3296                           	callstack 25
  3297   0019E0                     
  3298                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3299   0019E0  EC54  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3300   0019E4                     
  3301                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3302   0019E4  010E               	movlb	14	; () banked
  3303   0019E6  81DA               	bsf	218,0,b	;volatile
  3304   0019E8                     
  3305                           ; BSR set to: 14
  3306   0019E8  0012               	return		;funcret
  3307   0019EA                     __end_of_I2C_2_Master_Start:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _I2C_2_Master_Idle *****************
  3311 ;; Defined at:
  3312 ;;		line 22 in file "i2c.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used: 1
  3332 ;; Hardware stack levels required when called: 2
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_I2C_2_Master_Start
  3337 ;;		_I2C_2_Master_RepStart
  3338 ;;		_I2C_2_Master_Stop
  3339 ;;		_I2C_2_Master_Write
  3340 ;;		_I2C_2_Master_Read
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text25
  3345   0018A8                     __ptext25:
  3346                           	callstack 0
  3347   0018A8                     _I2C_2_Master_Idle:
  3348                           	callstack 25
  3349   0018A8                     l242:
  3350   0018A8  010E               	movlb	14	; () banked
  3351   0018AA  B5D8               	btfsc	216,2,b	;volatile
  3352   0018AC  EF5A  F00C         	goto	u861
  3353   0018B0  EF5C  F00C         	goto	u860
  3354   0018B4                     u861:
  3355   0018B4  EF54  F00C         	goto	l242
  3356   0018B8                     u860:
  3357   0018B8                     
  3358                           ; BSR set to: 14
  3359   0018B8  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3360   0018BC  0E1F               	movlw	31
  3361   0018BE  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3362   0018C0  A4D8               	btfss	status,2,c
  3363   0018C2  EF65  F00C         	goto	u871
  3364   0018C6  EF67  F00C         	goto	u870
  3365   0018CA                     u871:
  3366   0018CA  EF54  F00C         	goto	l242
  3367   0018CE                     u870:
  3368   0018CE                     
  3369                           ; BSR set to: 14
  3370   0018CE  0012               	return		;funcret
  3371   0018D0                     __end_of_I2C_2_Master_Idle:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _I2C_2_Master_Init *****************
  3375 ;; Defined at:
  3376 ;;		line 4 in file "i2c.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 2
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_color_click_init
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text26
  3405   00182A                     __ptext26:
  3406                           	callstack 0
  3407   00182A                     _I2C_2_Master_Init:
  3408                           	callstack 27
  3409   00182A                     
  3410                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3411   00182A  010E               	movlb	14	; () banked
  3412   00182C  51D9               	movf	217,w,b	;volatile
  3413   00182E  0BF0               	andlw	-16
  3414   001830  0908               	iorlw	8
  3415   001832  6FD9               	movwf	217,b	;volatile
  3416   001834                     
  3417                           ; BSR set to: 14
  3418                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3419   001834  8BD9               	bsf	217,5,b	;volatile
  3420                           
  3421                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3422   001836  0E9F               	movlw	159
  3423   001838  6FD6               	movwf	214,b	;volatile
  3424   00183A                     
  3425                           ; BSR set to: 14
  3426                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3427   00183A  8A84               	bsf	132,5,c	;volatile
  3428   00183C                     
  3429                           ; BSR set to: 14
  3430                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3431   00183C  8C84               	bsf	132,6,c	;volatile
  3432   00183E                     
  3433                           ; BSR set to: 14
  3434                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3435   00183E  9BA7               	bcf	167,5,b	;volatile
  3436   001840                     
  3437                           ; BSR set to: 14
  3438                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3439   001840  9DA7               	bcf	167,6,b	;volatile
  3440                           
  3441                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3442   001842  0E1D               	movlw	29
  3443   001844  6F1D               	movwf	29,b	;volatile
  3444                           
  3445                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3446   001846  0E1E               	movlw	30
  3447   001848  6F1C               	movwf	28,b	;volatile
  3448                           
  3449                           ;i2c.c: 18:   RD5PPS=0x1C;
  3450   00184A  0E1C               	movlw	28
  3451   00184C  6F6F               	movwf	111,b	;volatile
  3452                           
  3453                           ;i2c.c: 19:   RD6PPS=0x1B;
  3454   00184E  0E1B               	movlw	27
  3455   001850  6F70               	movwf	112,b	;volatile
  3456   001852                     
  3457                           ; BSR set to: 14
  3458   001852  0012               	return		;funcret
  3459   001854                     __end_of_I2C_2_Master_Init:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _buggy_lights_init *****************
  3463 ;; Defined at:
  3464 ;;		line 4 in file "buggy_lights.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		None
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 2
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text27
  3493   001684                     __ptext27:
  3494                           	callstack 0
  3495   001684                     _buggy_lights_init:
  3496                           	callstack 28
  3497   001684                     
  3498                           ;buggy_lights.c: 8:     TRISDbits.TRISD4 = 0;
  3499   001684  9884               	bcf	132,4,c	;volatile
  3500                           
  3501                           ;buggy_lights.c: 9:     TRISHbits.TRISH1 = 0;
  3502   001686  9288               	bcf	136,1,c	;volatile
  3503                           
  3504                           ;buggy_lights.c: 10:     TRISDbits.TRISD3 = 0;
  3505   001688  9684               	bcf	132,3,c	;volatile
  3506                           
  3507                           ;buggy_lights.c: 11:     TRISFbits.TRISF0 = 0;
  3508   00168A  9086               	bcf	134,0,c	;volatile
  3509                           
  3510                           ;buggy_lights.c: 12:     TRISHbits.TRISH0 = 0;
  3511   00168C  9088               	bcf	136,0,c	;volatile
  3512                           
  3513                           ;buggy_lights.c: 14:     LATDbits.LATD4 = 1;
  3514   00168E  887C               	bsf	124,4,c	;volatile
  3515                           
  3516                           ;buggy_lights.c: 15:     LATHbits.LATH1 = 1;
  3517   001690  8280               	bsf	128,1,c	;volatile
  3518                           
  3519                           ;buggy_lights.c: 16:     LATDbits.LATD3 = 1;
  3520   001692  867C               	bsf	124,3,c	;volatile
  3521                           
  3522                           ;buggy_lights.c: 17:     LATFbits.LATF0 = 1;
  3523   001694  807E               	bsf	126,0,c	;volatile
  3524                           
  3525                           ;buggy_lights.c: 18:     LATHbits.LATH0 = 1;
  3526   001696  8080               	bsf	128,0,c	;volatile
  3527                           
  3528                           ;buggy_lights.c: 22:     TRISDbits.TRISD7 = 0;
  3529   001698  9E84               	bcf	132,7,c	;volatile
  3530                           
  3531                           ;buggy_lights.c: 23:     TRISHbits.TRISH3 = 0;
  3532   00169A  9688               	bcf	136,3,c	;volatile
  3533                           
  3534                           ;buggy_lights.c: 25:     LATDbits.LATD7 = 1;
  3535   00169C  8E7C               	bsf	124,7,c	;volatile
  3536                           
  3537                           ;buggy_lights.c: 26:     LATHbits.LATH3 = 1;
  3538   00169E  8680               	bsf	128,3,c	;volatile
  3539                           
  3540                           ;buggy_lights.c: 32:         TRISAbits.TRISA0 = 0;
  3541   0016A0  9081               	bcf	129,0,c	;volatile
  3542                           
  3543                           ;buggy_lights.c: 33:         TRISCbits.TRISC2 = 0;
  3544   0016A2  9483               	bcf	131,2,c	;volatile
  3545                           
  3546                           ;buggy_lights.c: 34:         TRISDbits.TRISD0 = 0;
  3547   0016A4  9084               	bcf	132,0,c	;volatile
  3548                           
  3549                           ;buggy_lights.c: 36:         LATAbits.LATA0 = 1;
  3550   0016A6  8079               	bsf	121,0,c	;volatile
  3551                           
  3552                           ;buggy_lights.c: 37:         LATCbits.LATC2 = 1;
  3553   0016A8  847B               	bsf	123,2,c	;volatile
  3554                           
  3555                           ;buggy_lights.c: 38:         LATDbits.LATD0 = 1;
  3556   0016AA  807C               	bsf	124,0,c	;volatile
  3557                           
  3558                           ;buggy_lights.c: 42:         TRISAbits.TRISA1 = 0;
  3559   0016AC  9281               	bcf	129,1,c	;volatile
  3560                           
  3561                           ;buggy_lights.c: 43:         TRISCbits.TRISC6 = 0;
  3562   0016AE  9C83               	bcf	131,6,c	;volatile
  3563                           
  3564                           ;buggy_lights.c: 44:         TRISHbits.TRISH2 = 0;
  3565   0016B0  9488               	bcf	136,2,c	;volatile
  3566                           
  3567                           ;buggy_lights.c: 46:         LATAbits.LATA1 = 1;
  3568   0016B2  8279               	bsf	121,1,c	;volatile
  3569                           
  3570                           ;buggy_lights.c: 47:         LATCbits.LATC6 = 1;
  3571   0016B4  8C7B               	bsf	123,6,c	;volatile
  3572                           
  3573                           ;buggy_lights.c: 48:         LATHbits.LATH2 = 1;
  3574   0016B6  8480               	bsf	128,2,c	;volatile
  3575                           
  3576                           ;buggy_lights.c: 52:         TRISGbits.TRISG1 = 0;
  3577   0016B8  9287               	bcf	135,1,c	;volatile
  3578                           
  3579                           ;buggy_lights.c: 53:         TRISAbits.TRISA4 = 0;
  3580   0016BA  9881               	bcf	129,4,c	;volatile
  3581                           
  3582                           ;buggy_lights.c: 54:         TRISFbits.TRISF7 = 0;
  3583   0016BC  9E86               	bcf	134,7,c	;volatile
  3584                           
  3585                           ;buggy_lights.c: 56:         LATGbits.LATG1 = 1;
  3586   0016BE  827F               	bsf	127,1,c	;volatile
  3587                           
  3588                           ;buggy_lights.c: 57:         LATAbits.LATA4 = 1;
  3589   0016C0  8879               	bsf	121,4,c	;volatile
  3590                           
  3591                           ;buggy_lights.c: 58:         LATFbits.LATF7 = 1;
  3592   0016C2  8E7E               	bsf	126,7,c	;volatile
  3593                           
  3594                           ;buggy_lights.c: 62:         TRISGbits.TRISG0 = 0;
  3595   0016C4  9087               	bcf	135,0,c	;volatile
  3596                           
  3597                           ;buggy_lights.c: 63:         TRISEbits.TRISE7 = 0;
  3598   0016C6  9E85               	bcf	133,7,c	;volatile
  3599                           
  3600                           ;buggy_lights.c: 64:         TRISAbits.TRISA3 = 0;
  3601   0016C8  9681               	bcf	129,3,c	;volatile
  3602                           
  3603                           ;buggy_lights.c: 66:         LATGbits.LATG0 = 1;
  3604   0016CA  807F               	bsf	127,0,c	;volatile
  3605                           
  3606                           ;buggy_lights.c: 67:         LATEbits.LATE7 = 1;
  3607   0016CC  8E7D               	bsf	125,7,c	;volatile
  3608                           
  3609                           ;buggy_lights.c: 68:         LATAbits.LATA3 = 1;
  3610   0016CE  8679               	bsf	121,3,c	;volatile
  3611   0016D0  0012               	return		;funcret
  3612   0016D2                     __end_of_buggy_lights_init:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _TxBufferedString *****************
  3616 ;; Defined at:
  3617 ;;		line 105 in file "serial.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  string          1    5[COMRAM] PTR unsigned char 
  3620 ;;		 -> main@display(41), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        1 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 3
  3639 ;; This function calls:
  3640 ;;		_putCharToTxBuf
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text28
  3647   001854                     __ptext28:
  3648                           	callstack 0
  3649   001854                     _TxBufferedString:
  3650                           	callstack 27
  3651   001854                     
  3652                           ;serial.c: 107:     while(*string != 0) {
  3653   001854  EF33  F00C         	goto	l2482
  3654   001858                     l2478:
  3655                           
  3656                           ;serial.c: 108:         putCharToTxBuf(*string++);
  3657   001858  5006               	movf	TxBufferedString@string^0,w,c
  3658   00185A  6ED9               	movwf	fsr2l,c
  3659   00185C  6ADA               	clrf	fsr2h,c
  3660   00185E  50DF               	movf	indf2,w,c
  3661   001860  EC3F  F00C         	call	_putCharToTxBuf
  3662   001864  2A06               	incf	TxBufferedString@string^0,f,c
  3663   001866                     l2482:
  3664                           
  3665                           ;serial.c: 107:     while(*string != 0) {
  3666   001866  5006               	movf	TxBufferedString@string^0,w,c
  3667   001868  6ED9               	movwf	fsr2l,c
  3668   00186A  6ADA               	clrf	fsr2h,c
  3669   00186C  50DF               	movf	indf2,w,c
  3670   00186E  A4D8               	btfss	status,2,c
  3671   001870  EF3C  F00C         	goto	u1211
  3672   001874  EF3E  F00C         	goto	u1210
  3673   001878                     u1211:
  3674   001878  EF2C  F00C         	goto	l2478
  3675   00187C                     u1210:
  3676   00187C  0012               	return		;funcret
  3677   00187E                     __end_of_TxBufferedString:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _putCharToTxBuf *****************
  3681 ;; Defined at:
  3682 ;;		line 92 in file "serial.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  byte            1    wreg     unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  byte            1    4[COMRAM] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 2
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_TxBufferedString
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text29
  3711   00187E                     __ptext29:
  3712                           	callstack 0
  3713   00187E                     _putCharToTxBuf:
  3714                           	callstack 27
  3715                           
  3716                           ;incstack = 0
  3717                           ;putCharToTxBuf@byte stored from wreg
  3718   00187E  6E05               	movwf	putCharToTxBuf@byte^0,c
  3719   001880                     
  3720                           ;serial.c: 93:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3721   001880  0E3B               	movlw	59
  3722   001882  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3723   001884  EF46  F00C         	goto	u1171
  3724   001888  EF48  F00C         	goto	u1170
  3725   00188C                     u1171:
  3726   00188C  EF4A  F00C         	goto	l2386
  3727   001890                     u1170:
  3728   001890  0E00               	movlw	0
  3729   001892  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  3730   001894                     l2386:
  3731                           
  3732                           ;serial.c: 94:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3733   001894  0E00               	movlw	low _EUSART4TXbuf
  3734   001896  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3735   001898  6ED9               	movwf	fsr2l,c
  3736   00189A  6ADA               	clrf	fsr2h,c
  3737   00189C  0E01               	movlw	high _EUSART4TXbuf
  3738   00189E  22DA               	addwfc	fsr2h,f,c
  3739   0018A0  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3740   0018A4  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3741   0018A6  0012               	return		;funcret
  3742   0018A8                     __end_of_putCharToTxBuf:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _Timer0_init *****************
  3746 ;; Defined at:
  3747 ;;		line 7 in file "timers.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 2
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text30
  3776   001916                     __ptext30:
  3777                           	callstack 0
  3778   001916                     _Timer0_init:
  3779                           	callstack 28
  3780   001916                     
  3781                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  3782   001916  50D6               	movf	214,w,c	;volatile
  3783   001918  0B1F               	andlw	-225
  3784   00191A  0940               	iorlw	64
  3785   00191C  6ED6               	movwf	214,c	;volatile
  3786   00191E                     
  3787                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  3788   00191E  88D6               	bsf	214,4,c	;volatile
  3789   001920                     
  3790                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  3791   001920  88D5               	bsf	213,4,c	;volatile
  3792                           
  3793                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  3794   001922  50D6               	movf	214,w,c	;volatile
  3795   001924  0BF0               	andlw	-16
  3796   001926  090E               	iorlw	14
  3797   001928  6ED6               	movwf	214,c	;volatile
  3798                           
  3799                           ;timers.c: 20:     TMR0H = 0;
  3800   00192A  0E00               	movlw	0
  3801   00192C  6ED4               	movwf	212,c	;volatile
  3802                           
  3803                           ;timers.c: 21:     TMR0L = 0;
  3804   00192E  0E00               	movlw	0
  3805   001930  6ED3               	movwf	211,c	;volatile
  3806   001932                     
  3807                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  3808   001932  8ED5               	bsf	213,7,c	;volatile
  3809   001934  0012               	return		;funcret
  3810   001936                     __end_of_Timer0_init:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _Interrupts_init *****************
  3814 ;; Defined at:
  3815 ;;		line 6 in file "interrupts.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		None
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text31
  3844   0019B2                     __ptext31:
  3845                           	callstack 0
  3846   0019B2                     _Interrupts_init:
  3847                           	callstack 28
  3848   0019B2                     
  3849                           ;interrupts.c: 9:     PIE4bits.RC4IE = 1;
  3850   0019B2  010E               	movlb	14	; () banked
  3851   0019B4  872D               	bsf	45,3,b	;volatile
  3852                           
  3853                           ;interrupts.c: 10:     PIE4bits.TX4IE = 1;
  3854   0019B6  852D               	bsf	45,2,b	;volatile
  3855                           
  3856                           ;interrupts.c: 12:     PIE0bits.TMR0IE = 1;
  3857   0019B8  8B29               	bsf	41,5,b	;volatile
  3858                           
  3859                           ;interrupts.c: 13:     INTCONbits.PEIE = 1;
  3860   0019BA  8CF2               	bsf	242,6,c	;volatile
  3861                           
  3862                           ;interrupts.c: 14:     INTCONbits.GIE = 1;
  3863   0019BC  8EF2               	bsf	242,7,c	;volatile
  3864   0019BE                     
  3865                           ; BSR set to: 14
  3866   0019BE  0012               	return		;funcret
  3867   0019C0                     __end_of_Interrupts_init:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _HighISR *****************
  3871 ;; Defined at:
  3872 ;;		line 19 in file "interrupts.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 1
  3893 ;; This function calls:
  3894 ;;		_getCharFromTxBuf
  3895 ;;		_putCharToRxBuf
  3896 ;;		i2_isDataInTxBuf
  3897 ;; This function is called by:
  3898 ;;		Interrupt level 2
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	intcode
  3903   000008                     __pintcode:
  3904                           	callstack 0
  3905   000008                     _HighISR:
  3906                           	callstack 24
  3907                           
  3908                           ; BSR set to: 14
  3909                           ;incstack = 0
  3910   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3911   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3912   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3913   000012                     
  3914                           ;interrupts.c: 22:     if (PIR0bits.TMR0IF) {
  3915   000012  010E               	movlb	14	; () banked
  3916   000014  AB33               	btfss	51,5,b	;volatile
  3917   000016  EF0F  F000         	goto	i2u130_41
  3918   00001A  EF11  F000         	goto	i2u130_40
  3919   00001E                     i2u130_41:
  3920   00001E  EF12  F000         	goto	i2l619
  3921   000022                     i2u130_40:
  3922   000022                     
  3923                           ; BSR set to: 14
  3924                           ;interrupts.c: 30:         PIR0bits.TMR0IF = 0;
  3925   000022  9B33               	bcf	51,5,b	;volatile
  3926   000024                     i2l619:
  3927                           
  3928                           ; BSR set to: 14
  3929                           ;interrupts.c: 35:     if (PIR4bits.TX4IF) {
  3930   000024  A537               	btfss	55,2,b	;volatile
  3931   000026  EF17  F000         	goto	i2u131_41
  3932   00002A  EF19  F000         	goto	i2u131_40
  3933   00002E                     i2u131_41:
  3934   00002E  EF29  F000         	goto	i2l622
  3935   000032                     i2u131_40:
  3936   000032                     
  3937                           ; BSR set to: 14
  3938                           ;interrupts.c: 36:         TX4REG = getCharFromTxBuf();
  3939   000032  ECFF  F00B         	call	_getCharFromTxBuf	;wreg free
  3940   000036  010E               	movlb	14	; () banked
  3941   000038  6FE4               	movwf	228,b	;volatile
  3942   00003A                     
  3943                           ; BSR set to: 14
  3944                           ;interrupts.c: 37:         if (!isDataInTxBuf()) {PIE4bits.TX4IE = 0;}
  3945   00003A  ECC3  F00C         	call	i2_isDataInTxBuf	;wreg free
  3946   00003E  0900               	iorlw	0
  3947   000040  A4D8               	btfss	status,2,c
  3948   000042  EF25  F000         	goto	i2u132_41
  3949   000046  EF27  F000         	goto	i2u132_40
  3950   00004A                     i2u132_41:
  3951   00004A  EF29  F000         	goto	i2l622
  3952   00004E                     i2u132_40:
  3953   00004E  010E               	movlb	14	; () banked
  3954   000050  952D               	bcf	45,2,b	;volatile
  3955   000052                     i2l622:
  3956                           
  3957                           ;interrupts.c: 40:     if (PIR4bits.RC4IF) {putCharToRxBuf(RC4REG);}
  3958   000052  010E               	movlb	14	; () banked
  3959   000054  A737               	btfss	55,3,b	;volatile
  3960   000056  EF2F  F000         	goto	i2u133_41
  3961   00005A  EF31  F000         	goto	i2u133_40
  3962   00005E                     i2u133_41:
  3963   00005E  EF34  F000         	goto	i2l625
  3964   000062                     i2u133_40:
  3965   000062                     
  3966                           ; BSR set to: 14
  3967   000062  51E3               	movf	227,w,b	;volatile
  3968   000064  EC68  F00C         	call	_putCharToRxBuf
  3969   000068                     i2l625:
  3970   000068  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3971   00006C  C003  FFD9         	movff	??_HighISR,fsr2l
  3972   000070  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3973   000072  0011               	retfie		f
  3974   000074                     __end_of_HighISR:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function i2_isDataInTxBuf *****************
  3978 ;; Defined at:
  3979 ;;		line 100 in file "serial.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      unsigned char 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_HighISR
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text33
  4007   001986                     __ptext33:
  4008                           	callstack 0
  4009   001986                     i2_isDataInTxBuf:
  4010                           	callstack 24
  4011   001986                     
  4012                           ;serial.c: 101:     return (TxBufWriteCnt!=TxBufReadCnt);
  4013   001986  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  4014   001988  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4015   00198A  A4D8               	btfss	status,2,c
  4016   00198C  EFCA  F00C         	goto	i2u62_41
  4017   001990  EFCD  F00C         	goto	i2u62_40
  4018   001994                     i2u62_41:
  4019   001994  0E01               	movlw	1
  4020   001996  EFCE  F00C         	goto	i2u63_40
  4021   00199A                     i2u62_40:
  4022   00199A  0E00               	movlw	0
  4023   00199C                     i2u63_40:
  4024   00199C  0012               	return		;funcret
  4025   00199E                     __end_ofi2_isDataInTxBuf:
  4026                           	callstack 0
  4027                           
  4028 ;; *************** function _putCharToRxBuf *****************
  4029 ;; Defined at:
  4030 ;;		line 72 in file "serial.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  byte            1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  byte            1    0[COMRAM] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4048 ;;Total ram usage:        1 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_HighISR
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text34
  4058   0018D0                     __ptext34:
  4059                           	callstack 0
  4060   0018D0                     _putCharToRxBuf:
  4061                           	callstack 24
  4062                           
  4063                           ;incstack = 0
  4064                           ;putCharToRxBuf@byte stored from wreg
  4065   0018D0  6E01               	movwf	putCharToRxBuf@byte^0,c
  4066   0018D2                     
  4067                           ;serial.c: 73:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  4068   0018D2  0E13               	movlw	19
  4069   0018D4  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  4070   0018D6  EF6F  F00C         	goto	i2u123_41
  4071   0018DA  EF71  F00C         	goto	i2u123_40
  4072   0018DE                     i2u123_41:
  4073   0018DE  EF73  F00C         	goto	i2l2492
  4074   0018E2                     i2u123_40:
  4075   0018E2  0E00               	movlw	0
  4076   0018E4  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  4077   0018E6                     i2l2492:
  4078                           
  4079                           ;serial.c: 74:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  4080   0018E6  505A               	movf	_RxBufWriteCnt^0,w,c
  4081   0018E8  0FE0               	addlw	low _EUSART4RXbuf
  4082   0018EA  6ED9               	movwf	fsr2l,c
  4083   0018EC  6ADA               	clrf	fsr2h,c
  4084   0018EE  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  4085   0018F2  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  4086   0018F4  0012               	return		;funcret
  4087   0018F6                     __end_of_putCharToRxBuf:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _getCharFromTxBuf *****************
  4091 ;; Defined at:
  4092 ;;		line 86 in file "serial.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_HighISR
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text35
  4120   0017FE                     __ptext35:
  4121                           	callstack 0
  4122   0017FE                     _getCharFromTxBuf:
  4123                           	callstack 24
  4124   0017FE                     
  4125                           ;serial.c: 87:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  4126   0017FE  0E3B               	movlw	59
  4127   001800  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4128   001802  EF05  F00C         	goto	i2u124_41
  4129   001806  EF07  F00C         	goto	i2u124_40
  4130   00180A                     i2u124_41:
  4131   00180A  EF09  F00C         	goto	i2l2500
  4132   00180E                     i2u124_40:
  4133   00180E  0E00               	movlw	0
  4134   001810  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  4135   001812                     i2l2500:
  4136                           
  4137                           ;serial.c: 88:     return EUSART4TXbuf[TxBufReadCnt++];
  4138   001812  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  4139   001814  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  4140   001816  6E01               	movwf	??_getCharFromTxBuf^0,c
  4141   001818  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4142   00181A  0E00               	movlw	low _EUSART4TXbuf
  4143   00181C  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4144   00181E  6ED9               	movwf	fsr2l,c
  4145   001820  0E01               	movlw	high _EUSART4TXbuf
  4146   001822  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4147   001824  6EDA               	movwf	fsr2h,c
  4148   001826  50DF               	movf	indf2,w,c
  4149   001828  0012               	return		;funcret
  4150   00182A                     __end_of_getCharFromTxBuf:
  4151                           	callstack 0
  4152                           
  4153                           	psect	rparam
  4154   000000                     
  4155                           	psect	temp
  4156   00005B                     btemp:
  4157                           	callstack 0
  4158   00005B                     	ds	1
  4159   000000                     int$flags	set	btemp
  4160   000000                     wtemp8	set	btemp+1
  4161   000000                     ttemp5	set	btemp+1
  4162   000000                     ttemp6	set	btemp+4
  4163   000000                     ttemp7	set	btemp+8
  4164                           
  4165                           	psect	idloc
  4166                           
  4167                           ;Config register IDLOC0 @ 0x200000
  4168                           ;	unspecified, using default values
  4169   200000                     	org	2097152
  4170   200000  FFFF               	dw	65535
  4171                           
  4172                           ;Config register IDLOC1 @ 0x200002
  4173                           ;	unspecified, using default values
  4174   200002                     	org	2097154
  4175   200002  FFFF               	dw	65535
  4176                           
  4177                           ;Config register IDLOC2 @ 0x200004
  4178                           ;	unspecified, using default values
  4179   200004                     	org	2097156
  4180   200004  FFFF               	dw	65535
  4181                           
  4182                           ;Config register IDLOC3 @ 0x200006
  4183                           ;	unspecified, using default values
  4184   200006                     	org	2097158
  4185   200006  FFFF               	dw	65535
  4186                           
  4187                           ;Config register IDLOC4 @ 0x200008
  4188                           ;	unspecified, using default values
  4189   200008                     	org	2097160
  4190   200008  FFFF               	dw	65535
  4191                           
  4192                           ;Config register IDLOC5 @ 0x20000A
  4193                           ;	unspecified, using default values
  4194   20000A                     	org	2097162
  4195   20000A  FFFF               	dw	65535
  4196                           
  4197                           ;Config register IDLOC6 @ 0x20000C
  4198                           ;	unspecified, using default values
  4199   20000C                     	org	2097164
  4200   20000C  FFFF               	dw	65535
  4201                           
  4202                           ;Config register IDLOC7 @ 0x20000E
  4203                           ;	unspecified, using default values
  4204   20000E                     	org	2097166
  4205   20000E  FFFF               	dw	65535
  4206                           
  4207                           	psect	config
  4208                           
  4209                           ;Config register CONFIG1L @ 0x300000
  4210                           ;	External Oscillator mode Selection bits
  4211                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4212                           ;	Power-up default value for COSC bits
  4213                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4214   300000                     	org	3145728
  4215   300000  AA                 	db	170
  4216                           
  4217                           ;Config register CONFIG1H @ 0x300001
  4218                           ;	unspecified, using default values
  4219                           ;	Clock Out Enable bit
  4220                           ;	CLKOUTEN = 0x1, unprogrammed default
  4221                           ;	Clock Switch Enable bit
  4222                           ;	CSWEN = 0x1, unprogrammed default
  4223                           ;	Fail-Safe Clock Monitor Enable bit
  4224                           ;	FCMEN = 0x1, unprogrammed default
  4225   300001                     	org	3145729
  4226   300001  FF                 	db	255
  4227                           
  4228                           ;Config register CONFIG2L @ 0x300002
  4229                           ;	unspecified, using default values
  4230                           ;	Master Clear Enable bit
  4231                           ;	MCLRE = 0x1, unprogrammed default
  4232                           ;	Power-up Timer Enable bit
  4233                           ;	PWRTE = 0x1, unprogrammed default
  4234                           ;	Low-power BOR enable bit
  4235                           ;	LPBOREN = 0x1, unprogrammed default
  4236                           ;	Brown-out Reset Enable bits
  4237                           ;	BOREN = 0x3, unprogrammed default
  4238   300002                     	org	3145730
  4239   300002  FF                 	db	255
  4240                           
  4241                           ;Config register CONFIG2H @ 0x300003
  4242                           ;	unspecified, using default values
  4243                           ;	Brown Out Reset Voltage selection bits
  4244                           ;	BORV = 0x3, unprogrammed default
  4245                           ;	ZCD Disable bit
  4246                           ;	ZCD = 0x1, unprogrammed default
  4247                           ;	PPSLOCK bit One-Way Set Enable bit
  4248                           ;	PPS1WAY = 0x1, unprogrammed default
  4249                           ;	Stack Full/Underflow Reset Enable bit
  4250                           ;	STVREN = 0x1, unprogrammed default
  4251                           ;	Debugger Enable bit
  4252                           ;	DEBUG = 0x1, unprogrammed default
  4253                           ;	Extended Instruction Set Enable bit
  4254                           ;	XINST = 0x1, unprogrammed default
  4255   300003                     	org	3145731
  4256   300003  FF                 	db	255
  4257                           
  4258                           ;Config register CONFIG3L @ 0x300004
  4259                           ;	WDT Period Select bits
  4260                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4261                           ;	WDT operating mode
  4262                           ;	WDTE = OFF, WDT Disabled
  4263   300004                     	org	3145732
  4264   300004  9F                 	db	159
  4265                           
  4266                           ;Config register CONFIG3H @ 0x300005
  4267                           ;	unspecified, using default values
  4268                           ;	WDT Window Select bits
  4269                           ;	WDTCWS = 0x7, unprogrammed default
  4270                           ;	WDT input clock selector
  4271                           ;	WDTCCS = 0x7, unprogrammed default
  4272   300005                     	org	3145733
  4273   300005  FF                 	db	255
  4274                           
  4275                           ;Config register CONFIG4L @ 0x300006
  4276                           ;	unspecified, using default values
  4277                           ;	Write Protection Block 0
  4278                           ;	WRT0 = 0x1, unprogrammed default
  4279                           ;	Write Protection Block 1
  4280                           ;	WRT1 = 0x1, unprogrammed default
  4281                           ;	Write Protection Block 2
  4282                           ;	WRT2 = 0x1, unprogrammed default
  4283                           ;	Write Protection Block 3
  4284                           ;	WRT3 = 0x1, unprogrammed default
  4285                           ;	Write Protection Block 3
  4286                           ;	WRT4 = 0x1, unprogrammed default
  4287                           ;	Write Protection Block 3
  4288                           ;	WRT5 = 0x1, unprogrammed default
  4289                           ;	Write Protection Block 3
  4290                           ;	WRT6 = 0x1, unprogrammed default
  4291                           ;	Write Protection Block 3
  4292                           ;	WRT7 = 0x1, unprogrammed default
  4293   300006                     	org	3145734
  4294   300006  FF                 	db	255
  4295                           
  4296                           ;Config register CONFIG4H @ 0x300007
  4297                           ;	unspecified, using default values
  4298                           ;	Configuration Register Write Protection bit
  4299                           ;	WRTC = 0x1, unprogrammed default
  4300                           ;	Boot Block Write Protection bit
  4301                           ;	WRTB = 0x1, unprogrammed default
  4302                           ;	Data EEPROM Write Protection bit
  4303                           ;	WRTD = 0x1, unprogrammed default
  4304                           ;	Scanner Enable bit
  4305                           ;	SCANE = 0x1, unprogrammed default
  4306                           ;	Low Voltage Programming Enable bit
  4307                           ;	LVP = 0x1, unprogrammed default
  4308   300007                     	org	3145735
  4309   300007  FF                 	db	255
  4310                           
  4311                           ;Config register CONFIG5L @ 0x300008
  4312                           ;	unspecified, using default values
  4313                           ;	UserNVM Program Memory Code Protection bit
  4314                           ;	CP = 0x1, unprogrammed default
  4315                           ;	DataNVM Memory Code Protection bit
  4316                           ;	CPD = 0x1, unprogrammed default
  4317   300008                     	org	3145736
  4318   300008  FF                 	db	255
  4319                           
  4320                           ;Config register CONFIG5H @ 0x300009
  4321                           ;	unspecified, using default values
  4322   300009                     	org	3145737
  4323   300009  FF                 	db	255
  4324                           
  4325                           ;Config register CONFIG6L @ 0x30000A
  4326                           ;	unspecified, using default values
  4327                           ;	Table Read Protection Block 0
  4328                           ;	EBTR0 = 0x1, unprogrammed default
  4329                           ;	Table Read Protection Block 1
  4330                           ;	EBTR1 = 0x1, unprogrammed default
  4331                           ;	Table Read Protection Block 2
  4332                           ;	EBTR2 = 0x1, unprogrammed default
  4333                           ;	Table Read Protection Block 3
  4334                           ;	EBTR3 = 0x1, unprogrammed default
  4335                           ;	Table Read Protection Block 4
  4336                           ;	EBTR4 = 0x1, unprogrammed default
  4337                           ;	Table Read Protection Block 5
  4338                           ;	EBTR5 = 0x1, unprogrammed default
  4339                           ;	Table Read Protection Block 6
  4340                           ;	EBTR6 = 0x1, unprogrammed default
  4341                           ;	Table Read Protection Block 7
  4342                           ;	EBTR7 = 0x1, unprogrammed default
  4343   30000A                     	org	3145738
  4344   30000A  FF                 	db	255
  4345                           
  4346                           ;Config register CONFIG6H @ 0x30000B
  4347                           ;	unspecified, using default values
  4348                           ;	Boot Block Table Read Protection bit
  4349                           ;	EBTRB = 0x1, unprogrammed default
  4350   30000B                     	org	3145739
  4351   30000B  FF                 	db	255
  4352                           tosu	equ	0xFFF
  4353                           tosh	equ	0xFFE
  4354                           tosl	equ	0xFFD
  4355                           stkptr	equ	0xFFC
  4356                           pclatu	equ	0xFFB
  4357                           pclath	equ	0xFFA
  4358                           pcl	equ	0xFF9
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           indf0	equ	0xFEF
  4366                           postinc0	equ	0xFEE
  4367                           postdec0	equ	0xFED
  4368                           preinc0	equ	0xFEC
  4369                           plusw0	equ	0xFEB
  4370                           fsr0h	equ	0xFEA
  4371                           fsr0l	equ	0xFE9
  4372                           wreg	equ	0xFE8
  4373                           indf1	equ	0xFE7
  4374                           postinc1	equ	0xFE6
  4375                           postdec1	equ	0xFE5
  4376                           preinc1	equ	0xFE4
  4377                           plusw1	equ	0xFE3
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           bsr	equ	0xFE0
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           preinc2	equ	0xFDC
  4385                           plusw2	equ	0xFDB
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        81
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      90
    BANK0           160     67     148
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@read_val(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_manoeuvre(BANK0[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1107DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2601$buffer	PTR unsigned char  size(2) Largest target is 0

    S2601$source	PTR const unsigned char  size(2) Largest target is 0

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), STR_2(CODE[5]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 41
		 -> main@display(BANK0[41]), sendArraySerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_high(BANK0[20]), 

    timer_low_pointer	PTR unsigned char  size(1) Largest target is 20
		 -> trail_timer_low(BANK0[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    TxBufferedString@string	PTR unsigned char  size(1) Largest target is 41
		 -> main@display(BANK0[41]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), STR_2(CODE[5]), STR_4(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0    5336
                                             56 COMRAM     2     2      0
                                              0 BANK0     67    67      0
                    _Interrupts_init
                        _Timer0_init
                   _TxBufferedString
                  _buggy_lights_init
                   _color_click_init
                         _getRGBCval
                    _initDCmotorsPWM
                         _initUSART4
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    3632
                                             31 COMRAM    25    15     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2961
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    2611
                                             14 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getRGBCval                                           1     0      1     616
                                             15 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     1     0      1     143
                                              5 COMRAM     1     0      1
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (7) i2_isDataInTxBuf                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _getRGBCval
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5A       1       95.7%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllhhh     20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlllh     17      0       0      38        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      50        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRlllhhh      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRllllhl      5      0       0      53        0.0%
BITBIGSFRhhllll      5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllllhh      3      0       0      52        0.0%
BITBIGSFRlllhhh      2      0       0      43        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      51        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhh         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      62        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 05 16:58:46 2024

                 _turn180Delay 003F                 _color_read_Red 1544                _color_read_Blue 1634  
              _trail_timer_low 00B8                             l31 16D0                             l53 17FC  
                           l62 1682                             l71 14F0                             l56 1914  
                           l65 15E2                             l59 1592                             l68 1632  
                 ___awdiv@sign 000A               _trail_timer_high 00CC               _color_read_Clear 15E4  
             _color_read_Green 1594              ??_Interrupts_init 0005                            l144 142C  
                          l242 18A8                            l251 19D4                            l260 1756  
                          l245 18CE                            l254 19DE                            l239 1852  
                          l248 19E8                            l257 19CA                            l442 1984  
                          l452 196C                            l614 19BE                            l439 18A6  
                          l448 187C                            l394 1952                            l565 1934  
                          l872 12F2                            l859 1242                            u900 11D2  
                          u901 11CE                            u910 11F0                            u911 11EC  
                          u920 120C                            u921 1208                            u930 1232  
                          u931 122E                            u860 18B8                            u940 1256  
                          u861 18B4                            u941 1252                            u870 18CE  
                          u950 1270                            u871 18CA                            u951 126C  
                          u880 1192                            u960 128A                            u881 118E  
                          u961 1286                            u890 11AC                            u970 12A8  
                          u891 11A8                            u971 12A4                            u980 12BE  
                          u981 12BA                            u990 12E2                            u991 12DE  
                          _abs 1796                   ___awmod@sign 000A                            wreg 0FE8  
                  _squareDelay 003B                    main@display 0060                           ?_abs 000B  
                         l2200 1244                           l2210 1270                           l2202 1248  
                         l1306 1714                           l2220 12A8                           l2212 1278  
                         l2204 1256                           l2300 0EC8                           l2230 12E2  
                         l2222 12BE                           l2214 128A                           l2206 125E  
                         l2310 0F52                           l2302 0EE0                           l2152 18A8  
                         l2160 1192                           l2232 12EA                           l2224 12C6  
                         l2216 1292                           l2208 1262                           l2240 1314  
                         l2320 0F98                           l2312 0F56                           l2304 0EEA  
                         l2400 151A                           l1361 17C8                           l1353 153A  
                         l2402 1684                           l2154 18B8                           l2410 17E8  
                         l2170 11B8                           l2162 119A                           l2226 12CC  
                         l2218 129A                           l2250 1796                           l2242 131E  
                         l2322 0FAA                           l2314 0F68                           l2306 0F02  
                         l2330 0FF0                           l1354 1542                           l1347 0FE4  
                         l2260 19C6                           l2412 17F2                           l2404 17CA  
                         l2420 13D4                           l2180 11F0                           l2172 11C0  
                         l2164 119E                           l2156 1180                           l2228 12D2  
                         l2252 17A4                           l2244 133A                           l2236 12F4  
                         l2340 102E                           l2332 0FF8                           l1348 1036  
                         l2324 0FB2                           l2316 0F78                           l2308 0F36  
                         l1373 139C                           l2350 183C                           l2254 19E0  
                         l2262 19D6                           l2406 17CE                           l2270 1718  
                         l2414 149C                           l2430 1412                           l2422 13D8  
                         l2190 121C                           l2182 11F6                           l2174 11D2  
                         l2166 11AC                           l2158 1184                           l1358 17B0  
                         l2246 136C                           l2238 1304                           l2326 0FD0  
                         l2318 0F88                           l2510 105C                           l2352 183E  
                         l2344 182A                           l2256 19E4                           l2264 19DA  
                         l2408 17D8                           l2280 1754                           l2272 171C  
                         l2360 158A                           l2432 1414                           l2424 13FC  
                         l2416 139E                           l2440 1936                           l2184 120C  
                         l2176 11DA                           l2192 1222                           l2168 11B4  
                         l1384 19EA                           l2328 0FD2                           l2336 1004  
                         l2520 107A                           l2512 1062                           l2504 1038  
                         l2354 1840                           l2346 1834                           l2258 19C2  
                         l2274 1724                           l2266 19CC                           l2370 1594  
                         l2434 141E                           l2426 1406                           l2418 13AE  
                         l2450 1950                           l2442 1940                           l2194 1232  
                         l2186 1214                           l2178 11E2                           l2338 1026  
                         l2290 0E6E                           l2530 1096                           l2522 1082  
                         l2514 1066                           l2506 1050                           l2460 19B2  
                         l2452 1916                           l2348 183A                           l2356 18F8  
                         l2276 172C                           l2268 19D0                           l2364 1634  
                         l2372 15DA                           l2436 1420                           l2428 1408  
                         l2444 1942                           l2196 123A                           l2188 1216  
                         l2292 0E7A                           l2284 0E38                           l2540 10BE  
                         l2532 109E                           l2524 1086                           l2516 106A  
                         l2508 1050                           l2454 191E                           l2382 1880  
                         l2278 1752                           l2366 167A                           l2358 1544  
                         l2438 142A                           l2446 194C                           l2390 196E  
                         l2294 0E7E                           l2286 0E40                           l2470 1702  
                         l2462 16D2                           l2550 10D6                           l2542 10C6  
                         l2534 10A6                           l2526 108A                           l2518 1072  
                         l2456 1920                           l2384 1890                           l2480 1864  
                         l2376 15E4                           l2448 194E                           l2296 0E88  
                         l2288 0E66                           l2472 170C                           l2464 16DA  
                         l2560 10E4                           l2552 10DA                           l2544 10CA  
                         l2536 10AE                           l2528 108E                           l2458 1932  
                         l2386 1894                           l2482 1866                           l2378 162A  
                         l2298 0EA8                           l2394 14F2                           l2466 16E2  
                         l2570 1128                           l2562 10F2                           l2554 10DC  
                         l2546 10CE                           l2538 10B6                           l2388 18A4  
                         l2476 1854                           l2484 1954                           l2396 14F6  
                         l2468 16EA                           l2572 1154                           l2564 10FC  
                         l2556 10DE                           l2548 10D2                           l2478 1858  
                         l2486 1968                           l2398 1502                           l2574 115C  
                         l2566 10FE                           l2558 10E2                           l2576 1160  
                         l2568 1120                           STR_1 0E01                           STR_2 0E2F  
                         STR_3 0E34                           u1000 1304                           u1001 1300  
                         u1010 1314                           u1011 1310                           u1020 133A  
                         u1100 0EFE                           u1021 1336                           u1101 0EF8  
                         u1030 136C                           u1110 0F00                           u1031 1368  
                         u1040 17A4                           u1120 0F68                           u1200 153A  
                         u1041 17A0                           u1121 0F64                           u1201 1536  
                         u1210 187C                           u1050 1740                           u1130 0F78  
                         u1211 1878                           u1051 1738                           u1131 0F74  
                         u1220 1968                           u1140 0F88                           u1221 1964  
                         u1141 0F84                           u1150 0F98                           u1070 0E66  
                         u1151 0F94                           u1071 0E62                           u1160 0FE4  
                         u1080 0EA8                           u1161 0FE0                           u1081 0EA4  
                         u1170 1890                           u1090 0EC8                           u1250 10F2  
                         u1171 188C                           u1091 0EC4                           u1251 10EE  
                         u1068 1742                           u1180 1982                           u1260 1110  
                         u1181 197C                           u1261 1108                           u1190 1984  
                 _BAUD4CONbits 0EE9                           u1347 1042                           u1357 116A  
                         u1278 1112                           u1367 17DE                           _T2PR 0FBC  
                         abs@a 000B                           _dbuf 013C                           _main 1038  
                         _prec 0053                           _nout 004F                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005B                           start 0074  
       __end_of_color_read_Red 1594                __end_of_HighISR 0074                   ___param_bank 0000  
                        ??_abs 000D                          ?_main 0001             _timer_high_pointer 004A  
              __end_of___awdiv 1244                __end_of___awmod 12F4                ___awdiv@divisor 0007  
                        i2l442 199C                          i2l435 1828                          i2l428 18F4  
                        i2l621 0022                          i2l622 0052                          i2l625 0068  
                        i2l619 0024                ___awdiv@counter 0009                   vfpfcnvrt@cnt 0014  
                 vfpfcnvrt@fmt 0010                          _TMR0H 0FD4                          _TMR0L 0FD3  
                 main@read_val 009B     __end_of_I2C_2_Master_Start 19EA     __end_of_I2C_2_Master_Write 19CC  
                  _turningGear 004B                          _flags 0055                          _fputc 12F4  
                        _width 0051                          _putch 19EA              _turnRight135Delay 0041  
                        tablat 0FF5                _turnLeft90Delay 0047                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 0FD8  
                        wtemp8 005C                __end_of_sprintf 1716        __end_of_color_read_Blue 1684  
        _I2C_2_Master_RepStart 19CC             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              __initialization 142E                   __end_of_main 1180                i2_isDataInTxBuf 1986  
           putCharToTxBuf@byte 0005                         ??_main 0039                  __activetblptr 0003  
                       ?_fputc 0005                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0005  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l2500 1812  
                       i2l1900 1986                         i2l2612 0032                         i2l2614 003A  
                       i2l2606 0012                         i2l2616 004E                         i2l2490 18E2  
                       i2l2618 0062                         i2l2492 18E6                         i2l2494 18F2  
                       i2l2496 17FE                         i2l2488 18D2                         i2l2498 180E  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0013                      ??_HighISR 0003  
     __end_of_color_click_init 17FE                         _RX4PPS 0E15                         _TX4REG 0EE4  
             _turnLeft135Delay 0043                  ??_Timer0_init 0005                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001F               _getCharFromTxBuf 17FE                      ??___awdiv 0009  
                    ??___awmod 0009                         clear_0 1474                         clear_1 1480  
                       clear_2 148C               ___awdiv@quotient 000B                ___awmod@divisor 0007  
                       isa$std 0001                ___awmod@counter 0009                         fputc@c 0005  
            ?_TxBufferedString 0006                   __pdataCOMRAM 003B              _timer_low_pointer 0049  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8             ??_TxBufferedString 0007                         putch@c 0001  
             __end_of_vfprintf 1544              ??_initDCmotorsPWM 0007                      ??_sprintf 002A  
            _buggy_lights_init 1684          __end_of_isDataInTxBuf 1986                     __accesstop 0060  
      __end_of__initialization 1492       __end_of_color_read_Clear 1634       __end_of_color_read_Green 15E4  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 199E             ?_buggy_lights_init 0001  
                ___rparam_used 0001               ?_color_read_Blue 0009                _Interrupts_init 19B2  
               __pcstackCOMRAM 0001                   __pidataBANK0 1758            ??_buggy_lights_init 0005  
                __end_of_fputc 139E                  __end_of_putch 19EC            __end_of_Timer0_init 1936  
                      ??_fputc 0008      __end_of_buggy_lights_init 16D2                        ??_putch 0005  
                   __pbssBANK0 00E0                     __pbssBANK1 0100                     _getRGBCval 149C  
            _color_writetoaddr 18F6                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0007  
          ??_color_writetoaddr 0008                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      i2u62_40 199A                        i2u62_41 1994                        i2u63_40 199C  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5        __end_of_Interrupts_init 19C0  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
    __end_of_color_writetoaddr 1916               ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 19E0  
                   _initUSART4 1936             _I2C_2_Master_Write 19C0                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E                    _Timer0_init 1916  
                      ___awdiv 1180                        ___awmod 1244            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 001C                   __psmallconst 0E00  
                      __pcinit 142E                        __ramtop 0E00                        __ptext0 1038  
                      __ptext1 16D2                        __ptext2 14F2                        __ptext3 0E38  
                      __ptext4 12F4                        __ptext5 19EA                        __ptext6 1796  
                      __ptext7 1244                        __ptext8 1180                        __ptext9 1954  
                    _T2CONbits 0FBD               ___awmod@dividend 0005                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 182A                        _sprintf 16D2  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1492  
            __end_of_sendTxBuf 196E                    ?_getRGBCval 0010                        fputc@fp 0007  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 1038  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0017  
                   ??_vfprintf 001F                _initDCmotorsPWM 139E                      _PORTFbits 0F8E  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
             ?_Interrupts_init 0001                    _CCP1CONbits 0FAB              ?_color_read_Clear 0009  
                 _EUSART4RXbuf 00E0                   _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0009                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22                     main@motorL 0089                     main@motorR 0092  
           ??_color_read_Clear 000B             ??_color_read_Green 000B                    vfpfcnvrt@ap 0011  
                  vfpfcnvrt@cp 0016                    vfpfcnvrt@fp 000F                  __pidataCOMRAM 199E  
          color_read_Clear@tmp 000E            start_initialization 142E                    __end_of_abs 17CA  
                _TxBufWriteCnt 0058               _turnRight90Delay 0045            color_read_Green@tmp 000E  
      __end_of_initDCmotorsPWM 142E                    vfprintf@fmt 001D                 _putCharToRxBuf 18D0  
               _putCharToTxBuf 187E                    __pdataBANK0 00A3                    __pbssCOMRAM 004F  
                __pcstackBANK0 0060                      _backtrack 0056                       ?_HighISR 0001  
                 ?_Timer0_init 0001         __end_of_putCharToRxBuf 18F6         __end_of_putCharToTxBuf 18A8  
                    __pintcode 0008                       ?___awdiv 0005                       ?___awmod 0005  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00              _I2C_2_Master_Idle 18A8              _I2C_2_Master_Init 182A  
            _I2C_2_Master_Read 1716              _I2C_2_Master_Stop 19D6                   _RxBufReadCnt 0059  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                  _headbuttDelay 003D       initDCmotorsPWM@PWMperiod 0005  
                     ?_sprintf 0020              ?_getCharFromTxBuf 0001                      _rampDelay 004E  
           ??_getCharFromTxBuf 0001                   ??_getRGBCval 0011            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0006                       _LATCbits 0F7B                  _isDataInTxBuf 196E  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
             _TxBufferedString 1854                       _LATGbits 0F7F                       _LATHbits 0F80  
                    _sendTxBuf 1954                       _PIE0bits 0E29                       _PIE4bits 0E2D  
                     i2u130_40 0022                       i2u130_41 001E                       i2u123_40 18E2  
                     i2u131_40 0032                       i2u123_41 18DE                       i2u131_41 002E  
                     i2u124_40 180E                       i2u132_40 004E                       i2u124_41 180A  
                     i2u132_41 004A                       i2u133_40 0062                       i2u133_41 005E  
                     _PIR0bits 0E33                       _PIR4bits 0E37                ?_putCharToRxBuf 0001  
             ?_initDCmotorsPWM 0005                ?_putCharToTxBuf 0001                       _SSP2CON2 0EDA  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 0E38      __end_of_I2C_2_Master_Idle 18D0  
    __end_of_I2C_2_Master_Init 1854      __end_of_I2C_2_Master_Read 1758      __end_of_I2C_2_Master_Stop 19E0  
  I2C_2_Master_Write@data_byte 0006             __end_of_getRGBCval 14F2              ??_color_read_Blue 000B  
                 _TxBufReadCnt 0057                     vfpfcnvrt@c 001B                      copy_data0 1442  
                    copy_data1 1462                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 19D6  
           color_read_Blue@tmp 000E                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                     __Hrparam 0000                     vfprintf@ap 001E                       __Lrparam 0000  
                   vfprintf@fp 001C                     ?_vfpfcnvrt 000F                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                     sprintf@fmt 0021                     sprintf@ret 002A  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6             __end_of_initUSART4 1954  
                     __ptext10 196E                       __ptext11 1936                       __ptext20 17CA  
                     __ptext12 139E                       __ptext21 18F6                       __ptext13 149C  
                     __ptext30 1916                       __ptext22 19C0                       __ptext14 1544  
                     __ptext31 19B2                       __ptext23 19D6                       __ptext15 1594  
                     __ptext24 19E0                       __ptext16 15E4                       __ptext33 1986  
                     __ptext25 18A8                       __ptext17 1634                       __ptext34 18D0  
                     __ptext26 182A                       __ptext18 19CC                       __ptext35 17FE  
                     __ptext27 1684                       __ptext19 1716                       __ptext28 1854  
                     __ptext29 187E                    getRGBCval@p 0010                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     int$flags 005B                       _vfprintf 14F2                     _INTCONbits 0FF2  
            ??i2_isDataInTxBuf 0001                ??_isDataInTxBuf 0005                       intlevel2 0000  
                    sprintf@ap 002C                   _topGearRight 004C              _manoeuvre_pointer 00A3  
                  ??_sendTxBuf 0005                    ??_vfpfcnvrt 0012               _color_click_init 17CA  
                  _topGearLeft 004D       __end_of_TxBufferedString 187E                       sprintf@f 002D  
                     sprintf@s 0020                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
              _trail_manoeuvre 00A4                     _TX4STAbits 0EE8               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 0005  
