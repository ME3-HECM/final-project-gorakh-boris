

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 12:43:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   0036CC                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _manoeuvre_pointer
   118   0036CC  A7                 	db	low _trail_manoeuvre
   119   0036CD  01                 	db	high _trail_manoeuvre
   120                           
   121                           ;initializer for _timer_low_pointer
   122   0036CE  BB                 	db	low _trail_timer_low
   123   0036CF  01                 	db	high _trail_timer_low
   124                           
   125                           ;initializer for _timer_high_pointer
   126   0036D0  CF                 	db	low _trail_timer_high
   127   0036D1  01                 	db	high _trail_timer_high
   128                           
   129                           ;initializer for _squareDelay
   130   0036D2  012C               	dw	300
   131                           
   132                           ;initializer for _headbuttDelay
   133   0036D4  0046               	dw	70
   134                           
   135                           ;initializer for _turn180Delay
   136   0036D6  01FE               	dw	510
   137                           
   138                           ;initializer for _turnRight135Delay
   139   0036D8  012C               	dw	300
   140                           
   141                           ;initializer for _turnLeft135Delay
   142   0036DA  012C               	dw	300
   143                           
   144                           ;initializer for _turnRight90Delay
   145   0036DC  00AF               	dw	175
   146                           
   147                           ;initializer for _turnLeft90Delay
   148   0036DE  00AF               	dw	175
   149                           
   150                           ;initializer for _wall_threshold_blue
   151   0036E0  001E               	dw	30
   152                           
   153                           ;initializer for _turningGear
   154   0036E2  2A                 	db	42
   155                           
   156                           ;initializer for _topGearRight
   157   0036E3  14                 	db	20
   158                           
   159                           ;initializer for _topGearLeft
   160   0036E4  14                 	db	20
   161                           
   162                           ;initializer for _rampDelay
   163   0036E5  08                 	db	8
   164                           
   165                           ;initializer for _sample_count
   166   0036E6  14                 	db	20
   167   000000                     _TMR0H	set	4052
   168   000000                     _TX4REG	set	3812
   169   000000                     _RC4STAbits	set	3815
   170   000000                     _SP4BRGH	set	3814
   171   000000                     _LATEbits	set	3965
   172   000000                     _TRISEbits	set	3973
   173   000000                     _LATGbits	set	3967
   174   000000                     _TRISGbits	set	3975
   175   000000                     _LATFbits	set	3966
   176   000000                     _LATHbits	set	3968
   177   000000                     _TRISFbits	set	3974
   178   000000                     _TRISHbits	set	3976
   179   000000                     _SSP2CON2bits	set	3802
   180   000000                     _RX4PPS	set	3605
   181   000000                     _SSP2CLKPPS	set	3612
   182   000000                     _SSP2DATPPS	set	3613
   183   000000                     _RC7PPS	set	3689
   184   000000                     _RE2PPS	set	3700
   185   000000                     _LATAbits	set	3961
   186   000000                     _LATDbits	set	3964
   187   000000                     _TRISDbits	set	3972
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCPR2H	set	4006
   191   000000                     _CCPR1H	set	4010
   192   000000                     _TRISCbits	set	3971
   193   000000                     _TRISAbits	set	3969
   194   000000                     _LATCbits	set	3963
   195   000000                     _RE4PPS	set	3702
   196   000000                     _RG6PPS	set	3720
   197   000000                     _RD5PPS	set	3695
   198   000000                     _ANSELDbits	set	3751
   199   000000                     _SSP2ADD	set	3798
   200   000000                     _SSP2CON1bits	set	3801
   201   000000                     _CCPR4H	set	3873
   202   000000                     _CCPR3H	set	3877
   203   000000                     _TMR0L	set	4051
   204   000000                     _T0CON0bits	set	4053
   205   000000                     _T0CON1bits	set	4054
   206   000000                     _T2CLKCONbits	set	4031
   207   000000                     _T2HLTbits	set	4030
   208   000000                     _CCP1CONbits	set	4011
   209   000000                     _CCPTMRS0bits	set	4013
   210   000000                     _CCP2CONbits	set	4007
   211   000000                     _CCP3CONbits	set	3878
   212   000000                     _CCP4CONbits	set	3874
   213   000000                     _RC4REG	set	3811
   214   000000                     _SP4BRGL	set	3813
   215   000000                     _TX4STAbits	set	3816
   216   000000                     _BAUD4CONbits	set	3817
   217   000000                     _SSP2CON2	set	3802
   218   000000                     _SSP2STAT	set	3800
   219   000000                     _ANSELFbits	set	3764
   220   000000                     _SSP2BUF	set	3797
   221   000000                     _PIE0bits	set	3625
   222   000000                     _PIR4bits	set	3639
   223   000000                     _RC0PPS	set	3682
   224   000000                     _RD6PPS	set	3696
   225   000000                     _INTCONbits	set	4082
   226   000000                     _PIR0bits	set	3635
   227                           
   228                           	psect	smallconst
   229   000E00                     __psmallconst:
   230                           	callstack 0
   231   000E00  00                 	db	0
   232   000E01                     STR_5:
   233                           
   234                           ; BSR set to: 14
   235   000E01  25                 	db	37
   236   000E02  75                 	db	117	;'u'
   237   000E03  20                 	db	32
   238   000E04  25                 	db	37
   239   000E05  75                 	db	117	;'u'
   240   000E06  20                 	db	32
   241   000E07  25                 	db	37
   242   000E08  75                 	db	117	;'u'
   243   000E09  20                 	db	32
   244   000E0A  25                 	db	37
   245   000E0B  75                 	db	117	;'u'
   246   000E0C  20                 	db	32
   247   000E0D  0D                 	db	13
   248   000E0E  00                 	db	0
   249   000E0F                     STR_1:
   250                           
   251                           ; BSR set to: 14
   252   000E0F  25                 	db	37
   253   000E10  64                 	db	100	;'d'
   254   000E11  20                 	db	32
   255   000E12  0D                 	db	13
   256   000E13  00                 	db	0
   257   000E14                     STR_2:
   258                           
   259                           ; BSR set to: 14
   260   000E14  25                 	db	37
   261   000E15  64                 	db	100	;'d'
   262   000E16  20                 	db	32
   263   000E17  00                 	db	0
   264   000E18  00                 	db	0	; dummy byte at the end
   265   000000                     
   266                           ; #config settings
   267                           
   268                           	psect	cinit
   269   00349A                     __pcinit:
   270                           	callstack 0
   271   00349A                     start_initialization:
   272                           	callstack 0
   273   00349A                     __initialization:
   274                           	callstack 0
   275                           
   276                           ; Initialize objects allocated to BANK0 (27 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278   00349A  0ECC               	movlw	low __pidataBANK0
   279   00349C  6EF6               	movwf	tblptrl,c
   280   00349E  0E36               	movlw	high __pidataBANK0
   281   0034A0  6EF7               	movwf	tblptrh,c
   282   0034A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283   0034A4  6EF8               	movwf	tblptru,c
   284   0034A6  EE00  F0A8         	lfsr	0,__pdataBANK0
   285   0034AA  EE10 F01B          	lfsr	1,27
   286   0034AE                     copy_data0:
   287   0034AE  0009               	tblrd		*+
   288   0034B0  CFF5 FFEE          	movff	tablat,postinc0
   289   0034B4  50E5               	movf	postdec1,w,c
   290   0034B6  50E1               	movf	fsr1l,w,c
   291   0034B8  E1FA               	bnz	copy_data0
   292                           
   293                           ; Clear objects allocated to BANK1 (63 bytes)
   294   0034BA  EE01  F0A4         	lfsr	0,__pbssBANK1
   295   0034BE  0E3F               	movlw	63
   296   0034C0                     clear_0:
   297   0034C0  6AEE               	clrf	postinc0,c
   298   0034C2  06E8               	decf	wreg,f,c
   299   0034C4  E1FD               	bnz	clear_0
   300                           
   301                           ; Clear objects allocated to BANK0 (40 bytes)
   302   0034C6  EE00  F060         	lfsr	0,__pbssBANK0
   303   0034CA  0E28               	movlw	40
   304   0034CC                     clear_1:
   305   0034CC  6AEE               	clrf	postinc0,c
   306   0034CE  06E8               	decf	wreg,f,c
   307   0034D0  E1FD               	bnz	clear_1
   308   0034D2                     end_of_initialization:
   309                           	callstack 0
   310   0034D2                     __end_of__initialization:
   311                           	callstack 0
   312   0034D2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313   0034D4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314   0034D6  0100               	movlb	0
   315   0034D8  EF60  F013         	goto	_main	;jump to C main() function
   316                           
   317                           	psect	bssBANK0
   318   000060                     __pbssBANK0:
   319                           	callstack 0
   320   000060                     _dbuf:
   321                           	callstack 0
   322   000060                     	ds	32
   323   000080                     _nout:
   324                           	callstack 0
   325   000080                     	ds	2
   326   000082                     _width:
   327                           	callstack 0
   328   000082                     	ds	2
   329   000084                     _prec:
   330                           	callstack 0
   331   000084                     	ds	2
   332   000086                     _flags:
   333                           	callstack 0
   334   000086                     	ds	1
   335   000087                     _return_flag:
   336                           	callstack 0
   337   000087                     	ds	1
   338                           
   339                           	psect	dataBANK0
   340   0000A8                     __pdataBANK0:
   341                           	callstack 0
   342   0000A8                     _manoeuvre_pointer:
   343                           	callstack 0
   344   0000A8                     	ds	2
   345   0000AA                     _timer_low_pointer:
   346                           	callstack 0
   347   0000AA                     	ds	2
   348   0000AC                     _timer_high_pointer:
   349                           	callstack 0
   350   0000AC                     	ds	2
   351   0000AE                     _squareDelay:
   352                           	callstack 0
   353   0000AE                     	ds	2
   354   0000B0                     _headbuttDelay:
   355                           	callstack 0
   356   0000B0                     	ds	2
   357   0000B2                     _turn180Delay:
   358                           	callstack 0
   359   0000B2                     	ds	2
   360   0000B4                     _turnRight135Delay:
   361                           	callstack 0
   362   0000B4                     	ds	2
   363   0000B6                     _turnLeft135Delay:
   364                           	callstack 0
   365   0000B6                     	ds	2
   366   0000B8                     _turnRight90Delay:
   367                           	callstack 0
   368   0000B8                     	ds	2
   369   0000BA                     _turnLeft90Delay:
   370                           	callstack 0
   371   0000BA                     	ds	2
   372   0000BC                     _wall_threshold_blue:
   373                           	callstack 0
   374   0000BC                     	ds	2
   375   0000BE                     _turningGear:
   376                           	callstack 0
   377   0000BE                     	ds	1
   378   0000BF                     _topGearRight:
   379                           	callstack 0
   380   0000BF                     	ds	1
   381   0000C0                     _topGearLeft:
   382                           	callstack 0
   383   0000C0                     	ds	1
   384   0000C1                     _rampDelay:
   385                           	callstack 0
   386   0000C1                     	ds	1
   387   0000C2                     _sample_count:
   388                           	callstack 0
   389   0000C2                     	ds	1
   390                           
   391                           	psect	bssBANK1
   392   0001A4                     __pbssBANK1:
   393                           	callstack 0
   394   0001A4                     _manoeuvre_count:
   395                           	callstack 0
   396   0001A4                     	ds	1
   397   0001A5                     _lost_flag:
   398                           	callstack 0
   399   0001A5                     	ds	1
   400   0001A6                     _returning:
   401                           	callstack 0
   402   0001A6                     	ds	1
   403   0001A7                     _trail_manoeuvre:
   404                           	callstack 0
   405   0001A7                     	ds	20
   406   0001BB                     _trail_timer_low:
   407                           	callstack 0
   408   0001BB                     	ds	20
   409   0001CF                     _trail_timer_high:
   410                           	callstack 0
   411   0001CF                     	ds	20
   412                           
   413                           	psect	cstackBANK1
   414   000100                     __pcstackBANK1:
   415                           	callstack 0
   416   000100                     sendArrayCharSerial4@tempStr:
   417                           	callstack 0
   418                           
   419                           ; 161 bytes @ 0x0
   420   000100                     	ds	161
   421   0001A1                     sendArrayCharSerial4@index:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0xA1
   425   0001A1                     	ds	1
   426   0001A2                     sendArrayCharSerial4@i:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xA2
   430   0001A2                     	ds	2
   431                           
   432                           	psect	cstackBANK0
   433   000088                     __pcstackBANK0:
   434                           	callstack 0
   435   000088                     main@HSV_colour:
   436                           	callstack 0
   437                           
   438                           ; 6 bytes @ 0x0
   439   000088                     	ds	6
   440   00008E                     main@motorL:
   441                           	callstack 0
   442                           
   443                           ; 9 bytes @ 0x6
   444   00008E                     	ds	9
   445   000097                     main@motorR:
   446                           	callstack 0
   447                           
   448                           ; 9 bytes @ 0xF
   449   000097                     	ds	9
   450   0000A0                     main@RGBC_colour:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x18
   454   0000A0                     	ds	8
   455                           
   456                           	psect	cstackCOMRAM
   457   000001                     __pcstackCOMRAM:
   458                           	callstack 0
   459   000001                     ??_toggle_tricolour_LED:
   460   000001                     ??_I2C_2_Master_Idle:
   461   000001                     ?_max_RGB:
   462                           	callstack 0
   463   000001                     ?_min_RGB:
   464                           	callstack 0
   465   000001                     ?___wmul:
   466                           	callstack 0
   467   000001                     ?___awdiv:
   468                           	callstack 0
   469   000001                     ?___awmod:
   470                           	callstack 0
   471   000001                     ?___lwmod:
   472                           	callstack 0
   473   000001                     ?___lmul:
   474                           	callstack 0
   475   000001                     ?___lldiv:
   476                           	callstack 0
   477   000001                     ?___xxtofl:
   478                           	callstack 0
   479   000001                     max_RGB@p:
   480                           	callstack 0
   481   000001                     min_RGB@p:
   482                           	callstack 0
   483   000001                     colour_to_key@p1:
   484                           	callstack 0
   485   000001                     sendCharSerial4@charToSend:
   486                           	callstack 0
   487   000001                     read_timer@tH:
   488                           	callstack 0
   489   000001                     write_timer@tL:
   490                           	callstack 0
   491   000001                     write_trail@tL:
   492                           	callstack 0
   493   000001                     initDCmotorsPWM@PWMperiod:
   494                           	callstack 0
   495   000001                     ___wmul@multiplier:
   496                           	callstack 0
   497   000001                     ___awdiv@dividend:
   498                           	callstack 0
   499   000001                     ___awmod@dividend:
   500                           	callstack 0
   501   000001                     ___lwmod@dividend:
   502                           	callstack 0
   503   000001                     fputc@c:
   504                           	callstack 0
   505   000001                     ___lmul@multiplier:
   506                           	callstack 0
   507   000001                     ___lldiv@dividend:
   508                           	callstack 0
   509   000001                     ___xxtofl@val:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x0
   513   000001                     	ds	1
   514   000002                     ??_I2C_2_Master_Read:
   515   000002                     colour_to_key@p2:
   516                           	callstack 0
   517   000002                     I2C_2_Master_Write@data_byte:
   518                           	callstack 0
   519   000002                     read_timer@tL:
   520                           	callstack 0
   521   000002                     write_timer@tH:
   522                           	callstack 0
   523   000002                     write_trail@man:
   524                           	callstack 0
   525   000002                     sendStringSerial4@string:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1
   529   000002                     	ds	1
   530   000003                     color_writetoaddr@value:
   531                           	callstack 0
   532   000003                     I2C_2_Master_Read@ack:
   533                           	callstack 0
   534   000003                     write_trail@tH:
   535                           	callstack 0
   536   000003                     fputc@fp:
   537                           	callstack 0
   538   000003                     ___wmul@multiplicand:
   539                           	callstack 0
   540   000003                     ___awdiv@divisor:
   541                           	callstack 0
   542   000003                     ___awmod@divisor:
   543                           	callstack 0
   544   000003                     ___lwmod@divisor:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x2
   548   000003                     	ds	1
   549   000004                     ??_fputc:
   550   000004                     color_writetoaddr@address:
   551                           	callstack 0
   552   000004                     I2C_2_Master_Read@tmp:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x3
   556   000004                     	ds	1
   557   000005                     ??_color_click_init:
   558   000005                     ??___xxtofl:
   559   000005                     ?_color_read_Red:
   560                           	callstack 0
   561   000005                     ?_color_read_Green:
   562                           	callstack 0
   563   000005                     ?_color_read_Blue:
   564                           	callstack 0
   565   000005                     ?_color_read_Clear:
   566                           	callstack 0
   567   000005                     colour_to_key@key:
   568                           	callstack 0
   569   000005                     ___awdiv@counter:
   570                           	callstack 0
   571   000005                     ___awmod@counter:
   572                           	callstack 0
   573   000005                     ___lwmod@counter:
   574                           	callstack 0
   575   000005                     max_RGB@max_val:
   576                           	callstack 0
   577   000005                     min_RGB@min_val:
   578                           	callstack 0
   579   000005                     ___wmul@product:
   580                           	callstack 0
   581   000005                     ___lmul@multiplicand:
   582                           	callstack 0
   583   000005                     ___lldiv@divisor:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x4
   587   000005                     	ds	1
   588   000006                     ___awdiv@sign:
   589                           	callstack 0
   590   000006                     ___awmod@sign:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x5
   594   000006                     	ds	1
   595   000007                     ??_color_read_Red:
   596   000007                     ??_color_read_Green:
   597   000007                     ??_color_read_Blue:
   598   000007                     ??_color_read_Clear:
   599   000007                     ?_abs:
   600                           	callstack 0
   601   000007                     ?___lwdiv:
   602                           	callstack 0
   603   000007                     ___awdiv@quotient:
   604                           	callstack 0
   605   000007                     ___lwdiv@dividend:
   606                           	callstack 0
   607   000007                     abs@a:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x6
   611   000007                     	ds	2
   612   000009                     ??_abs:
   613   000009                     ___xxtofl@sign:
   614                           	callstack 0
   615   000009                     ___lwdiv@divisor:
   616                           	callstack 0
   617   000009                     ___lmul@product:
   618                           	callstack 0
   619   000009                     ___lldiv@quotient:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     ___xxtofl@exp:
   625                           	callstack 0
   626   00000A                     color_read_Red@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Green@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Blue@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Clear@tmp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636   00000A                     	ds	1
   637   00000B                     ___lwdiv@quotient:
   638                           	callstack 0
   639   00000B                     ___xxtofl@arg:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xA
   643   00000B                     	ds	1
   644   00000C                     getRGBCval@p:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0xB
   648   00000C                     	ds	1
   649   00000D                     wait_for_wall@p:
   650                           	callstack 0
   651   00000D                     ___lldiv@counter:
   652                           	callstack 0
   653   00000D                     ___lwdiv@counter:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0xC
   657   00000D                     	ds	1
   658   00000E                     ?_vfpfcnvrt:
   659                           	callstack 0
   660   00000E                     average_RGBC@p:
   661                           	callstack 0
   662   00000E                     wait_for_wall@loss:
   663                           	callstack 0
   664   00000E                     convert_HSV@p1:
   665                           	callstack 0
   666   00000E                     setMotorPWM@m:
   667                           	callstack 0
   668   00000E                     vfpfcnvrt@fp:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xD
   672   00000E                     	ds	1
   673   00000F                     ??_average_RGBC:
   674   00000F                     ??_setMotorPWM:
   675   00000F                     ?___flmul:
   676                           	callstack 0
   677   00000F                     convert_HSV@p2:
   678                           	callstack 0
   679   00000F                     vfpfcnvrt@fmt:
   680                           	callstack 0
   681   00000F                     ___flmul@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0xE
   685   00000F                     	ds	1
   686   000010                     ??_convert_HSV:
   687   000010                     vfpfcnvrt@ap:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0xF
   691   000010                     	ds	1
   692   000011                     ??_vfpfcnvrt:
   693   000011                     average_RGBC@i:
   694                           	callstack 0
   695   000011                     setMotorPWM@posDuty:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x10
   699   000011                     	ds	1
   700   000012                     setMotorPWM@negDuty:
   701                           	callstack 0
   702   000012                     average_RGBC@temp_R:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x11
   706   000012                     	ds	1
   707   000013                     stop@mL:
   708                           	callstack 0
   709   000013                     vfpfcnvrt@done:
   710                           	callstack 0
   711   000013                     ___flmul@a:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x12
   715   000013                     	ds	1
   716   000014                     stop@mR:
   717                           	callstack 0
   718   000014                     vfpfcnvrt@cnt:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x13
   722   000014                     	ds	1
   723   000015                     ??_stop:
   724                           
   725                           ; 1 bytes @ 0x14
   726   000015                     	ds	1
   727   000016                     vfpfcnvrt@cp:
   728                           	callstack 0
   729   000016                     average_RGBC@temp_G:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x15
   733   000016                     	ds	1
   734   000017                     ??___flmul:
   735   000017                     vfpfcnvrt@convarg:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x16
   739   000017                     	ds	1
   740   000018                     convert_HSV@sat_scale:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x17
   744   000018                     	ds	2
   745   00001A                     convert_HSV@m:
   746                           	callstack 0
   747   00001A                     average_RGBC@temp_B:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x19
   751   00001A                     	ds	1
   752   00001B                     ___flmul@sign:
   753                           	callstack 0
   754   00001B                     vfpfcnvrt@c:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x1A
   758   00001B                     	ds	1
   759   00001C                     ?_vfprintf:
   760                           	callstack 0
   761   00001C                     vfprintf@fp:
   762                           	callstack 0
   763   00001C                     convert_HSV@sat:
   764                           	callstack 0
   765   00001C                     ___flmul@grs:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x1B
   769   00001C                     	ds	1
   770   00001D                     vfprintf@fmt:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x1C
   774   00001D                     	ds	1
   775   00001E                     vfprintf@ap:
   776                           	callstack 0
   777   00001E                     convert_HSV@hue:
   778                           	callstack 0
   779   00001E                     average_RGBC@temp_C:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x1D
   783   00001E                     	ds	1
   784   00001F                     vfprintf@cfmt:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x1E
   788   00001F                     	ds	1
   789   000020                     ?_sprintf:
   790                           	callstack 0
   791   000020                     ___flmul@aexp:
   792                           	callstack 0
   793   000020                     sprintf@s:
   794                           	callstack 0
   795   000020                     convert_HSV@temp_614:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x1F
   799   000020                     	ds	1
   800   000021                     ___flmul@bexp:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x20
   804   000021                     	ds	1
   805   000022                     sprintf@fmt:
   806                           	callstack 0
   807   000022                     ___flmul@prod:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x21
   811   000022                     	ds	2
   812   000024                     convert_HSV@temp:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x23
   816   000024                     	ds	2
   817   000026                     ___flmul@temp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x25
   821   000026                     	ds	2
   822   000028                     ?___fltol:
   823                           	callstack 0
   824   000028                     convert_HSV@temp_610:
   825                           	callstack 0
   826   000028                     ___fltol@f1:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x27
   830   000028                     	ds	3
   831   00002B                     sprintf@ret:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x2A
   835   00002B                     	ds	1
   836   00002C                     ??___fltol:
   837   00002C                     convert_HSV@temp_611:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x2B
   841   00002C                     	ds	1
   842   00002D                     sprintf@ap:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x2C
   846   00002D                     	ds	1
   847   00002E                     sprintf@f:
   848                           	callstack 0
   849                           
   850                           ; 12 bytes @ 0x2D
   851   00002E                     	ds	2
   852   000030                     ___fltol@sign1:
   853                           	callstack 0
   854   000030                     convert_HSV@temp_612:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x2F
   858   000030                     	ds	1
   859   000031                     ___fltol@exp1:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x30
   863   000031                     	ds	1
   864   000032                     scale_RGB@p:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x31
   868   000032                     	ds	1
   869   000033                     ??_scale_RGB:
   870                           
   871                           ; 1 bytes @ 0x32
   872   000033                     	ds	1
   873   000034                     convert_HSV@temp_613:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x33
   877   000034                     	ds	4
   878   000038                     convert_HSV@temp_609:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x37
   882   000038                     	ds	2
   883   00003A                     sendRGBCvalSerial4@col_val:
   884                           	callstack 0
   885   00003A                     sendHSVvalSerial4@col_val:
   886                           	callstack 0
   887   00003A                     sendArrayCharSerial4@arr:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x39
   891   00003A                     	ds	1
   892   00003B                     sendHSVvalSerial4@tempStr:
   893                           	callstack 0
   894   00003B                     sendRGBCvalSerial4@tempStr:
   895                           	callstack 0
   896                           
   897                           ; 26 bytes @ 0x3A
   898   00003B                     	ds	1
   899   00003C                     ??_sendArrayCharSerial4:
   900   00003C                     convert_HSV@hue_scale:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x3B
   904   00003C                     	ds	2
   905   00003E                     convert_HSV@M:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x3D
   909   00003E                     	ds	2
   910   000040                     convert_HSV@C:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x3F
   914   000040                     	ds	21
   915   000055                     forward_navigation@mL:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x54
   919   000055                     	ds	1
   920   000056                     forward_navigation@mR:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x55
   924   000056                     	ds	1
   925   000057                     forward_navigation@p1:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x56
   929   000057                     	ds	1
   930   000058                     forward_navigation@p2:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x57
   934   000058                     	ds	1
   935   000059                     ??_forward_navigation:
   936                           
   937                           ; 1 bytes @ 0x58
   938   000059                     	ds	2
   939   00005B                     forward_navigation@timerH:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x5A
   943   00005B                     	ds	1
   944   00005C                     forward_navigation@timerL:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x5B
   948   00005C                     	ds	1
   949   00005D                     forward_navigation@mann:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x5C
   953   00005D                     	ds	1
   954   00005E                     ??_main:
   955                           
   956                           ; 1 bytes @ 0x5D
   957   00005E                     	ds	1
   958                           
   959 ;;
   960 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   961 ;;
   962 ;; *************** function _main *****************
   963 ;; Defined at:
   964 ;;		line 28 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  motorR          9   15[BANK0 ] struct DC_motor
   969 ;;  motorL          9    6[BANK0 ] struct DC_motor
   970 ;;  RGBC_colour     8   24[BANK0 ] struct RGBC_val
   971 ;;  HSV_colour      6    0[BANK0 ] struct HSV_val
   972 ;;  PWMcycle        2    0        unsigned int 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   985 ;;      Totals:         1      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;Total ram usage:       33 bytes
   987 ;; Hardware stack levels required when called: 8
   988 ;; This function calls:
   989 ;;		_Timer0_init
   990 ;;		_buggy_lights_init
   991 ;;		_color_click_init
   992 ;;		_forward_navigation
   993 ;;		_initDCmotorsPWM
   994 ;;		_initUSART4
   995 ;; This function is called by:
   996 ;;		Startup code after reset
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text0
  1001   0026C0                     __ptext0:
  1002                           	callstack 0
  1003   0026C0                     _main:
  1004                           	callstack 23
  1005   0026C0                     
  1006                           ;main.c: 29:     struct RGBC_val RGBC_colour;;main.c: 30:         RGBC_colour.R = 0;
  1007   0026C0  0E00               	movlw	0
  1008   0026C2  0100               	movlb	0	; () banked
  1009   0026C4  6FA1               	movwf	(main@RGBC_colour+1)& (0+255),b
  1010   0026C6  0E00               	movlw	0
  1011   0026C8  6FA0               	movwf	main@RGBC_colour& (0+255),b
  1012                           
  1013                           ;main.c: 31:         RGBC_colour.G = 0;
  1014   0026CA  0E00               	movlw	0
  1015   0026CC  6FA3               	movwf	(main@RGBC_colour+3)& (0+255),b
  1016   0026CE  0E00               	movlw	0
  1017   0026D0  6FA2               	movwf	(main@RGBC_colour+2)& (0+255),b
  1018                           
  1019                           ;main.c: 32:         RGBC_colour.B = 0;
  1020   0026D2  0E00               	movlw	0
  1021   0026D4  6FA5               	movwf	(main@RGBC_colour+5)& (0+255),b
  1022   0026D6  0E00               	movlw	0
  1023   0026D8  6FA4               	movwf	(main@RGBC_colour+4)& (0+255),b
  1024                           
  1025                           ;main.c: 33:         RGBC_colour.C = 0;
  1026   0026DA  0E00               	movlw	0
  1027   0026DC  6FA7               	movwf	(main@RGBC_colour+7)& (0+255),b
  1028   0026DE  0E00               	movlw	0
  1029   0026E0  6FA6               	movwf	(main@RGBC_colour+6)& (0+255),b
  1030                           
  1031                           ;main.c: 35:     struct HSV_val HSV_colour;;main.c: 36:         HSV_colour.H = 0;
  1032   0026E2  0E00               	movlw	0
  1033   0026E4  6F89               	movwf	(main@HSV_colour+1)& (0+255),b
  1034   0026E6  0E00               	movlw	0
  1035   0026E8  6F88               	movwf	main@HSV_colour& (0+255),b
  1036                           
  1037                           ;main.c: 37:         HSV_colour.S = 0;
  1038   0026EA  0E00               	movlw	0
  1039   0026EC  6F8B               	movwf	(main@HSV_colour+3)& (0+255),b
  1040   0026EE  0E00               	movlw	0
  1041   0026F0  6F8A               	movwf	(main@HSV_colour+2)& (0+255),b
  1042                           
  1043                           ;main.c: 38:         HSV_colour.V = 0;
  1044   0026F2  0E00               	movlw	0
  1045   0026F4  6F8D               	movwf	(main@HSV_colour+5)& (0+255),b
  1046   0026F6  0E00               	movlw	0
  1047   0026F8  6F8C               	movwf	(main@HSV_colour+4)& (0+255),b
  1048                           
  1049                           ;main.c: 41:     struct DC_motor motorL, motorR;;main.c: 42:         motorL.power = 0;
  1050   0026FA  0E00               	movlw	0
  1051   0026FC  6F8E               	movwf	main@motorL& (0+255),b
  1052                           
  1053                           ;main.c: 43:         motorL.direction = 1;
  1054   0026FE  0E01               	movlw	1
  1055   002700  6F8F               	movwf	(main@motorL+1)& (0+255),b
  1056                           
  1057                           ;main.c: 44:         motorL.brakemode = 1;
  1058   002702  0E01               	movlw	1
  1059   002704  6F90               	movwf	(main@motorL+2)& (0+255),b
  1060   002706                     
  1061                           ; BSR set to: 0
  1062                           ;main.c: 45:         motorL.PWMperiod = PWMcycle;
  1063   002706  0E00               	movlw	0
  1064   002708  6F92               	movwf	(main@motorL+4)& (0+255),b
  1065   00270A  0E63               	movlw	99
  1066   00270C  6F91               	movwf	(main@motorL+3)& (0+255),b
  1067   00270E                     
  1068                           ; BSR set to: 0
  1069                           ;main.c: 46:         motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1070   00270E  0EAA               	movlw	170
  1071   002710  6F93               	movwf	(main@motorL+5)& (0+255),b
  1072   002712  0E0F               	movlw	15
  1073   002714  6F94               	movwf	(main@motorL+6)& (0+255),b
  1074   002716                     
  1075                           ; BSR set to: 0
  1076                           ;main.c: 47:         motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1077   002716  0EA6               	movlw	166
  1078   002718  6F95               	movwf	(main@motorL+7)& (0+255),b
  1079   00271A  0E0F               	movlw	15
  1080   00271C  6F96               	movwf	(main@motorL+8)& (0+255),b
  1081                           
  1082                           ;main.c: 48:         motorR.power = 0;
  1083   00271E  0E00               	movlw	0
  1084   002720  6F97               	movwf	main@motorR& (0+255),b
  1085                           
  1086                           ;main.c: 49:         motorR.direction = 1;
  1087   002722  0E01               	movlw	1
  1088   002724  6F98               	movwf	(main@motorR+1)& (0+255),b
  1089                           
  1090                           ;main.c: 50:         motorR.brakemode = 1;
  1091   002726  0E01               	movlw	1
  1092   002728  6F99               	movwf	(main@motorR+2)& (0+255),b
  1093   00272A                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 51:         motorR.PWMperiod = PWMcycle;
  1096   00272A  0E00               	movlw	0
  1097   00272C  6F9B               	movwf	(main@motorR+4)& (0+255),b
  1098   00272E  0E63               	movlw	99
  1099   002730  6F9A               	movwf	(main@motorR+3)& (0+255),b
  1100   002732                     
  1101                           ; BSR set to: 0
  1102                           ;main.c: 52:         motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1103   002732  0E25               	movlw	37
  1104   002734  6F9C               	movwf	(main@motorR+5)& (0+255),b
  1105   002736  0E0F               	movlw	15
  1106   002738  6F9D               	movwf	(main@motorR+6)& (0+255),b
  1107   00273A                     
  1108                           ; BSR set to: 0
  1109                           ;main.c: 53:         motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1110   00273A  0E21               	movlw	33
  1111   00273C  6F9E               	movwf	(main@motorR+7)& (0+255),b
  1112   00273E  0E0F               	movlw	15
  1113   002740  6F9F               	movwf	(main@motorR+8)& (0+255),b
  1114   002742                     
  1115                           ; BSR set to: 0
  1116                           ;main.c: 56:     initDCmotorsPWM(PWMcycle);
  1117   002742  0E00               	movlw	0
  1118   002744  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1119   002746  0E63               	movlw	99
  1120   002748  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1121   00274A  ECA2  F016         	call	_initDCmotorsPWM	;wreg free
  1122                           
  1123                           ;main.c: 57:     buggy_lights_init();
  1124   00274E  ECE0  F01A         	call	_buggy_lights_init	;wreg free
  1125   002752                     
  1126                           ;main.c: 58:     color_click_init();
  1127   002752  ECC6  F01A         	call	_color_click_init	;wreg free
  1128   002756                     
  1129                           ;main.c: 59:     initUSART4();
  1130   002756  EC57  F01B         	call	_initUSART4	;wreg free
  1131   00275A                     
  1132                           ;main.c: 60:     Timer0_init();
  1133   00275A  EC20  F01B         	call	_Timer0_init	;wreg free
  1134   00275E                     
  1135                           ;main.c: 64:         TRISDbits.TRISD7 = 0;
  1136   00275E  9E84               	bcf	132,7,c	;volatile
  1137   002760                     
  1138                           ;main.c: 65:         TRISHbits.TRISH3 = 0;
  1139   002760  9688               	bcf	136,3,c	;volatile
  1140   002762                     
  1141                           ;main.c: 67:         LATDbits.LATD7 = 0;
  1142   002762  9E7C               	bcf	124,7,c	;volatile
  1143   002764                     
  1144                           ;main.c: 68:         LATHbits.LATH3 = 0;
  1145   002764  9680               	bcf	128,3,c	;volatile
  1146   002766                     
  1147                           ;main.c: 72:         TRISFbits.TRISF2 = 1;
  1148   002766  8486               	bsf	134,2,c	;volatile
  1149   002768                     
  1150                           ;main.c: 73:         TRISFbits.TRISF3 = 1;
  1151   002768  8686               	bsf	134,3,c	;volatile
  1152   00276A                     
  1153                           ;main.c: 75:         ANSELFbits.ANSELF2 = 0;
  1154   00276A  010E               	movlb	14	; () banked
  1155   00276C  95B4               	bcf	180,2,b	;volatile
  1156   00276E                     
  1157                           ; BSR set to: 14
  1158                           ;main.c: 76:         ANSELFbits.ANSELF3 = 0;
  1159   00276E  97B4               	bcf	180,3,b	;volatile
  1160                           
  1161                           ;main.c: 81:     LATDbits.LATD7 = !LATDbits.LATD7;
  1162   002770  AE7C               	btfss	124,7,c	;volatile
  1163   002772  EFBD  F013         	goto	u3871
  1164   002776  EFC1  F013         	goto	u3870
  1165   00277A                     u3871:
  1166   00277A  6A5E               	clrf	??_main^0,c
  1167   00277C  2A5E               	incf	??_main^0,f,c
  1168   00277E  EFC2  F013         	goto	u3888
  1169   002782                     u3870:
  1170   002782  6A5E               	clrf	??_main^0,c
  1171   002784                     u3888:
  1172   002784  325E               	rrcf	??_main^0,f,c
  1173   002786  325E               	rrcf	??_main^0,f,c
  1174   002788  507C               	movf	124,w,c	;volatile
  1175   00278A  185E               	xorwf	??_main^0,w,c
  1176   00278C  0B7F               	andlw	-129
  1177   00278E  185E               	xorwf	??_main^0,w,c
  1178   002790  6E7C               	movwf	124,c	;volatile
  1179                           
  1180                           ;main.c: 82:     LATHbits.LATH3 = !LATHbits.LATH3;
  1181   002792  A680               	btfss	128,3,c	;volatile
  1182   002794  EFCE  F013         	goto	u3891
  1183   002798  EFD2  F013         	goto	u3890
  1184   00279C                     u3891:
  1185   00279C  6A5E               	clrf	??_main^0,c
  1186   00279E  2A5E               	incf	??_main^0,f,c
  1187   0027A0  EFD3  F013         	goto	u3908
  1188   0027A4                     u3890:
  1189   0027A4  6A5E               	clrf	??_main^0,c
  1190   0027A6                     u3908:
  1191   0027A6  465E               	rlncf	??_main^0,f,c
  1192   0027A8  465E               	rlncf	??_main^0,f,c
  1193   0027AA  465E               	rlncf	??_main^0,f,c
  1194   0027AC  5080               	movf	128,w,c	;volatile
  1195   0027AE  185E               	xorwf	??_main^0,w,c
  1196   0027B0  0BF7               	andlw	-9
  1197   0027B2  185E               	xorwf	??_main^0,w,c
  1198   0027B4  6E80               	movwf	128,c	;volatile
  1199   0027B6                     
  1200                           ;main.c: 84:     forward_navigation(&motorL, &motorR, &HSV_colour, &RGBC_colour);
  1201   0027B6  0E8E               	movlw	low main@motorL
  1202   0027B8  6E55               	movwf	forward_navigation@mL^0,c
  1203   0027BA  0E97               	movlw	low main@motorR
  1204   0027BC  6E56               	movwf	forward_navigation@mR^0,c
  1205   0027BE  0E88               	movlw	low main@HSV_colour
  1206   0027C0  6E57               	movwf	forward_navigation@p1^0,c
  1207   0027C2  0EA0               	movlw	low main@RGBC_colour
  1208   0027C4  6E58               	movwf	forward_navigation@p2^0,c
  1209   0027C6  ECC2  F012         	call	_forward_navigation	;wreg free
  1210   0027CA  EF21  F000         	goto	start
  1211   0027CE                     __end_of_main:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _initUSART4 *****************
  1215 ;; Defined at:
  1216 ;;		line 8 in file "serial.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text1
  1245   0036AE                     __ptext1:
  1246                           	callstack 0
  1247   0036AE                     _initUSART4:
  1248                           	callstack 29
  1249   0036AE                     
  1250                           ;serial.c: 9:     RC0PPS = 0x12;
  1251   0036AE  0E12               	movlw	18
  1252   0036B0  010E               	movlb	14	; () banked
  1253   0036B2  6F62               	movwf	98,b	;volatile
  1254                           
  1255                           ;serial.c: 10:     RX4PPS = 0x11;
  1256   0036B4  0E11               	movlw	17
  1257   0036B6  6F15               	movwf	21,b	;volatile
  1258   0036B8                     
  1259                           ; BSR set to: 14
  1260                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1261   0036B8  97E9               	bcf	233,3,b	;volatile
  1262   0036BA                     
  1263                           ; BSR set to: 14
  1264                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1265   0036BA  95E8               	bcf	232,2,b	;volatile
  1266                           
  1267                           ;serial.c: 14:     SP4BRGL = 51;
  1268   0036BC  0E33               	movlw	51
  1269   0036BE  6FE5               	movwf	229,b	;volatile
  1270                           
  1271                           ;serial.c: 15:     SP4BRGH = 0;
  1272   0036C0  0E00               	movlw	0
  1273   0036C2  6FE6               	movwf	230,b	;volatile
  1274   0036C4                     
  1275                           ; BSR set to: 14
  1276                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1277   0036C4  89E7               	bsf	231,4,b	;volatile
  1278   0036C6                     
  1279                           ; BSR set to: 14
  1280                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1281   0036C6  8BE8               	bsf	232,5,b	;volatile
  1282   0036C8                     
  1283                           ; BSR set to: 14
  1284                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1285   0036C8  8FE7               	bsf	231,7,b	;volatile
  1286   0036CA                     
  1287                           ; BSR set to: 14
  1288   0036CA  0012               	return		;funcret
  1289   0036CC                     __end_of_initUSART4:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _initDCmotorsPWM *****************
  1293 ;; Defined at:
  1294 ;;		line 7 in file "dc_motor.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1312 ;;Total ram usage:        2 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text2
  1323   002D44                     __ptext2:
  1324                           	callstack 0
  1325   002D44                     _initDCmotorsPWM:
  1326                           	callstack 29
  1327   002D44                     
  1328                           ;dc_motor.c: 9:     TRISEbits.TRISE2 = 0;
  1329   002D44  9485               	bcf	133,2,c	;volatile
  1330                           
  1331                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1332   002D46  9885               	bcf	133,4,c	;volatile
  1333                           
  1334                           ;dc_motor.c: 11:     TRISCbits.TRISC7 = 0;
  1335   002D48  9E83               	bcf	131,7,c	;volatile
  1336                           
  1337                           ;dc_motor.c: 12:     TRISGbits.TRISG6 = 0;
  1338   002D4A  9C87               	bcf	135,6,c	;volatile
  1339                           
  1340                           ;dc_motor.c: 13:     LATEbits.LATE2 = 0;
  1341   002D4C  947D               	bcf	125,2,c	;volatile
  1342                           
  1343                           ;dc_motor.c: 14:     LATEbits.LATE4 = 0;
  1344   002D4E  987D               	bcf	125,4,c	;volatile
  1345                           
  1346                           ;dc_motor.c: 15:     LATCbits.LATC7 = 0;
  1347   002D50  9E7B               	bcf	123,7,c	;volatile
  1348                           
  1349                           ;dc_motor.c: 16:     LATGbits.LATG6 = 0;
  1350   002D52  9C7F               	bcf	127,6,c	;volatile
  1351   002D54                     
  1352                           ;dc_motor.c: 19:     RE2PPS=0x05;
  1353   002D54  0E05               	movlw	5
  1354   002D56  010E               	movlb	14	; () banked
  1355   002D58  6F74               	movwf	116,b	;volatile
  1356                           
  1357                           ;dc_motor.c: 20:     RE4PPS=0x06;
  1358   002D5A  0E06               	movlw	6
  1359   002D5C  6F76               	movwf	118,b	;volatile
  1360                           
  1361                           ;dc_motor.c: 21:     RC7PPS=0x07;
  1362   002D5E  0E07               	movlw	7
  1363   002D60  6F69               	movwf	105,b	;volatile
  1364                           
  1365                           ;dc_motor.c: 22:     RG6PPS=0x08;
  1366   002D62  0E08               	movlw	8
  1367   002D64  6F88               	movwf	136,b	;volatile
  1368                           
  1369                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b100;
  1370   002D66  50BD               	movf	189,w,c	;volatile
  1371   002D68  0B8F               	andlw	-113
  1372   002D6A  0940               	iorlw	64
  1373   002D6C  6EBD               	movwf	189,c	;volatile
  1374                           
  1375                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1376   002D6E  0EE0               	movlw	-32
  1377   002D70  16BE               	andwf	190,f,c	;volatile
  1378                           
  1379                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1380   002D72  50BF               	movf	191,w,c	;volatile
  1381   002D74  0BF0               	andlw	-16
  1382   002D76  0901               	iorlw	1
  1383   002D78  6EBF               	movwf	191,c	;volatile
  1384   002D7A                     
  1385                           ; BSR set to: 14
  1386                           ;dc_motor.c: 31:     T2PR=(unsigned char)PWMperiod;
  1387   002D7A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1388   002D7E                     
  1389                           ; BSR set to: 14
  1390                           ;dc_motor.c: 32:     T2CONbits.ON=1;
  1391   002D7E  8EBD               	bsf	189,7,c	;volatile
  1392                           
  1393                           ;dc_motor.c: 36:         CCPR1H=0;
  1394   002D80  0E00               	movlw	0
  1395   002D82  6EAA               	movwf	170,c	;volatile
  1396                           
  1397                           ;dc_motor.c: 37:         CCPR2H=0;
  1398   002D84  0E00               	movlw	0
  1399   002D86  6EA6               	movwf	166,c	;volatile
  1400                           
  1401                           ;dc_motor.c: 38:         CCPR3H=0;
  1402   002D88  0E00               	movlw	0
  1403   002D8A  010F               	movlb	15	; () banked
  1404   002D8C  6F25               	movwf	37,b	;volatile
  1405                           
  1406                           ;dc_motor.c: 39:         CCPR4H=0;
  1407   002D8E  0E00               	movlw	0
  1408   002D90  6F21               	movwf	33,b	;volatile
  1409                           
  1410                           ;dc_motor.c: 42:         CCPTMRS0bits.C1TSEL=0;
  1411   002D92  0EFC               	movlw	-4
  1412   002D94  16AD               	andwf	173,f,c	;volatile
  1413                           
  1414                           ;dc_motor.c: 43:         CCPTMRS0bits.C2TSEL=0;
  1415   002D96  0EF3               	movlw	-13
  1416   002D98  16AD               	andwf	173,f,c	;volatile
  1417                           
  1418                           ;dc_motor.c: 44:         CCPTMRS0bits.C3TSEL=0;
  1419   002D9A  0ECF               	movlw	-49
  1420   002D9C  16AD               	andwf	173,f,c	;volatile
  1421                           
  1422                           ;dc_motor.c: 45:         CCPTMRS0bits.C4TSEL=0;
  1423   002D9E  0E3F               	movlw	-193
  1424   002DA0  16AD               	andwf	173,f,c	;volatile
  1425   002DA2                     
  1426                           ; BSR set to: 15
  1427                           ;dc_motor.c: 48:         CCP1CONbits.FMT=1;
  1428   002DA2  88AB               	bsf	171,4,c	;volatile
  1429                           
  1430                           ;dc_motor.c: 49:         CCP1CONbits.CCP1MODE=0b1100;
  1431   002DA4  50AB               	movf	171,w,c	;volatile
  1432   002DA6  0BF0               	andlw	-16
  1433   002DA8  090C               	iorlw	12
  1434   002DAA  6EAB               	movwf	171,c	;volatile
  1435   002DAC                     
  1436                           ; BSR set to: 15
  1437                           ;dc_motor.c: 50:         CCP1CONbits.EN=1;
  1438   002DAC  8EAB               	bsf	171,7,c	;volatile
  1439   002DAE                     
  1440                           ; BSR set to: 15
  1441                           ;dc_motor.c: 52:         CCP2CONbits.FMT=1;
  1442   002DAE  88A7               	bsf	167,4,c	;volatile
  1443                           
  1444                           ;dc_motor.c: 53:         CCP2CONbits.CCP2MODE=0b1100;
  1445   002DB0  50A7               	movf	167,w,c	;volatile
  1446   002DB2  0BF0               	andlw	-16
  1447   002DB4  090C               	iorlw	12
  1448   002DB6  6EA7               	movwf	167,c	;volatile
  1449   002DB8                     
  1450                           ; BSR set to: 15
  1451                           ;dc_motor.c: 54:         CCP2CONbits.EN=1;
  1452   002DB8  8EA7               	bsf	167,7,c	;volatile
  1453   002DBA                     
  1454                           ; BSR set to: 15
  1455                           ;dc_motor.c: 56:         CCP3CONbits.FMT=1;
  1456   002DBA  8926               	bsf	38,4,b	;volatile
  1457                           
  1458                           ;dc_motor.c: 57:         CCP3CONbits.CCP3MODE=0b1100;
  1459   002DBC  5126               	movf	38,w,b	;volatile
  1460   002DBE  0BF0               	andlw	-16
  1461   002DC0  090C               	iorlw	12
  1462   002DC2  6F26               	movwf	38,b	;volatile
  1463   002DC4                     
  1464                           ; BSR set to: 15
  1465                           ;dc_motor.c: 58:         CCP3CONbits.EN=1;
  1466   002DC4  8F26               	bsf	38,7,b	;volatile
  1467   002DC6                     
  1468                           ; BSR set to: 15
  1469                           ;dc_motor.c: 60:         CCP4CONbits.FMT=1;
  1470   002DC6  8922               	bsf	34,4,b	;volatile
  1471                           
  1472                           ;dc_motor.c: 61:         CCP4CONbits.CCP4MODE=0b1100;
  1473   002DC8  5122               	movf	34,w,b	;volatile
  1474   002DCA  0BF0               	andlw	-16
  1475   002DCC  090C               	iorlw	12
  1476   002DCE  6F22               	movwf	34,b	;volatile
  1477   002DD0                     
  1478                           ; BSR set to: 15
  1479                           ;dc_motor.c: 62:         CCP4CONbits.EN=1;
  1480   002DD0  8F22               	bsf	34,7,b	;volatile
  1481   002DD2                     
  1482                           ; BSR set to: 15
  1483   002DD2  0012               	return		;funcret
  1484   002DD4                     __end_of_initDCmotorsPWM:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _forward_navigation *****************
  1488 ;; Defined at:
  1489 ;;		line 116 in file "timers.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  mL              1   84[COMRAM] PTR struct DC_motor
  1492 ;;		 -> main@motorL(9), 
  1493 ;;  mR              1   85[COMRAM] PTR struct DC_motor
  1494 ;;		 -> main@motorR(9), 
  1495 ;;  p1              1   86[COMRAM] PTR struct HSV_val
  1496 ;;		 -> main@HSV_colour(6), 
  1497 ;;  p2              1   87[COMRAM] PTR struct RGBC_val
  1498 ;;		 -> main@RGBC_colour(8), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  mann            1   92[COMRAM] unsigned char 
  1501 ;;  timerL          1   91[COMRAM] unsigned char 
  1502 ;;  timerH          1   90[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:        9 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 7
  1519 ;; This function calls:
  1520 ;;		_average_RGBC
  1521 ;;		_colour_to_key
  1522 ;;		_convert_HSV
  1523 ;;		_read_timer
  1524 ;;		_reset_timer
  1525 ;;		_scale_RGB
  1526 ;;		_sendArrayCharSerial4
  1527 ;;		_sendHSVvalSerial4
  1528 ;;		_sendRGBCvalSerial4
  1529 ;;		_start_timer
  1530 ;;		_stop
  1531 ;;		_stop_timer
  1532 ;;		_toggle_tricolour_LED
  1533 ;;		_wait_for_wall
  1534 ;;		_write_trail
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text3
  1541   002584                     __ptext3:
  1542                           	callstack 0
  1543   002584                     _forward_navigation:
  1544                           	callstack 23
  1545   002584                     
  1546                           ;timers.c: 116: void forward_navigation(DC_motor *mL, DC_motor *mR, HSV_val *p1, RGBC_va
      +                          l *p2);timers.c: 117: {;timers.c: 118:     while (!returning) {
  1547   002584  EF56  F013         	goto	l4487
  1548   002588                     l4435:
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;timers.c: 119:         unsigned char timerH = 0;
  1552   002588  0E00               	movlw	0
  1553   00258A  6E5B               	movwf	forward_navigation@timerH^0,c
  1554                           
  1555                           ;timers.c: 120:         unsigned char timerL = 0;
  1556   00258C  0E00               	movlw	0
  1557   00258E  6E5C               	movwf	forward_navigation@timerL^0,c
  1558   002590                     
  1559                           ; BSR set to: 1
  1560                           ;timers.c: 123:         reset_timer();
  1561   002590  EC91  F01B         	call	_reset_timer	;wreg free
  1562                           
  1563                           ;timers.c: 124:         start_timer();
  1564   002594  ECAE  F01B         	call	_start_timer	;wreg free
  1565   002598                     
  1566                           ;timers.c: 127:         wait_for_wall(p2, lost_flag);
  1567   002598  C058  F00D         	movff	forward_navigation@p2,wait_for_wall@p
  1568   00259C  C1A5  F00E         	movff	_lost_flag,wait_for_wall@loss
  1569   0025A0  EC2B  F01A         	call	_wait_for_wall	;wreg free
  1570   0025A4                     
  1571                           ;timers.c: 129:         read_timer(&timerH, &timerL);
  1572   0025A4  0E5B               	movlw	low forward_navigation@timerH
  1573   0025A6  6E01               	movwf	read_timer@tH^0,c
  1574   0025A8  0E5C               	movlw	low forward_navigation@timerL
  1575   0025AA  6E02               	movwf	read_timer@tL^0,c
  1576   0025AC  EC80  F01B         	call	_read_timer	;wreg free
  1577                           
  1578                           ;timers.c: 130:         stop_timer();
  1579   0025B0  ECAC  F01B         	call	_stop_timer	;wreg free
  1580   0025B4                     
  1581                           ;timers.c: 131:         stop(mL, mR);
  1582   0025B4  C055  F013         	movff	forward_navigation@mL,stop@mL
  1583   0025B8  C056  F014         	movff	forward_navigation@mR,stop@mR
  1584   0025BC  ECEA  F016         	call	_stop	;wreg free
  1585   0025C0                     
  1586                           ;timers.c: 133:         toggle_tricolour_LED();
  1587   0025C0  ECD5  F014         	call	_toggle_tricolour_LED	;wreg free
  1588   0025C4                     
  1589                           ;timers.c: 134:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1590   0025C4  0E11               	movlw	17
  1591   0025C6  6E5A               	movwf	(??_forward_navigation+1)^0,c
  1592   0025C8  0E3C               	movlw	60
  1593   0025CA  6E59               	movwf	??_forward_navigation^0,c
  1594   0025CC  0ECB               	movlw	203
  1595   0025CE                     u3917:
  1596   0025CE  2EE8               	decfsz	wreg,f,c
  1597   0025D0  D7FE               	bra	u3917
  1598   0025D2  2E59               	decfsz	??_forward_navigation^0,f,c
  1599   0025D4  D7FC               	bra	u3917
  1600   0025D6  2E5A               	decfsz	(??_forward_navigation+1)^0,f,c
  1601   0025D8  D7FA               	bra	u3917
  1602   0025DA  0000               	nop	
  1603   0025DC                     
  1604                           ;timers.c: 136:         average_RGBC(p2);
  1605   0025DC  C058  F00E         	movff	forward_navigation@p2,average_RGBC@p
  1606   0025E0  EC40  F010         	call	_average_RGBC	;wreg free
  1607   0025E4                     
  1608                           ;timers.c: 137:         scale_RGB(p2);
  1609   0025E4  C058  F032         	movff	forward_navigation@p2,scale_RGB@p
  1610   0025E8  EC6A  F014         	call	_scale_RGB	;wreg free
  1611   0025EC                     
  1612                           ;timers.c: 139:         convert_HSV(p1, p2);
  1613   0025EC  C057  F00E         	movff	forward_navigation@p1,convert_HSV@p1
  1614   0025F0  C058  F00F         	movff	forward_navigation@p2,convert_HSV@p2
  1615   0025F4  EC0D  F007         	call	_convert_HSV	;wreg free
  1616   0025F8                     
  1617                           ;timers.c: 140:         mann = colour_to_key(p1, p2);
  1618   0025F8  C057  F001         	movff	forward_navigation@p1,colour_to_key@p1
  1619   0025FC  C058  F002         	movff	forward_navigation@p2,colour_to_key@p2
  1620   002600  EC73  F00A         	call	_colour_to_key	;wreg free
  1621   002604  6E5D               	movwf	forward_navigation@mann^0,c
  1622   002606                     
  1623                           ;timers.c: 142:         toggle_tricolour_LED();
  1624   002606  ECD5  F014         	call	_toggle_tricolour_LED	;wreg free
  1625   00260A                     
  1626                           ;timers.c: 143:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1627   00260A  0E11               	movlw	17
  1628   00260C  6E5A               	movwf	(??_forward_navigation+1)^0,c
  1629   00260E  0E3C               	movlw	60
  1630   002610  6E59               	movwf	??_forward_navigation^0,c
  1631   002612  0ECB               	movlw	203
  1632   002614                     u3927:
  1633   002614  2EE8               	decfsz	wreg,f,c
  1634   002616  D7FE               	bra	u3927
  1635   002618  2E59               	decfsz	??_forward_navigation^0,f,c
  1636   00261A  D7FC               	bra	u3927
  1637   00261C  2E5A               	decfsz	(??_forward_navigation+1)^0,f,c
  1638   00261E  D7FA               	bra	u3927
  1639   002620  0000               	nop	
  1640   002622                     
  1641                           ;timers.c: 152:         if (lost_flag) {
  1642   002622  0101               	movlb	1	; () banked
  1643   002624  51A5               	movf	_lost_flag& (0+255),w,b
  1644   002626  B4D8               	btfsc	status,2,c
  1645   002628  EF18  F013         	goto	u3831
  1646   00262C  EF1A  F013         	goto	u3830
  1647   002630                     u3831:
  1648   002630  EF1E  F013         	goto	l4467
  1649   002634                     u3830:
  1650   002634                     
  1651                           ; BSR set to: 1
  1652                           ;timers.c: 153:             timerH = 0b11111111;
  1653   002634  685B               	setf	forward_navigation@timerH^0,c
  1654                           
  1655                           ;timers.c: 154:             timerL = 0b11111111;
  1656   002636  685C               	setf	forward_navigation@timerL^0,c
  1657   002638                     
  1658                           ; BSR set to: 1
  1659                           ;timers.c: 155:             mann = 8;
  1660   002638  0E08               	movlw	8
  1661   00263A  6E5D               	movwf	forward_navigation@mann^0,c
  1662   00263C                     l4467:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;timers.c: 158:         if (manoeuvre_count == 19) {
  1666   00263C  0E13               	movlw	19
  1667   00263E  19A4               	xorwf	_manoeuvre_count& (0+255),w,b
  1668   002640  A4D8               	btfss	status,2,c
  1669   002642  EF25  F013         	goto	u3841
  1670   002646  EF27  F013         	goto	u3840
  1671   00264A                     u3841:
  1672   00264A  EF29  F013         	goto	l4471
  1673   00264E                     u3840:
  1674   00264E                     
  1675                           ; BSR set to: 1
  1676                           ;timers.c: 159:             mann = 8;
  1677   00264E  0E08               	movlw	8
  1678   002650  6E5D               	movwf	forward_navigation@mann^0,c
  1679   002652                     l4471:
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;timers.c: 162:         write_trail(timerH, timerL, mann);
  1683   002652  C05C  F001         	movff	forward_navigation@timerL,write_trail@tL
  1684   002656  C05D  F002         	movff	forward_navigation@mann,write_trail@man
  1685   00265A  505B               	movf	forward_navigation@timerH^0,w,c
  1686   00265C  EC8F  F01A         	call	_write_trail
  1687   002660                     
  1688                           ;timers.c: 165:         if (mann == 8) {
  1689   002660  0E08               	movlw	8
  1690   002662  185D               	xorwf	forward_navigation@mann^0,w,c
  1691   002664  A4D8               	btfss	status,2,c
  1692   002666  EF37  F013         	goto	u3851
  1693   00266A  EF39  F013         	goto	u3850
  1694   00266E                     u3851:
  1695   00266E  EF3C  F013         	goto	l4477
  1696   002672                     u3850:
  1697   002672                     
  1698                           ;timers.c: 166:             returning = 1;
  1699   002672  0E01               	movlw	1
  1700   002674  0101               	movlb	1	; () banked
  1701   002676  6FA6               	movwf	_returning& (0+255),b
  1702   002678                     l4477:
  1703                           
  1704                           ;timers.c: 169:         sendRGBCvalSerial4(p2);
  1705   002678  C058  F03A         	movff	forward_navigation@p2,sendRGBCvalSerial4@col_val
  1706   00267C  ECBA  F018         	call	_sendRGBCvalSerial4	;wreg free
  1707   002680                     
  1708                           ;timers.c: 170:         sendHSVvalSerial4(p1);
  1709   002680  C057  F03A         	movff	forward_navigation@p1,sendHSVvalSerial4@col_val
  1710   002684  ECDF  F019         	call	_sendHSVvalSerial4	;wreg free
  1711   002688                     
  1712                           ;timers.c: 171:         sendArrayCharSerial4(trail_timer_high);
  1713   002688  0ECF               	movlw	low _trail_timer_high
  1714   00268A  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1715   00268C  0E01               	movlw	high _trail_timer_high
  1716   00268E  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1717   002690  ECAD  F017         	call	_sendArrayCharSerial4	;wreg free
  1718   002694                     
  1719                           ;timers.c: 172:         sendArrayCharSerial4(trail_timer_low);
  1720   002694  0EBB               	movlw	low _trail_timer_low
  1721   002696  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1722   002698  0E01               	movlw	high _trail_timer_low
  1723   00269A  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1724   00269C  ECAD  F017         	call	_sendArrayCharSerial4	;wreg free
  1725   0026A0                     
  1726                           ;timers.c: 173:         sendArrayCharSerial4(trail_manoeuvre);
  1727   0026A0  0EA7               	movlw	low _trail_manoeuvre
  1728   0026A2  6E3A               	movwf	sendArrayCharSerial4@arr^0,c
  1729   0026A4  0E01               	movlw	high _trail_manoeuvre
  1730   0026A6  6E3B               	movwf	(sendArrayCharSerial4@arr+1)^0,c
  1731   0026A8  ECAD  F017         	call	_sendArrayCharSerial4	;wreg free
  1732   0026AC                     l4487:
  1733                           
  1734                           ;timers.c: 118:     while (!returning) {
  1735   0026AC  0101               	movlb	1	; () banked
  1736   0026AE  51A6               	movf	_returning& (0+255),w,b
  1737   0026B0  B4D8               	btfsc	status,2,c
  1738   0026B2  EF5D  F013         	goto	u3861
  1739   0026B6  EF5F  F013         	goto	u3860
  1740   0026BA                     u3861:
  1741   0026BA  EFC4  F012         	goto	l4435
  1742   0026BE                     u3860:
  1743   0026BE                     
  1744                           ; BSR set to: 1
  1745   0026BE  0012               	return		;funcret
  1746   0026C0                     __end_of_forward_navigation:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _write_trail *****************
  1750 ;; Defined at:
  1751 ;;		line 100 in file "timers.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  tH              1    wreg     unsigned char 
  1754 ;;  tL              1    0[COMRAM] unsigned char 
  1755 ;;  man             1    1[COMRAM] unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  tH              1    2[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;Total ram usage:        3 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_forward_navigation
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text4
  1782   00351E                     __ptext4:
  1783                           	callstack 0
  1784   00351E                     _write_trail:
  1785                           	callstack 28
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;incstack = 0
  1789                           ;write_trail@tH stored from wreg
  1790   00351E  6E03               	movwf	write_trail@tH^0,c
  1791   003520                     
  1792                           ;timers.c: 100: void write_trail(unsigned char tH, unsigned char tL, unsigned char man);
      +                          timers.c: 101: {;timers.c: 102:     *timer_high_pointer = tH;
  1793   003520  C0AC  FFD9         	movff	_timer_high_pointer,fsr2l
  1794   003524  C0AD  FFDA         	movff	_timer_high_pointer+1,fsr2h
  1795   003528  C003  FFDF         	movff	write_trail@tH,indf2
  1796   00352C                     
  1797                           ;timers.c: 103:     *timer_low_pointer = tL;
  1798   00352C  C0AA  FFD9         	movff	_timer_low_pointer,fsr2l
  1799   003530  C0AB  FFDA         	movff	_timer_low_pointer+1,fsr2h
  1800   003534  C001  FFDF         	movff	write_trail@tL,indf2
  1801   003538                     
  1802                           ;timers.c: 104:     *manoeuvre_pointer = man;
  1803   003538  C0A8  FFD9         	movff	_manoeuvre_pointer,fsr2l
  1804   00353C  C0A9  FFDA         	movff	_manoeuvre_pointer+1,fsr2h
  1805   003540  C002  FFDF         	movff	write_trail@man,indf2
  1806   003544                     
  1807                           ;timers.c: 106:     timer_high_pointer ++;
  1808   003544  0100               	movlb	0	; () banked
  1809   003546  4BAC               	infsnz	_timer_high_pointer& (0+255),f,b
  1810   003548  2BAD               	incf	(_timer_high_pointer+1)& (0+255),f,b
  1811   00354A                     
  1812                           ; BSR set to: 0
  1813                           ;timers.c: 107:     timer_low_pointer ++;
  1814   00354A  4BAA               	infsnz	_timer_low_pointer& (0+255),f,b
  1815   00354C  2BAB               	incf	(_timer_low_pointer+1)& (0+255),f,b
  1816   00354E                     
  1817                           ; BSR set to: 0
  1818                           ;timers.c: 108:     manoeuvre_pointer ++;
  1819   00354E  4BA8               	infsnz	_manoeuvre_pointer& (0+255),f,b
  1820   003550  2BA9               	incf	(_manoeuvre_pointer+1)& (0+255),f,b
  1821   003552                     
  1822                           ; BSR set to: 0
  1823                           ;timers.c: 110:     manoeuvre_count ++;
  1824   003552  0101               	movlb	1	; () banked
  1825   003554  2BA4               	incf	_manoeuvre_count& (0+255),f,b
  1826   003556                     
  1827                           ; BSR set to: 1
  1828   003556  0012               	return		;funcret
  1829   003558                     __end_of_write_trail:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _wait_for_wall *****************
  1833 ;; Defined at:
  1834 ;;		line 162 in file "color.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  p               1   12[COMRAM] PTR struct RGBC_val
  1837 ;;		 -> main@RGBC_colour(8), 
  1838 ;;  loss            1   13[COMRAM] unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;Total ram usage:        4 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 5
  1857 ;; This function calls:
  1858 ;;		_getRGBCval
  1859 ;; This function is called by:
  1860 ;;		_forward_navigation
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text5
  1865   003456                     __ptext5:
  1866                           	callstack 0
  1867   003456                     _wait_for_wall:
  1868                           	callstack 24
  1869   003456                     
  1870                           ;color.c: 162: void wait_for_wall(struct RGBC_val *p, unsigned char loss);color.c: 163: 
      +                          {;color.c: 164:     while (!loss) {
  1871   003456  EF44  F01A         	goto	l3753
  1872   00345A                     l3747:
  1873                           
  1874                           ;color.c: 165:         getRGBCval(p);
  1875   00345A  C00D  F00C         	movff	wait_for_wall@p,getRGBCval@p
  1876   00345E  EC14  F019         	call	_getRGBCval	;wreg free
  1877   003462  500D               	movf	wait_for_wall@p^0,w,c
  1878   003464  6ED9               	movwf	fsr2l,c
  1879   003466  6ADA               	clrf	fsr2h,c
  1880   003468  0E04               	movlw	4
  1881   00346A  26D9               	addwf	fsr2l,f,c
  1882   00346C  0E01               	movlw	1
  1883   00346E  50DB               	movf	plusw2,w,c
  1884   003470  E107               	bnz	u3141
  1885   003472  0E1E               	movlw	30
  1886   003474  5CDE               	subwf	postinc2,w,c
  1887   003476  B0D8               	btfsc	status,0,c
  1888   003478  EF40  F01A         	goto	u3141
  1889   00347C  EF42  F01A         	goto	u3140
  1890   003480                     u3141:
  1891   003480  EF44  F01A         	goto	l3753
  1892   003484                     u3140:
  1893   003484  EF4C  F01A         	goto	l96
  1894   003488                     l3753:
  1895                           
  1896                           ;color.c: 164:     while (!loss) {
  1897   003488  500E               	movf	wait_for_wall@loss^0,w,c
  1898   00348A  B4D8               	btfsc	status,2,c
  1899   00348C  EF4A  F01A         	goto	u3151
  1900   003490  EF4C  F01A         	goto	u3150
  1901   003494                     u3151:
  1902   003494  EF2D  F01A         	goto	l3747
  1903   003498                     u3150:
  1904   003498                     l96:
  1905   003498  0012               	return		;funcret
  1906   00349A                     __end_of_wait_for_wall:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _toggle_tricolour_LED *****************
  1910 ;; Defined at:
  1911 ;;		line 84 in file "buggy_lights.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:        1 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_forward_navigation
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text6
  1940   0029AA                     __ptext6:
  1941                           	callstack 0
  1942   0029AA                     _toggle_tricolour_LED:
  1943                           	callstack 28
  1944   0029AA                     
  1945                           ;buggy_lights.c: 88:         LATGbits.LATG1 = !LATGbits.LATG1;
  1946   0029AA  A27F               	btfss	127,1,c	;volatile
  1947   0029AC  EFDA  F014         	goto	u3011
  1948   0029B0  EFDE  F014         	goto	u3010
  1949   0029B4                     u3011:
  1950   0029B4  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1951   0029B6  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1952   0029B8  EFDF  F014         	goto	u3028
  1953   0029BC                     u3010:
  1954   0029BC  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1955   0029BE                     u3028:
  1956   0029BE  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  1957   0029C0  507F               	movf	127,w,c	;volatile
  1958   0029C2  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1959   0029C4  0BFD               	andlw	-3
  1960   0029C6  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1961   0029C8  6E7F               	movwf	127,c	;volatile
  1962                           
  1963                           ;buggy_lights.c: 89:         LATAbits.LATA4 = !LATAbits.LATA4;
  1964   0029CA  A879               	btfss	121,4,c	;volatile
  1965   0029CC  EFEA  F014         	goto	u3031
  1966   0029D0  EFEE  F014         	goto	u3030
  1967   0029D4                     u3031:
  1968   0029D4  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1969   0029D6  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1970   0029D8  EFEF  F014         	goto	u3048
  1971   0029DC                     u3030:
  1972   0029DC  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1973   0029DE                     u3048:
  1974   0029DE  3A01               	swapf	??_toggle_tricolour_LED^0,f,c
  1975   0029E0  5079               	movf	121,w,c	;volatile
  1976   0029E2  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1977   0029E4  0BEF               	andlw	-17
  1978   0029E6  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1979   0029E8  6E79               	movwf	121,c	;volatile
  1980                           
  1981                           ;buggy_lights.c: 90:         LATFbits.LATF7 = !LATFbits.LATF7;
  1982   0029EA  AE7E               	btfss	126,7,c	;volatile
  1983   0029EC  EFFA  F014         	goto	u3051
  1984   0029F0  EFFE  F014         	goto	u3050
  1985   0029F4                     u3051:
  1986   0029F4  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1987   0029F6  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  1988   0029F8  EFFF  F014         	goto	u3068
  1989   0029FC                     u3050:
  1990   0029FC  6A01               	clrf	??_toggle_tricolour_LED^0,c
  1991   0029FE                     u3068:
  1992   0029FE  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1993   002A00  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  1994   002A02  507E               	movf	126,w,c	;volatile
  1995   002A04  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1996   002A06  0B7F               	andlw	-129
  1997   002A08  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  1998   002A0A  6E7E               	movwf	126,c	;volatile
  1999                           
  2000                           ;buggy_lights.c: 93:         LATGbits.LATG0 = !LATGbits.LATG0;
  2001   002A0C  A07F               	btfss	127,0,c	;volatile
  2002   002A0E  EF0B  F015         	goto	u3071
  2003   002A12  EF0F  F015         	goto	u3070
  2004   002A16                     u3071:
  2005   002A16  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2006   002A18  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  2007   002A1A  EF10  F015         	goto	u3088
  2008   002A1E                     u3070:
  2009   002A1E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2010   002A20                     u3088:
  2011   002A20  507F               	movf	127,w,c	;volatile
  2012   002A22  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2013   002A24  0BFE               	andlw	-2
  2014   002A26  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2015   002A28  6E7F               	movwf	127,c	;volatile
  2016                           
  2017                           ;buggy_lights.c: 94:         LATEbits.LATE7 = !LATEbits.LATE7;
  2018   002A2A  AE7D               	btfss	125,7,c	;volatile
  2019   002A2C  EF1A  F015         	goto	u3091
  2020   002A30  EF1E  F015         	goto	u3090
  2021   002A34                     u3091:
  2022   002A34  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2023   002A36  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  2024   002A38  EF1F  F015         	goto	u3108
  2025   002A3C                     u3090:
  2026   002A3C  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2027   002A3E                     u3108:
  2028   002A3E  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  2029   002A40  3201               	rrcf	??_toggle_tricolour_LED^0,f,c
  2030   002A42  507D               	movf	125,w,c	;volatile
  2031   002A44  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2032   002A46  0B7F               	andlw	-129
  2033   002A48  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2034   002A4A  6E7D               	movwf	125,c	;volatile
  2035                           
  2036                           ;buggy_lights.c: 95:         LATAbits.LATA3 = !LATAbits.LATA3;
  2037   002A4C  A679               	btfss	121,3,c	;volatile
  2038   002A4E  EF2B  F015         	goto	u3111
  2039   002A52  EF2F  F015         	goto	u3110
  2040   002A56                     u3111:
  2041   002A56  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2042   002A58  2A01               	incf	??_toggle_tricolour_LED^0,f,c
  2043   002A5A  EF30  F015         	goto	u3128
  2044   002A5E                     u3110:
  2045   002A5E  6A01               	clrf	??_toggle_tricolour_LED^0,c
  2046   002A60                     u3128:
  2047   002A60  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  2048   002A62  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  2049   002A64  4601               	rlncf	??_toggle_tricolour_LED^0,f,c
  2050   002A66  5079               	movf	121,w,c	;volatile
  2051   002A68  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2052   002A6A  0BF7               	andlw	-9
  2053   002A6C  1801               	xorwf	??_toggle_tricolour_LED^0,w,c
  2054   002A6E  6E79               	movwf	121,c	;volatile
  2055   002A70  0012               	return		;funcret
  2056   002A72                     __end_of_toggle_tricolour_LED:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _stop_timer *****************
  2060 ;; Defined at:
  2061 ;;		line 38 in file "timers.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		None
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_forward_navigation
  2086 ;;		_return_to_sender
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text7
  2091   003758                     __ptext7:
  2092                           	callstack 0
  2093   003758                     _stop_timer:
  2094                           	callstack 28
  2095   003758                     
  2096                           ;timers.c: 40:     T0CON0bits.T0EN=0;
  2097   003758  9ED5               	bcf	213,7,c	;volatile
  2098   00375A  0012               	return		;funcret
  2099   00375C                     __end_of_stop_timer:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _stop *****************
  2103 ;; Defined at:
  2104 ;;		line 93 in file "dc_motor.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  2107 ;;		 -> main@motorL(9), 
  2108 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  2109 ;;		 -> main@motorR(9), 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;Total ram usage:        3 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 3
  2128 ;; This function calls:
  2129 ;;		_setMotorPWM
  2130 ;; This function is called by:
  2131 ;;		_forward_navigation
  2132 ;;		_turnLeft90
  2133 ;;		_turnRight90
  2134 ;;		_turnLeft135
  2135 ;;		_turnRight135
  2136 ;;		_UTurn
  2137 ;;		_headbuttReverse
  2138 ;;		_squareReverse
  2139 ;;		_return_to_sender
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text8
  2144   002DD4                     __ptext8:
  2145                           	callstack 0
  2146   002DD4                     _stop:
  2147                           	callstack 26
  2148   002DD4                     
  2149                           ;dc_motor.c: 93: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 94: {;dc_motor.c: 95:
      +                               while ((mL->power>0) || (mR->power>0)){
  2150   002DD4  EF1A  F017         	goto	l3977
  2151   002DD8                     l3963:
  2152                           
  2153                           ;dc_motor.c: 96:         if (mL->power>0) {mL->power--;}
  2154   002DD8  5013               	movf	stop@mL^0,w,c
  2155   002DDA  6ED9               	movwf	fsr2l,c
  2156   002DDC  6ADA               	clrf	fsr2h,c
  2157   002DDE  50DF               	movf	indf2,w,c
  2158   002DE0  B4D8               	btfsc	status,2,c
  2159   002DE2  EFF5  F016         	goto	u3601
  2160   002DE6  EFF7  F016         	goto	u3600
  2161   002DEA                     u3601:
  2162   002DEA  EFFB  F016         	goto	l3967
  2163   002DEE                     u3600:
  2164   002DEE  5013               	movf	stop@mL^0,w,c
  2165   002DF0  6ED9               	movwf	fsr2l,c
  2166   002DF2  6ADA               	clrf	fsr2h,c
  2167   002DF4  06DF               	decf	indf2,f,c
  2168   002DF6                     l3967:
  2169                           
  2170                           ;dc_motor.c: 97:         if (mR->power>0) {mR->power--;}
  2171   002DF6  5014               	movf	stop@mR^0,w,c
  2172   002DF8  6ED9               	movwf	fsr2l,c
  2173   002DFA  6ADA               	clrf	fsr2h,c
  2174   002DFC  50DF               	movf	indf2,w,c
  2175   002DFE  B4D8               	btfsc	status,2,c
  2176   002E00  EF04  F017         	goto	u3611
  2177   002E04  EF06  F017         	goto	u3610
  2178   002E08                     u3611:
  2179   002E08  EF0A  F017         	goto	l3971
  2180   002E0C                     u3610:
  2181   002E0C  5014               	movf	stop@mR^0,w,c
  2182   002E0E  6ED9               	movwf	fsr2l,c
  2183   002E10  6ADA               	clrf	fsr2h,c
  2184   002E12  06DF               	decf	indf2,f,c
  2185   002E14                     l3971:
  2186                           
  2187                           ;dc_motor.c: 98:         setMotorPWM(mL);
  2188   002E14  C013  F00E         	movff	stop@mL,setMotorPWM@m
  2189   002E18  EC18  F012         	call	_setMotorPWM	;wreg free
  2190   002E1C                     
  2191                           ;dc_motor.c: 99:         setMotorPWM(mR);
  2192   002E1C  C014  F00E         	movff	stop@mR,setMotorPWM@m
  2193   002E20  EC18  F012         	call	_setMotorPWM	;wreg free
  2194   002E24                     
  2195                           ;dc_motor.c: 100:         _delay((unsigned long)((rampDelay)*(64000000/4000.0)));
  2196   002E24  0EA7               	movlw	167
  2197   002E26  6E15               	movwf	??_stop^0,c
  2198   002E28  0E3A               	movlw	58
  2199   002E2A                     u3937:
  2200   002E2A  2EE8               	decfsz	wreg,f,c
  2201   002E2C  D7FE               	bra	u3937
  2202   002E2E  2E15               	decfsz	??_stop^0,f,c
  2203   002E30  D7FC               	bra	u3937
  2204   002E32  D000               	nop2	
  2205   002E34                     l3977:
  2206                           
  2207                           ;dc_motor.c: 95:     while ((mL->power>0) || (mR->power>0)){
  2208   002E34  5013               	movf	stop@mL^0,w,c
  2209   002E36  6ED9               	movwf	fsr2l,c
  2210   002E38  6ADA               	clrf	fsr2h,c
  2211   002E3A  50DF               	movf	indf2,w,c
  2212   002E3C  A4D8               	btfss	status,2,c
  2213   002E3E  EF23  F017         	goto	u3621
  2214   002E42  EF25  F017         	goto	u3620
  2215   002E46                     u3621:
  2216   002E46  EFEC  F016         	goto	l3963
  2217   002E4A                     u3620:
  2218   002E4A  5014               	movf	stop@mR^0,w,c
  2219   002E4C  6ED9               	movwf	fsr2l,c
  2220   002E4E  6ADA               	clrf	fsr2h,c
  2221   002E50  50DF               	movf	indf2,w,c
  2222   002E52  A4D8               	btfss	status,2,c
  2223   002E54  EF2E  F017         	goto	u3631
  2224   002E58  EF30  F017         	goto	u3630
  2225   002E5C                     u3631:
  2226   002E5C  EFEC  F016         	goto	l3963
  2227   002E60                     u3630:
  2228   002E60  0012               	return		;funcret
  2229   002E62                     __end_of_stop:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _setMotorPWM *****************
  2233 ;; Defined at:
  2234 ;;		line 68 in file "dc_motor.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  m               1   13[COMRAM] PTR struct DC_motor
  2237 ;;		 -> main@motorR(9), main@motorL(9), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  negDuty         1   17[COMRAM] unsigned char 
  2240 ;;  posDuty         1   16[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        5 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 2
  2257 ;; This function calls:
  2258 ;;		___lwdiv
  2259 ;;		___wmul
  2260 ;; This function is called by:
  2261 ;;		_stop
  2262 ;;		_turnLeft
  2263 ;;		_turnRight
  2264 ;;		_fullSpeedAhead
  2265 ;;		_fullSpeedReverse
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text9
  2270   002430                     __ptext9:
  2271                           	callstack 0
  2272   002430                     _setMotorPWM:
  2273                           	callstack 26
  2274   002430                     
  2275                           ;dc_motor.c: 68: void setMotorPWM(DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  2276   002430  500E               	movf	setMotorPWM@m^0,w,c
  2277   002432  6ED9               	movwf	fsr2l,c
  2278   002434  6ADA               	clrf	fsr2h,c
  2279   002436  0E02               	movlw	2
  2280   002438  26D9               	addwf	fsr2l,f,c
  2281   00243A  50DF               	movf	indf2,w,c
  2282   00243C  B4D8               	btfsc	status,2,c
  2283   00243E  EF23  F012         	goto	u2551
  2284   002442  EF25  F012         	goto	u2550
  2285   002446                     u2551:
  2286   002446  EF55  F012         	goto	l3373
  2287   00244A                     u2550:
  2288   00244A                     
  2289                           ;dc_motor.c: 73:         posDuty=(unsigned char)(m->PWMperiod - ((unsigned int)(m->power
      +                          )*(m->PWMperiod))/100);
  2290   00244A  500E               	movf	setMotorPWM@m^0,w,c
  2291   00244C  6ED9               	movwf	fsr2l,c
  2292   00244E  6ADA               	clrf	fsr2h,c
  2293   002450  50DF               	movf	indf2,w,c
  2294   002452  6E0F               	movwf	??_setMotorPWM^0,c
  2295   002454  500F               	movf	??_setMotorPWM^0,w,c
  2296   002456  6E01               	movwf	___wmul@multiplier^0,c
  2297   002458  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2298   00245A  500E               	movf	setMotorPWM@m^0,w,c
  2299   00245C  6ED9               	movwf	fsr2l,c
  2300   00245E  6ADA               	clrf	fsr2h,c
  2301   002460  0E03               	movlw	3
  2302   002462  26D9               	addwf	fsr2l,f,c
  2303   002464  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2304   002468  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2305   00246C  EC34  F01B         	call	___wmul	;wreg free
  2306   002470  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2307   002474  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2308   002478  0E00               	movlw	0
  2309   00247A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2310   00247C  0E64               	movlw	100
  2311   00247E  6E09               	movwf	___lwdiv@divisor^0,c
  2312   002480  ECE8  F017         	call	___lwdiv	;wreg free
  2313   002484  500E               	movf	setMotorPWM@m^0,w,c
  2314   002486  6ED9               	movwf	fsr2l,c
  2315   002488  6ADA               	clrf	fsr2h,c
  2316   00248A  0E03               	movlw	3
  2317   00248C  26D9               	addwf	fsr2l,f,c
  2318   00248E  50DF               	movf	indf2,w,c
  2319   002490  6E10               	movwf	(??_setMotorPWM+1)^0,c
  2320   002492  5007               	movf	?___lwdiv^0,w,c
  2321   002494  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  2322   002496  6E11               	movwf	setMotorPWM@posDuty^0,c
  2323   002498                     
  2324                           ;dc_motor.c: 74:         negDuty=(unsigned char)(m->PWMperiod);
  2325   002498  500E               	movf	setMotorPWM@m^0,w,c
  2326   00249A  6ED9               	movwf	fsr2l,c
  2327   00249C  6ADA               	clrf	fsr2h,c
  2328   00249E  0E03               	movlw	3
  2329   0024A0  26D9               	addwf	fsr2l,f,c
  2330   0024A2  50DF               	movf	indf2,w,c
  2331   0024A4  6E12               	movwf	setMotorPWM@negDuty^0,c
  2332                           
  2333                           ;dc_motor.c: 75:     }
  2334   0024A6  EF76  F012         	goto	l3377
  2335   0024AA                     l3373:
  2336                           
  2337                           ;dc_motor.c: 77:         posDuty=0;
  2338   0024AA  0E00               	movlw	0
  2339   0024AC  6E11               	movwf	setMotorPWM@posDuty^0,c
  2340   0024AE                     
  2341                           ;dc_motor.c: 78:   negDuty=(unsigned char)(((unsigned int)(m->power)*(m->PWMperiod))/100
      +                          );
  2342   0024AE  500E               	movf	setMotorPWM@m^0,w,c
  2343   0024B0  6ED9               	movwf	fsr2l,c
  2344   0024B2  6ADA               	clrf	fsr2h,c
  2345   0024B4  50DF               	movf	indf2,w,c
  2346   0024B6  6E0F               	movwf	??_setMotorPWM^0,c
  2347   0024B8  500F               	movf	??_setMotorPWM^0,w,c
  2348   0024BA  6E01               	movwf	___wmul@multiplier^0,c
  2349   0024BC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2350   0024BE  500E               	movf	setMotorPWM@m^0,w,c
  2351   0024C0  6ED9               	movwf	fsr2l,c
  2352   0024C2  6ADA               	clrf	fsr2h,c
  2353   0024C4  0E03               	movlw	3
  2354   0024C6  26D9               	addwf	fsr2l,f,c
  2355   0024C8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2356   0024CC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2357   0024D0  EC34  F01B         	call	___wmul	;wreg free
  2358   0024D4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2359   0024D8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2360   0024DC  0E00               	movlw	0
  2361   0024DE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2362   0024E0  0E64               	movlw	100
  2363   0024E2  6E09               	movwf	___lwdiv@divisor^0,c
  2364   0024E4  ECE8  F017         	call	___lwdiv	;wreg free
  2365   0024E8  5007               	movf	?___lwdiv^0,w,c
  2366   0024EA  6E12               	movwf	setMotorPWM@negDuty^0,c
  2367   0024EC                     l3377:
  2368                           
  2369                           ;dc_motor.c: 81:     if (m->direction) {
  2370   0024EC  500E               	movf	setMotorPWM@m^0,w,c
  2371   0024EE  6ED9               	movwf	fsr2l,c
  2372   0024F0  6ADA               	clrf	fsr2h,c
  2373   0024F2  0E01               	movlw	1
  2374   0024F4  26D9               	addwf	fsr2l,f,c
  2375   0024F6  50DF               	movf	indf2,w,c
  2376   0024F8  B4D8               	btfsc	status,2,c
  2377   0024FA  EF81  F012         	goto	u2561
  2378   0024FE  EF83  F012         	goto	u2560
  2379   002502                     u2561:
  2380   002502  EFA3  F012         	goto	l3381
  2381   002506                     u2560:
  2382   002506                     
  2383                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  2384   002506  500E               	movf	setMotorPWM@m^0,w,c
  2385   002508  6ED9               	movwf	fsr2l,c
  2386   00250A  6ADA               	clrf	fsr2h,c
  2387   00250C  0E05               	movlw	5
  2388   00250E  26D9               	addwf	fsr2l,f,c
  2389   002510  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2390   002514  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2391   002518  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2392   00251C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2393   002520  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2394                           
  2395                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  2396   002524  500E               	movf	setMotorPWM@m^0,w,c
  2397   002526  6ED9               	movwf	fsr2l,c
  2398   002528  6ADA               	clrf	fsr2h,c
  2399   00252A  0E07               	movlw	7
  2400   00252C  26D9               	addwf	fsr2l,f,c
  2401   00252E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2402   002532  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2403   002536  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2404   00253A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2405   00253E  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2406                           
  2407                           ;dc_motor.c: 84:     } else {
  2408   002542  EFC1  F012         	goto	l217
  2409   002546                     l3381:
  2410                           
  2411                           ;dc_motor.c: 85:         *(m->posDutyHighByte)=negDuty;
  2412   002546  500E               	movf	setMotorPWM@m^0,w,c
  2413   002548  6ED9               	movwf	fsr2l,c
  2414   00254A  6ADA               	clrf	fsr2h,c
  2415   00254C  0E05               	movlw	5
  2416   00254E  26D9               	addwf	fsr2l,f,c
  2417   002550  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2418   002554  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2419   002558  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2420   00255C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2421   002560  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  2422                           
  2423                           ;dc_motor.c: 86:         *(m->negDutyHighByte)=posDuty;
  2424   002564  500E               	movf	setMotorPWM@m^0,w,c
  2425   002566  6ED9               	movwf	fsr2l,c
  2426   002568  6ADA               	clrf	fsr2h,c
  2427   00256A  0E07               	movlw	7
  2428   00256C  26D9               	addwf	fsr2l,f,c
  2429   00256E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  2430   002572  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  2431   002576  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  2432   00257A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2433   00257E  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  2434   002582                     l217:
  2435   002582  0012               	return		;funcret
  2436   002584                     __end_of_setMotorPWM:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function ___wmul *****************
  2440 ;; Defined at:
  2441 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  multiplier      2    0[COMRAM] unsigned int 
  2444 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  product         2    4[COMRAM] unsigned int 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    0[COMRAM] unsigned int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, prodl, prodh
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:        6 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_setMotorPWM
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text10
  2471   003668                     __ptext10:
  2472                           	callstack 0
  2473   003668                     ___wmul:
  2474                           	callstack 26
  2475   003668  5001               	movf	___wmul@multiplier^0,w,c
  2476   00366A  0203               	mulwf	___wmul@multiplicand^0,c
  2477   00366C  CFF3 F005          	movff	prodl,___wmul@product
  2478   003670  CFF4 F006          	movff	prodh,___wmul@product+1
  2479   003674  5001               	movf	___wmul@multiplier^0,w,c
  2480   003676  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2481   003678  50F3               	movf	243,w,c
  2482   00367A  2606               	addwf	(___wmul@product+1)^0,f,c
  2483   00367C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2484   00367E  0203               	mulwf	___wmul@multiplicand^0,c
  2485   003680  50F3               	movf	243,w,c
  2486   003682  2606               	addwf	(___wmul@product+1)^0,f,c
  2487   003684  C005  F001         	movff	___wmul@product,?___wmul
  2488   003688  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2489   00368C  0012               	return		;funcret
  2490   00368E                     __end_of___wmul:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _sendRGBCvalSerial4 *****************
  2494 ;; Defined at:
  2495 ;;		line 75 in file "serial.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  col_val         1   57[COMRAM] PTR struct RGBC_val
  2498 ;;		 -> main@RGBC_colour(8), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  tempStr        26   58[COMRAM] unsigned char [26]
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2510 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;Total ram usage:       27 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 6
  2517 ;; This function calls:
  2518 ;;		_sendStringSerial4
  2519 ;;		_sprintf
  2520 ;; This function is called by:
  2521 ;;		_forward_navigation
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text11
  2526   003174                     __ptext11:
  2527                           	callstack 0
  2528   003174                     _sendRGBCvalSerial4:
  2529                           	callstack 23
  2530   003174                     
  2531                           ;serial.c: 76:     char tempStr[26];;serial.c: 78:     sprintf(tempStr, "%u %u %u %u \r"
      +                          , col_val->R, col_val->G, col_val->B, col_val->C);
  2532   003174  0E3B               	movlw	low sendRGBCvalSerial4@tempStr
  2533   003176  6E20               	movwf	sprintf@s^0,c
  2534   003178  6A21               	clrf	(sprintf@s+1)^0,c
  2535   00317A  0E01               	movlw	low STR_5
  2536   00317C  6E22               	movwf	sprintf@fmt^0,c
  2537   00317E  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2538   003180  6ED9               	movwf	fsr2l,c
  2539   003182  6ADA               	clrf	fsr2h,c
  2540   003184  CFDE F023          	movff	postinc2,?_sprintf+3
  2541   003188  CFDD F024          	movff	postdec2,?_sprintf+4
  2542   00318C  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2543   00318E  6ED9               	movwf	fsr2l,c
  2544   003190  6ADA               	clrf	fsr2h,c
  2545   003192  0E02               	movlw	2
  2546   003194  26D9               	addwf	fsr2l,f,c
  2547   003196  CFDE F025          	movff	postinc2,?_sprintf+5
  2548   00319A  CFDD F026          	movff	postdec2,?_sprintf+6
  2549   00319E  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2550   0031A0  6ED9               	movwf	fsr2l,c
  2551   0031A2  6ADA               	clrf	fsr2h,c
  2552   0031A4  0E04               	movlw	4
  2553   0031A6  26D9               	addwf	fsr2l,f,c
  2554   0031A8  CFDE F027          	movff	postinc2,?_sprintf+7
  2555   0031AC  CFDD F028          	movff	postdec2,?_sprintf+8
  2556   0031B0  503A               	movf	sendRGBCvalSerial4@col_val^0,w,c
  2557   0031B2  6ED9               	movwf	fsr2l,c
  2558   0031B4  6ADA               	clrf	fsr2h,c
  2559   0031B6  0E06               	movlw	6
  2560   0031B8  26D9               	addwf	fsr2l,f,c
  2561   0031BA  CFDE F029          	movff	postinc2,?_sprintf+9
  2562   0031BE  CFDD F02A          	movff	postdec2,?_sprintf+10
  2563   0031C2  EC05  F01A         	call	_sprintf	;wreg free
  2564   0031C6                     
  2565                           ;serial.c: 79:     sendStringSerial4(tempStr);
  2566   0031C6  0E3B               	movlw	low sendRGBCvalSerial4@tempStr
  2567   0031C8  6E02               	movwf	sendStringSerial4@string^0,c
  2568   0031CA  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  2569   0031CC  EC89  F018         	call	_sendStringSerial4	;wreg free
  2570   0031D0  0012               	return		;funcret
  2571   0031D2                     __end_of_sendRGBCvalSerial4:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _sendHSVvalSerial4 *****************
  2575 ;; Defined at:
  2576 ;;		line 85 in file "serial.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  col_val         1   57[COMRAM] PTR struct HSV_val
  2579 ;;		 -> main@HSV_colour(6), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  tempStr        21   58[COMRAM] unsigned char [21]
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:       22 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 6
  2598 ;; This function calls:
  2599 ;;		_sendStringSerial4
  2600 ;;		_sprintf
  2601 ;; This function is called by:
  2602 ;;		_forward_navigation
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text12
  2607   0033BE                     __ptext12:
  2608                           	callstack 0
  2609   0033BE                     _sendHSVvalSerial4:
  2610                           	callstack 23
  2611   0033BE                     
  2612                           ;serial.c: 86:     char tempStr[21];;serial.c: 88:     sprintf(tempStr, "%u %u %u \r", c
      +                          ol_val->H, col_val->S, col_val->V);
  2613   0033BE  0E3B               	movlw	low sendHSVvalSerial4@tempStr
  2614   0033C0  6E20               	movwf	sprintf@s^0,c
  2615   0033C2  6A21               	clrf	(sprintf@s+1)^0,c
  2616   0033C4  0E04               	movlw	low (STR_5+3)
  2617   0033C6  6E22               	movwf	sprintf@fmt^0,c
  2618   0033C8  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2619   0033CA  6ED9               	movwf	fsr2l,c
  2620   0033CC  6ADA               	clrf	fsr2h,c
  2621   0033CE  CFDE F023          	movff	postinc2,?_sprintf+3
  2622   0033D2  CFDD F024          	movff	postdec2,?_sprintf+4
  2623   0033D6  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2624   0033D8  6ED9               	movwf	fsr2l,c
  2625   0033DA  6ADA               	clrf	fsr2h,c
  2626   0033DC  0E02               	movlw	2
  2627   0033DE  26D9               	addwf	fsr2l,f,c
  2628   0033E0  CFDE F025          	movff	postinc2,?_sprintf+5
  2629   0033E4  CFDD F026          	movff	postdec2,?_sprintf+6
  2630   0033E8  503A               	movf	sendHSVvalSerial4@col_val^0,w,c
  2631   0033EA  6ED9               	movwf	fsr2l,c
  2632   0033EC  6ADA               	clrf	fsr2h,c
  2633   0033EE  0E04               	movlw	4
  2634   0033F0  26D9               	addwf	fsr2l,f,c
  2635   0033F2  CFDE F027          	movff	postinc2,?_sprintf+7
  2636   0033F6  CFDD F028          	movff	postdec2,?_sprintf+8
  2637   0033FA  EC05  F01A         	call	_sprintf	;wreg free
  2638   0033FE                     
  2639                           ;serial.c: 89:     sendStringSerial4(tempStr);
  2640   0033FE  0E3B               	movlw	low sendHSVvalSerial4@tempStr
  2641   003400  6E02               	movwf	sendStringSerial4@string^0,c
  2642   003402  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  2643   003404  EC89  F018         	call	_sendStringSerial4	;wreg free
  2644   003408  0012               	return		;funcret
  2645   00340A                     __end_of_sendHSVvalSerial4:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _sendArrayCharSerial4 *****************
  2649 ;; Defined at:
  2650 ;;		line 61 in file "serial.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  arr             2   57[COMRAM] PTR unsigned char 
  2653 ;;		 -> trail_manoeuvre(20), trail_timer_low(20), trail_timer_high(20), 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  i               2  162[BANK1 ] unsigned int 
  2656 ;;  tempStr       161    0[BANK1 ] unsigned char [161]
  2657 ;;  index           1  161[BANK1 ] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Locals:         0       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Totals:         3       0     164       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;Total ram usage:      167 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 6
  2674 ;; This function calls:
  2675 ;;		_sendStringSerial4
  2676 ;;		_sprintf
  2677 ;; This function is called by:
  2678 ;;		_forward_navigation
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text13
  2683   002F5A                     __ptext13:
  2684                           	callstack 0
  2685   002F5A                     _sendArrayCharSerial4:
  2686                           	callstack 23
  2687   002F5A                     
  2688                           ;serial.c: 63:     unsigned char index = 0;
  2689   002F5A  0E00               	movlw	0
  2690   002F5C  0101               	movlb	1	; () banked
  2691   002F5E  6FA1               	movwf	sendArrayCharSerial4@index& (0+255),b
  2692                           
  2693                           ;serial.c: 64:     char tempStr[20 * 8 + 1];;serial.c: 65:     for (unsigned int i = 0; 
      +                          i < 20; i++) {
  2694   002F60  0E00               	movlw	0
  2695   002F62  6FA3               	movwf	(sendArrayCharSerial4@i+1)& (0+255),b
  2696   002F64  0E00               	movlw	0
  2697   002F66  6FA2               	movwf	sendArrayCharSerial4@i& (0+255),b
  2698   002F68                     l4425:
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;serial.c: 66:         index += sprintf(&tempStr[index], "%d ", arr[i]);
  2702   002F68  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2703   002F6A  25A1               	addwf	sendArrayCharSerial4@index& (0+255),w,b
  2704   002F6C  6E20               	movwf	sprintf@s^0,c
  2705   002F6E  6A21               	clrf	(sprintf@s+1)^0,c
  2706   002F70  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2707   002F72  2221               	addwfc	(sprintf@s+1)^0,f,c
  2708   002F74  0E14               	movlw	low STR_2
  2709   002F76  6E22               	movwf	sprintf@fmt^0,c
  2710   002F78  51A2               	movf	sendArrayCharSerial4@i& (0+255),w,b
  2711   002F7A  243A               	addwf	sendArrayCharSerial4@arr^0,w,c
  2712   002F7C  6ED9               	movwf	fsr2l,c
  2713   002F7E  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2714   002F80  203B               	addwfc	(sendArrayCharSerial4@arr+1)^0,w,c
  2715   002F82  6EDA               	movwf	fsr2h,c
  2716   002F84  50DF               	movf	indf2,w,c
  2717   002F86  6E3C               	movwf	??_sendArrayCharSerial4^0,c
  2718   002F88  503C               	movf	??_sendArrayCharSerial4^0,w,c
  2719   002F8A  6E23               	movwf	(?_sprintf+3)^0,c
  2720   002F8C  6A24               	clrf	(?_sprintf+4)^0,c
  2721   002F8E  EC05  F01A         	call	_sprintf	;wreg free
  2722   002F92  5020               	movf	?_sprintf^0,w,c
  2723   002F94  0101               	movlb	1	; () banked
  2724   002F96  27A1               	addwf	sendArrayCharSerial4@index& (0+255),f,b
  2725   002F98                     
  2726                           ; BSR set to: 1
  2727                           ;serial.c: 67:     }
  2728   002F98  4BA2               	infsnz	sendArrayCharSerial4@i& (0+255),f,b
  2729   002F9A  2BA3               	incf	(sendArrayCharSerial4@i+1)& (0+255),f,b
  2730   002F9C                     
  2731                           ; BSR set to: 1
  2732   002F9C  51A3               	movf	(sendArrayCharSerial4@i+1)& (0+255),w,b
  2733   002F9E  E109               	bnz	u3820
  2734   002FA0  0E14               	movlw	20
  2735   002FA2  5DA2               	subwf	sendArrayCharSerial4@i& (0+255),w,b
  2736   002FA4  A0D8               	btfss	status,0,c
  2737   002FA6  EFD7  F017         	goto	u3821
  2738   002FAA  EFD9  F017         	goto	u3820
  2739   002FAE                     u3821:
  2740   002FAE  EFB4  F017         	goto	l4425
  2741   002FB2                     u3820:
  2742   002FB2                     
  2743                           ; BSR set to: 1
  2744                           ;serial.c: 68:     sendStringSerial4(tempStr);
  2745   002FB2  0E00               	movlw	low sendArrayCharSerial4@tempStr
  2746   002FB4  6E02               	movwf	sendStringSerial4@string^0,c
  2747   002FB6  0E01               	movlw	high sendArrayCharSerial4@tempStr
  2748   002FB8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2749   002FBA  EC89  F018         	call	_sendStringSerial4	;wreg free
  2750                           
  2751                           ;serial.c: 69:     sendStringSerial4(" \r");
  2752   002FBE  0E11               	movlw	low (STR_1+2)
  2753   002FC0  6E02               	movwf	sendStringSerial4@string^0,c
  2754   002FC2  5002               	movf	sendStringSerial4@string^0,w,c
  2755   002FC4  A4D8               	btfss	status,2,c
  2756   002FC6  0E0E               	movlw	high __smallconst
  2757   002FC8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2758   002FCA  EC89  F018         	call	_sendStringSerial4	;wreg free
  2759   002FCE  0012               	return		;funcret
  2760   002FD0                     __end_of_sendArrayCharSerial4:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _sprintf *****************
  2764 ;; Defined at:
  2765 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  s               2   31[COMRAM] PTR unsigned char 
  2768 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), sendArrayCharSerial4@tempStr(161), sendIntSerial4
      +@string(17), 
  2769 ;;  fmt             1   33[COMRAM] PTR const unsigned char 
  2770 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  f              12   45[COMRAM] struct _IO_FILE
  2773 ;;  ret             2   42[COMRAM] int 
  2774 ;;  ap              1   44[COMRAM] PTR void [1]
  2775 ;;		 -> ?_sprintf(2), 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2   31[COMRAM] int 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:       26 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_vfprintf
  2794 ;; This function is called by:
  2795 ;;		_sendArrayCharSerial4
  2796 ;;		_sendRGBCvalSerial4
  2797 ;;		_sendHSVvalSerial4
  2798 ;;		_sendIntSerial4
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text14
  2803   00340A                     __ptext14:
  2804                           	callstack 0
  2805   00340A                     _sprintf:
  2806                           	callstack 23
  2807   00340A  0E23               	movlw	low (?_sprintf+3)
  2808   00340C  6E2D               	movwf	sprintf@ap^0,c
  2809   00340E  C020  F02E         	movff	sprintf@s,sprintf@f
  2810   003412  C021  F02F         	movff	sprintf@s+1,sprintf@f+1
  2811   003416  0E00               	movlw	0
  2812   003418  6E32               	movwf	(sprintf@f+4)^0,c
  2813   00341A  0E00               	movlw	0
  2814   00341C  6E31               	movwf	(sprintf@f+3)^0,c
  2815   00341E  0E00               	movlw	0
  2816   003420  6E39               	movwf	(sprintf@f+11)^0,c
  2817   003422  0E00               	movlw	0
  2818   003424  6E38               	movwf	(sprintf@f+10)^0,c
  2819   003426  0E2E               	movlw	low sprintf@f
  2820   003428  6E1C               	movwf	vfprintf@fp^0,c
  2821   00342A  C022  F01D         	movff	sprintf@fmt,vfprintf@fmt
  2822   00342E  0E2D               	movlw	low sprintf@ap
  2823   003430  6E1E               	movwf	vfprintf@ap^0,c
  2824   003432  ECE9  F018         	call	_vfprintf	;wreg free
  2825   003436  C01C  F02B         	movff	?_vfprintf,sprintf@ret
  2826   00343A  C01D  F02C         	movff	?_vfprintf+1,sprintf@ret+1
  2827   00343E  5031               	movf	(sprintf@f+3)^0,w,c
  2828   003440  2420               	addwf	sprintf@s^0,w,c
  2829   003442  6ED9               	movwf	fsr2l,c
  2830   003444  5032               	movf	(sprintf@f+4)^0,w,c
  2831   003446  2021               	addwfc	(sprintf@s+1)^0,w,c
  2832   003448  6EDA               	movwf	fsr2h,c
  2833   00344A  6ADF               	clrf	indf2,c
  2834   00344C  C02B  F020         	movff	sprintf@ret,?_sprintf
  2835   003450  C02C  F021         	movff	sprintf@ret+1,?_sprintf+1
  2836   003454  0012               	return		;funcret
  2837   003456                     __end_of_sprintf:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _vfprintf *****************
  2841 ;; Defined at:
  2842 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  fp              1   27[COMRAM] PTR struct _IO_FILE
  2845 ;;		 -> sprintf@f(12), 
  2846 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  2847 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2848 ;;  ap              1   29[COMRAM] PTR PTR void 
  2849 ;;		 -> sprintf@ap(1), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  cfmt            1   30[COMRAM] PTR unsigned char 
  2852 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2   27[COMRAM] int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;Total ram usage:        4 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 4
  2869 ;; This function calls:
  2870 ;;		_vfpfcnvrt
  2871 ;; This function is called by:
  2872 ;;		_sprintf
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text15
  2877   0031D2                     __ptext15:
  2878                           	callstack 0
  2879   0031D2                     _vfprintf:
  2880                           	callstack 23
  2881   0031D2                     
  2882                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2883   0031D2  C01D  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  2884   0031D6                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2886   0031D6  0E00               	movlw	0
  2887   0031D8  0100               	movlb	0	; () banked
  2888   0031DA  6F81               	movwf	(_nout+1)& (0+255),b
  2889   0031DC  0E00               	movlw	0
  2890   0031DE  6F80               	movwf	_nout& (0+255),b
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2893   0031E0  EFFF  F018         	goto	l3339
  2894   0031E4                     l3337:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2898   0031E4  C01C  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2899   0031E8  0E1F               	movlw	low vfprintf@cfmt
  2900   0031EA  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  2901   0031EC  C01E  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  2902   0031F0  ECBA  F00E         	call	_vfpfcnvrt	;wreg free
  2903   0031F4  500E               	movf	?_vfpfcnvrt^0,w,c
  2904   0031F6  0100               	movlb	0	; () banked
  2905   0031F8  2780               	addwf	_nout& (0+255),f,b
  2906   0031FA  500F               	movf	(?_vfpfcnvrt+1)^0,w,c
  2907   0031FC  2381               	addwfc	(_nout+1)& (0+255),f,b
  2908   0031FE                     l3339:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2912   0031FE  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2913   003202                     	if	1	;There is more than 1 active tblptr byte
  2914   003202  0E0E               	movlw	high __smallconst
  2915   003204  6EF7               	movwf	tblptrh,c
  2916   003206                     	endif
  2917   003206                     	if	0	;tblptru may be non-zero
  2918   003206                     	endif
  2919   003206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2920   003206  0E00               	movlw	low (__smallconst shr (0+16))
  2921   003208  6EF8               	movwf	tblptru,c
  2922   00320A                     	endif
  2923   00320A  0008               	tblrd		*
  2924   00320C  50F5               	movf	tablat,w,c
  2925   00320E  0900               	iorlw	0
  2926   003210  A4D8               	btfss	status,2,c
  2927   003212  EF0D  F019         	goto	u2501
  2928   003216  EF0F  F019         	goto	u2500
  2929   00321A                     u2501:
  2930   00321A  EFF2  F018         	goto	l3337
  2931   00321E                     u2500:
  2932   00321E                     
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2935   00321E  C080  F01C         	movff	_nout,?_vfprintf
  2936   003222  C081  F01D         	movff	_nout+1,?_vfprintf+1
  2937   003226                     
  2938                           ; BSR set to: 0
  2939   003226  0012               	return		;funcret
  2940   003228                     __end_of_vfprintf:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _vfpfcnvrt *****************
  2944 ;; Defined at:
  2945 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2948 ;;		 -> sprintf@f(12), 
  2949 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  2950 ;;		 -> vfprintf@cfmt(1), 
  2951 ;;  ap              1   15[COMRAM] PTR PTR void 
  2952 ;;		 -> sprintf@ap(1), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  convarg         4   22[COMRAM] struct .
  2955 ;;  cnt             2   19[COMRAM] int 
  2956 ;;  c               1   26[COMRAM] unsigned char 
  2957 ;;  cp              1   21[COMRAM] PTR unsigned char 
  2958 ;;		 -> STR_6(11), STR_5(14), STR_3(4), STR_1(5), 
  2959 ;;  done            1   18[COMRAM] _Bool 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  2   13[COMRAM] int 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;Total ram usage:       14 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 3
  2976 ;; This function calls:
  2977 ;;		___awdiv
  2978 ;;		___awmod
  2979 ;;		___lwdiv
  2980 ;;		___lwmod
  2981 ;;		_abs
  2982 ;;		_fputc
  2983 ;; This function is called by:
  2984 ;;		_vfprintf
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text16
  2989   001D74                     __ptext16:
  2990                           	callstack 0
  2991   001D74                     _vfpfcnvrt:
  2992                           	callstack 23
  2993   001D74                     
  2994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  2995   001D74  0E00               	movlw	0
  2996   001D76  6E15               	movwf	(vfpfcnvrt@cnt+1)^0,c
  2997   001D78  0E00               	movlw	0
  2998   001D7A  6E14               	movwf	vfpfcnvrt@cnt^0,c
  2999   001D7C                     
  3000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  3001   001D7C  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3002   001D7E  6ED9               	movwf	fsr2l,c
  3003   001D80  6ADA               	clrf	fsr2h,c
  3004   001D82  CFDF FFF6          	movff	indf2,tblptrl
  3005   001D86                     	if	1	;There is more than 1 active tblptr byte
  3006   001D86  0E0E               	movlw	high __smallconst
  3007   001D88  6EF7               	movwf	tblptrh,c
  3008   001D8A                     	endif
  3009   001D8A                     	if	0	;tblptru may be non-zero
  3010   001D8A                     	endif
  3011   001D8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3012   001D8A  0E00               	movlw	low (__smallconst shr (0+16))
  3013   001D8C  6EF8               	movwf	tblptru,c
  3014   001D8E                     	endif
  3015   001D8E  0008               	tblrd		*
  3016   001D90  50F5               	movf	tablat,w,c
  3017   001D92  0A25               	xorlw	37
  3018   001D94  A4D8               	btfss	status,2,c
  3019   001D96  EFCF  F00E         	goto	u2231
  3020   001D9A  EFD1  F00E         	goto	u2230
  3021   001D9E                     u2231:
  3022   001D9E  EF26  F010         	goto	l3219
  3023   001DA2                     u2230:
  3024   001DA2                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3026   001DA2  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3027   001DA4  6ED9               	movwf	fsr2l,c
  3028   001DA6  6ADA               	clrf	fsr2h,c
  3029   001DA8  2ADF               	incf	indf2,f,c
  3030   001DAA                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3032   001DAA  0E00               	movlw	0
  3033   001DAC  0100               	movlb	0	; () banked
  3034   001DAE  6F83               	movwf	(_width+1)& (0+255),b
  3035   001DB0  0E00               	movlw	0
  3036   001DB2  6F82               	movwf	_width& (0+255),b
  3037   001DB4  C082  F086         	movff	_width,_flags
  3038   001DB8                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3041   001DB8  6984               	setf	_prec& (0+255),b
  3042   001DBA  6985               	setf	(_prec+1)& (0+255),b
  3043   001DBC                     
  3044                           ; BSR set to: 0
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3046   001DBC  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3047   001DBE  6ED9               	movwf	fsr2l,c
  3048   001DC0  6ADA               	clrf	fsr2h,c
  3049   001DC2  50DF               	movf	indf2,w,c
  3050   001DC4  6E16               	movwf	vfpfcnvrt@cp^0,c
  3051   001DC6                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3054   001DC6  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3055   001DCA                     	if	1	;There is more than 1 active tblptr byte
  3056   001DCA  0E0E               	movlw	high __smallconst
  3057   001DCC  6EF7               	movwf	tblptrh,c
  3058   001DCE                     	endif
  3059   001DCE                     	if	0	;tblptru may be non-zero
  3060   001DCE                     	endif
  3061   001DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3062   001DCE  0E00               	movlw	low (__smallconst shr (0+16))
  3063   001DD0  6EF8               	movwf	tblptru,c
  3064   001DD2                     	endif
  3065   001DD2  0008               	tblrd		*
  3066   001DD4  50F5               	movf	tablat,w,c
  3067   001DD6  0A64               	xorlw	100
  3068   001DD8  B4D8               	btfsc	status,2,c
  3069   001DDA  EFF1  F00E         	goto	u2241
  3070   001DDE  EFF3  F00E         	goto	u2240
  3071   001DE2                     u2241:
  3072   001DE2  EF03  F00F         	goto	l3155
  3073   001DE6                     u2240:
  3074   001DE6                     
  3075                           ; BSR set to: 0
  3076   001DE6  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3077   001DEA                     	if	1	;There is more than 1 active tblptr byte
  3078   001DEA  0E0E               	movlw	high __smallconst
  3079   001DEC  6EF7               	movwf	tblptrh,c
  3080   001DEE                     	endif
  3081   001DEE                     	if	0	;tblptru may be non-zero
  3082   001DEE                     	endif
  3083   001DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3084   001DEE  0E00               	movlw	low (__smallconst shr (0+16))
  3085   001DF0  6EF8               	movwf	tblptru,c
  3086   001DF2                     	endif
  3087   001DF2  0008               	tblrd		*
  3088   001DF4  50F5               	movf	tablat,w,c
  3089   001DF6  0A69               	xorlw	105
  3090   001DF8  A4D8               	btfss	status,2,c
  3091   001DFA  EF01  F00F         	goto	u2251
  3092   001DFE  EF03  F00F         	goto	u2250
  3093   001E02                     u2251:
  3094   001E02  EF91  F00F         	goto	l3185
  3095   001E06                     u2250:
  3096   001E06                     l3155:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3100   001E06  5010               	movf	vfpfcnvrt@ap^0,w,c
  3101   001E08  6ED9               	movwf	fsr2l,c
  3102   001E0A  6ADA               	clrf	fsr2h,c
  3103   001E0C  0E02               	movlw	2
  3104   001E0E  26DF               	addwf	indf2,f,c
  3105   001E10  5CDF               	subwf	indf2,w,c
  3106   001E12  6ED9               	movwf	fsr2l,c
  3107   001E14  6ADA               	clrf	fsr2h,c
  3108   001E16  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3109   001E1A  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3110   001E1E                     
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3113   001E1E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3114   001E20  6ED9               	movwf	fsr2l,c
  3115   001E22  6ADA               	clrf	fsr2h,c
  3116   001E24  2816               	incf	vfpfcnvrt@cp^0,w,c
  3117   001E26  6EDF               	movwf	indf2,c
  3118   001E28                     
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3121   001E28  0E20               	movlw	32
  3122   001E2A  6E1B               	movwf	vfpfcnvrt@c^0,c
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3125   001E2C  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3126   001E2E  EF1B  F00F         	goto	u2261
  3127   001E32  EF1E  F00F         	goto	u2260
  3128   001E36                     u2261:
  3129   001E36  0E01               	movlw	1
  3130   001E38  EF1F  F00F         	goto	u2270
  3131   001E3C                     u2260:
  3132   001E3C  0E00               	movlw	0
  3133   001E3E                     u2270:
  3134   001E3E  6E13               	movwf	vfpfcnvrt@done^0,c
  3135   001E40                     l3161:
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3138   001E40  061B               	decf	vfpfcnvrt@c^0,f,c
  3139   001E42  501B               	movf	vfpfcnvrt@c^0,w,c
  3140   001E44  0F60               	addlw	low _dbuf
  3141   001E46  6ED9               	movwf	fsr2l,c
  3142   001E48  6ADA               	clrf	fsr2h,c
  3143   001E4A  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3144   001E4E  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3145   001E52  0E00               	movlw	0
  3146   001E54  6E04               	movwf	(___awmod@divisor+1)^0,c
  3147   001E56  0E0A               	movlw	10
  3148   001E58  6E03               	movwf	___awmod@divisor^0,c
  3149   001E5A  ECF8  F015         	call	___awmod	;wreg free
  3150   001E5E  C001  F007         	movff	?___awmod,abs@a
  3151   001E62  C002  F008         	movff	?___awmod+1,abs@a+1
  3152   001E66  ECAC  F01A         	call	_abs	;wreg free
  3153   001E6A  5007               	movf	?_abs^0,w,c
  3154   001E6C  0F30               	addlw	48
  3155   001E6E  6EDF               	movwf	indf2,c
  3156   001E70                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3158   001E70  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3159   001E74  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3160   001E78  0E00               	movlw	0
  3161   001E7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3162   001E7C  0E0A               	movlw	10
  3163   001E7E  6E03               	movwf	___awdiv@divisor^0,c
  3164   001E80  EC39  F015         	call	___awdiv	;wreg free
  3165   001E84  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  3166   001E88  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3167   001E8C                     
  3168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  3169   001E8C  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3170   001E8E  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3171   001E90                     
  3172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3173   001E90  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3174   001E92  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3175   001E94  B4D8               	btfsc	status,2,c
  3176   001E96  EF4F  F00F         	goto	u2281
  3177   001E9A  EF51  F00F         	goto	u2280
  3178   001E9E                     u2281:
  3179   001E9E  EF59  F00F         	goto	l3171
  3180   001EA2                     u2280:
  3181   001EA2  501B               	movf	vfpfcnvrt@c^0,w,c
  3182   001EA4  A4D8               	btfss	status,2,c
  3183   001EA6  EF57  F00F         	goto	u2291
  3184   001EAA  EF59  F00F         	goto	u2290
  3185   001EAE                     u2291:
  3186   001EAE  EF20  F00F         	goto	l3161
  3187   001EB2                     u2290:
  3188   001EB2                     l3171:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3191   001EB2  501B               	movf	vfpfcnvrt@c^0,w,c
  3192   001EB4  B4D8               	btfsc	status,2,c
  3193   001EB6  EF5F  F00F         	goto	u2301
  3194   001EBA  EF61  F00F         	goto	u2300
  3195   001EBE                     u2301:
  3196   001EBE  EF82  F00F         	goto	l3183
  3197   001EC2                     u2300:
  3198   001EC2  5013               	movf	vfpfcnvrt@done^0,w,c
  3199   001EC4  B4D8               	btfsc	status,2,c
  3200   001EC6  EF67  F00F         	goto	u2311
  3201   001ECA  EF69  F00F         	goto	u2310
  3202   001ECE                     u2311:
  3203   001ECE  EF82  F00F         	goto	l3183
  3204   001ED2                     u2310:
  3205   001ED2                     
  3206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3207   001ED2  061B               	decf	vfpfcnvrt@c^0,f,c
  3208   001ED4  501B               	movf	vfpfcnvrt@c^0,w,c
  3209   001ED6  0F60               	addlw	low _dbuf
  3210   001ED8  6ED9               	movwf	fsr2l,c
  3211   001EDA  6ADA               	clrf	fsr2h,c
  3212   001EDC  0E2D               	movlw	45
  3213   001EDE  6EDF               	movwf	indf2,c
  3214   001EE0                     
  3215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  3216   001EE0  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3217   001EE2  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3218   001EE4  EF82  F00F         	goto	l3183
  3219   001EE8                     l3179:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3222   001EE8  501B               	movf	vfpfcnvrt@c^0,w,c
  3223   001EEA  0F60               	addlw	low _dbuf
  3224   001EEC  6ED9               	movwf	fsr2l,c
  3225   001EEE  6ADA               	clrf	fsr2h,c
  3226   001EF0  50DF               	movf	indf2,w,c
  3227   001EF2  6E11               	movwf	??_vfpfcnvrt^0,c
  3228   001EF4  5011               	movf	??_vfpfcnvrt^0,w,c
  3229   001EF6  6E01               	movwf	fputc@c^0,c
  3230   001EF8  6A02               	clrf	(fputc@c+1)^0,c
  3231   001EFA  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3232   001EFE  EC9B  F015         	call	_fputc	;wreg free
  3233   001F02  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3234   001F04                     l3183:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3237   001F04  0E20               	movlw	32
  3238   001F06  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3239   001F08  A4D8               	btfss	status,2,c
  3240   001F0A  EF89  F00F         	goto	u2321
  3241   001F0E  EF8B  F00F         	goto	u2320
  3242   001F12                     u2321:
  3243   001F12  EF74  F00F         	goto	l3179
  3244   001F16                     u2320:
  3245   001F16                     l1463:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  3248   001F16  C014  F00E         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  3249   001F1A  C015  F00F         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  3250   001F1E  EF3F  F010         	goto	l1464
  3251   001F22                     l3185:
  3252                           
  3253                           ; BSR set to: 0
  3254   001F22  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3255   001F26                     	if	1	;There is more than 1 active tblptr byte
  3256   001F26  0E0E               	movlw	high __smallconst
  3257   001F28  6EF7               	movwf	tblptrh,c
  3258   001F2A                     	endif
  3259   001F2A                     	if	0	;tblptru may be non-zero
  3260   001F2A                     	endif
  3261   001F2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3262   001F2A  0E00               	movlw	low (__smallconst shr (0+16))
  3263   001F2C  6EF8               	movwf	tblptru,c
  3264   001F2E                     	endif
  3265   001F2E  0008               	tblrd		*
  3266   001F30  50F5               	movf	tablat,w,c
  3267   001F32  0A75               	xorlw	117
  3268   001F34  A4D8               	btfss	status,2,c
  3269   001F36  EF9F  F00F         	goto	u2331
  3270   001F3A  EFA1  F00F         	goto	u2330
  3271   001F3E                     u2331:
  3272   001F3E  EF1C  F010         	goto	l3213
  3273   001F42                     u2330:
  3274   001F42                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3277   001F42  5010               	movf	vfpfcnvrt@ap^0,w,c
  3278   001F44  6ED9               	movwf	fsr2l,c
  3279   001F46  6ADA               	clrf	fsr2h,c
  3280   001F48  0E02               	movlw	2
  3281   001F4A  26DF               	addwf	indf2,f,c
  3282   001F4C  5CDF               	subwf	indf2,w,c
  3283   001F4E  6ED9               	movwf	fsr2l,c
  3284   001F50  6ADA               	clrf	fsr2h,c
  3285   001F52  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3286   001F56  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3287   001F5A                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3290   001F5A  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3291   001F5C  6ED9               	movwf	fsr2l,c
  3292   001F5E  6ADA               	clrf	fsr2h,c
  3293   001F60  2816               	incf	vfpfcnvrt@cp^0,w,c
  3294   001F62  6EDF               	movwf	indf2,c
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3297   001F64  EF04  F010         	goto	l3211
  3298   001F68                     l3191:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3302   001F68  0E20               	movlw	32
  3303   001F6A  6E1B               	movwf	vfpfcnvrt@c^0,c
  3304   001F6C                     l3193:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3307   001F6C  061B               	decf	vfpfcnvrt@c^0,f,c
  3308   001F6E  501B               	movf	vfpfcnvrt@c^0,w,c
  3309   001F70  0F60               	addlw	low _dbuf
  3310   001F72  6ED9               	movwf	fsr2l,c
  3311   001F74  6ADA               	clrf	fsr2h,c
  3312   001F76  C017  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3313   001F7A  C018  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3314   001F7E  0E00               	movlw	0
  3315   001F80  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3316   001F82  0E0A               	movlw	10
  3317   001F84  6E03               	movwf	___lwmod@divisor^0,c
  3318   001F86  EC57  F018         	call	___lwmod	;wreg free
  3319   001F8A  5001               	movf	?___lwmod^0,w,c
  3320   001F8C  0F30               	addlw	48
  3321   001F8E  6EDF               	movwf	indf2,c
  3322   001F90                     
  3323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3324   001F90  C017  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3325   001F94  C018  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3326   001F98  0E00               	movlw	0
  3327   001F9A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3328   001F9C  0E0A               	movlw	10
  3329   001F9E  6E09               	movwf	___lwdiv@divisor^0,c
  3330   001FA0  ECE8  F017         	call	___lwdiv	;wreg free
  3331   001FA4  C007  F017         	movff	?___lwdiv,vfpfcnvrt@convarg
  3332   001FA8  C008  F018         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3333   001FAC                     
  3334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1530:       cnt++
      +                          ;
  3335   001FAC  4A14               	infsnz	vfpfcnvrt@cnt^0,f,c
  3336   001FAE  2A15               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  3337   001FB0                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3339   001FB0  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3340   001FB2  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3341   001FB4  B4D8               	btfsc	status,2,c
  3342   001FB6  EFDF  F00F         	goto	u2341
  3343   001FBA  EFE1  F00F         	goto	u2340
  3344   001FBE                     u2341:
  3345   001FBE  EFF9  F00F         	goto	l3207
  3346   001FC2                     u2340:
  3347   001FC2  501B               	movf	vfpfcnvrt@c^0,w,c
  3348   001FC4  A4D8               	btfss	status,2,c
  3349   001FC6  EFE7  F00F         	goto	u2351
  3350   001FCA  EFE9  F00F         	goto	u2350
  3351   001FCE                     u2351:
  3352   001FCE  EFB6  F00F         	goto	l3193
  3353   001FD2                     u2350:
  3354   001FD2  EFF9  F00F         	goto	l3207
  3355   001FD6                     l3203:
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3358   001FD6  501B               	movf	vfpfcnvrt@c^0,w,c
  3359   001FD8  0F60               	addlw	low _dbuf
  3360   001FDA  6ED9               	movwf	fsr2l,c
  3361   001FDC  6ADA               	clrf	fsr2h,c
  3362   001FDE  50DF               	movf	indf2,w,c
  3363   001FE0  6E11               	movwf	??_vfpfcnvrt^0,c
  3364   001FE2  5011               	movf	??_vfpfcnvrt^0,w,c
  3365   001FE4  6E01               	movwf	fputc@c^0,c
  3366   001FE6  6A02               	clrf	(fputc@c+1)^0,c
  3367   001FE8  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3368   001FEC  EC9B  F015         	call	_fputc	;wreg free
  3369   001FF0  2A1B               	incf	vfpfcnvrt@c^0,f,c
  3370   001FF2                     l3207:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3373   001FF2  0E20               	movlw	32
  3374   001FF4  181B               	xorwf	vfpfcnvrt@c^0,w,c
  3375   001FF6  A4D8               	btfss	status,2,c
  3376   001FF8  EF00  F010         	goto	u2361
  3377   001FFC  EF02  F010         	goto	u2360
  3378   002000                     u2361:
  3379   002000  EFEB  F00F         	goto	l3203
  3380   002004                     u2360:
  3381   002004  EF8B  F00F         	goto	l1463
  3382   002008                     l3211:
  3383                           
  3384                           ; BSR set to: 0
  3385   002008  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3386   00200C                     	if	1	;There is more than 1 active tblptr byte
  3387   00200C  0E0E               	movlw	high __smallconst
  3388   00200E  6EF7               	movwf	tblptrh,c
  3389   002010                     	endif
  3390   002010                     	if	0	;tblptru may be non-zero
  3391   002010                     	endif
  3392   002010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3393   002010  0E00               	movlw	low (__smallconst shr (0+16))
  3394   002012  6EF8               	movwf	tblptru,c
  3395   002014                     	endif
  3396   002014  0008               	tblrd		*
  3397   002016  50F5               	movf	tablat,w,c
  3398   002018  6E11               	movwf	??_vfpfcnvrt^0,c
  3399   00201A  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  3400                           
  3401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3402                           ; Switch size 1, requested type "simple"
  3403                           ; Number of cases is 1, Range of values is 0 to 0
  3404                           ; switch strategies available:
  3405                           ; Name         Instructions Cycles
  3406                           ; simple_byte            4     3 (average)
  3407                           ;	Chosen strategy is simple_byte
  3408   00201C  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  3409   00201E  0A00               	xorlw	0	; case 0
  3410   002020  B4D8               	btfsc	status,2,c
  3411   002022  EF15  F010         	goto	l4559
  3412   002026  EF1C  F010         	goto	l3213
  3413   00202A                     l4559:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ; Switch size 1, requested type "simple"
  3417                           ; Number of cases is 1, Range of values is 117 to 117
  3418                           ; switch strategies available:
  3419                           ; Name         Instructions Cycles
  3420                           ; simple_byte            4     3 (average)
  3421                           ;	Chosen strategy is simple_byte
  3422   00202A  5011               	movf	??_vfpfcnvrt^0,w,c
  3423   00202C  0A75               	xorlw	117	; case 117
  3424   00202E  B4D8               	btfsc	status,2,c
  3425   002030  EFB4  F00F         	goto	l3191
  3426   002034  EF1C  F010         	goto	l3213
  3427   002038                     l3213:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3431   002038  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3432   00203A  6ED9               	movwf	fsr2l,c
  3433   00203C  6ADA               	clrf	fsr2h,c
  3434   00203E  2ADF               	incf	indf2,f,c
  3435   002040                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  3438   002040  0E00               	movlw	0
  3439   002042  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  3440   002044  0E00               	movlw	0
  3441   002046  6E0E               	movwf	?_vfpfcnvrt^0,c
  3442   002048  EF3F  F010         	goto	l1464
  3443   00204C                     l3219:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3446   00204C  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3447   00204E  6ED9               	movwf	fsr2l,c
  3448   002050  6ADA               	clrf	fsr2h,c
  3449   002052  CFDF FFF6          	movff	indf2,tblptrl
  3450   002056                     	if	1	;There is more than 1 active tblptr byte
  3451   002056  0E0E               	movlw	high __smallconst
  3452   002058  6EF7               	movwf	tblptrh,c
  3453   00205A                     	endif
  3454   00205A                     	if	0	;tblptru may be non-zero
  3455   00205A                     	endif
  3456   00205A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3457   00205A  0E00               	movlw	low (__smallconst shr (0+16))
  3458   00205C  6EF8               	movwf	tblptru,c
  3459   00205E                     	endif
  3460   00205E  0008               	tblrd		*
  3461   002060  50F5               	movf	tablat,w,c
  3462   002062  6E01               	movwf	fputc@c^0,c
  3463   002064  6A02               	clrf	(fputc@c+1)^0,c
  3464   002066  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3465   00206A  EC9B  F015         	call	_fputc	;wreg free
  3466   00206E                     
  3467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  3468   00206E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3469   002070  6ED9               	movwf	fsr2l,c
  3470   002072  6ADA               	clrf	fsr2h,c
  3471   002074  2ADF               	incf	indf2,f,c
  3472   002076                     
  3473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  3474   002076  0E00               	movlw	0
  3475   002078  6E0F               	movwf	(?_vfpfcnvrt+1)^0,c
  3476   00207A  0E01               	movlw	1
  3477   00207C  6E0E               	movwf	?_vfpfcnvrt^0,c
  3478   00207E                     l1464:
  3479   00207E  0012               	return		;funcret
  3480   002080                     __end_of_vfpfcnvrt:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _fputc *****************
  3484 ;; Defined at:
  3485 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  c               2    0[COMRAM] int 
  3488 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3489 ;;		 -> sprintf@f(12), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    0[COMRAM] int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3501 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;Total ram usage:        8 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		_putch
  3510 ;; This function is called by:
  3511 ;;		_vfpfcnvrt
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text17
  3516   002B36                     __ptext17:
  3517                           	callstack 0
  3518   002B36                     _fputc:
  3519                           	callstack 23
  3520   002B36  5003               	movf	fputc@fp^0,w,c
  3521   002B38  B4D8               	btfsc	status,2,c
  3522   002B3A  EFA1  F015         	goto	u2161
  3523   002B3E  EFA3  F015         	goto	u2160
  3524   002B42                     u2161:
  3525   002B42  EFAB  F015         	goto	l3095
  3526   002B46                     u2160:
  3527   002B46  5003               	movf	fputc@fp^0,w,c
  3528   002B48  A4D8               	btfss	status,2,c
  3529   002B4A  EFA9  F015         	goto	u2171
  3530   002B4E  EFAB  F015         	goto	u2170
  3531   002B52                     u2171:
  3532   002B52  EFB0  F015         	goto	l3097
  3533   002B56                     u2170:
  3534   002B56                     l3095:
  3535   002B56  5001               	movf	fputc@c^0,w,c
  3536   002B58  ECB0  F01B         	call	_putch
  3537   002B5C  EFF7  F015         	goto	l1502
  3538   002B60                     l3097:
  3539   002B60  5003               	movf	fputc@fp^0,w,c
  3540   002B62  6ED9               	movwf	fsr2l,c
  3541   002B64  6ADA               	clrf	fsr2h,c
  3542   002B66  0E0A               	movlw	10
  3543   002B68  26D9               	addwf	fsr2l,f,c
  3544   002B6A  50DE               	movf	postinc2,w,c
  3545   002B6C  10DE               	iorwf	postinc2,w,c
  3546   002B6E  B4D8               	btfsc	status,2,c
  3547   002B70  EFBC  F015         	goto	u2181
  3548   002B74  EFBE  F015         	goto	u2180
  3549   002B78                     u2181:
  3550   002B78  EFD7  F015         	goto	l3101
  3551   002B7C                     u2180:
  3552   002B7C  5003               	movf	fputc@fp^0,w,c
  3553   002B7E  6ED9               	movwf	fsr2l,c
  3554   002B80  6ADA               	clrf	fsr2h,c
  3555   002B82  0E0A               	movlw	10
  3556   002B84  26D9               	addwf	fsr2l,f,c
  3557   002B86  5003               	movf	fputc@fp^0,w,c
  3558   002B88  6EE1               	movwf	fsr1l,c
  3559   002B8A  6AE2               	clrf	fsr1h,c
  3560   002B8C  0E03               	movlw	3
  3561   002B8E  26E1               	addwf	fsr1l,f,c
  3562   002B90  50DE               	movf	postinc2,w,c
  3563   002B92  5CE6               	subwf	postinc1,w,c
  3564   002B94  50E6               	movf	postinc1,w,c
  3565   002B96  0A80               	xorlw	128
  3566   002B98  6E08               	movwf	(??_fputc+4)^0,c
  3567   002B9A  50DE               	movf	postinc2,w,c
  3568   002B9C  0A80               	xorlw	128
  3569   002B9E  5808               	subwfb	(??_fputc+4)^0,w,c
  3570   002BA0  B0D8               	btfsc	status,0,c
  3571   002BA2  EFD5  F015         	goto	u2191
  3572   002BA6  EFD7  F015         	goto	u2190
  3573   002BAA                     u2191:
  3574   002BAA  EFF7  F015         	goto	l1502
  3575   002BAE                     u2190:
  3576   002BAE                     l3101:
  3577   002BAE  5003               	movf	fputc@fp^0,w,c
  3578   002BB0  6ED9               	movwf	fsr2l,c
  3579   002BB2  6ADA               	clrf	fsr2h,c
  3580   002BB4  0E03               	movlw	3
  3581   002BB6  26D9               	addwf	fsr2l,f,c
  3582   002BB8  CFDE F004          	movff	postinc2,??_fputc
  3583   002BBC  CFDD F005          	movff	postdec2,??_fputc+1
  3584   002BC0  5003               	movf	fputc@fp^0,w,c
  3585   002BC2  6ED9               	movwf	fsr2l,c
  3586   002BC4  6ADA               	clrf	fsr2h,c
  3587   002BC6  CFDE F006          	movff	postinc2,??_fputc+2
  3588   002BCA  CFDD F007          	movff	postdec2,??_fputc+3
  3589   002BCE  5004               	movf	??_fputc^0,w,c
  3590   002BD0  2406               	addwf	(??_fputc+2)^0,w,c
  3591   002BD2  6ED9               	movwf	fsr2l,c
  3592   002BD4  5005               	movf	(??_fputc+1)^0,w,c
  3593   002BD6  2007               	addwfc	(??_fputc+3)^0,w,c
  3594   002BD8  6EDA               	movwf	fsr2h,c
  3595   002BDA  C001  FFDF         	movff	fputc@c,indf2
  3596   002BDE  5003               	movf	fputc@fp^0,w,c
  3597   002BE0  6ED9               	movwf	fsr2l,c
  3598   002BE2  6ADA               	clrf	fsr2h,c
  3599   002BE4  0E03               	movlw	3
  3600   002BE6  26D9               	addwf	fsr2l,f,c
  3601   002BE8  2ADE               	incf	postinc2,f,c
  3602   002BEA  0E00               	movlw	0
  3603   002BEC  22DD               	addwfc	postdec2,f,c
  3604   002BEE                     l1502:
  3605   002BEE  0012               	return		;funcret
  3606   002BF0                     __end_of_fputc:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _putch *****************
  3610 ;; Defined at:
  3611 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  c               1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  c               1    0[COMRAM] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_fputc
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text18
  3640   003760                     __ptext18:
  3641                           	callstack 0
  3642   003760                     _putch:
  3643                           	callstack 23
  3644   003760  0012               	return		;funcret
  3645   003762                     __end_of_putch:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _abs *****************
  3649 ;; Defined at:
  3650 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  a               2    6[COMRAM] int 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2    6[COMRAM] int 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;Total ram usage:        4 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 1
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_vfpfcnvrt
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text19
  3679   003558                     __ptext19:
  3680                           	callstack 0
  3681   003558                     _abs:
  3682                           	callstack 24
  3683   003558  BE08               	btfsc	(abs@a+1)^0,7,c
  3684   00355A  EFB1  F01A         	goto	u2201
  3685   00355E  EFB3  F01A         	goto	u2200
  3686   003562                     u2201:
  3687   003562  EFB9  F01A         	goto	l1487
  3688   003566                     u2200:
  3689   003566  C007  F007         	movff	abs@a,?_abs
  3690   00356A  C008  F008         	movff	abs@a+1,?_abs+1
  3691   00356E  EFC5  F01A         	goto	l1490
  3692   003572                     l1487:
  3693   003572  C007  F009         	movff	abs@a,??_abs
  3694   003576  C008  F00A         	movff	abs@a+1,??_abs+1
  3695   00357A  1E09               	comf	??_abs^0,f,c
  3696   00357C  1E0A               	comf	(??_abs+1)^0,f,c
  3697   00357E  4A09               	infsnz	??_abs^0,f,c
  3698   003580  2A0A               	incf	(??_abs+1)^0,f,c
  3699   003582  C009  F007         	movff	??_abs,?_abs
  3700   003586  C00A  F008         	movff	??_abs+1,?_abs+1
  3701   00358A                     l1490:
  3702   00358A  0012               	return		;funcret
  3703   00358C                     __end_of_abs:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function ___lwmod *****************
  3707 ;; Defined at:
  3708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  dividend        2    0[COMRAM] unsigned int 
  3711 ;;  divisor         2    2[COMRAM] unsigned int 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  counter         1    4[COMRAM] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  2    0[COMRAM] unsigned int 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;Total ram usage:        5 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_vfpfcnvrt
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text20
  3738   0030AE                     __ptext20:
  3739                           	callstack 0
  3740   0030AE                     ___lwmod:
  3741                           	callstack 24
  3742   0030AE  5003               	movf	___lwmod@divisor^0,w,c
  3743   0030B0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3744   0030B2  B4D8               	btfsc	status,2,c
  3745   0030B4  EF5E  F018         	goto	u2131
  3746   0030B8  EF60  F018         	goto	u2130
  3747   0030BC                     u2131:
  3748   0030BC  EF84  F018         	goto	l1245
  3749   0030C0                     u2130:
  3750   0030C0  0E01               	movlw	1
  3751   0030C2  6E05               	movwf	___lwmod@counter^0,c
  3752   0030C4  EF68  F018         	goto	l3081
  3753   0030C8                     l3079:
  3754   0030C8  90D8               	bcf	status,0,c
  3755   0030CA  3603               	rlcf	___lwmod@divisor^0,f,c
  3756   0030CC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3757   0030CE  2A05               	incf	___lwmod@counter^0,f,c
  3758   0030D0                     l3081:
  3759   0030D0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3760   0030D2  EF6D  F018         	goto	u2141
  3761   0030D6  EF6F  F018         	goto	u2140
  3762   0030DA                     u2141:
  3763   0030DA  EF64  F018         	goto	l3079
  3764   0030DE                     u2140:
  3765   0030DE                     l3083:
  3766   0030DE  5003               	movf	___lwmod@divisor^0,w,c
  3767   0030E0  5C01               	subwf	___lwmod@dividend^0,w,c
  3768   0030E2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3769   0030E4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3770   0030E6  A0D8               	btfss	status,0,c
  3771   0030E8  EF78  F018         	goto	u2151
  3772   0030EC  EF7A  F018         	goto	u2150
  3773   0030F0                     u2151:
  3774   0030F0  EF7E  F018         	goto	l3087
  3775   0030F4                     u2150:
  3776   0030F4  5003               	movf	___lwmod@divisor^0,w,c
  3777   0030F6  5E01               	subwf	___lwmod@dividend^0,f,c
  3778   0030F8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3779   0030FA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3780   0030FC                     l3087:
  3781   0030FC  90D8               	bcf	status,0,c
  3782   0030FE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3783   003100  3203               	rrcf	___lwmod@divisor^0,f,c
  3784   003102  2E05               	decfsz	___lwmod@counter^0,f,c
  3785   003104  EF6F  F018         	goto	l3083
  3786   003108                     l1245:
  3787   003108  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3788   00310C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3789   003110  0012               	return		;funcret
  3790   003112                     __end_of___lwmod:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function ___lwdiv *****************
  3794 ;; Defined at:
  3795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  dividend        2    6[COMRAM] unsigned int 
  3798 ;;  divisor         2    8[COMRAM] unsigned int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  quotient        2   10[COMRAM] unsigned int 
  3801 ;;  counter         1   12[COMRAM] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2    6[COMRAM] unsigned int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;Total ram usage:        7 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_setMotorPWM
  3822 ;;		_vfpfcnvrt
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text21
  3827   002FD0                     __ptext21:
  3828                           	callstack 0
  3829   002FD0                     ___lwdiv:
  3830                           	callstack 26
  3831   002FD0  0E00               	movlw	0
  3832   002FD2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3833   002FD4  0E00               	movlw	0
  3834   002FD6  6E0B               	movwf	___lwdiv@quotient^0,c
  3835   002FD8  5009               	movf	___lwdiv@divisor^0,w,c
  3836   002FDA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3837   002FDC  B4D8               	btfsc	status,2,c
  3838   002FDE  EFF3  F017         	goto	u2101
  3839   002FE2  EFF5  F017         	goto	u2100
  3840   002FE6                     u2101:
  3841   002FE6  EF1D  F018         	goto	l1235
  3842   002FEA                     u2100:
  3843   002FEA  0E01               	movlw	1
  3844   002FEC  6E0D               	movwf	___lwdiv@counter^0,c
  3845   002FEE  EFFD  F017         	goto	l3061
  3846   002FF2                     l3059:
  3847   002FF2  90D8               	bcf	status,0,c
  3848   002FF4  3609               	rlcf	___lwdiv@divisor^0,f,c
  3849   002FF6  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3850   002FF8  2A0D               	incf	___lwdiv@counter^0,f,c
  3851   002FFA                     l3061:
  3852   002FFA  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3853   002FFC  EF02  F018         	goto	u2111
  3854   003000  EF04  F018         	goto	u2110
  3855   003004                     u2111:
  3856   003004  EFF9  F017         	goto	l3059
  3857   003008                     u2110:
  3858   003008                     l3063:
  3859   003008  90D8               	bcf	status,0,c
  3860   00300A  360B               	rlcf	___lwdiv@quotient^0,f,c
  3861   00300C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3862   00300E  5009               	movf	___lwdiv@divisor^0,w,c
  3863   003010  5C07               	subwf	___lwdiv@dividend^0,w,c
  3864   003012  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3865   003014  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3866   003016  A0D8               	btfss	status,0,c
  3867   003018  EF10  F018         	goto	u2121
  3868   00301C  EF12  F018         	goto	u2120
  3869   003020                     u2121:
  3870   003020  EF17  F018         	goto	l3071
  3871   003024                     u2120:
  3872   003024  5009               	movf	___lwdiv@divisor^0,w,c
  3873   003026  5E07               	subwf	___lwdiv@dividend^0,f,c
  3874   003028  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3875   00302A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3876   00302C  800B               	bsf	___lwdiv@quotient^0,0,c
  3877   00302E                     l3071:
  3878   00302E  90D8               	bcf	status,0,c
  3879   003030  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3880   003032  3209               	rrcf	___lwdiv@divisor^0,f,c
  3881   003034  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3882   003036  EF04  F018         	goto	l3063
  3883   00303A                     l1235:
  3884   00303A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3885   00303E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3886   003042  0012               	return		;funcret
  3887   003044                     __end_of___lwdiv:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function ___awmod *****************
  3891 ;; Defined at:
  3892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  dividend        2    0[COMRAM] int 
  3895 ;;  divisor         2    2[COMRAM] int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  sign            1    5[COMRAM] unsigned char 
  3898 ;;  counter         1    4[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    0[COMRAM] int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3912 ;;Total ram usage:        6 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 1
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_vfpfcnvrt
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text22
  3923   002BF0                     __ptext22:
  3924                           	callstack 0
  3925   002BF0                     ___awmod:
  3926                           	callstack 24
  3927   002BF0  0E00               	movlw	0
  3928   002BF2  6E06               	movwf	___awmod@sign^0,c
  3929   002BF4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3930   002BF6  EF01  F016         	goto	u2040
  3931   002BFA  EFFF  F015         	goto	u2041
  3932   002BFE                     u2041:
  3933   002BFE  EF07  F016         	goto	l3025
  3934   002C02                     u2040:
  3935   002C02  6C01               	negf	___awmod@dividend^0,c
  3936   002C04  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3937   002C06  B0D8               	btfsc	status,0,c
  3938   002C08  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3939   002C0A  0E01               	movlw	1
  3940   002C0C  6E06               	movwf	___awmod@sign^0,c
  3941   002C0E                     l3025:
  3942   002C0E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3943   002C10  EF0E  F016         	goto	u2050
  3944   002C14  EF0C  F016         	goto	u2051
  3945   002C18                     u2051:
  3946   002C18  EF12  F016         	goto	l3029
  3947   002C1C                     u2050:
  3948   002C1C  6C03               	negf	___awmod@divisor^0,c
  3949   002C1E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3950   002C20  B0D8               	btfsc	status,0,c
  3951   002C22  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3952   002C24                     l3029:
  3953   002C24  5003               	movf	___awmod@divisor^0,w,c
  3954   002C26  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3955   002C28  B4D8               	btfsc	status,2,c
  3956   002C2A  EF19  F016         	goto	u2061
  3957   002C2E  EF1B  F016         	goto	u2060
  3958   002C32                     u2061:
  3959   002C32  EF3F  F016         	goto	l3045
  3960   002C36                     u2060:
  3961   002C36  0E01               	movlw	1
  3962   002C38  6E05               	movwf	___awmod@counter^0,c
  3963   002C3A  EF23  F016         	goto	l3035
  3964   002C3E                     l3033:
  3965   002C3E  90D8               	bcf	status,0,c
  3966   002C40  3603               	rlcf	___awmod@divisor^0,f,c
  3967   002C42  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3968   002C44  2A05               	incf	___awmod@counter^0,f,c
  3969   002C46                     l3035:
  3970   002C46  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3971   002C48  EF28  F016         	goto	u2071
  3972   002C4C  EF2A  F016         	goto	u2070
  3973   002C50                     u2071:
  3974   002C50  EF1F  F016         	goto	l3033
  3975   002C54                     u2070:
  3976   002C54                     l3037:
  3977   002C54  5003               	movf	___awmod@divisor^0,w,c
  3978   002C56  5C01               	subwf	___awmod@dividend^0,w,c
  3979   002C58  5004               	movf	(___awmod@divisor+1)^0,w,c
  3980   002C5A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3981   002C5C  A0D8               	btfss	status,0,c
  3982   002C5E  EF33  F016         	goto	u2081
  3983   002C62  EF35  F016         	goto	u2080
  3984   002C66                     u2081:
  3985   002C66  EF39  F016         	goto	l3041
  3986   002C6A                     u2080:
  3987   002C6A  5003               	movf	___awmod@divisor^0,w,c
  3988   002C6C  5E01               	subwf	___awmod@dividend^0,f,c
  3989   002C6E  5004               	movf	(___awmod@divisor+1)^0,w,c
  3990   002C70  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3991   002C72                     l3041:
  3992   002C72  90D8               	bcf	status,0,c
  3993   002C74  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3994   002C76  3203               	rrcf	___awmod@divisor^0,f,c
  3995   002C78  2E05               	decfsz	___awmod@counter^0,f,c
  3996   002C7A  EF2A  F016         	goto	l3037
  3997   002C7E                     l3045:
  3998   002C7E  5006               	movf	___awmod@sign^0,w,c
  3999   002C80  B4D8               	btfsc	status,2,c
  4000   002C82  EF45  F016         	goto	u2091
  4001   002C86  EF47  F016         	goto	u2090
  4002   002C8A                     u2091:
  4003   002C8A  EF4B  F016         	goto	l3049
  4004   002C8E                     u2090:
  4005   002C8E  6C01               	negf	___awmod@dividend^0,c
  4006   002C90  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4007   002C92  B0D8               	btfsc	status,0,c
  4008   002C94  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4009   002C96                     l3049:
  4010   002C96  C001  F001         	movff	___awmod@dividend,?___awmod
  4011   002C9A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4012   002C9E  0012               	return		;funcret
  4013   002CA0                     __end_of___awmod:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function ___awdiv *****************
  4017 ;; Defined at:
  4018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  dividend        2    0[COMRAM] int 
  4021 ;;  divisor         2    2[COMRAM] int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  quotient        2    6[COMRAM] int 
  4024 ;;  sign            1    5[COMRAM] unsigned char 
  4025 ;;  counter         1    4[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[COMRAM] int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_vfpfcnvrt
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text23
  4050   002A72                     __ptext23:
  4051                           	callstack 0
  4052   002A72                     ___awdiv:
  4053                           	callstack 24
  4054   002A72  0E00               	movlw	0
  4055   002A74  6E06               	movwf	___awdiv@sign^0,c
  4056   002A76  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4057   002A78  EF42  F015         	goto	u1980
  4058   002A7C  EF40  F015         	goto	u1981
  4059   002A80                     u1981:
  4060   002A80  EF48  F015         	goto	l2981
  4061   002A84                     u1980:
  4062   002A84  6C03               	negf	___awdiv@divisor^0,c
  4063   002A86  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4064   002A88  B0D8               	btfsc	status,0,c
  4065   002A8A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4066   002A8C  0E01               	movlw	1
  4067   002A8E  6E06               	movwf	___awdiv@sign^0,c
  4068   002A90                     l2981:
  4069   002A90  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4070   002A92  EF4F  F015         	goto	u1990
  4071   002A96  EF4D  F015         	goto	u1991
  4072   002A9A                     u1991:
  4073   002A9A  EF55  F015         	goto	l2987
  4074   002A9E                     u1990:
  4075   002A9E  6C01               	negf	___awdiv@dividend^0,c
  4076   002AA0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4077   002AA2  B0D8               	btfsc	status,0,c
  4078   002AA4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4079   002AA6  0E01               	movlw	1
  4080   002AA8  1A06               	xorwf	___awdiv@sign^0,f,c
  4081   002AAA                     l2987:
  4082   002AAA  0E00               	movlw	0
  4083   002AAC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4084   002AAE  0E00               	movlw	0
  4085   002AB0  6E07               	movwf	___awdiv@quotient^0,c
  4086   002AB2  5003               	movf	___awdiv@divisor^0,w,c
  4087   002AB4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4088   002AB6  B4D8               	btfsc	status,2,c
  4089   002AB8  EF60  F015         	goto	u2001
  4090   002ABC  EF62  F015         	goto	u2000
  4091   002AC0                     u2001:
  4092   002AC0  EF8A  F015         	goto	l3009
  4093   002AC4                     u2000:
  4094   002AC4  0E01               	movlw	1
  4095   002AC6  6E05               	movwf	___awdiv@counter^0,c
  4096   002AC8  EF6A  F015         	goto	l2995
  4097   002ACC                     l2993:
  4098   002ACC  90D8               	bcf	status,0,c
  4099   002ACE  3603               	rlcf	___awdiv@divisor^0,f,c
  4100   002AD0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4101   002AD2  2A05               	incf	___awdiv@counter^0,f,c
  4102   002AD4                     l2995:
  4103   002AD4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4104   002AD6  EF6F  F015         	goto	u2011
  4105   002ADA  EF71  F015         	goto	u2010
  4106   002ADE                     u2011:
  4107   002ADE  EF66  F015         	goto	l2993
  4108   002AE2                     u2010:
  4109   002AE2                     l2997:
  4110   002AE2  90D8               	bcf	status,0,c
  4111   002AE4  3607               	rlcf	___awdiv@quotient^0,f,c
  4112   002AE6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4113   002AE8  5003               	movf	___awdiv@divisor^0,w,c
  4114   002AEA  5C01               	subwf	___awdiv@dividend^0,w,c
  4115   002AEC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4116   002AEE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4117   002AF0  A0D8               	btfss	status,0,c
  4118   002AF2  EF7D  F015         	goto	u2021
  4119   002AF6  EF7F  F015         	goto	u2020
  4120   002AFA                     u2021:
  4121   002AFA  EF84  F015         	goto	l3005
  4122   002AFE                     u2020:
  4123   002AFE  5003               	movf	___awdiv@divisor^0,w,c
  4124   002B00  5E01               	subwf	___awdiv@dividend^0,f,c
  4125   002B02  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4126   002B04  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4127   002B06  8007               	bsf	___awdiv@quotient^0,0,c
  4128   002B08                     l3005:
  4129   002B08  90D8               	bcf	status,0,c
  4130   002B0A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4131   002B0C  3203               	rrcf	___awdiv@divisor^0,f,c
  4132   002B0E  2E05               	decfsz	___awdiv@counter^0,f,c
  4133   002B10  EF71  F015         	goto	l2997
  4134   002B14                     l3009:
  4135   002B14  5006               	movf	___awdiv@sign^0,w,c
  4136   002B16  B4D8               	btfsc	status,2,c
  4137   002B18  EF90  F015         	goto	u2031
  4138   002B1C  EF92  F015         	goto	u2030
  4139   002B20                     u2031:
  4140   002B20  EF96  F015         	goto	l3013
  4141   002B24                     u2030:
  4142   002B24  6C07               	negf	___awdiv@quotient^0,c
  4143   002B26  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4144   002B28  B0D8               	btfsc	status,0,c
  4145   002B2A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4146   002B2C                     l3013:
  4147   002B2C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4148   002B30  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4149   002B34  0012               	return		;funcret
  4150   002B36                     __end_of___awdiv:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _sendStringSerial4 *****************
  4154 ;; Defined at:
  4155 ;;		line 41 in file "serial.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  string          2    1[COMRAM] PTR unsigned char 
  4158 ;;		 -> sendHSVvalSerial4@tempStr(21), sendRGBCvalSerial4@tempStr(26), STR_4(3), sendArrayCharSerial4@tempStr(161), 
  4159 ;;		 -> sendIntSerial4@string(17), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 2
  4178 ;; This function calls:
  4179 ;;		_sendCharSerial4
  4180 ;; This function is called by:
  4181 ;;		_sendArrayCharSerial4
  4182 ;;		_sendRGBCvalSerial4
  4183 ;;		_sendHSVvalSerial4
  4184 ;;		_sendIntSerial4
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text24
  4189   003112                     __ptext24:
  4190                           	callstack 0
  4191   003112                     _sendStringSerial4:
  4192                           	callstack 26
  4193   003112                     
  4194                           ;serial.c: 43:     while(*string != 0){
  4195   003112  EFA0  F018         	goto	l3431
  4196   003116                     l3427:
  4197                           
  4198                           ;serial.c: 44:   sendCharSerial4(*string++);
  4199   003116  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  4200   00311A  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  4201   00311E  0E00               	movlw	low (__smallconst shr (0+16))
  4202   003120  6EF8               	movwf	tblptru,c
  4203   003122  0E0D               	movlw	(high __ramtop+-1)
  4204   003124  64F7               	cpfsgt	tblptrh,c
  4205   003126  D003               	bra	u2577
  4206   003128  0008               	tblrd		*
  4207   00312A  50F5               	movf	tablat,w,c
  4208   00312C  D005               	bra	u2570
  4209   00312E                     u2577:
  4210   00312E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4211   003132  CFF7 FFEA          	movff	tblptrh,fsr0h
  4212   003136  50EF               	movf	indf0,w,c
  4213   003138                     u2570:
  4214   003138  EC74  F01B         	call	_sendCharSerial4
  4215   00313C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4216   00313E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4217   003140                     l3431:
  4218                           
  4219                           ;serial.c: 43:     while(*string != 0){
  4220   003140  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  4221   003144  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  4222   003148  0E00               	movlw	low (__smallconst shr (0+16))
  4223   00314A  6EF8               	movwf	tblptru,c
  4224   00314C  0E0D               	movlw	(high __ramtop+-1)
  4225   00314E  64F7               	cpfsgt	tblptrh,c
  4226   003150  D003               	bra	u2587
  4227   003152  0008               	tblrd		*
  4228   003154  50F5               	movf	tablat,w,c
  4229   003156  D005               	bra	u2580
  4230   003158                     u2587:
  4231   003158  CFF6 FFE9          	movff	tblptrl,fsr0l
  4232   00315C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4233   003160  50EF               	movf	indf0,w,c
  4234   003162                     u2580:
  4235   003162  0900               	iorlw	0
  4236   003164  A4D8               	btfss	status,2,c
  4237   003166  EFB7  F018         	goto	u2591
  4238   00316A  EFB9  F018         	goto	u2590
  4239   00316E                     u2591:
  4240   00316E  EF8B  F018         	goto	l3427
  4241   003172                     u2590:
  4242   003172  0012               	return		;funcret
  4243   003174                     __end_of_sendStringSerial4:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _sendCharSerial4 *****************
  4247 ;; Defined at:
  4248 ;;		line 33 in file "serial.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  charToSend      1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  charToSend      1    0[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        1 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_sendStringSerial4
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text25
  4277   0036E8                     __ptext25:
  4278                           	callstack 0
  4279   0036E8                     _sendCharSerial4:
  4280                           	callstack 26
  4281                           
  4282                           ;incstack = 0
  4283                           ;sendCharSerial4@charToSend stored from wreg
  4284   0036E8  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4285   0036EA                     l447:
  4286   0036EA  010E               	movlb	14	; () banked
  4287   0036EC  A537               	btfss	55,2,b	;volatile
  4288   0036EE  EF7B  F01B         	goto	u2491
  4289   0036F2  EF7D  F01B         	goto	u2490
  4290   0036F6                     u2491:
  4291   0036F6  EF75  F01B         	goto	l447
  4292   0036FA                     u2490:
  4293   0036FA                     
  4294                           ; BSR set to: 14
  4295                           ;serial.c: 35:     TX4REG = charToSend;
  4296   0036FA  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4297   0036FE                     
  4298                           ; BSR set to: 14
  4299   0036FE  0012               	return		;funcret
  4300   003700                     __end_of_sendCharSerial4:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _scale_RGB *****************
  4304 ;; Defined at:
  4305 ;;		line 197 in file "color.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  p               1   49[COMRAM] PTR struct RGBC_val
  4308 ;;		 -> main@RGBC_colour(8), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;Total ram usage:        3 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 2
  4327 ;; This function calls:
  4328 ;;		___flmul
  4329 ;;		___fltol
  4330 ;;		___xxtofl
  4331 ;; This function is called by:
  4332 ;;		_forward_navigation
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text26
  4337   0028D4                     __ptext26:
  4338                           	callstack 0
  4339   0028D4                     _scale_RGB:
  4340                           	callstack 27
  4341   0028D4                     
  4342                           ;color.c: 197: void scale_RGB(struct RGBC_val *p);color.c: 198: {;color.c: 199:     p->R
      +                           *= 0.5;
  4343   0028D4  0E00               	movlw	0
  4344   0028D6  6E13               	movwf	___flmul@a^0,c
  4345   0028D8  0E00               	movlw	0
  4346   0028DA  6E14               	movwf	(___flmul@a+1)^0,c
  4347   0028DC  0E00               	movlw	0
  4348   0028DE  6E15               	movwf	(___flmul@a+2)^0,c
  4349   0028E0  0E3F               	movlw	63
  4350   0028E2  6E16               	movwf	(___flmul@a+3)^0,c
  4351   0028E4  5032               	movf	scale_RGB@p^0,w,c
  4352   0028E6  6ED9               	movwf	fsr2l,c
  4353   0028E8  6ADA               	clrf	fsr2h,c
  4354   0028EA  CFDE F033          	movff	postinc2,??_scale_RGB
  4355   0028EE  CFDD F034          	movff	postdec2,??_scale_RGB+1
  4356   0028F2  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  4357   0028F6  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  4358   0028FA  6A03               	clrf	(___xxtofl@val+2)^0,c
  4359   0028FC  6A04               	clrf	(___xxtofl@val+3)^0,c
  4360   0028FE  0E00               	movlw	0
  4361   002900  EC3E  F011         	call	___xxtofl
  4362   002904  C001  F00F         	movff	?___xxtofl,___flmul@b
  4363   002908  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4364   00290C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4365   002910  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4366   002914  ECA5  F00C         	call	___flmul	;wreg free
  4367   002918  C00F  F028         	movff	?___flmul,___fltol@f1
  4368   00291C  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4369   002920  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4370   002924  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4371   002928  ECE7  F013         	call	___fltol	;wreg free
  4372   00292C  5032               	movf	scale_RGB@p^0,w,c
  4373   00292E  6ED9               	movwf	fsr2l,c
  4374   002930  6ADA               	clrf	fsr2h,c
  4375   002932  C028  FFDE         	movff	?___fltol,postinc2
  4376   002936  C029  FFDD         	movff	?___fltol+1,postdec2
  4377                           
  4378                           ;color.c: 200:     p->G *= 0.7;
  4379   00293A  0E33               	movlw	51
  4380   00293C  6E13               	movwf	___flmul@a^0,c
  4381   00293E  0E33               	movlw	51
  4382   002940  6E14               	movwf	(___flmul@a+1)^0,c
  4383   002942  0E33               	movlw	51
  4384   002944  6E15               	movwf	(___flmul@a+2)^0,c
  4385   002946  0E3F               	movlw	63
  4386   002948  6E16               	movwf	(___flmul@a+3)^0,c
  4387   00294A  5032               	movf	scale_RGB@p^0,w,c
  4388   00294C  6ED9               	movwf	fsr2l,c
  4389   00294E  6ADA               	clrf	fsr2h,c
  4390   002950  0E02               	movlw	2
  4391   002952  26D9               	addwf	fsr2l,f,c
  4392   002954  CFDE F033          	movff	postinc2,??_scale_RGB
  4393   002958  CFDD F034          	movff	postdec2,??_scale_RGB+1
  4394   00295C  C033  F001         	movff	??_scale_RGB,___xxtofl@val
  4395   002960  C034  F002         	movff	??_scale_RGB+1,___xxtofl@val+1
  4396   002964  6A03               	clrf	(___xxtofl@val+2)^0,c
  4397   002966  6A04               	clrf	(___xxtofl@val+3)^0,c
  4398   002968  0E00               	movlw	0
  4399   00296A  EC3E  F011         	call	___xxtofl
  4400   00296E  C001  F00F         	movff	?___xxtofl,___flmul@b
  4401   002972  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  4402   002976  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  4403   00297A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  4404   00297E  ECA5  F00C         	call	___flmul	;wreg free
  4405   002982  C00F  F028         	movff	?___flmul,___fltol@f1
  4406   002986  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  4407   00298A  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  4408   00298E  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  4409   002992  ECE7  F013         	call	___fltol	;wreg free
  4410   002996  5032               	movf	scale_RGB@p^0,w,c
  4411   002998  6ED9               	movwf	fsr2l,c
  4412   00299A  6ADA               	clrf	fsr2h,c
  4413   00299C  0E02               	movlw	2
  4414   00299E  26D9               	addwf	fsr2l,f,c
  4415   0029A0  C028  FFDE         	movff	?___fltol,postinc2
  4416   0029A4  C029  FFDD         	movff	?___fltol+1,postdec2
  4417   0029A8  0012               	return		;funcret
  4418   0029AA                     __end_of_scale_RGB:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function ___xxtofl *****************
  4422 ;; Defined at:
  4423 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  sign            1    wreg     unsigned char 
  4426 ;;  val             4    0[COMRAM] long 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  sign            1    8[COMRAM] unsigned char 
  4429 ;;  arg             4   10[COMRAM] unsigned long 
  4430 ;;  exp             1    9[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  4    0[COMRAM] unsigned char 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:       14 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_scale_RGB
  4451 ;;		_stop
  4452 ;;		_turnLeft
  4453 ;;		_turnRight
  4454 ;;		_fullSpeedAhead
  4455 ;;		_fullSpeedReverse
  4456 ;;		_turnLeft90
  4457 ;;		_turnRight90
  4458 ;;		_turnLeft135
  4459 ;;		_turnRight135
  4460 ;;		_UTurn
  4461 ;;		_headbuttReverse
  4462 ;;		_squareReverse
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text27
  4467   00227C                     __ptext27:
  4468                           	callstack 0
  4469   00227C                     ___xxtofl:
  4470                           	callstack 27
  4471                           
  4472                           ;incstack = 0
  4473                           ;___xxtofl@sign stored from wreg
  4474   00227C  6E09               	movwf	___xxtofl@sign^0,c
  4475   00227E  5009               	movf	___xxtofl@sign^0,w,c
  4476   002280  B4D8               	btfsc	status,2,c
  4477   002282  EF45  F011         	goto	u2911
  4478   002286  EF47  F011         	goto	u2910
  4479   00228A                     u2911:
  4480   00228A  EF69  F011         	goto	l1399
  4481   00228E                     u2910:
  4482   00228E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4483   002290  EF4E  F011         	goto	u2920
  4484   002294  EF4C  F011         	goto	u2921
  4485   002298                     u2921:
  4486   002298  EF69  F011         	goto	l1399
  4487   00229C                     u2920:
  4488   00229C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4489   0022A0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4490   0022A4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4491   0022A8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4492   0022AC  1E05               	comf	??___xxtofl^0,f,c
  4493   0022AE  1E06               	comf	(??___xxtofl+1)^0,f,c
  4494   0022B0  1E07               	comf	(??___xxtofl+2)^0,f,c
  4495   0022B2  1E08               	comf	(??___xxtofl+3)^0,f,c
  4496   0022B4  2A05               	incf	??___xxtofl^0,f,c
  4497   0022B6  0E00               	movlw	0
  4498   0022B8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4499   0022BA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4500   0022BC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4501   0022BE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4502   0022C2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4503   0022C6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4504   0022CA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4505   0022CE  EF71  F011         	goto	l3663
  4506   0022D2                     l1399:
  4507   0022D2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4508   0022D6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4509   0022DA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4510   0022DE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4511   0022E2                     l3663:
  4512   0022E2  5001               	movf	___xxtofl@val^0,w,c
  4513   0022E4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4514   0022E6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4515   0022E8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4516   0022EA  A4D8               	btfss	status,2,c
  4517   0022EC  EF7A  F011         	goto	u2931
  4518   0022F0  EF7C  F011         	goto	u2930
  4519   0022F4                     u2931:
  4520   0022F4  EF86  F011         	goto	l3669
  4521   0022F8                     u2930:
  4522   0022F8  0E00               	movlw	0
  4523   0022FA  6E01               	movwf	?___xxtofl^0,c
  4524   0022FC  0E00               	movlw	0
  4525   0022FE  6E02               	movwf	(?___xxtofl+1)^0,c
  4526   002300  0E00               	movlw	0
  4527   002302  6E03               	movwf	(?___xxtofl+2)^0,c
  4528   002304  0E00               	movlw	0
  4529   002306  6E04               	movwf	(?___xxtofl+3)^0,c
  4530   002308  EF17  F012         	goto	l1402
  4531   00230C                     l3669:
  4532   00230C  0E96               	movlw	150
  4533   00230E  6E0A               	movwf	___xxtofl@exp^0,c
  4534   002310  EF90  F011         	goto	l3673
  4535   002314                     l3671:
  4536   002314  2A0A               	incf	___xxtofl@exp^0,f,c
  4537   002316  90D8               	bcf	status,0,c
  4538   002318  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4539   00231A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4540   00231C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4541   00231E  320B               	rrcf	___xxtofl@arg^0,f,c
  4542   002320                     l3673:
  4543   002320  0E00               	movlw	0
  4544   002322  140B               	andwf	___xxtofl@arg^0,w,c
  4545   002324  6E05               	movwf	??___xxtofl^0,c
  4546   002326  0E00               	movlw	0
  4547   002328  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4548   00232A  6E06               	movwf	(??___xxtofl+1)^0,c
  4549   00232C  0E00               	movlw	0
  4550   00232E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4551   002330  6E07               	movwf	(??___xxtofl+2)^0,c
  4552   002332  0EFE               	movlw	254
  4553   002334  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4554   002336  6E08               	movwf	(??___xxtofl+3)^0,c
  4555   002338  5005               	movf	??___xxtofl^0,w,c
  4556   00233A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4557   00233C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4558   00233E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4559   002340  A4D8               	btfss	status,2,c
  4560   002342  EFA5  F011         	goto	u2941
  4561   002346  EFA7  F011         	goto	u2940
  4562   00234A                     u2941:
  4563   00234A  EF8A  F011         	goto	l3671
  4564   00234E                     u2940:
  4565   00234E  EFB5  F011         	goto	l1406
  4566   002352                     l3675:
  4567   002352  2A0A               	incf	___xxtofl@exp^0,f,c
  4568   002354  0E01               	movlw	1
  4569   002356  260B               	addwf	___xxtofl@arg^0,f,c
  4570   002358  0E00               	movlw	0
  4571   00235A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4572   00235C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4573   00235E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4574   002360  90D8               	bcf	status,0,c
  4575   002362  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4576   002364  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4577   002366  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4578   002368  320B               	rrcf	___xxtofl@arg^0,f,c
  4579   00236A                     l1406:
  4580   00236A  0E00               	movlw	0
  4581   00236C  140B               	andwf	___xxtofl@arg^0,w,c
  4582   00236E  6E05               	movwf	??___xxtofl^0,c
  4583   002370  0E00               	movlw	0
  4584   002372  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4585   002374  6E06               	movwf	(??___xxtofl+1)^0,c
  4586   002376  0E00               	movlw	0
  4587   002378  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4588   00237A  6E07               	movwf	(??___xxtofl+2)^0,c
  4589   00237C  0EFF               	movlw	255
  4590   00237E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4591   002380  6E08               	movwf	(??___xxtofl+3)^0,c
  4592   002382  5005               	movf	??___xxtofl^0,w,c
  4593   002384  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4594   002386  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4595   002388  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4596   00238A  A4D8               	btfss	status,2,c
  4597   00238C  EFCA  F011         	goto	u2951
  4598   002390  EFCC  F011         	goto	u2950
  4599   002394                     u2951:
  4600   002394  EFA9  F011         	goto	l3675
  4601   002398                     u2950:
  4602   002398  EFD4  F011         	goto	l3683
  4603   00239C                     l3681:
  4604   00239C  060A               	decf	___xxtofl@exp^0,f,c
  4605   00239E  90D8               	bcf	status,0,c
  4606   0023A0  360B               	rlcf	___xxtofl@arg^0,f,c
  4607   0023A2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4608   0023A4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4609   0023A6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4610   0023A8                     l3683:
  4611   0023A8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4612   0023AA  EFD9  F011         	goto	u2961
  4613   0023AE  EFDB  F011         	goto	u2960
  4614   0023B2                     u2961:
  4615   0023B2  EFE3  F011         	goto	l1413
  4616   0023B6                     u2960:
  4617   0023B6  0E02               	movlw	2
  4618   0023B8  600A               	cpfslt	___xxtofl@exp^0,c
  4619   0023BA  EFE1  F011         	goto	u2971
  4620   0023BE  EFE3  F011         	goto	u2970
  4621   0023C2                     u2971:
  4622   0023C2  EFCE  F011         	goto	l3681
  4623   0023C6                     u2970:
  4624   0023C6                     l1413:
  4625   0023C6  B00A               	btfsc	___xxtofl@exp^0,0,c
  4626   0023C8  EFE8  F011         	goto	u2981
  4627   0023CC  EFEA  F011         	goto	u2980
  4628   0023D0                     u2981:
  4629   0023D0  EFEB  F011         	goto	l3689
  4630   0023D4                     u2980:
  4631   0023D4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4632   0023D6                     l3689:
  4633   0023D6  90D8               	bcf	status,0,c
  4634   0023D8  320A               	rrcf	___xxtofl@exp^0,f,c
  4635   0023DA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4636   0023DE  6A06               	clrf	(??___xxtofl+1)^0,c
  4637   0023E0  6A07               	clrf	(??___xxtofl+2)^0,c
  4638   0023E2  6A08               	clrf	(??___xxtofl+3)^0,c
  4639   0023E4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4640   0023E8  6A07               	clrf	(??___xxtofl+2)^0,c
  4641   0023EA  6A06               	clrf	(??___xxtofl+1)^0,c
  4642   0023EC  6A05               	clrf	??___xxtofl^0,c
  4643   0023EE  5005               	movf	??___xxtofl^0,w,c
  4644   0023F0  120B               	iorwf	___xxtofl@arg^0,f,c
  4645   0023F2  5006               	movf	(??___xxtofl+1)^0,w,c
  4646   0023F4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4647   0023F6  5007               	movf	(??___xxtofl+2)^0,w,c
  4648   0023F8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4649   0023FA  5008               	movf	(??___xxtofl+3)^0,w,c
  4650   0023FC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4651   0023FE  5009               	movf	___xxtofl@sign^0,w,c
  4652   002400  B4D8               	btfsc	status,2,c
  4653   002402  EF05  F012         	goto	u2991
  4654   002406  EF07  F012         	goto	u2990
  4655   00240A                     u2991:
  4656   00240A  EF0F  F012         	goto	l3699
  4657   00240E                     u2990:
  4658   00240E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4659   002410  EF0E  F012         	goto	u3000
  4660   002414  EF0C  F012         	goto	u3001
  4661   002418                     u3001:
  4662   002418  EF0F  F012         	goto	l3699
  4663   00241C                     u3000:
  4664   00241C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4665   00241E                     l3699:
  4666   00241E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4667   002422  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4668   002426  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4669   00242A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4670   00242E                     l1402:
  4671   00242E  0012               	return		;funcret
  4672   002430                     __end_of___xxtofl:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function ___fltol *****************
  4676 ;; Defined at:
  4677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  f1              4   39[COMRAM] unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  exp1            1   48[COMRAM] unsigned char 
  4682 ;;  sign1           1   47[COMRAM] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  4   39[COMRAM] long 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;Total ram usage:       10 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_scale_RGB
  4703 ;;		_stop
  4704 ;;		_turnLeft
  4705 ;;		_turnRight
  4706 ;;		_fullSpeedAhead
  4707 ;;		_fullSpeedReverse
  4708 ;;		_turnLeft90
  4709 ;;		_turnRight90
  4710 ;;		_turnLeft135
  4711 ;;		_turnRight135
  4712 ;;		_UTurn
  4713 ;;		_headbuttReverse
  4714 ;;		_squareReverse
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text28
  4719   0027CE                     __ptext28:
  4720                           	callstack 0
  4721   0027CE                     ___fltol:
  4722                           	callstack 27
  4723   0027CE  342A               	rlcf	(___fltol@f1+2)^0,w,c
  4724   0027D0  342B               	rlcf	(___fltol@f1+3)^0,w,c
  4725   0027D2  6E31               	movwf	___fltol@exp1^0,c
  4726   0027D4  5031               	movf	___fltol@exp1^0,w,c
  4727   0027D6  A4D8               	btfss	status,2,c
  4728   0027D8  EFF0  F013         	goto	u2841
  4729   0027DC  EFF2  F013         	goto	u2840
  4730   0027E0                     u2841:
  4731   0027E0  EFFC  F013         	goto	l3619
  4732   0027E4                     u2840:
  4733   0027E4                     l3615:
  4734   0027E4  0E00               	movlw	0
  4735   0027E6  6E28               	movwf	?___fltol^0,c
  4736   0027E8  0E00               	movlw	0
  4737   0027EA  6E29               	movwf	(?___fltol+1)^0,c
  4738   0027EC  0E00               	movlw	0
  4739   0027EE  6E2A               	movwf	(?___fltol+2)^0,c
  4740   0027F0  0E00               	movlw	0
  4741   0027F2  6E2B               	movwf	(?___fltol+3)^0,c
  4742   0027F4  EF69  F014         	goto	l1041
  4743   0027F8                     l3619:
  4744   0027F8  C028  F02C         	movff	___fltol@f1,??___fltol
  4745   0027FC  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  4746   002800  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  4747   002804  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  4748   002808  0E20               	movlw	32
  4749   00280A  EF0C  F014         	goto	u2850
  4750   00280E                     u2855:
  4751   00280E  90D8               	bcf	status,0,c
  4752   002810  322F               	rrcf	(??___fltol+3)^0,f,c
  4753   002812  322E               	rrcf	(??___fltol+2)^0,f,c
  4754   002814  322D               	rrcf	(??___fltol+1)^0,f,c
  4755   002816  322C               	rrcf	??___fltol^0,f,c
  4756   002818                     u2850:
  4757   002818  2EE8               	decfsz	wreg,f,c
  4758   00281A  EF07  F014         	goto	u2855
  4759   00281E  502C               	movf	??___fltol^0,w,c
  4760   002820  6E30               	movwf	___fltol@sign1^0,c
  4761   002822  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  4762   002824  0EFF               	movlw	255
  4763   002826  1628               	andwf	___fltol@f1^0,f,c
  4764   002828  0EFF               	movlw	255
  4765   00282A  1629               	andwf	(___fltol@f1+1)^0,f,c
  4766   00282C  0EFF               	movlw	255
  4767   00282E  162A               	andwf	(___fltol@f1+2)^0,f,c
  4768   002830  0E00               	movlw	0
  4769   002832  162B               	andwf	(___fltol@f1+3)^0,f,c
  4770   002834  0E96               	movlw	150
  4771   002836  5E31               	subwf	___fltol@exp1^0,f,c
  4772   002838  BE31               	btfsc	___fltol@exp1^0,7,c
  4773   00283A  EF23  F014         	goto	u2860
  4774   00283E  EF21  F014         	goto	u2861
  4775   002842                     u2861:
  4776   002842  EF39  F014         	goto	l3639
  4777   002846                     u2860:
  4778   002846  5031               	movf	___fltol@exp1^0,w,c
  4779   002848  0A80               	xorlw	128
  4780   00284A  0F97               	addlw	151
  4781   00284C  B0D8               	btfsc	status,0,c
  4782   00284E  EF2B  F014         	goto	u2871
  4783   002852  EF2D  F014         	goto	u2870
  4784   002856                     u2871:
  4785   002856  EF2F  F014         	goto	l3635
  4786   00285A                     u2870:
  4787   00285A  EFF2  F013         	goto	l3615
  4788   00285E                     l3635:
  4789   00285E  90D8               	bcf	status,0,c
  4790   002860  322B               	rrcf	(___fltol@f1+3)^0,f,c
  4791   002862  322A               	rrcf	(___fltol@f1+2)^0,f,c
  4792   002864  3229               	rrcf	(___fltol@f1+1)^0,f,c
  4793   002866  3228               	rrcf	___fltol@f1^0,f,c
  4794   002868  3E31               	incfsz	___fltol@exp1^0,f,c
  4795   00286A  EF2F  F014         	goto	l3635
  4796   00286E  EF51  F014         	goto	l3649
  4797   002872                     l3639:
  4798   002872  0E1F               	movlw	31
  4799   002874  6431               	cpfsgt	___fltol@exp1^0,c
  4800   002876  EF3F  F014         	goto	u2881
  4801   00287A  EF41  F014         	goto	u2880
  4802   00287E                     u2881:
  4803   00287E  EF49  F014         	goto	l3647
  4804   002882                     u2880:
  4805   002882  EFF2  F013         	goto	l3615
  4806   002886                     l3645:
  4807   002886  90D8               	bcf	status,0,c
  4808   002888  3628               	rlcf	___fltol@f1^0,f,c
  4809   00288A  3629               	rlcf	(___fltol@f1+1)^0,f,c
  4810   00288C  362A               	rlcf	(___fltol@f1+2)^0,f,c
  4811   00288E  362B               	rlcf	(___fltol@f1+3)^0,f,c
  4812   002890  0631               	decf	___fltol@exp1^0,f,c
  4813   002892                     l3647:
  4814   002892  5031               	movf	___fltol@exp1^0,w,c
  4815   002894  A4D8               	btfss	status,2,c
  4816   002896  EF4F  F014         	goto	u2891
  4817   00289A  EF51  F014         	goto	u2890
  4818   00289E                     u2891:
  4819   00289E  EF43  F014         	goto	l3645
  4820   0028A2                     u2890:
  4821   0028A2                     l3649:
  4822   0028A2  5030               	movf	___fltol@sign1^0,w,c
  4823   0028A4  B4D8               	btfsc	status,2,c
  4824   0028A6  EF57  F014         	goto	u2901
  4825   0028AA  EF59  F014         	goto	u2900
  4826   0028AE                     u2901:
  4827   0028AE  EF61  F014         	goto	l3653
  4828   0028B2                     u2900:
  4829   0028B2  1E2B               	comf	(___fltol@f1+3)^0,f,c
  4830   0028B4  1E2A               	comf	(___fltol@f1+2)^0,f,c
  4831   0028B6  1E29               	comf	(___fltol@f1+1)^0,f,c
  4832   0028B8  6C28               	negf	___fltol@f1^0,c
  4833   0028BA  0E00               	movlw	0
  4834   0028BC  2229               	addwfc	(___fltol@f1+1)^0,f,c
  4835   0028BE  222A               	addwfc	(___fltol@f1+2)^0,f,c
  4836   0028C0  222B               	addwfc	(___fltol@f1+3)^0,f,c
  4837   0028C2                     l3653:
  4838   0028C2  C028  F028         	movff	___fltol@f1,?___fltol
  4839   0028C6  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  4840   0028CA  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  4841   0028CE  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  4842   0028D2                     l1041:
  4843   0028D2  0012               	return		;funcret
  4844   0028D4                     __end_of___fltol:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function ___flmul *****************
  4848 ;; Defined at:
  4849 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  b               4   14[COMRAM] long 
  4852 ;;  a               4   18[COMRAM] long 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  prod            4   33[COMRAM] struct .
  4855 ;;  grs             4   27[COMRAM] unsigned long 
  4856 ;;  temp            2   37[COMRAM] struct .
  4857 ;;  bexp            1   32[COMRAM] unsigned char 
  4858 ;;  aexp            1   31[COMRAM] unsigned char 
  4859 ;;  sign            1   26[COMRAM] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  4   14[COMRAM] unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, prodl, prodh
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4869 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;Total ram usage:       25 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_scale_RGB
  4880 ;;		_stop
  4881 ;;		_turnLeft
  4882 ;;		_turnRight
  4883 ;;		_fullSpeedAhead
  4884 ;;		_fullSpeedReverse
  4885 ;;		_turnLeft90
  4886 ;;		_turnRight90
  4887 ;;		_turnLeft135
  4888 ;;		_turnRight135
  4889 ;;		_UTurn
  4890 ;;		_headbuttReverse
  4891 ;;		_squareReverse
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text29
  4896   00194A                     __ptext29:
  4897                           	callstack 0
  4898   00194A                     ___flmul:
  4899                           	callstack 27
  4900   00194A  5012               	movf	(___flmul@b+3)^0,w,c
  4901   00194C  0B80               	andlw	128
  4902   00194E  6E1B               	movwf	___flmul@sign^0,c
  4903   001950  5012               	movf	(___flmul@b+3)^0,w,c
  4904   001952  2412               	addwf	(___flmul@b+3)^0,w,c
  4905   001954  6E21               	movwf	___flmul@bexp^0,c
  4906   001956  AE11               	btfss	(___flmul@b+2)^0,7,c
  4907   001958  EFB0  F00C         	goto	u2651
  4908   00195C  EFB2  F00C         	goto	u2650
  4909   001960                     u2651:
  4910   001960  EFB3  F00C         	goto	l3489
  4911   001964                     u2650:
  4912   001964  8021               	bsf	___flmul@bexp^0,0,c
  4913   001966                     l3489:
  4914   001966  5021               	movf	___flmul@bexp^0,w,c
  4915   001968  B4D8               	btfsc	status,2,c
  4916   00196A  EFB9  F00C         	goto	u2661
  4917   00196E  EFBB  F00C         	goto	u2660
  4918   001972                     u2661:
  4919   001972  EFCE  F00C         	goto	l3497
  4920   001976                     u2660:
  4921   001976  2821               	incf	___flmul@bexp^0,w,c
  4922   001978  A4D8               	btfss	status,2,c
  4923   00197A  EFC1  F00C         	goto	u2671
  4924   00197E  EFC3  F00C         	goto	u2670
  4925   001982                     u2671:
  4926   001982  EFCB  F00C         	goto	l3495
  4927   001986                     u2670:
  4928   001986  0E00               	movlw	0
  4929   001988  6E0F               	movwf	___flmul@b^0,c
  4930   00198A  0E00               	movlw	0
  4931   00198C  6E10               	movwf	(___flmul@b+1)^0,c
  4932   00198E  0E00               	movlw	0
  4933   001990  6E11               	movwf	(___flmul@b+2)^0,c
  4934   001992  0E00               	movlw	0
  4935   001994  6E12               	movwf	(___flmul@b+3)^0,c
  4936   001996                     l3495:
  4937   001996  8E11               	bsf	(___flmul@b+2)^0,7,c
  4938   001998  EFD6  F00C         	goto	l3499
  4939   00199C                     l3497:
  4940   00199C  0E00               	movlw	0
  4941   00199E  6E0F               	movwf	___flmul@b^0,c
  4942   0019A0  0E00               	movlw	0
  4943   0019A2  6E10               	movwf	(___flmul@b+1)^0,c
  4944   0019A4  0E00               	movlw	0
  4945   0019A6  6E11               	movwf	(___flmul@b+2)^0,c
  4946   0019A8  0E00               	movlw	0
  4947   0019AA  6E12               	movwf	(___flmul@b+3)^0,c
  4948   0019AC                     l3499:
  4949   0019AC  5016               	movf	(___flmul@a+3)^0,w,c
  4950   0019AE  0B80               	andlw	128
  4951   0019B0  1A1B               	xorwf	___flmul@sign^0,f,c
  4952   0019B2  5016               	movf	(___flmul@a+3)^0,w,c
  4953   0019B4  2416               	addwf	(___flmul@a+3)^0,w,c
  4954   0019B6  6E20               	movwf	___flmul@aexp^0,c
  4955   0019B8  AE15               	btfss	(___flmul@a+2)^0,7,c
  4956   0019BA  EFE1  F00C         	goto	u2681
  4957   0019BE  EFE3  F00C         	goto	u2680
  4958   0019C2                     u2681:
  4959   0019C2  EFE4  F00C         	goto	l3507
  4960   0019C6                     u2680:
  4961   0019C6  8020               	bsf	___flmul@aexp^0,0,c
  4962   0019C8                     l3507:
  4963   0019C8  5020               	movf	___flmul@aexp^0,w,c
  4964   0019CA  B4D8               	btfsc	status,2,c
  4965   0019CC  EFEA  F00C         	goto	u2691
  4966   0019D0  EFEC  F00C         	goto	u2690
  4967   0019D4                     u2691:
  4968   0019D4  EFFF  F00C         	goto	l3515
  4969   0019D8                     u2690:
  4970   0019D8  2820               	incf	___flmul@aexp^0,w,c
  4971   0019DA  A4D8               	btfss	status,2,c
  4972   0019DC  EFF2  F00C         	goto	u2701
  4973   0019E0  EFF4  F00C         	goto	u2700
  4974   0019E4                     u2701:
  4975   0019E4  EFFC  F00C         	goto	l3513
  4976   0019E8                     u2700:
  4977   0019E8  0E00               	movlw	0
  4978   0019EA  6E13               	movwf	___flmul@a^0,c
  4979   0019EC  0E00               	movlw	0
  4980   0019EE  6E14               	movwf	(___flmul@a+1)^0,c
  4981   0019F0  0E00               	movlw	0
  4982   0019F2  6E15               	movwf	(___flmul@a+2)^0,c
  4983   0019F4  0E00               	movlw	0
  4984   0019F6  6E16               	movwf	(___flmul@a+3)^0,c
  4985   0019F8                     l3513:
  4986   0019F8  8E15               	bsf	(___flmul@a+2)^0,7,c
  4987   0019FA  EF07  F00D         	goto	l1358
  4988   0019FE                     l3515:
  4989   0019FE  0E00               	movlw	0
  4990   001A00  6E13               	movwf	___flmul@a^0,c
  4991   001A02  0E00               	movlw	0
  4992   001A04  6E14               	movwf	(___flmul@a+1)^0,c
  4993   001A06  0E00               	movlw	0
  4994   001A08  6E15               	movwf	(___flmul@a+2)^0,c
  4995   001A0A  0E00               	movlw	0
  4996   001A0C  6E16               	movwf	(___flmul@a+3)^0,c
  4997   001A0E                     l1358:
  4998   001A0E  5020               	movf	___flmul@aexp^0,w,c
  4999   001A10  B4D8               	btfsc	status,2,c
  5000   001A12  EF0D  F00D         	goto	u2711
  5001   001A16  EF0F  F00D         	goto	u2710
  5002   001A1A                     u2711:
  5003   001A1A  EF17  F00D         	goto	l3519
  5004   001A1E                     u2710:
  5005   001A1E  5021               	movf	___flmul@bexp^0,w,c
  5006   001A20  A4D8               	btfss	status,2,c
  5007   001A22  EF15  F00D         	goto	u2721
  5008   001A26  EF17  F00D         	goto	u2720
  5009   001A2A                     u2721:
  5010   001A2A  EF21  F00D         	goto	l3523
  5011   001A2E                     u2720:
  5012   001A2E                     l3519:
  5013   001A2E  0E00               	movlw	0
  5014   001A30  6E0F               	movwf	?___flmul^0,c
  5015   001A32  0E00               	movlw	0
  5016   001A34  6E10               	movwf	(?___flmul+1)^0,c
  5017   001A36  0E00               	movlw	0
  5018   001A38  6E11               	movwf	(?___flmul+2)^0,c
  5019   001A3A  0E00               	movlw	0
  5020   001A3C  6E12               	movwf	(?___flmul+3)^0,c
  5021   001A3E  EFB9  F00E         	goto	l1362
  5022   001A42                     l3523:
  5023   001A42  5015               	movf	(___flmul@a+2)^0,w,c
  5024   001A44  020F               	mulwf	___flmul@b^0,c
  5025   001A46  CFF3 F026          	movff	prodl,___flmul@temp
  5026   001A4A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5027   001A4E  5026               	movf	___flmul@temp^0,w,c
  5028   001A50  6E1C               	movwf	___flmul@grs^0,c
  5029   001A52  6A1D               	clrf	(___flmul@grs+1)^0,c
  5030   001A54  6A1E               	clrf	(___flmul@grs+2)^0,c
  5031   001A56  6A1F               	clrf	(___flmul@grs+3)^0,c
  5032   001A58  5027               	movf	(___flmul@temp+1)^0,w,c
  5033   001A5A  6E22               	movwf	___flmul@prod^0,c
  5034   001A5C  6A23               	clrf	(___flmul@prod+1)^0,c
  5035   001A5E  6A24               	clrf	(___flmul@prod+2)^0,c
  5036   001A60  6A25               	clrf	(___flmul@prod+3)^0,c
  5037   001A62  5014               	movf	(___flmul@a+1)^0,w,c
  5038   001A64  0210               	mulwf	(___flmul@b+1)^0,c
  5039   001A66  CFF3 F026          	movff	prodl,___flmul@temp
  5040   001A6A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5041   001A6E  5026               	movf	___flmul@temp^0,w,c
  5042   001A70  261C               	addwf	___flmul@grs^0,f,c
  5043   001A72  0E00               	movlw	0
  5044   001A74  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5045   001A76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5046   001A78  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5047   001A7A  5027               	movf	(___flmul@temp+1)^0,w,c
  5048   001A7C  2622               	addwf	___flmul@prod^0,f,c
  5049   001A7E  0E00               	movlw	0
  5050   001A80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5051   001A82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5052   001A84  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5053   001A86  5013               	movf	___flmul@a^0,w,c
  5054   001A88  0211               	mulwf	(___flmul@b+2)^0,c
  5055   001A8A  CFF3 F026          	movff	prodl,___flmul@temp
  5056   001A8E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5057   001A92  5026               	movf	___flmul@temp^0,w,c
  5058   001A94  261C               	addwf	___flmul@grs^0,f,c
  5059   001A96  0E00               	movlw	0
  5060   001A98  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5061   001A9A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5062   001A9C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5063   001A9E  5027               	movf	(___flmul@temp+1)^0,w,c
  5064   001AA0  2622               	addwf	___flmul@prod^0,f,c
  5065   001AA2  0E00               	movlw	0
  5066   001AA4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5067   001AA6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5068   001AA8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5069   001AAA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5070   001AAE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5071   001AB2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5072   001AB6  6A1C               	clrf	___flmul@grs^0,c
  5073   001AB8  5013               	movf	___flmul@a^0,w,c
  5074   001ABA  0210               	mulwf	(___flmul@b+1)^0,c
  5075   001ABC  CFF3 F026          	movff	prodl,___flmul@temp
  5076   001AC0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5077   001AC4  5026               	movf	___flmul@temp^0,w,c
  5078   001AC6  261C               	addwf	___flmul@grs^0,f,c
  5079   001AC8  5027               	movf	(___flmul@temp+1)^0,w,c
  5080   001ACA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5081   001ACC  0E00               	movlw	0
  5082   001ACE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5083   001AD0  0E00               	movlw	0
  5084   001AD2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5085   001AD4  5014               	movf	(___flmul@a+1)^0,w,c
  5086   001AD6  020F               	mulwf	___flmul@b^0,c
  5087   001AD8  CFF3 F026          	movff	prodl,___flmul@temp
  5088   001ADC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5089   001AE0  5026               	movf	___flmul@temp^0,w,c
  5090   001AE2  261C               	addwf	___flmul@grs^0,f,c
  5091   001AE4  5027               	movf	(___flmul@temp+1)^0,w,c
  5092   001AE6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5093   001AE8  0E00               	movlw	0
  5094   001AEA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5095   001AEC  0E00               	movlw	0
  5096   001AEE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5097   001AF0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5098   001AF4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5099   001AF8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5100   001AFC  6A1C               	clrf	___flmul@grs^0,c
  5101   001AFE  5013               	movf	___flmul@a^0,w,c
  5102   001B00  020F               	mulwf	___flmul@b^0,c
  5103   001B02  CFF3 F026          	movff	prodl,___flmul@temp
  5104   001B06  CFF4 F027          	movff	prodh,___flmul@temp+1
  5105   001B0A  5026               	movf	___flmul@temp^0,w,c
  5106   001B0C  261C               	addwf	___flmul@grs^0,f,c
  5107   001B0E  5027               	movf	(___flmul@temp+1)^0,w,c
  5108   001B10  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5109   001B12  0E00               	movlw	0
  5110   001B14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5111   001B16  0E00               	movlw	0
  5112   001B18  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5113   001B1A  5015               	movf	(___flmul@a+2)^0,w,c
  5114   001B1C  0210               	mulwf	(___flmul@b+1)^0,c
  5115   001B1E  CFF3 F026          	movff	prodl,___flmul@temp
  5116   001B22  CFF4 F027          	movff	prodh,___flmul@temp+1
  5117   001B26  5026               	movf	___flmul@temp^0,w,c
  5118   001B28  2622               	addwf	___flmul@prod^0,f,c
  5119   001B2A  5027               	movf	(___flmul@temp+1)^0,w,c
  5120   001B2C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5121   001B2E  0E00               	movlw	0
  5122   001B30  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5123   001B32  0E00               	movlw	0
  5124   001B34  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5125   001B36  5014               	movf	(___flmul@a+1)^0,w,c
  5126   001B38  0211               	mulwf	(___flmul@b+2)^0,c
  5127   001B3A  CFF3 F026          	movff	prodl,___flmul@temp
  5128   001B3E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5129   001B42  5026               	movf	___flmul@temp^0,w,c
  5130   001B44  2622               	addwf	___flmul@prod^0,f,c
  5131   001B46  5027               	movf	(___flmul@temp+1)^0,w,c
  5132   001B48  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5133   001B4A  0E00               	movlw	0
  5134   001B4C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5135   001B4E  0E00               	movlw	0
  5136   001B50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5137   001B52  5015               	movf	(___flmul@a+2)^0,w,c
  5138   001B54  0211               	mulwf	(___flmul@b+2)^0,c
  5139   001B56  CFF3 F026          	movff	prodl,___flmul@temp
  5140   001B5A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5141   001B5E  5026               	movf	___flmul@temp^0,w,c
  5142   001B60  6E17               	movwf	??___flmul^0,c
  5143   001B62  5027               	movf	(___flmul@temp+1)^0,w,c
  5144   001B64  6E18               	movwf	(??___flmul+1)^0,c
  5145   001B66  6A19               	clrf	(??___flmul+2)^0,c
  5146   001B68  6A1A               	clrf	(??___flmul+3)^0,c
  5147   001B6A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5148   001B6E  C018  F019         	movff	??___flmul+1,??___flmul+2
  5149   001B72  C017  F018         	movff	??___flmul,??___flmul+1
  5150   001B76  6A17               	clrf	??___flmul^0,c
  5151   001B78  5017               	movf	??___flmul^0,w,c
  5152   001B7A  2622               	addwf	___flmul@prod^0,f,c
  5153   001B7C  5018               	movf	(??___flmul+1)^0,w,c
  5154   001B7E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5155   001B80  5019               	movf	(??___flmul+2)^0,w,c
  5156   001B82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5157   001B84  501A               	movf	(??___flmul+3)^0,w,c
  5158   001B86  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5159   001B88  C01C  F017         	movff	___flmul@grs,??___flmul
  5160   001B8C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5161   001B90  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5162   001B94  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5163   001B98  0E19               	movlw	25
  5164   001B9A  EFD4  F00D         	goto	u2730
  5165   001B9E                     u2735:
  5166   001B9E  90D8               	bcf	status,0,c
  5167   001BA0  321A               	rrcf	(??___flmul+3)^0,f,c
  5168   001BA2  3219               	rrcf	(??___flmul+2)^0,f,c
  5169   001BA4  3218               	rrcf	(??___flmul+1)^0,f,c
  5170   001BA6  3217               	rrcf	??___flmul^0,f,c
  5171   001BA8                     u2730:
  5172   001BA8  2EE8               	decfsz	wreg,f,c
  5173   001BAA  EFCF  F00D         	goto	u2735
  5174   001BAE  5017               	movf	??___flmul^0,w,c
  5175   001BB0  2622               	addwf	___flmul@prod^0,f,c
  5176   001BB2  5018               	movf	(??___flmul+1)^0,w,c
  5177   001BB4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5178   001BB6  5019               	movf	(??___flmul+2)^0,w,c
  5179   001BB8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5180   001BBA  501A               	movf	(??___flmul+3)^0,w,c
  5181   001BBC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5182   001BBE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5183   001BC2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5184   001BC6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5185   001BCA  6A1C               	clrf	___flmul@grs^0,c
  5186   001BCC  5020               	movf	___flmul@aexp^0,w,c
  5187   001BCE  C021  F017         	movff	___flmul@bexp,??___flmul
  5188   001BD2  6A18               	clrf	(??___flmul+1)^0,c
  5189   001BD4  2617               	addwf	??___flmul^0,f,c
  5190   001BD6  0E00               	movlw	0
  5191   001BD8  2218               	addwfc	(??___flmul+1)^0,f,c
  5192   001BDA  0E82               	movlw	130
  5193   001BDC  2417               	addwf	??___flmul^0,w,c
  5194   001BDE  6E26               	movwf	___flmul@temp^0,c
  5195   001BE0  0EFF               	movlw	255
  5196   001BE2  2018               	addwfc	(??___flmul+1)^0,w,c
  5197   001BE4  6E27               	movwf	(___flmul@temp+1)^0,c
  5198   001BE6  EF0A  F00E         	goto	l3571
  5199   001BEA                     l3565:
  5200   001BEA  90D8               	bcf	status,0,c
  5201   001BEC  3622               	rlcf	___flmul@prod^0,f,c
  5202   001BEE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5203   001BF0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5204   001BF2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5205   001BF4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5206   001BF6  EFFF  F00D         	goto	u2741
  5207   001BFA  EF01  F00E         	goto	u2740
  5208   001BFE                     u2741:
  5209   001BFE  EF02  F00E         	goto	l1365
  5210   001C02                     u2740:
  5211   001C02  8022               	bsf	___flmul@prod^0,0,c
  5212   001C04                     l1365:
  5213   001C04  90D8               	bcf	status,0,c
  5214   001C06  361C               	rlcf	___flmul@grs^0,f,c
  5215   001C08  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5216   001C0A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5217   001C0C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5218   001C0E  0626               	decf	___flmul@temp^0,f,c
  5219   001C10  A0D8               	btfss	status,0,c
  5220   001C12  0627               	decf	(___flmul@temp+1)^0,f,c
  5221   001C14                     l3571:
  5222   001C14  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5223   001C16  EF0F  F00E         	goto	u2751
  5224   001C1A  EF11  F00E         	goto	u2750
  5225   001C1E                     u2751:
  5226   001C1E  EFF5  F00D         	goto	l3565
  5227   001C22                     u2750:
  5228   001C22  0E00               	movlw	0
  5229   001C24  6E20               	movwf	___flmul@aexp^0,c
  5230   001C26  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5231   001C28  EF18  F00E         	goto	u2761
  5232   001C2C  EF1A  F00E         	goto	u2760
  5233   001C30                     u2761:
  5234   001C30  EF3E  F00E         	goto	l1367
  5235   001C34                     u2760:
  5236   001C34  0EFF               	movlw	255
  5237   001C36  141C               	andwf	___flmul@grs^0,w,c
  5238   001C38  6E17               	movwf	??___flmul^0,c
  5239   001C3A  0EFF               	movlw	255
  5240   001C3C  141D               	andwf	(___flmul@grs+1)^0,w,c
  5241   001C3E  6E18               	movwf	(??___flmul+1)^0,c
  5242   001C40  0EFF               	movlw	255
  5243   001C42  141E               	andwf	(___flmul@grs+2)^0,w,c
  5244   001C44  6E19               	movwf	(??___flmul+2)^0,c
  5245   001C46  0E7F               	movlw	127
  5246   001C48  141F               	andwf	(___flmul@grs+3)^0,w,c
  5247   001C4A  6E1A               	movwf	(??___flmul+3)^0,c
  5248   001C4C  5017               	movf	??___flmul^0,w,c
  5249   001C4E  1018               	iorwf	(??___flmul+1)^0,w,c
  5250   001C50  1019               	iorwf	(??___flmul+2)^0,w,c
  5251   001C52  101A               	iorwf	(??___flmul+3)^0,w,c
  5252   001C54  B4D8               	btfsc	status,2,c
  5253   001C56  EF2F  F00E         	goto	u2771
  5254   001C5A  EF31  F00E         	goto	u2770
  5255   001C5E                     u2771:
  5256   001C5E  EF35  F00E         	goto	l1368
  5257   001C62                     u2770:
  5258   001C62                     l3579:
  5259   001C62  0E01               	movlw	1
  5260   001C64  6E20               	movwf	___flmul@aexp^0,c
  5261   001C66  EF3E  F00E         	goto	l1367
  5262   001C6A                     l1368:
  5263   001C6A  A022               	btfss	___flmul@prod^0,0,c
  5264   001C6C  EF3A  F00E         	goto	u2781
  5265   001C70  EF3C  F00E         	goto	u2780
  5266   001C74                     u2781:
  5267   001C74  EF3E  F00E         	goto	l1367
  5268   001C78                     u2780:
  5269   001C78  EF31  F00E         	goto	l3579
  5270   001C7C                     l1367:
  5271   001C7C  5020               	movf	___flmul@aexp^0,w,c
  5272   001C7E  B4D8               	btfsc	status,2,c
  5273   001C80  EF44  F00E         	goto	u2791
  5274   001C84  EF46  F00E         	goto	u2790
  5275   001C88                     u2791:
  5276   001C88  EF6A  F00E         	goto	l3591
  5277   001C8C                     u2790:
  5278   001C8C  0E01               	movlw	1
  5279   001C8E  2622               	addwf	___flmul@prod^0,f,c
  5280   001C90  0E00               	movlw	0
  5281   001C92  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5282   001C94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5283   001C96  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5284   001C98  A025               	btfss	(___flmul@prod+3)^0,0,c
  5285   001C9A  EF51  F00E         	goto	u2801
  5286   001C9E  EF53  F00E         	goto	u2800
  5287   001CA2                     u2801:
  5288   001CA2  EF6A  F00E         	goto	l3591
  5289   001CA6                     u2800:
  5290   001CA6  C022  F017         	movff	___flmul@prod,??___flmul
  5291   001CAA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5292   001CAE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5293   001CB2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5294   001CB6  341A               	rlcf	(??___flmul+3)^0,w,c
  5295   001CB8  321A               	rrcf	(??___flmul+3)^0,f,c
  5296   001CBA  3219               	rrcf	(??___flmul+2)^0,f,c
  5297   001CBC  3218               	rrcf	(??___flmul+1)^0,f,c
  5298   001CBE  3217               	rrcf	??___flmul^0,f,c
  5299   001CC0  C017  F022         	movff	??___flmul,___flmul@prod
  5300   001CC4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5301   001CC8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5302   001CCC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5303   001CD0  4A26               	infsnz	___flmul@temp^0,f,c
  5304   001CD2  2A27               	incf	(___flmul@temp+1)^0,f,c
  5305   001CD4                     l3591:
  5306   001CD4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5307   001CD6  EF75  F00E         	goto	u2811
  5308   001CDA  5027               	movf	(___flmul@temp+1)^0,w,c
  5309   001CDC  E108               	bnz	u2810
  5310   001CDE  2826               	incf	___flmul@temp^0,w,c
  5311   001CE0  A0D8               	btfss	status,0,c
  5312   001CE2  EF75  F00E         	goto	u2811
  5313   001CE6  EF77  F00E         	goto	u2810
  5314   001CEA                     u2811:
  5315   001CEA  EF81  F00E         	goto	l3595
  5316   001CEE                     u2810:
  5317   001CEE  0E00               	movlw	0
  5318   001CF0  6E22               	movwf	___flmul@prod^0,c
  5319   001CF2  0E00               	movlw	0
  5320   001CF4  6E23               	movwf	(___flmul@prod+1)^0,c
  5321   001CF6  0E80               	movlw	128
  5322   001CF8  6E24               	movwf	(___flmul@prod+2)^0,c
  5323   001CFA  0E7F               	movlw	127
  5324   001CFC  6E25               	movwf	(___flmul@prod+3)^0,c
  5325   001CFE  EFAF  F00E         	goto	l3607
  5326   001D02                     l3595:
  5327   001D02  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5328   001D04  EF8E  F00E         	goto	u2820
  5329   001D08  5027               	movf	(___flmul@temp+1)^0,w,c
  5330   001D0A  E106               	bnz	u2821
  5331   001D0C  0426               	decf	___flmul@temp^0,w,c
  5332   001D0E  B0D8               	btfsc	status,0,c
  5333   001D10  EF8C  F00E         	goto	u2821
  5334   001D14  EF8E  F00E         	goto	u2820
  5335   001D18                     u2821:
  5336   001D18  EF9A  F00E         	goto	l1375
  5337   001D1C                     u2820:
  5338   001D1C  0E00               	movlw	0
  5339   001D1E  6E22               	movwf	___flmul@prod^0,c
  5340   001D20  0E00               	movlw	0
  5341   001D22  6E23               	movwf	(___flmul@prod+1)^0,c
  5342   001D24  0E00               	movlw	0
  5343   001D26  6E24               	movwf	(___flmul@prod+2)^0,c
  5344   001D28  0E00               	movlw	0
  5345   001D2A  6E25               	movwf	(___flmul@prod+3)^0,c
  5346   001D2C  0E00               	movlw	0
  5347   001D2E  6E1B               	movwf	___flmul@sign^0,c
  5348   001D30  EFAF  F00E         	goto	l3607
  5349   001D34                     l1375:
  5350   001D34  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5351   001D38  0EFF               	movlw	255
  5352   001D3A  1622               	andwf	___flmul@prod^0,f,c
  5353   001D3C  0EFF               	movlw	255
  5354   001D3E  1623               	andwf	(___flmul@prod+1)^0,f,c
  5355   001D40  0E7F               	movlw	127
  5356   001D42  1624               	andwf	(___flmul@prod+2)^0,f,c
  5357   001D44  0E00               	movlw	0
  5358   001D46  1625               	andwf	(___flmul@prod+3)^0,f,c
  5359   001D48  A021               	btfss	___flmul@bexp^0,0,c
  5360   001D4A  EFA9  F00E         	goto	u2831
  5361   001D4E  EFAB  F00E         	goto	u2830
  5362   001D52                     u2831:
  5363   001D52  EFAC  F00E         	goto	l3605
  5364   001D56                     u2830:
  5365   001D56  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5366   001D58                     l3605:
  5367   001D58  90D8               	bcf	status,0,c
  5368   001D5A  3021               	rrcf	___flmul@bexp^0,w,c
  5369   001D5C  6E25               	movwf	(___flmul@prod+3)^0,c
  5370   001D5E                     l3607:
  5371   001D5E  501B               	movf	___flmul@sign^0,w,c
  5372   001D60  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5373   001D62  C022  F00F         	movff	___flmul@prod,?___flmul
  5374   001D66  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5375   001D6A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5376   001D6E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5377   001D72                     l1362:
  5378   001D72  0012               	return		;funcret
  5379   001D74                     __end_of___flmul:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function _read_timer *****************
  5383 ;; Defined at:
  5384 ;;		line 46 in file "timers.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  tH              1    0[COMRAM] PTR unsigned char 
  5387 ;;		 -> forward_navigation@timerH(1), 
  5388 ;;  tL              1    1[COMRAM] PTR unsigned char 
  5389 ;;		 -> forward_navigation@timerL(1), 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr2l, fsr2h, status,2
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;Total ram usage:        2 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; Hardware stack levels required when called: 1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_forward_navigation
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text30
  5416   003700                     __ptext30:
  5417                           	callstack 0
  5418   003700                     _read_timer:
  5419                           	callstack 28
  5420   003700                     
  5421                           ;timers.c: 46: void read_timer(unsigned char *tH, unsigned char *tL);timers.c: 47: {;tim
      +                          ers.c: 51:     *tL = TMR0L;
  5422   003700  5002               	movf	read_timer@tL^0,w,c
  5423   003702  6ED9               	movwf	fsr2l,c
  5424   003704  6ADA               	clrf	fsr2h,c
  5425   003706  CFD3 FFDF          	movff	4051,indf2	;volatile
  5426                           
  5427                           ;timers.c: 52:     *tH = TMR0H;
  5428   00370A  5001               	movf	read_timer@tH^0,w,c
  5429   00370C  6ED9               	movwf	fsr2l,c
  5430   00370E  6ADA               	clrf	fsr2h,c
  5431   003710  CFD4 FFDF          	movff	4052,indf2	;volatile
  5432   003714  0012               	return		;funcret
  5433   003716                     __end_of_read_timer:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _convert_HSV *****************
  5437 ;; Defined at:
  5438 ;;		line 209 in file "color.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  p1              1   13[COMRAM] PTR struct HSV_val
  5441 ;;		 -> main@HSV_colour(6), 
  5442 ;;  p2              1   14[COMRAM] PTR struct RGBC_val
  5443 ;;		 -> main@RGBC_colour(8), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  temp            4   51[COMRAM] unsigned long 
  5446 ;;  temp            4   47[COMRAM] unsigned long 
  5447 ;;  temp            4   43[COMRAM] unsigned long 
  5448 ;;  temp            4   39[COMRAM] unsigned long 
  5449 ;;  temp            4   55[COMRAM] unsigned long 
  5450 ;;  temp            4   35[COMRAM] unsigned long 
  5451 ;;  temp            4   31[COMRAM] unsigned long 
  5452 ;;  C               2   63[COMRAM] unsigned int 
  5453 ;;  M               2   61[COMRAM] unsigned int 
  5454 ;;  hue_scale       2   59[COMRAM] unsigned int 
  5455 ;;  hue             2   29[COMRAM] unsigned int 
  5456 ;;  sat             2   27[COMRAM] unsigned int 
  5457 ;;  m               2   25[COMRAM] unsigned int 
  5458 ;;  sat_scale       2   23[COMRAM] unsigned int 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;Total ram usage:       52 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 2
  5475 ;; This function calls:
  5476 ;;		___lldiv
  5477 ;;		___lmul
  5478 ;;		_max_RGB
  5479 ;;		_min_RGB
  5480 ;; This function is called by:
  5481 ;;		_forward_navigation
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text31
  5486   000E1A                     __ptext31:
  5487                           	callstack 0
  5488   000E1A                     _convert_HSV:
  5489                           	callstack 27
  5490   000E1A                     
  5491                           ;color.c: 209: void convert_HSV(struct HSV_val *p1,struct RGBC_val *p2);color.c: 210: {;
      +                          color.c: 211:     unsigned int hue = 0;
  5492   000E1A  0E00               	movlw	0
  5493   000E1C  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  5494   000E1E  0E00               	movlw	0
  5495   000E20  6E1E               	movwf	convert_HSV@hue^0,c
  5496                           
  5497                           ;color.c: 213:     unsigned int hue_scale = 60;
  5498   000E22  0E00               	movlw	0
  5499   000E24  6E3D               	movwf	(convert_HSV@hue_scale+1)^0,c
  5500   000E26  0E3C               	movlw	60
  5501   000E28  6E3C               	movwf	convert_HSV@hue_scale^0,c
  5502                           
  5503                           ;color.c: 214:     unsigned int sat_scale = 100;
  5504   000E2A  0E00               	movlw	0
  5505   000E2C  6E19               	movwf	(convert_HSV@sat_scale+1)^0,c
  5506   000E2E  0E64               	movlw	100
  5507   000E30  6E18               	movwf	convert_HSV@sat_scale^0,c
  5508   000E32                     
  5509                           ;color.c: 216:     unsigned int M = max_RGB(p2);
  5510   000E32  C00F  F001         	movff	convert_HSV@p2,max_RGB@p
  5511   000E36  EC6F  F017         	call	_max_RGB	;wreg free
  5512   000E3A  C001  F03E         	movff	?_max_RGB,convert_HSV@M
  5513   000E3E  C002  F03F         	movff	?_max_RGB+1,convert_HSV@M+1
  5514   000E42                     
  5515                           ;color.c: 217:     unsigned int m = min_RGB(p2);
  5516   000E42  C00F  F001         	movff	convert_HSV@p2,min_RGB@p
  5517   000E46  EC31  F017         	call	_min_RGB	;wreg free
  5518   000E4A  C001  F01A         	movff	?_min_RGB,convert_HSV@m
  5519   000E4E  C002  F01B         	movff	?_min_RGB+1,convert_HSV@m+1
  5520   000E52                     
  5521                           ;color.c: 218:     unsigned int C = M - m;
  5522   000E52  501A               	movf	convert_HSV@m^0,w,c
  5523   000E54  5C3E               	subwf	convert_HSV@M^0,w,c
  5524   000E56  6E40               	movwf	convert_HSV@C^0,c
  5525   000E58  501B               	movf	(convert_HSV@m+1)^0,w,c
  5526   000E5A  583F               	subwfb	(convert_HSV@M+1)^0,w,c
  5527   000E5C  6E41               	movwf	(convert_HSV@C+1)^0,c
  5528   000E5E                     
  5529                           ;color.c: 220:     if (C == 0) {
  5530   000E5E  5040               	movf	convert_HSV@C^0,w,c
  5531   000E60  1041               	iorwf	(convert_HSV@C+1)^0,w,c
  5532   000E62  A4D8               	btfss	status,2,c
  5533   000E64  EF36  F007         	goto	u3161
  5534   000E68  EF38  F007         	goto	u3160
  5535   000E6C                     u3161:
  5536   000E6C  EF3E  F007         	goto	l3769
  5537   000E70                     u3160:
  5538   000E70                     
  5539                           ;color.c: 221:         hue = 0;
  5540   000E70  0E00               	movlw	0
  5541   000E72  6E1F               	movwf	(convert_HSV@hue+1)^0,c
  5542   000E74  0E00               	movlw	0
  5543   000E76  6E1E               	movwf	convert_HSV@hue^0,c
  5544                           
  5545                           ;color.c: 222:     } else {
  5546   000E78  EF0E  F00A         	goto	l3853
  5547   000E7C                     l3769:
  5548                           
  5549                           ;color.c: 232:         if (M == p2->R) {
  5550   000E7C  500F               	movf	convert_HSV@p2^0,w,c
  5551   000E7E  6ED9               	movwf	fsr2l,c
  5552   000E80  6ADA               	clrf	fsr2h,c
  5553   000E82  503E               	movf	convert_HSV@M^0,w,c
  5554   000E84  18DE               	xorwf	postinc2,w,c
  5555   000E86  E107               	bnz	u3171
  5556   000E88  503F               	movf	(convert_HSV@M+1)^0,w,c
  5557   000E8A  18DE               	xorwf	postinc2,w,c
  5558   000E8C  A4D8               	btfss	status,2,c
  5559   000E8E  EF4B  F007         	goto	u3171
  5560   000E92  EF4D  F007         	goto	u3170
  5561   000E96                     u3171:
  5562   000E96  EF3A  F008         	goto	l3797
  5563   000E9A                     u3170:
  5564   000E9A                     
  5565                           ;color.c: 233:             if (p2->G >= p2->B) {
  5566   000E9A  500F               	movf	convert_HSV@p2^0,w,c
  5567   000E9C  6ED9               	movwf	fsr2l,c
  5568   000E9E  6ADA               	clrf	fsr2h,c
  5569   000EA0  0E04               	movlw	4
  5570   000EA2  26D9               	addwf	fsr2l,f,c
  5571   000EA4  500F               	movf	convert_HSV@p2^0,w,c
  5572   000EA6  6EE1               	movwf	fsr1l,c
  5573   000EA8  6AE2               	clrf	fsr1h,c
  5574   000EAA  0E02               	movlw	2
  5575   000EAC  26E1               	addwf	fsr1l,f,c
  5576   000EAE  50DE               	movf	postinc2,w,c
  5577   000EB0  5CE6               	subwf	postinc1,w,c
  5578   000EB2  50DE               	movf	postinc2,w,c
  5579   000EB4  58E6               	subwfb	postinc1,w,c
  5580   000EB6  A0D8               	btfss	status,0,c
  5581   000EB8  EF60  F007         	goto	u3181
  5582   000EBC  EF62  F007         	goto	u3180
  5583   000EC0                     u3181:
  5584   000EC0  EFC2  F007         	goto	l3785
  5585   000EC4                     u3180:
  5586   000EC4                     
  5587                           ;color.c: 237:                 temp *= 0;
  5588   000EC4  0E00               	movlw	0
  5589   000EC6  6E24               	movwf	convert_HSV@temp^0,c
  5590   000EC8  0E00               	movlw	0
  5591   000ECA  6E25               	movwf	(convert_HSV@temp+1)^0,c
  5592   000ECC  0E00               	movlw	0
  5593   000ECE  6E26               	movwf	(convert_HSV@temp+2)^0,c
  5594   000ED0  0E00               	movlw	0
  5595   000ED2  6E27               	movwf	(convert_HSV@temp+3)^0,c
  5596   000ED4                     
  5597                           ;color.c: 238:                 temp += (unsigned long)(p2->G - p2->B);
  5598   000ED4  500F               	movf	convert_HSV@p2^0,w,c
  5599   000ED6  6ED9               	movwf	fsr2l,c
  5600   000ED8  6ADA               	clrf	fsr2h,c
  5601   000EDA  0E04               	movlw	4
  5602   000EDC  26D9               	addwf	fsr2l,f,c
  5603   000EDE  CFDE F010          	movff	postinc2,??_convert_HSV
  5604   000EE2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5605   000EE6  500F               	movf	convert_HSV@p2^0,w,c
  5606   000EE8  6ED9               	movwf	fsr2l,c
  5607   000EEA  6ADA               	clrf	fsr2h,c
  5608   000EEC  0E02               	movlw	2
  5609   000EEE  26D9               	addwf	fsr2l,f,c
  5610   000EF0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5611   000EF4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5612   000EF8  5010               	movf	??_convert_HSV^0,w,c
  5613   000EFA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5614   000EFC  6E14               	movwf	(??_convert_HSV+4)^0,c
  5615   000EFE  5011               	movf	(??_convert_HSV+1)^0,w,c
  5616   000F00  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5617   000F02  6E15               	movwf	(??_convert_HSV+5)^0,c
  5618   000F04  5014               	movf	(??_convert_HSV+4)^0,w,c
  5619   000F06  2624               	addwf	convert_HSV@temp^0,f,c
  5620   000F08  5015               	movf	(??_convert_HSV+5)^0,w,c
  5621   000F0A  2225               	addwfc	(convert_HSV@temp+1)^0,f,c
  5622   000F0C  0E00               	movlw	0
  5623   000F0E  2226               	addwfc	(convert_HSV@temp+2)^0,f,c
  5624   000F10  0E00               	movlw	0
  5625   000F12  2227               	addwfc	(convert_HSV@temp+3)^0,f,c
  5626   000F14                     
  5627                           ;color.c: 239:                 temp *= (unsigned long)hue_scale;
  5628   000F14  C024  F001         	movff	convert_HSV@temp,___lmul@multiplier
  5629   000F18  C025  F002         	movff	convert_HSV@temp+1,___lmul@multiplier+1
  5630   000F1C  C026  F003         	movff	convert_HSV@temp+2,___lmul@multiplier+2
  5631   000F20  C027  F004         	movff	convert_HSV@temp+3,___lmul@multiplier+3
  5632   000F24  0E3C               	movlw	60
  5633   000F26  6E05               	movwf	___lmul@multiplicand^0,c
  5634   000F28  0E00               	movlw	0
  5635   000F2A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5636   000F2C  0E00               	movlw	0
  5637   000F2E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5638   000F30  0E00               	movlw	0
  5639   000F32  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5640   000F34  EC22  F018         	call	___lmul	;wreg free
  5641   000F38  C001  F024         	movff	?___lmul,convert_HSV@temp
  5642   000F3C  C002  F025         	movff	?___lmul+1,convert_HSV@temp+1
  5643   000F40  C003  F026         	movff	?___lmul+2,convert_HSV@temp+2
  5644   000F44  C004  F027         	movff	?___lmul+3,convert_HSV@temp+3
  5645   000F48                     
  5646                           ;color.c: 240:                 temp /= (unsigned long)C;
  5647   000F48  C024  F001         	movff	convert_HSV@temp,___lldiv@dividend
  5648   000F4C  C025  F002         	movff	convert_HSV@temp+1,___lldiv@dividend+1
  5649   000F50  C026  F003         	movff	convert_HSV@temp+2,___lldiv@dividend+2
  5650   000F54  C027  F004         	movff	convert_HSV@temp+3,___lldiv@dividend+3
  5651   000F58  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5652   000F5C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5653   000F60  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5654   000F62  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5655   000F64  EC50  F016         	call	___lldiv	;wreg free
  5656   000F68  C001  F024         	movff	?___lldiv,convert_HSV@temp
  5657   000F6C  C002  F025         	movff	?___lldiv+1,convert_HSV@temp+1
  5658   000F70  C003  F026         	movff	?___lldiv+2,convert_HSV@temp+2
  5659   000F74  C004  F027         	movff	?___lldiv+3,convert_HSV@temp+3
  5660   000F78                     
  5661                           ;color.c: 241:                 hue = (unsigned int)temp;
  5662   000F78  C024  F01E         	movff	convert_HSV@temp,convert_HSV@hue
  5663   000F7C  C025  F01F         	movff	convert_HSV@temp+1,convert_HSV@hue+1
  5664                           
  5665                           ;color.c: 242:             } else {
  5666   000F80  EF3A  F008         	goto	l3797
  5667   000F84                     l3785:
  5668                           
  5669                           ;color.c: 244:                 unsigned long temp;;color.c: 245:                 temp = 
      +                          (unsigned long)C;
  5670   000F84  C040  F038         	movff	convert_HSV@C,convert_HSV@temp_609
  5671   000F88  C041  F039         	movff	convert_HSV@C+1,convert_HSV@temp_609+1
  5672   000F8C  6A3A               	clrf	(convert_HSV@temp_609+2)^0,c
  5673   000F8E  6A3B               	clrf	(convert_HSV@temp_609+3)^0,c
  5674   000F90                     
  5675                           ;color.c: 246:                 temp *= 6;
  5676   000F90  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  5677   000F94  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  5678   000F98  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  5679   000F9C  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  5680   000FA0  0E06               	movlw	6
  5681   000FA2  6E05               	movwf	___lmul@multiplicand^0,c
  5682   000FA4  0E00               	movlw	0
  5683   000FA6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5684   000FA8  0E00               	movlw	0
  5685   000FAA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5686   000FAC  0E00               	movlw	0
  5687   000FAE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5688   000FB0  EC22  F018         	call	___lmul	;wreg free
  5689   000FB4  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  5690   000FB8  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  5691   000FBC  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  5692   000FC0  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  5693   000FC4                     
  5694                           ;color.c: 247:                 temp -= (unsigned long)(p2->B - p2->G);
  5695   000FC4  500F               	movf	convert_HSV@p2^0,w,c
  5696   000FC6  6ED9               	movwf	fsr2l,c
  5697   000FC8  6ADA               	clrf	fsr2h,c
  5698   000FCA  0E02               	movlw	2
  5699   000FCC  26D9               	addwf	fsr2l,f,c
  5700   000FCE  CFDE F010          	movff	postinc2,??_convert_HSV
  5701   000FD2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5702   000FD6  500F               	movf	convert_HSV@p2^0,w,c
  5703   000FD8  6ED9               	movwf	fsr2l,c
  5704   000FDA  6ADA               	clrf	fsr2h,c
  5705   000FDC  0E04               	movlw	4
  5706   000FDE  26D9               	addwf	fsr2l,f,c
  5707   000FE0  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5708   000FE4  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5709   000FE8  5010               	movf	??_convert_HSV^0,w,c
  5710   000FEA  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5711   000FEC  6E14               	movwf	(??_convert_HSV+4)^0,c
  5712   000FEE  5011               	movf	(??_convert_HSV+1)^0,w,c
  5713   000FF0  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5714   000FF2  6E15               	movwf	(??_convert_HSV+5)^0,c
  5715   000FF4  6A16               	clrf	(??_convert_HSV+6)^0,c
  5716   000FF6  6A17               	clrf	(??_convert_HSV+7)^0,c
  5717   000FF8  5014               	movf	(??_convert_HSV+4)^0,w,c
  5718   000FFA  5E38               	subwf	convert_HSV@temp_609^0,f,c
  5719   000FFC  5015               	movf	(??_convert_HSV+5)^0,w,c
  5720   000FFE  5A39               	subwfb	(convert_HSV@temp_609+1)^0,f,c
  5721   001000  5016               	movf	(??_convert_HSV+6)^0,w,c
  5722   001002  5A3A               	subwfb	(convert_HSV@temp_609+2)^0,f,c
  5723   001004  5017               	movf	(??_convert_HSV+7)^0,w,c
  5724   001006  5A3B               	subwfb	(convert_HSV@temp_609+3)^0,f,c
  5725   001008                     
  5726                           ;color.c: 248:                 temp *= (unsigned long)hue_scale;
  5727   001008  C038  F001         	movff	convert_HSV@temp_609,___lmul@multiplier
  5728   00100C  C039  F002         	movff	convert_HSV@temp_609+1,___lmul@multiplier+1
  5729   001010  C03A  F003         	movff	convert_HSV@temp_609+2,___lmul@multiplier+2
  5730   001014  C03B  F004         	movff	convert_HSV@temp_609+3,___lmul@multiplier+3
  5731   001018  0E3C               	movlw	60
  5732   00101A  6E05               	movwf	___lmul@multiplicand^0,c
  5733   00101C  0E00               	movlw	0
  5734   00101E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5735   001020  0E00               	movlw	0
  5736   001022  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5737   001024  0E00               	movlw	0
  5738   001026  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5739   001028  EC22  F018         	call	___lmul	;wreg free
  5740   00102C  C001  F038         	movff	?___lmul,convert_HSV@temp_609
  5741   001030  C002  F039         	movff	?___lmul+1,convert_HSV@temp_609+1
  5742   001034  C003  F03A         	movff	?___lmul+2,convert_HSV@temp_609+2
  5743   001038  C004  F03B         	movff	?___lmul+3,convert_HSV@temp_609+3
  5744   00103C                     
  5745                           ;color.c: 249:                 temp /= (unsigned long)C;
  5746   00103C  C038  F001         	movff	convert_HSV@temp_609,___lldiv@dividend
  5747   001040  C039  F002         	movff	convert_HSV@temp_609+1,___lldiv@dividend+1
  5748   001044  C03A  F003         	movff	convert_HSV@temp_609+2,___lldiv@dividend+2
  5749   001048  C03B  F004         	movff	convert_HSV@temp_609+3,___lldiv@dividend+3
  5750   00104C  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5751   001050  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5752   001054  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5753   001056  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5754   001058  EC50  F016         	call	___lldiv	;wreg free
  5755   00105C  C001  F038         	movff	?___lldiv,convert_HSV@temp_609
  5756   001060  C002  F039         	movff	?___lldiv+1,convert_HSV@temp_609+1
  5757   001064  C003  F03A         	movff	?___lldiv+2,convert_HSV@temp_609+2
  5758   001068  C004  F03B         	movff	?___lldiv+3,convert_HSV@temp_609+3
  5759   00106C                     
  5760                           ;color.c: 250:                 hue = (unsigned int)temp;
  5761   00106C  C038  F01E         	movff	convert_HSV@temp_609,convert_HSV@hue
  5762   001070  C039  F01F         	movff	convert_HSV@temp_609+1,convert_HSV@hue+1
  5763   001074                     l3797:
  5764                           
  5765                           ;color.c: 253:         if (M == p2->G) {
  5766   001074  500F               	movf	convert_HSV@p2^0,w,c
  5767   001076  6ED9               	movwf	fsr2l,c
  5768   001078  6ADA               	clrf	fsr2h,c
  5769   00107A  0E02               	movlw	2
  5770   00107C  26D9               	addwf	fsr2l,f,c
  5771   00107E  503E               	movf	convert_HSV@M^0,w,c
  5772   001080  18DE               	xorwf	postinc2,w,c
  5773   001082  E107               	bnz	u3191
  5774   001084  503F               	movf	(convert_HSV@M+1)^0,w,c
  5775   001086  18DE               	xorwf	postinc2,w,c
  5776   001088  A4D8               	btfss	status,2,c
  5777   00108A  EF49  F008         	goto	u3191
  5778   00108E  EF4B  F008         	goto	u3190
  5779   001092                     u3191:
  5780   001092  EF20  F009         	goto	l3825
  5781   001096                     u3190:
  5782   001096                     
  5783                           ;color.c: 254:             if (p2->B >= p2->R) {
  5784   001096  500F               	movf	convert_HSV@p2^0,w,c
  5785   001098  6ED9               	movwf	fsr2l,c
  5786   00109A  6ADA               	clrf	fsr2h,c
  5787   00109C  500F               	movf	convert_HSV@p2^0,w,c
  5788   00109E  6EE1               	movwf	fsr1l,c
  5789   0010A0  6AE2               	clrf	fsr1h,c
  5790   0010A2  0E04               	movlw	4
  5791   0010A4  26E1               	addwf	fsr1l,f,c
  5792   0010A6  50DE               	movf	postinc2,w,c
  5793   0010A8  5CE6               	subwf	postinc1,w,c
  5794   0010AA  50DE               	movf	postinc2,w,c
  5795   0010AC  58E6               	subwfb	postinc1,w,c
  5796   0010AE  A0D8               	btfss	status,0,c
  5797   0010B0  EF5C  F008         	goto	u3201
  5798   0010B4  EF5E  F008         	goto	u3200
  5799   0010B8                     u3201:
  5800   0010B8  EFBF  F008         	goto	l3813
  5801   0010BC                     u3200:
  5802   0010BC                     
  5803                           ;color.c: 256:                 unsigned long temp;;color.c: 257:                 temp = 
      +                          (unsigned long)C;
  5804   0010BC  C040  F028         	movff	convert_HSV@C,convert_HSV@temp_610
  5805   0010C0  C041  F029         	movff	convert_HSV@C+1,convert_HSV@temp_610+1
  5806   0010C4  6A2A               	clrf	(convert_HSV@temp_610+2)^0,c
  5807   0010C6  6A2B               	clrf	(convert_HSV@temp_610+3)^0,c
  5808   0010C8                     
  5809                           ;color.c: 258:                 temp *= 2;
  5810   0010C8  90D8               	bcf	status,0,c
  5811   0010CA  3628               	rlcf	convert_HSV@temp_610^0,f,c
  5812   0010CC  3629               	rlcf	(convert_HSV@temp_610+1)^0,f,c
  5813   0010CE  362A               	rlcf	(convert_HSV@temp_610+2)^0,f,c
  5814   0010D0  362B               	rlcf	(convert_HSV@temp_610+3)^0,f,c
  5815   0010D2                     
  5816                           ;color.c: 259:                 temp += (unsigned long)(p2->B - p2->R);
  5817   0010D2  500F               	movf	convert_HSV@p2^0,w,c
  5818   0010D4  6ED9               	movwf	fsr2l,c
  5819   0010D6  6ADA               	clrf	fsr2h,c
  5820   0010D8  CFDE F010          	movff	postinc2,??_convert_HSV
  5821   0010DC  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5822   0010E0  500F               	movf	convert_HSV@p2^0,w,c
  5823   0010E2  6ED9               	movwf	fsr2l,c
  5824   0010E4  6ADA               	clrf	fsr2h,c
  5825   0010E6  0E04               	movlw	4
  5826   0010E8  26D9               	addwf	fsr2l,f,c
  5827   0010EA  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5828   0010EE  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5829   0010F2  5010               	movf	??_convert_HSV^0,w,c
  5830   0010F4  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5831   0010F6  6E14               	movwf	(??_convert_HSV+4)^0,c
  5832   0010F8  5011               	movf	(??_convert_HSV+1)^0,w,c
  5833   0010FA  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5834   0010FC  6E15               	movwf	(??_convert_HSV+5)^0,c
  5835   0010FE  5014               	movf	(??_convert_HSV+4)^0,w,c
  5836   001100  2628               	addwf	convert_HSV@temp_610^0,f,c
  5837   001102  5015               	movf	(??_convert_HSV+5)^0,w,c
  5838   001104  2229               	addwfc	(convert_HSV@temp_610+1)^0,f,c
  5839   001106  0E00               	movlw	0
  5840   001108  222A               	addwfc	(convert_HSV@temp_610+2)^0,f,c
  5841   00110A  0E00               	movlw	0
  5842   00110C  222B               	addwfc	(convert_HSV@temp_610+3)^0,f,c
  5843   00110E                     
  5844                           ;color.c: 260:                 temp *= (unsigned long)hue_scale;
  5845   00110E  C028  F001         	movff	convert_HSV@temp_610,___lmul@multiplier
  5846   001112  C029  F002         	movff	convert_HSV@temp_610+1,___lmul@multiplier+1
  5847   001116  C02A  F003         	movff	convert_HSV@temp_610+2,___lmul@multiplier+2
  5848   00111A  C02B  F004         	movff	convert_HSV@temp_610+3,___lmul@multiplier+3
  5849   00111E  0E3C               	movlw	60
  5850   001120  6E05               	movwf	___lmul@multiplicand^0,c
  5851   001122  0E00               	movlw	0
  5852   001124  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5853   001126  0E00               	movlw	0
  5854   001128  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5855   00112A  0E00               	movlw	0
  5856   00112C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5857   00112E  EC22  F018         	call	___lmul	;wreg free
  5858   001132  C001  F028         	movff	?___lmul,convert_HSV@temp_610
  5859   001136  C002  F029         	movff	?___lmul+1,convert_HSV@temp_610+1
  5860   00113A  C003  F02A         	movff	?___lmul+2,convert_HSV@temp_610+2
  5861   00113E  C004  F02B         	movff	?___lmul+3,convert_HSV@temp_610+3
  5862   001142                     
  5863                           ;color.c: 261:                 temp /= (unsigned long)C;
  5864   001142  C028  F001         	movff	convert_HSV@temp_610,___lldiv@dividend
  5865   001146  C029  F002         	movff	convert_HSV@temp_610+1,___lldiv@dividend+1
  5866   00114A  C02A  F003         	movff	convert_HSV@temp_610+2,___lldiv@dividend+2
  5867   00114E  C02B  F004         	movff	convert_HSV@temp_610+3,___lldiv@dividend+3
  5868   001152  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5869   001156  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5870   00115A  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5871   00115C  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5872   00115E  EC50  F016         	call	___lldiv	;wreg free
  5873   001162  C001  F028         	movff	?___lldiv,convert_HSV@temp_610
  5874   001166  C002  F029         	movff	?___lldiv+1,convert_HSV@temp_610+1
  5875   00116A  C003  F02A         	movff	?___lldiv+2,convert_HSV@temp_610+2
  5876   00116E  C004  F02B         	movff	?___lldiv+3,convert_HSV@temp_610+3
  5877   001172                     
  5878                           ;color.c: 262:                 hue = (unsigned int)temp;
  5879   001172  C028  F01E         	movff	convert_HSV@temp_610,convert_HSV@hue
  5880   001176  C029  F01F         	movff	convert_HSV@temp_610+1,convert_HSV@hue+1
  5881                           
  5882                           ;color.c: 263:             } else {
  5883   00117A  EF20  F009         	goto	l3825
  5884   00117E                     l3813:
  5885                           
  5886                           ;color.c: 265:                 unsigned long temp;;color.c: 266:                 temp = 
      +                          (unsigned long)C;
  5887   00117E  C040  F02C         	movff	convert_HSV@C,convert_HSV@temp_611
  5888   001182  C041  F02D         	movff	convert_HSV@C+1,convert_HSV@temp_611+1
  5889   001186  6A2E               	clrf	(convert_HSV@temp_611+2)^0,c
  5890   001188  6A2F               	clrf	(convert_HSV@temp_611+3)^0,c
  5891   00118A                     
  5892                           ;color.c: 267:                 temp *= 2;
  5893   00118A  90D8               	bcf	status,0,c
  5894   00118C  362C               	rlcf	convert_HSV@temp_611^0,f,c
  5895   00118E  362D               	rlcf	(convert_HSV@temp_611+1)^0,f,c
  5896   001190  362E               	rlcf	(convert_HSV@temp_611+2)^0,f,c
  5897   001192  362F               	rlcf	(convert_HSV@temp_611+3)^0,f,c
  5898   001194                     
  5899                           ;color.c: 268:                 temp -= (unsigned long)(p2->R - p2->B);
  5900   001194  500F               	movf	convert_HSV@p2^0,w,c
  5901   001196  6ED9               	movwf	fsr2l,c
  5902   001198  6ADA               	clrf	fsr2h,c
  5903   00119A  0E04               	movlw	4
  5904   00119C  26D9               	addwf	fsr2l,f,c
  5905   00119E  CFDE F010          	movff	postinc2,??_convert_HSV
  5906   0011A2  CFDD F011          	movff	postdec2,??_convert_HSV+1
  5907   0011A6  500F               	movf	convert_HSV@p2^0,w,c
  5908   0011A8  6ED9               	movwf	fsr2l,c
  5909   0011AA  6ADA               	clrf	fsr2h,c
  5910   0011AC  CFDE F012          	movff	postinc2,??_convert_HSV+2
  5911   0011B0  CFDD F013          	movff	postdec2,??_convert_HSV+3
  5912   0011B4  5010               	movf	??_convert_HSV^0,w,c
  5913   0011B6  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  5914   0011B8  6E14               	movwf	(??_convert_HSV+4)^0,c
  5915   0011BA  5011               	movf	(??_convert_HSV+1)^0,w,c
  5916   0011BC  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  5917   0011BE  6E15               	movwf	(??_convert_HSV+5)^0,c
  5918   0011C0  6A16               	clrf	(??_convert_HSV+6)^0,c
  5919   0011C2  6A17               	clrf	(??_convert_HSV+7)^0,c
  5920   0011C4  5014               	movf	(??_convert_HSV+4)^0,w,c
  5921   0011C6  5E2C               	subwf	convert_HSV@temp_611^0,f,c
  5922   0011C8  5015               	movf	(??_convert_HSV+5)^0,w,c
  5923   0011CA  5A2D               	subwfb	(convert_HSV@temp_611+1)^0,f,c
  5924   0011CC  5016               	movf	(??_convert_HSV+6)^0,w,c
  5925   0011CE  5A2E               	subwfb	(convert_HSV@temp_611+2)^0,f,c
  5926   0011D0  5017               	movf	(??_convert_HSV+7)^0,w,c
  5927   0011D2  5A2F               	subwfb	(convert_HSV@temp_611+3)^0,f,c
  5928   0011D4                     
  5929                           ;color.c: 269:                 temp *= (unsigned long)hue_scale;
  5930   0011D4  C02C  F001         	movff	convert_HSV@temp_611,___lmul@multiplier
  5931   0011D8  C02D  F002         	movff	convert_HSV@temp_611+1,___lmul@multiplier+1
  5932   0011DC  C02E  F003         	movff	convert_HSV@temp_611+2,___lmul@multiplier+2
  5933   0011E0  C02F  F004         	movff	convert_HSV@temp_611+3,___lmul@multiplier+3
  5934   0011E4  0E3C               	movlw	60
  5935   0011E6  6E05               	movwf	___lmul@multiplicand^0,c
  5936   0011E8  0E00               	movlw	0
  5937   0011EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5938   0011EC  0E00               	movlw	0
  5939   0011EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5940   0011F0  0E00               	movlw	0
  5941   0011F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5942   0011F4  EC22  F018         	call	___lmul	;wreg free
  5943   0011F8  C001  F02C         	movff	?___lmul,convert_HSV@temp_611
  5944   0011FC  C002  F02D         	movff	?___lmul+1,convert_HSV@temp_611+1
  5945   001200  C003  F02E         	movff	?___lmul+2,convert_HSV@temp_611+2
  5946   001204  C004  F02F         	movff	?___lmul+3,convert_HSV@temp_611+3
  5947   001208                     
  5948                           ;color.c: 270:                 temp /= (unsigned long)C;
  5949   001208  C02C  F001         	movff	convert_HSV@temp_611,___lldiv@dividend
  5950   00120C  C02D  F002         	movff	convert_HSV@temp_611+1,___lldiv@dividend+1
  5951   001210  C02E  F003         	movff	convert_HSV@temp_611+2,___lldiv@dividend+2
  5952   001214  C02F  F004         	movff	convert_HSV@temp_611+3,___lldiv@dividend+3
  5953   001218  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  5954   00121C  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  5955   001220  6A07               	clrf	(___lldiv@divisor+2)^0,c
  5956   001222  6A08               	clrf	(___lldiv@divisor+3)^0,c
  5957   001224  EC50  F016         	call	___lldiv	;wreg free
  5958   001228  C001  F02C         	movff	?___lldiv,convert_HSV@temp_611
  5959   00122C  C002  F02D         	movff	?___lldiv+1,convert_HSV@temp_611+1
  5960   001230  C003  F02E         	movff	?___lldiv+2,convert_HSV@temp_611+2
  5961   001234  C004  F02F         	movff	?___lldiv+3,convert_HSV@temp_611+3
  5962   001238                     
  5963                           ;color.c: 271:                 hue = (unsigned int)temp;
  5964   001238  C02C  F01E         	movff	convert_HSV@temp_611,convert_HSV@hue
  5965   00123C  C02D  F01F         	movff	convert_HSV@temp_611+1,convert_HSV@hue+1
  5966   001240                     l3825:
  5967                           
  5968                           ;color.c: 274:         if (M == p2->B) {
  5969   001240  500F               	movf	convert_HSV@p2^0,w,c
  5970   001242  6ED9               	movwf	fsr2l,c
  5971   001244  6ADA               	clrf	fsr2h,c
  5972   001246  0E04               	movlw	4
  5973   001248  26D9               	addwf	fsr2l,f,c
  5974   00124A  503E               	movf	convert_HSV@M^0,w,c
  5975   00124C  18DE               	xorwf	postinc2,w,c
  5976   00124E  E107               	bnz	u3211
  5977   001250  503F               	movf	(convert_HSV@M+1)^0,w,c
  5978   001252  18DE               	xorwf	postinc2,w,c
  5979   001254  A4D8               	btfss	status,2,c
  5980   001256  EF2F  F009         	goto	u3211
  5981   00125A  EF31  F009         	goto	u3210
  5982   00125E                     u3211:
  5983   00125E  EF0E  F00A         	goto	l3853
  5984   001262                     u3210:
  5985   001262                     
  5986                           ;color.c: 275:             if (p2->R >= p2->G) {
  5987   001262  500F               	movf	convert_HSV@p2^0,w,c
  5988   001264  6ED9               	movwf	fsr2l,c
  5989   001266  6ADA               	clrf	fsr2h,c
  5990   001268  0E02               	movlw	2
  5991   00126A  26D9               	addwf	fsr2l,f,c
  5992   00126C  500F               	movf	convert_HSV@p2^0,w,c
  5993   00126E  6EE1               	movwf	fsr1l,c
  5994   001270  6AE2               	clrf	fsr1h,c
  5995   001272  50DE               	movf	postinc2,w,c
  5996   001274  5CE6               	subwf	postinc1,w,c
  5997   001276  50DE               	movf	postinc2,w,c
  5998   001278  58E6               	subwfb	postinc1,w,c
  5999   00127A  A0D8               	btfss	status,0,c
  6000   00127C  EF42  F009         	goto	u3221
  6001   001280  EF44  F009         	goto	u3220
  6002   001284                     u3221:
  6003   001284  EFA9  F009         	goto	l3841
  6004   001288                     u3220:
  6005   001288                     
  6006                           ;color.c: 277:                 unsigned long temp;;color.c: 278:                 temp = 
      +                          (unsigned long)C;
  6007   001288  C040  F030         	movff	convert_HSV@C,convert_HSV@temp_612
  6008   00128C  C041  F031         	movff	convert_HSV@C+1,convert_HSV@temp_612+1
  6009   001290  6A32               	clrf	(convert_HSV@temp_612+2)^0,c
  6010   001292  6A33               	clrf	(convert_HSV@temp_612+3)^0,c
  6011   001294                     
  6012                           ;color.c: 279:                 temp *= 4;
  6013   001294  0E02               	movlw	2
  6014   001296                     u3235:
  6015   001296  90D8               	bcf	status,0,c
  6016   001298  3630               	rlcf	convert_HSV@temp_612^0,f,c
  6017   00129A  3631               	rlcf	(convert_HSV@temp_612+1)^0,f,c
  6018   00129C  3632               	rlcf	(convert_HSV@temp_612+2)^0,f,c
  6019   00129E  3633               	rlcf	(convert_HSV@temp_612+3)^0,f,c
  6020   0012A0  2EE8               	decfsz	wreg,f,c
  6021   0012A2  EF4B  F009         	goto	u3235
  6022   0012A6                     
  6023                           ;color.c: 280:                 temp += (unsigned long)(p2->R - p2->G);
  6024   0012A6  500F               	movf	convert_HSV@p2^0,w,c
  6025   0012A8  6ED9               	movwf	fsr2l,c
  6026   0012AA  6ADA               	clrf	fsr2h,c
  6027   0012AC  0E02               	movlw	2
  6028   0012AE  26D9               	addwf	fsr2l,f,c
  6029   0012B0  CFDE F010          	movff	postinc2,??_convert_HSV
  6030   0012B4  CFDD F011          	movff	postdec2,??_convert_HSV+1
  6031   0012B8  500F               	movf	convert_HSV@p2^0,w,c
  6032   0012BA  6ED9               	movwf	fsr2l,c
  6033   0012BC  6ADA               	clrf	fsr2h,c
  6034   0012BE  CFDE F012          	movff	postinc2,??_convert_HSV+2
  6035   0012C2  CFDD F013          	movff	postdec2,??_convert_HSV+3
  6036   0012C6  5010               	movf	??_convert_HSV^0,w,c
  6037   0012C8  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  6038   0012CA  6E14               	movwf	(??_convert_HSV+4)^0,c
  6039   0012CC  5011               	movf	(??_convert_HSV+1)^0,w,c
  6040   0012CE  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  6041   0012D0  6E15               	movwf	(??_convert_HSV+5)^0,c
  6042   0012D2  5014               	movf	(??_convert_HSV+4)^0,w,c
  6043   0012D4  2630               	addwf	convert_HSV@temp_612^0,f,c
  6044   0012D6  5015               	movf	(??_convert_HSV+5)^0,w,c
  6045   0012D8  2231               	addwfc	(convert_HSV@temp_612+1)^0,f,c
  6046   0012DA  0E00               	movlw	0
  6047   0012DC  2232               	addwfc	(convert_HSV@temp_612+2)^0,f,c
  6048   0012DE  0E00               	movlw	0
  6049   0012E0  2233               	addwfc	(convert_HSV@temp_612+3)^0,f,c
  6050   0012E2                     
  6051                           ;color.c: 281:                 temp *= (unsigned long)hue_scale;
  6052   0012E2  C030  F001         	movff	convert_HSV@temp_612,___lmul@multiplier
  6053   0012E6  C031  F002         	movff	convert_HSV@temp_612+1,___lmul@multiplier+1
  6054   0012EA  C032  F003         	movff	convert_HSV@temp_612+2,___lmul@multiplier+2
  6055   0012EE  C033  F004         	movff	convert_HSV@temp_612+3,___lmul@multiplier+3
  6056   0012F2  0E3C               	movlw	60
  6057   0012F4  6E05               	movwf	___lmul@multiplicand^0,c
  6058   0012F6  0E00               	movlw	0
  6059   0012F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6060   0012FA  0E00               	movlw	0
  6061   0012FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6062   0012FE  0E00               	movlw	0
  6063   001300  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6064   001302  EC22  F018         	call	___lmul	;wreg free
  6065   001306  C001  F030         	movff	?___lmul,convert_HSV@temp_612
  6066   00130A  C002  F031         	movff	?___lmul+1,convert_HSV@temp_612+1
  6067   00130E  C003  F032         	movff	?___lmul+2,convert_HSV@temp_612+2
  6068   001312  C004  F033         	movff	?___lmul+3,convert_HSV@temp_612+3
  6069   001316                     
  6070                           ;color.c: 282:                 temp /= (unsigned long)C;
  6071   001316  C030  F001         	movff	convert_HSV@temp_612,___lldiv@dividend
  6072   00131A  C031  F002         	movff	convert_HSV@temp_612+1,___lldiv@dividend+1
  6073   00131E  C032  F003         	movff	convert_HSV@temp_612+2,___lldiv@dividend+2
  6074   001322  C033  F004         	movff	convert_HSV@temp_612+3,___lldiv@dividend+3
  6075   001326  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  6076   00132A  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  6077   00132E  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6078   001330  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6079   001332  EC50  F016         	call	___lldiv	;wreg free
  6080   001336  C001  F030         	movff	?___lldiv,convert_HSV@temp_612
  6081   00133A  C002  F031         	movff	?___lldiv+1,convert_HSV@temp_612+1
  6082   00133E  C003  F032         	movff	?___lldiv+2,convert_HSV@temp_612+2
  6083   001342  C004  F033         	movff	?___lldiv+3,convert_HSV@temp_612+3
  6084   001346                     
  6085                           ;color.c: 283:                 hue = (unsigned int)temp;
  6086   001346  C030  F01E         	movff	convert_HSV@temp_612,convert_HSV@hue
  6087   00134A  C031  F01F         	movff	convert_HSV@temp_612+1,convert_HSV@hue+1
  6088                           
  6089                           ;color.c: 284:             } else {
  6090   00134E  EF0E  F00A         	goto	l3853
  6091   001352                     l3841:
  6092                           
  6093                           ;color.c: 286:                 unsigned long temp;;color.c: 287:                 temp = 
      +                          (unsigned long)C;
  6094   001352  C040  F034         	movff	convert_HSV@C,convert_HSV@temp_613
  6095   001356  C041  F035         	movff	convert_HSV@C+1,convert_HSV@temp_613+1
  6096   00135A  6A36               	clrf	(convert_HSV@temp_613+2)^0,c
  6097   00135C  6A37               	clrf	(convert_HSV@temp_613+3)^0,c
  6098   00135E                     
  6099                           ;color.c: 288:                 temp *= 4;
  6100   00135E  0E02               	movlw	2
  6101   001360                     u3245:
  6102   001360  90D8               	bcf	status,0,c
  6103   001362  3634               	rlcf	convert_HSV@temp_613^0,f,c
  6104   001364  3635               	rlcf	(convert_HSV@temp_613+1)^0,f,c
  6105   001366  3636               	rlcf	(convert_HSV@temp_613+2)^0,f,c
  6106   001368  3637               	rlcf	(convert_HSV@temp_613+3)^0,f,c
  6107   00136A  2EE8               	decfsz	wreg,f,c
  6108   00136C  EFB0  F009         	goto	u3245
  6109   001370                     
  6110                           ;color.c: 289:                 temp -= (unsigned long)(p2->G - p2->R);
  6111   001370  500F               	movf	convert_HSV@p2^0,w,c
  6112   001372  6ED9               	movwf	fsr2l,c
  6113   001374  6ADA               	clrf	fsr2h,c
  6114   001376  CFDE F010          	movff	postinc2,??_convert_HSV
  6115   00137A  CFDD F011          	movff	postdec2,??_convert_HSV+1
  6116   00137E  500F               	movf	convert_HSV@p2^0,w,c
  6117   001380  6ED9               	movwf	fsr2l,c
  6118   001382  6ADA               	clrf	fsr2h,c
  6119   001384  0E02               	movlw	2
  6120   001386  26D9               	addwf	fsr2l,f,c
  6121   001388  CFDE F012          	movff	postinc2,??_convert_HSV+2
  6122   00138C  CFDD F013          	movff	postdec2,??_convert_HSV+3
  6123   001390  5010               	movf	??_convert_HSV^0,w,c
  6124   001392  5C12               	subwf	(??_convert_HSV+2)^0,w,c
  6125   001394  6E14               	movwf	(??_convert_HSV+4)^0,c
  6126   001396  5011               	movf	(??_convert_HSV+1)^0,w,c
  6127   001398  5813               	subwfb	(??_convert_HSV+3)^0,w,c
  6128   00139A  6E15               	movwf	(??_convert_HSV+5)^0,c
  6129   00139C  6A16               	clrf	(??_convert_HSV+6)^0,c
  6130   00139E  6A17               	clrf	(??_convert_HSV+7)^0,c
  6131   0013A0  5014               	movf	(??_convert_HSV+4)^0,w,c
  6132   0013A2  5E34               	subwf	convert_HSV@temp_613^0,f,c
  6133   0013A4  5015               	movf	(??_convert_HSV+5)^0,w,c
  6134   0013A6  5A35               	subwfb	(convert_HSV@temp_613+1)^0,f,c
  6135   0013A8  5016               	movf	(??_convert_HSV+6)^0,w,c
  6136   0013AA  5A36               	subwfb	(convert_HSV@temp_613+2)^0,f,c
  6137   0013AC  5017               	movf	(??_convert_HSV+7)^0,w,c
  6138   0013AE  5A37               	subwfb	(convert_HSV@temp_613+3)^0,f,c
  6139   0013B0                     
  6140                           ;color.c: 290:                 temp *= (unsigned long)hue_scale;
  6141   0013B0  C034  F001         	movff	convert_HSV@temp_613,___lmul@multiplier
  6142   0013B4  C035  F002         	movff	convert_HSV@temp_613+1,___lmul@multiplier+1
  6143   0013B8  C036  F003         	movff	convert_HSV@temp_613+2,___lmul@multiplier+2
  6144   0013BC  C037  F004         	movff	convert_HSV@temp_613+3,___lmul@multiplier+3
  6145   0013C0  0E3C               	movlw	60
  6146   0013C2  6E05               	movwf	___lmul@multiplicand^0,c
  6147   0013C4  0E00               	movlw	0
  6148   0013C6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6149   0013C8  0E00               	movlw	0
  6150   0013CA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6151   0013CC  0E00               	movlw	0
  6152   0013CE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6153   0013D0  EC22  F018         	call	___lmul	;wreg free
  6154   0013D4  C001  F034         	movff	?___lmul,convert_HSV@temp_613
  6155   0013D8  C002  F035         	movff	?___lmul+1,convert_HSV@temp_613+1
  6156   0013DC  C003  F036         	movff	?___lmul+2,convert_HSV@temp_613+2
  6157   0013E0  C004  F037         	movff	?___lmul+3,convert_HSV@temp_613+3
  6158   0013E4                     
  6159                           ;color.c: 291:                 temp /= (unsigned long)C;
  6160   0013E4  C034  F001         	movff	convert_HSV@temp_613,___lldiv@dividend
  6161   0013E8  C035  F002         	movff	convert_HSV@temp_613+1,___lldiv@dividend+1
  6162   0013EC  C036  F003         	movff	convert_HSV@temp_613+2,___lldiv@dividend+2
  6163   0013F0  C037  F004         	movff	convert_HSV@temp_613+3,___lldiv@dividend+3
  6164   0013F4  C040  F005         	movff	convert_HSV@C,___lldiv@divisor
  6165   0013F8  C041  F006         	movff	convert_HSV@C+1,___lldiv@divisor+1
  6166   0013FC  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6167   0013FE  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6168   001400  EC50  F016         	call	___lldiv	;wreg free
  6169   001404  C001  F034         	movff	?___lldiv,convert_HSV@temp_613
  6170   001408  C002  F035         	movff	?___lldiv+1,convert_HSV@temp_613+1
  6171   00140C  C003  F036         	movff	?___lldiv+2,convert_HSV@temp_613+2
  6172   001410  C004  F037         	movff	?___lldiv+3,convert_HSV@temp_613+3
  6173   001414                     
  6174                           ;color.c: 292:                 hue = (unsigned int)temp;
  6175   001414  C034  F01E         	movff	convert_HSV@temp_613,convert_HSV@hue
  6176   001418  C035  F01F         	movff	convert_HSV@temp_613+1,convert_HSV@hue+1
  6177   00141C                     l3853:
  6178                           
  6179                           ;color.c: 297:     if (M == 0) {
  6180   00141C  503E               	movf	convert_HSV@M^0,w,c
  6181   00141E  103F               	iorwf	(convert_HSV@M+1)^0,w,c
  6182   001420  A4D8               	btfss	status,2,c
  6183   001422  EF15  F00A         	goto	u3251
  6184   001426  EF17  F00A         	goto	u3250
  6185   00142A                     u3251:
  6186   00142A  EF1D  F00A         	goto	l3857
  6187   00142E                     u3250:
  6188   00142E                     
  6189                           ;color.c: 298:         sat = 0;
  6190   00142E  0E00               	movlw	0
  6191   001430  6E1D               	movwf	(convert_HSV@sat+1)^0,c
  6192   001432  0E00               	movlw	0
  6193   001434  6E1C               	movwf	convert_HSV@sat^0,c
  6194                           
  6195                           ;color.c: 299:     } else {
  6196   001436  EF59  F00A         	goto	l3865
  6197   00143A                     l3857:
  6198                           
  6199                           ;color.c: 301:         unsigned long temp;;color.c: 302:         temp = (unsigned long)C
      +                          ;
  6200   00143A  C040  F020         	movff	convert_HSV@C,convert_HSV@temp_614
  6201   00143E  C041  F021         	movff	convert_HSV@C+1,convert_HSV@temp_614+1
  6202   001442  6A22               	clrf	(convert_HSV@temp_614+2)^0,c
  6203   001444  6A23               	clrf	(convert_HSV@temp_614+3)^0,c
  6204   001446                     
  6205                           ;color.c: 303:         temp *= (unsigned long)sat_scale;
  6206   001446  C020  F001         	movff	convert_HSV@temp_614,___lmul@multiplier
  6207   00144A  C021  F002         	movff	convert_HSV@temp_614+1,___lmul@multiplier+1
  6208   00144E  C022  F003         	movff	convert_HSV@temp_614+2,___lmul@multiplier+2
  6209   001452  C023  F004         	movff	convert_HSV@temp_614+3,___lmul@multiplier+3
  6210   001456  0E64               	movlw	100
  6211   001458  6E05               	movwf	___lmul@multiplicand^0,c
  6212   00145A  0E00               	movlw	0
  6213   00145C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6214   00145E  0E00               	movlw	0
  6215   001460  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6216   001462  0E00               	movlw	0
  6217   001464  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6218   001466  EC22  F018         	call	___lmul	;wreg free
  6219   00146A  C001  F020         	movff	?___lmul,convert_HSV@temp_614
  6220   00146E  C002  F021         	movff	?___lmul+1,convert_HSV@temp_614+1
  6221   001472  C003  F022         	movff	?___lmul+2,convert_HSV@temp_614+2
  6222   001476  C004  F023         	movff	?___lmul+3,convert_HSV@temp_614+3
  6223   00147A                     
  6224                           ;color.c: 304:         temp /= (unsigned long)M;
  6225   00147A  C020  F001         	movff	convert_HSV@temp_614,___lldiv@dividend
  6226   00147E  C021  F002         	movff	convert_HSV@temp_614+1,___lldiv@dividend+1
  6227   001482  C022  F003         	movff	convert_HSV@temp_614+2,___lldiv@dividend+2
  6228   001486  C023  F004         	movff	convert_HSV@temp_614+3,___lldiv@dividend+3
  6229   00148A  C03E  F005         	movff	convert_HSV@M,___lldiv@divisor
  6230   00148E  C03F  F006         	movff	convert_HSV@M+1,___lldiv@divisor+1
  6231   001492  6A07               	clrf	(___lldiv@divisor+2)^0,c
  6232   001494  6A08               	clrf	(___lldiv@divisor+3)^0,c
  6233   001496  EC50  F016         	call	___lldiv	;wreg free
  6234   00149A  C001  F020         	movff	?___lldiv,convert_HSV@temp_614
  6235   00149E  C002  F021         	movff	?___lldiv+1,convert_HSV@temp_614+1
  6236   0014A2  C003  F022         	movff	?___lldiv+2,convert_HSV@temp_614+2
  6237   0014A6  C004  F023         	movff	?___lldiv+3,convert_HSV@temp_614+3
  6238   0014AA                     
  6239                           ;color.c: 305:         sat = (unsigned int)temp;
  6240   0014AA  C020  F01C         	movff	convert_HSV@temp_614,convert_HSV@sat
  6241   0014AE  C021  F01D         	movff	convert_HSV@temp_614+1,convert_HSV@sat+1
  6242   0014B2                     l3865:
  6243                           
  6244                           ;color.c: 308:     p1->H = hue;
  6245   0014B2  500E               	movf	convert_HSV@p1^0,w,c
  6246   0014B4  6ED9               	movwf	fsr2l,c
  6247   0014B6  6ADA               	clrf	fsr2h,c
  6248   0014B8  C01E  FFDE         	movff	convert_HSV@hue,postinc2
  6249   0014BC  C01F  FFDD         	movff	convert_HSV@hue+1,postdec2
  6250   0014C0                     
  6251                           ;color.c: 309:     p1->S = sat;
  6252   0014C0  500E               	movf	convert_HSV@p1^0,w,c
  6253   0014C2  6ED9               	movwf	fsr2l,c
  6254   0014C4  6ADA               	clrf	fsr2h,c
  6255   0014C6  0E02               	movlw	2
  6256   0014C8  26D9               	addwf	fsr2l,f,c
  6257   0014CA  C01C  FFDE         	movff	convert_HSV@sat,postinc2
  6258   0014CE  C01D  FFDD         	movff	convert_HSV@sat+1,postdec2
  6259   0014D2                     
  6260                           ;color.c: 310:     p1->V = M;
  6261   0014D2  500E               	movf	convert_HSV@p1^0,w,c
  6262   0014D4  6ED9               	movwf	fsr2l,c
  6263   0014D6  6ADA               	clrf	fsr2h,c
  6264   0014D8  0E04               	movlw	4
  6265   0014DA  26D9               	addwf	fsr2l,f,c
  6266   0014DC  C03E  FFDE         	movff	convert_HSV@M,postinc2
  6267   0014E0  C03F  FFDD         	movff	convert_HSV@M+1,postdec2
  6268   0014E4  0012               	return		;funcret
  6269   0014E6                     __end_of_convert_HSV:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _min_RGB *****************
  6273 ;; Defined at:
  6274 ;;		line 186 in file "color.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  6277 ;;		 -> main@RGBC_colour(8), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  min_val         2    4[COMRAM] unsigned int 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  2    0[COMRAM] unsigned int 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;Total ram usage:        6 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 1
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_convert_HSV
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text32
  6304   002E62                     __ptext32:
  6305                           	callstack 0
  6306   002E62                     _min_RGB:
  6307                           	callstack 27
  6308   002E62                     
  6309                           ;color.c: 186: unsigned int min_RGB(struct RGBC_val *p);color.c: 187: {;color.c: 188:   
      +                            unsigned int min_val = p->R;
  6310   002E62  5001               	movf	min_RGB@p^0,w,c
  6311   002E64  6ED9               	movwf	fsr2l,c
  6312   002E66  6ADA               	clrf	fsr2h,c
  6313   002E68  CFDE F005          	movff	postinc2,min_RGB@min_val
  6314   002E6C  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6315   002E70                     
  6316                           ;color.c: 189:     if (p->G < min_val) {min_val = p->G;}
  6317   002E70  5001               	movf	min_RGB@p^0,w,c
  6318   002E72  6ED9               	movwf	fsr2l,c
  6319   002E74  6ADA               	clrf	fsr2h,c
  6320   002E76  0E02               	movlw	2
  6321   002E78  26D9               	addwf	fsr2l,f,c
  6322   002E7A  5005               	movf	min_RGB@min_val^0,w,c
  6323   002E7C  5CDE               	subwf	postinc2,w,c
  6324   002E7E  5006               	movf	(min_RGB@min_val+1)^0,w,c
  6325   002E80  58DE               	subwfb	postinc2,w,c
  6326   002E82  B0D8               	btfsc	status,0,c
  6327   002E84  EF46  F017         	goto	u2531
  6328   002E88  EF48  F017         	goto	u2530
  6329   002E8C                     u2531:
  6330   002E8C  EF51  F017         	goto	l104
  6331   002E90                     u2530:
  6332   002E90  5001               	movf	min_RGB@p^0,w,c
  6333   002E92  6ED9               	movwf	fsr2l,c
  6334   002E94  6ADA               	clrf	fsr2h,c
  6335   002E96  0E02               	movlw	2
  6336   002E98  26D9               	addwf	fsr2l,f,c
  6337   002E9A  CFDE F005          	movff	postinc2,min_RGB@min_val
  6338   002E9E  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6339   002EA2                     l104:
  6340                           
  6341                           ;color.c: 190:     if (p->B < min_val) {min_val = p->B;}
  6342   002EA2  5001               	movf	min_RGB@p^0,w,c
  6343   002EA4  6ED9               	movwf	fsr2l,c
  6344   002EA6  6ADA               	clrf	fsr2h,c
  6345   002EA8  0E04               	movlw	4
  6346   002EAA  26D9               	addwf	fsr2l,f,c
  6347   002EAC  5005               	movf	min_RGB@min_val^0,w,c
  6348   002EAE  5CDE               	subwf	postinc2,w,c
  6349   002EB0  5006               	movf	(min_RGB@min_val+1)^0,w,c
  6350   002EB2  58DE               	subwfb	postinc2,w,c
  6351   002EB4  B0D8               	btfsc	status,0,c
  6352   002EB6  EF5F  F017         	goto	u2541
  6353   002EBA  EF61  F017         	goto	u2540
  6354   002EBE                     u2541:
  6355   002EBE  EF6A  F017         	goto	l3363
  6356   002EC2                     u2540:
  6357   002EC2  5001               	movf	min_RGB@p^0,w,c
  6358   002EC4  6ED9               	movwf	fsr2l,c
  6359   002EC6  6ADA               	clrf	fsr2h,c
  6360   002EC8  0E04               	movlw	4
  6361   002ECA  26D9               	addwf	fsr2l,f,c
  6362   002ECC  CFDE F005          	movff	postinc2,min_RGB@min_val
  6363   002ED0  CFDD F006          	movff	postdec2,min_RGB@min_val+1
  6364   002ED4                     l3363:
  6365                           
  6366                           ;color.c: 191:     return min_val;
  6367   002ED4  C005  F001         	movff	min_RGB@min_val,?_min_RGB
  6368   002ED8  C006  F002         	movff	min_RGB@min_val+1,?_min_RGB+1
  6369   002EDC  0012               	return		;funcret
  6370   002EDE                     __end_of_min_RGB:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _max_RGB *****************
  6374 ;; Defined at:
  6375 ;;		line 175 in file "color.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  p               1    0[COMRAM] PTR struct RGBC_val
  6378 ;;		 -> main@RGBC_colour(8), 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  max_val         2    4[COMRAM] unsigned int 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  2    0[COMRAM] unsigned int 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;Total ram usage:        6 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_convert_HSV
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text33
  6405   002EDE                     __ptext33:
  6406                           	callstack 0
  6407   002EDE                     _max_RGB:
  6408                           	callstack 27
  6409   002EDE                     
  6410                           ;color.c: 175: unsigned int max_RGB(struct RGBC_val *p);color.c: 176: {;color.c: 177:   
      +                            unsigned int max_val = p->R;
  6411   002EDE  5001               	movf	max_RGB@p^0,w,c
  6412   002EE0  6ED9               	movwf	fsr2l,c
  6413   002EE2  6ADA               	clrf	fsr2h,c
  6414   002EE4  CFDE F005          	movff	postinc2,max_RGB@max_val
  6415   002EE8  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6416   002EEC                     
  6417                           ;color.c: 178:     if (p->G > max_val) {max_val = p->G;}
  6418   002EEC  5001               	movf	max_RGB@p^0,w,c
  6419   002EEE  6ED9               	movwf	fsr2l,c
  6420   002EF0  6ADA               	clrf	fsr2h,c
  6421   002EF2  0E02               	movlw	2
  6422   002EF4  26D9               	addwf	fsr2l,f,c
  6423   002EF6  50DE               	movf	postinc2,w,c
  6424   002EF8  5C05               	subwf	max_RGB@max_val^0,w,c
  6425   002EFA  50DE               	movf	postinc2,w,c
  6426   002EFC  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  6427   002EFE  B0D8               	btfsc	status,0,c
  6428   002F00  EF84  F017         	goto	u2511
  6429   002F04  EF86  F017         	goto	u2510
  6430   002F08                     u2511:
  6431   002F08  EF8F  F017         	goto	l99
  6432   002F0C                     u2510:
  6433   002F0C  5001               	movf	max_RGB@p^0,w,c
  6434   002F0E  6ED9               	movwf	fsr2l,c
  6435   002F10  6ADA               	clrf	fsr2h,c
  6436   002F12  0E02               	movlw	2
  6437   002F14  26D9               	addwf	fsr2l,f,c
  6438   002F16  CFDE F005          	movff	postinc2,max_RGB@max_val
  6439   002F1A  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6440   002F1E                     l99:
  6441                           
  6442                           ;color.c: 179:     if (p->B > max_val) {max_val = p->B;}
  6443   002F1E  5001               	movf	max_RGB@p^0,w,c
  6444   002F20  6ED9               	movwf	fsr2l,c
  6445   002F22  6ADA               	clrf	fsr2h,c
  6446   002F24  0E04               	movlw	4
  6447   002F26  26D9               	addwf	fsr2l,f,c
  6448   002F28  50DE               	movf	postinc2,w,c
  6449   002F2A  5C05               	subwf	max_RGB@max_val^0,w,c
  6450   002F2C  50DE               	movf	postinc2,w,c
  6451   002F2E  5806               	subwfb	(max_RGB@max_val+1)^0,w,c
  6452   002F30  B0D8               	btfsc	status,0,c
  6453   002F32  EF9D  F017         	goto	u2521
  6454   002F36  EF9F  F017         	goto	u2520
  6455   002F3A                     u2521:
  6456   002F3A  EFA8  F017         	goto	l3351
  6457   002F3E                     u2520:
  6458   002F3E  5001               	movf	max_RGB@p^0,w,c
  6459   002F40  6ED9               	movwf	fsr2l,c
  6460   002F42  6ADA               	clrf	fsr2h,c
  6461   002F44  0E04               	movlw	4
  6462   002F46  26D9               	addwf	fsr2l,f,c
  6463   002F48  CFDE F005          	movff	postinc2,max_RGB@max_val
  6464   002F4C  CFDD F006          	movff	postdec2,max_RGB@max_val+1
  6465   002F50                     l3351:
  6466                           
  6467                           ;color.c: 180:     return max_val;
  6468   002F50  C005  F001         	movff	max_RGB@max_val,?_max_RGB
  6469   002F54  C006  F002         	movff	max_RGB@max_val+1,?_max_RGB+1
  6470   002F58  0012               	return		;funcret
  6471   002F5A                     __end_of_max_RGB:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function ___lmul *****************
  6475 ;; Defined at:
  6476 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  multiplier      4    0[COMRAM] unsigned long 
  6479 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  product         4    8[COMRAM] unsigned long 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  4    0[COMRAM] unsigned long 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6491 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6495 ;;Total ram usage:       12 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_convert_HSV
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text34
  6506   003044                     __ptext34:
  6507                           	callstack 0
  6508   003044                     ___lmul:
  6509                           	callstack 27
  6510   003044  0E00               	movlw	0
  6511   003046  6E09               	movwf	___lmul@product^0,c
  6512   003048  0E00               	movlw	0
  6513   00304A  6E0A               	movwf	(___lmul@product+1)^0,c
  6514   00304C  0E00               	movlw	0
  6515   00304E  6E0B               	movwf	(___lmul@product+2)^0,c
  6516   003050  0E00               	movlw	0
  6517   003052  6E0C               	movwf	(___lmul@product+3)^0,c
  6518   003054                     l3453:
  6519   003054  A001               	btfss	___lmul@multiplier^0,0,c
  6520   003056  EF2F  F018         	goto	u2601
  6521   00305A  EF31  F018         	goto	u2600
  6522   00305E                     u2601:
  6523   00305E  EF39  F018         	goto	l3457
  6524   003062                     u2600:
  6525   003062  5005               	movf	___lmul@multiplicand^0,w,c
  6526   003064  2609               	addwf	___lmul@product^0,f,c
  6527   003066  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6528   003068  220A               	addwfc	(___lmul@product+1)^0,f,c
  6529   00306A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6530   00306C  220B               	addwfc	(___lmul@product+2)^0,f,c
  6531   00306E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6532   003070  220C               	addwfc	(___lmul@product+3)^0,f,c
  6533   003072                     l3457:
  6534   003072  90D8               	bcf	status,0,c
  6535   003074  3605               	rlcf	___lmul@multiplicand^0,f,c
  6536   003076  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6537   003078  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6538   00307A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6539   00307C  90D8               	bcf	status,0,c
  6540   00307E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6541   003080  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6542   003082  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6543   003084  3201               	rrcf	___lmul@multiplier^0,f,c
  6544   003086  5001               	movf	___lmul@multiplier^0,w,c
  6545   003088  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6546   00308A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6547   00308C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6548   00308E  A4D8               	btfss	status,2,c
  6549   003090  EF4C  F018         	goto	u2611
  6550   003094  EF4E  F018         	goto	u2610
  6551   003098                     u2611:
  6552   003098  EF2A  F018         	goto	l3453
  6553   00309C                     u2610:
  6554   00309C  C009  F001         	movff	___lmul@product,?___lmul
  6555   0030A0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6556   0030A4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6557   0030A8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6558   0030AC  0012               	return		;funcret
  6559   0030AE                     __end_of___lmul:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _colour_to_key *****************
  6563 ;; Defined at:
  6564 ;;		line 321 in file "color.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  p1              1    0[COMRAM] PTR struct HSV_val
  6567 ;;		 -> main@HSV_colour(6), 
  6568 ;;  p2              1    1[COMRAM] PTR struct RGBC_val
  6569 ;;		 -> main@RGBC_colour(8), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  key             1    4[COMRAM] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6585 ;;Total ram usage:        5 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_forward_navigation
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text35
  6596   0014E6                     __ptext35:
  6597                           	callstack 0
  6598   0014E6                     _colour_to_key:
  6599                           	callstack 28
  6600   0014E6                     
  6601                           ;color.c: 321: unsigned char colour_to_key(struct HSV_val *p1, struct RGBC_val *p2);colo
      +                          r.c: 322: {;color.c: 323:     unsigned char key = 0;
  6602   0014E6  0E00               	movlw	0
  6603   0014E8  6E05               	movwf	colour_to_key@key^0,c
  6604   0014EA                     
  6605                           ;color.c: 324:     if ( ((293 <= p1->H) && (p1->H <= 360)) &&
  6606   0014EA  5001               	movf	colour_to_key@p1^0,w,c
  6607   0014EC  6ED9               	movwf	fsr2l,c
  6608   0014EE  6ADA               	clrf	fsr2h,c
  6609   0014F0  0E25               	movlw	37
  6610   0014F2  5CDE               	subwf	postinc2,w,c
  6611   0014F4  0E01               	movlw	1
  6612   0014F6  58DE               	subwfb	postinc2,w,c
  6613   0014F8  A0D8               	btfss	status,0,c
  6614   0014FA  EF81  F00A         	goto	u3261
  6615   0014FE  EF83  F00A         	goto	u3260
  6616   001502                     u3261:
  6617   001502  EFB5  F00A         	goto	l3883
  6618   001506                     u3260:
  6619   001506  5001               	movf	colour_to_key@p1^0,w,c
  6620   001508  6ED9               	movwf	fsr2l,c
  6621   00150A  6ADA               	clrf	fsr2h,c
  6622   00150C  0E69               	movlw	105
  6623   00150E  5CDE               	subwf	postinc2,w,c
  6624   001510  0E01               	movlw	1
  6625   001512  58DE               	subwfb	postinc2,w,c
  6626   001514  B0D8               	btfsc	status,0,c
  6627   001516  EF8F  F00A         	goto	u3271
  6628   00151A  EF91  F00A         	goto	u3270
  6629   00151E                     u3271:
  6630   00151E  EFB5  F00A         	goto	l3883
  6631   001522                     u3270:
  6632   001522  5001               	movf	colour_to_key@p1^0,w,c
  6633   001524  6ED9               	movwf	fsr2l,c
  6634   001526  6ADA               	clrf	fsr2h,c
  6635   001528  0E02               	movlw	2
  6636   00152A  26D9               	addwf	fsr2l,f,c
  6637   00152C  0E01               	movlw	1
  6638   00152E  50DB               	movf	plusw2,w,c
  6639   001530  E109               	bnz	u3280
  6640   001532  0E2E               	movlw	46
  6641   001534  5CDE               	subwf	postinc2,w,c
  6642   001536  A0D8               	btfss	status,0,c
  6643   001538  EFA0  F00A         	goto	u3281
  6644   00153C  EFA2  F00A         	goto	u3280
  6645   001540                     u3281:
  6646   001540  EFB5  F00A         	goto	l3883
  6647   001544                     u3280:
  6648   001544  5001               	movf	colour_to_key@p1^0,w,c
  6649   001546  6ED9               	movwf	fsr2l,c
  6650   001548  6ADA               	clrf	fsr2h,c
  6651   00154A  0E02               	movlw	2
  6652   00154C  26D9               	addwf	fsr2l,f,c
  6653   00154E  0E01               	movlw	1
  6654   001550  50DB               	movf	plusw2,w,c
  6655   001552  E107               	bnz	u3291
  6656   001554  0E5B               	movlw	91
  6657   001556  5CDE               	subwf	postinc2,w,c
  6658   001558  B0D8               	btfsc	status,0,c
  6659   00155A  EFB1  F00A         	goto	u3291
  6660   00155E  EFB3  F00A         	goto	u3290
  6661   001562                     u3291:
  6662   001562  EFB5  F00A         	goto	l3883
  6663   001566                     u3290:
  6664   001566                     
  6665                           ;color.c: 325:          ((46 <= p1->S) && (p1->S <= 90))) {;color.c: 326:         key = 
      +                          1;
  6666   001566  0E01               	movlw	1
  6667   001568  6E05               	movwf	colour_to_key@key^0,c
  6668   00156A                     l3883:
  6669                           
  6670                           ;color.c: 329:     if ( ((113 <= p1->H) && (p1->H <= 153)) &&
  6671   00156A  5001               	movf	colour_to_key@p1^0,w,c
  6672   00156C  6ED9               	movwf	fsr2l,c
  6673   00156E  6ADA               	clrf	fsr2h,c
  6674   001570  0E01               	movlw	1
  6675   001572  50DB               	movf	plusw2,w,c
  6676   001574  E109               	bnz	u3300
  6677   001576  0E71               	movlw	113
  6678   001578  5CDE               	subwf	postinc2,w,c
  6679   00157A  A0D8               	btfss	status,0,c
  6680   00157C  EFC2  F00A         	goto	u3301
  6681   001580  EFC4  F00A         	goto	u3300
  6682   001584                     u3301:
  6683   001584  EFF7  F00A         	goto	l3893
  6684   001588                     u3300:
  6685   001588  5001               	movf	colour_to_key@p1^0,w,c
  6686   00158A  6ED9               	movwf	fsr2l,c
  6687   00158C  6ADA               	clrf	fsr2h,c
  6688   00158E  0E01               	movlw	1
  6689   001590  50DB               	movf	plusw2,w,c
  6690   001592  E107               	bnz	u3311
  6691   001594  0E9A               	movlw	154
  6692   001596  5CDE               	subwf	postinc2,w,c
  6693   001598  B0D8               	btfsc	status,0,c
  6694   00159A  EFD1  F00A         	goto	u3311
  6695   00159E  EFD3  F00A         	goto	u3310
  6696   0015A2                     u3311:
  6697   0015A2  EFF7  F00A         	goto	l3893
  6698   0015A6                     u3310:
  6699   0015A6  5001               	movf	colour_to_key@p1^0,w,c
  6700   0015A8  6ED9               	movwf	fsr2l,c
  6701   0015AA  6ADA               	clrf	fsr2h,c
  6702   0015AC  0E02               	movlw	2
  6703   0015AE  26D9               	addwf	fsr2l,f,c
  6704   0015B0  0E01               	movlw	1
  6705   0015B2  50DB               	movf	plusw2,w,c
  6706   0015B4  E109               	bnz	u3320
  6707   0015B6  0E0D               	movlw	13
  6708   0015B8  5CDE               	subwf	postinc2,w,c
  6709   0015BA  A0D8               	btfss	status,0,c
  6710   0015BC  EFE2  F00A         	goto	u3321
  6711   0015C0  EFE4  F00A         	goto	u3320
  6712   0015C4                     u3321:
  6713   0015C4  EFF7  F00A         	goto	l3893
  6714   0015C8                     u3320:
  6715   0015C8  5001               	movf	colour_to_key@p1^0,w,c
  6716   0015CA  6ED9               	movwf	fsr2l,c
  6717   0015CC  6ADA               	clrf	fsr2h,c
  6718   0015CE  0E02               	movlw	2
  6719   0015D0  26D9               	addwf	fsr2l,f,c
  6720   0015D2  0E01               	movlw	1
  6721   0015D4  50DB               	movf	plusw2,w,c
  6722   0015D6  E107               	bnz	u3331
  6723   0015D8  0E2C               	movlw	44
  6724   0015DA  5CDE               	subwf	postinc2,w,c
  6725   0015DC  B0D8               	btfsc	status,0,c
  6726   0015DE  EFF3  F00A         	goto	u3331
  6727   0015E2  EFF5  F00A         	goto	u3330
  6728   0015E6                     u3331:
  6729   0015E6  EFF7  F00A         	goto	l3893
  6730   0015EA                     u3330:
  6731   0015EA                     
  6732                           ;color.c: 330:          ((13 <= p1->S) && (p1->S <= 43))) {;color.c: 331:         key = 
      +                          2;
  6733   0015EA  0E02               	movlw	2
  6734   0015EC  6E05               	movwf	colour_to_key@key^0,c
  6735   0015EE                     l3893:
  6736                           
  6737                           ;color.c: 334:     if ( ((180 <= p1->H) && (p1->H <= 244)) &&
  6738   0015EE  5001               	movf	colour_to_key@p1^0,w,c
  6739   0015F0  6ED9               	movwf	fsr2l,c
  6740   0015F2  6ADA               	clrf	fsr2h,c
  6741   0015F4  0E01               	movlw	1
  6742   0015F6  50DB               	movf	plusw2,w,c
  6743   0015F8  E109               	bnz	u3340
  6744   0015FA  0EB4               	movlw	180
  6745   0015FC  5CDE               	subwf	postinc2,w,c
  6746   0015FE  A0D8               	btfss	status,0,c
  6747   001600  EF04  F00B         	goto	u3341
  6748   001604  EF06  F00B         	goto	u3340
  6749   001608                     u3341:
  6750   001608  EF39  F00B         	goto	l3903
  6751   00160C                     u3340:
  6752   00160C  5001               	movf	colour_to_key@p1^0,w,c
  6753   00160E  6ED9               	movwf	fsr2l,c
  6754   001610  6ADA               	clrf	fsr2h,c
  6755   001612  0E01               	movlw	1
  6756   001614  50DB               	movf	plusw2,w,c
  6757   001616  E107               	bnz	u3351
  6758   001618  0EF5               	movlw	245
  6759   00161A  5CDE               	subwf	postinc2,w,c
  6760   00161C  B0D8               	btfsc	status,0,c
  6761   00161E  EF13  F00B         	goto	u3351
  6762   001622  EF15  F00B         	goto	u3350
  6763   001626                     u3351:
  6764   001626  EF39  F00B         	goto	l3903
  6765   00162A                     u3350:
  6766   00162A  5001               	movf	colour_to_key@p1^0,w,c
  6767   00162C  6ED9               	movwf	fsr2l,c
  6768   00162E  6ADA               	clrf	fsr2h,c
  6769   001630  0E02               	movlw	2
  6770   001632  26D9               	addwf	fsr2l,f,c
  6771   001634  0E01               	movlw	1
  6772   001636  50DB               	movf	plusw2,w,c
  6773   001638  E109               	bnz	u3360
  6774   00163A  0E0D               	movlw	13
  6775   00163C  5CDE               	subwf	postinc2,w,c
  6776   00163E  A0D8               	btfss	status,0,c
  6777   001640  EF24  F00B         	goto	u3361
  6778   001644  EF26  F00B         	goto	u3360
  6779   001648                     u3361:
  6780   001648  EF39  F00B         	goto	l3903
  6781   00164C                     u3360:
  6782   00164C  5001               	movf	colour_to_key@p1^0,w,c
  6783   00164E  6ED9               	movwf	fsr2l,c
  6784   001650  6ADA               	clrf	fsr2h,c
  6785   001652  0E02               	movlw	2
  6786   001654  26D9               	addwf	fsr2l,f,c
  6787   001656  0E01               	movlw	1
  6788   001658  50DB               	movf	plusw2,w,c
  6789   00165A  E107               	bnz	u3371
  6790   00165C  0E39               	movlw	57
  6791   00165E  5CDE               	subwf	postinc2,w,c
  6792   001660  B0D8               	btfsc	status,0,c
  6793   001662  EF35  F00B         	goto	u3371
  6794   001666  EF37  F00B         	goto	u3370
  6795   00166A                     u3371:
  6796   00166A  EF39  F00B         	goto	l3903
  6797   00166E                     u3370:
  6798   00166E                     
  6799                           ;color.c: 335:          ((13 <= p1->S) && (p1->S <= 56))) {;color.c: 336:         key = 
      +                          3;
  6800   00166E  0E03               	movlw	3
  6801   001670  6E05               	movwf	colour_to_key@key^0,c
  6802   001672                     l3903:
  6803                           
  6804                           ;color.c: 339:     if ( ((10 <= p1->H) && (p1->H <= 31)) &&
  6805   001672  5001               	movf	colour_to_key@p1^0,w,c
  6806   001674  6ED9               	movwf	fsr2l,c
  6807   001676  6ADA               	clrf	fsr2h,c
  6808   001678  0E01               	movlw	1
  6809   00167A  50DB               	movf	plusw2,w,c
  6810   00167C  E109               	bnz	u3380
  6811   00167E  0E0A               	movlw	10
  6812   001680  5CDE               	subwf	postinc2,w,c
  6813   001682  A0D8               	btfss	status,0,c
  6814   001684  EF46  F00B         	goto	u3381
  6815   001688  EF48  F00B         	goto	u3380
  6816   00168C                     u3381:
  6817   00168C  EF7B  F00B         	goto	l3913
  6818   001690                     u3380:
  6819   001690  5001               	movf	colour_to_key@p1^0,w,c
  6820   001692  6ED9               	movwf	fsr2l,c
  6821   001694  6ADA               	clrf	fsr2h,c
  6822   001696  0E01               	movlw	1
  6823   001698  50DB               	movf	plusw2,w,c
  6824   00169A  E107               	bnz	u3391
  6825   00169C  0E20               	movlw	32
  6826   00169E  5CDE               	subwf	postinc2,w,c
  6827   0016A0  B0D8               	btfsc	status,0,c
  6828   0016A2  EF55  F00B         	goto	u3391
  6829   0016A6  EF57  F00B         	goto	u3390
  6830   0016AA                     u3391:
  6831   0016AA  EF7B  F00B         	goto	l3913
  6832   0016AE                     u3390:
  6833   0016AE  5001               	movf	colour_to_key@p1^0,w,c
  6834   0016B0  6ED9               	movwf	fsr2l,c
  6835   0016B2  6ADA               	clrf	fsr2h,c
  6836   0016B4  0E02               	movlw	2
  6837   0016B6  26D9               	addwf	fsr2l,f,c
  6838   0016B8  0E01               	movlw	1
  6839   0016BA  50DB               	movf	plusw2,w,c
  6840   0016BC  E109               	bnz	u3400
  6841   0016BE  0E11               	movlw	17
  6842   0016C0  5CDE               	subwf	postinc2,w,c
  6843   0016C2  A0D8               	btfss	status,0,c
  6844   0016C4  EF66  F00B         	goto	u3401
  6845   0016C8  EF68  F00B         	goto	u3400
  6846   0016CC                     u3401:
  6847   0016CC  EF7B  F00B         	goto	l3913
  6848   0016D0                     u3400:
  6849   0016D0  5001               	movf	colour_to_key@p1^0,w,c
  6850   0016D2  6ED9               	movwf	fsr2l,c
  6851   0016D4  6ADA               	clrf	fsr2h,c
  6852   0016D6  0E02               	movlw	2
  6853   0016D8  26D9               	addwf	fsr2l,f,c
  6854   0016DA  0E01               	movlw	1
  6855   0016DC  50DB               	movf	plusw2,w,c
  6856   0016DE  E107               	bnz	u3411
  6857   0016E0  0E21               	movlw	33
  6858   0016E2  5CDE               	subwf	postinc2,w,c
  6859   0016E4  B0D8               	btfsc	status,0,c
  6860   0016E6  EF77  F00B         	goto	u3411
  6861   0016EA  EF79  F00B         	goto	u3410
  6862   0016EE                     u3411:
  6863   0016EE  EF7B  F00B         	goto	l3913
  6864   0016F2                     u3410:
  6865   0016F2                     
  6866                           ;color.c: 340:          ((17 <= p1->S) && (p1->S <= 32))) {;color.c: 341:         key = 
      +                          4;
  6867   0016F2  0E04               	movlw	4
  6868   0016F4  6E05               	movwf	colour_to_key@key^0,c
  6869   0016F6                     l3913:
  6870                           
  6871                           ;color.c: 344:     if ( ((279 <= p1->H) && (p1->H <= 360)) &&
  6872   0016F6  5001               	movf	colour_to_key@p1^0,w,c
  6873   0016F8  6ED9               	movwf	fsr2l,c
  6874   0016FA  6ADA               	clrf	fsr2h,c
  6875   0016FC  0E17               	movlw	23
  6876   0016FE  5CDE               	subwf	postinc2,w,c
  6877   001700  0E01               	movlw	1
  6878   001702  58DE               	subwfb	postinc2,w,c
  6879   001704  A0D8               	btfss	status,0,c
  6880   001706  EF87  F00B         	goto	u3421
  6881   00170A  EF89  F00B         	goto	u3420
  6882   00170E                     u3421:
  6883   00170E  EFBB  F00B         	goto	l3923
  6884   001712                     u3420:
  6885   001712  5001               	movf	colour_to_key@p1^0,w,c
  6886   001714  6ED9               	movwf	fsr2l,c
  6887   001716  6ADA               	clrf	fsr2h,c
  6888   001718  0E69               	movlw	105
  6889   00171A  5CDE               	subwf	postinc2,w,c
  6890   00171C  0E01               	movlw	1
  6891   00171E  58DE               	subwfb	postinc2,w,c
  6892   001720  B0D8               	btfsc	status,0,c
  6893   001722  EF95  F00B         	goto	u3431
  6894   001726  EF97  F00B         	goto	u3430
  6895   00172A                     u3431:
  6896   00172A  EFBB  F00B         	goto	l3923
  6897   00172E                     u3430:
  6898   00172E  5001               	movf	colour_to_key@p1^0,w,c
  6899   001730  6ED9               	movwf	fsr2l,c
  6900   001732  6ADA               	clrf	fsr2h,c
  6901   001734  0E02               	movlw	2
  6902   001736  26D9               	addwf	fsr2l,f,c
  6903   001738  0E01               	movlw	1
  6904   00173A  50DB               	movf	plusw2,w,c
  6905   00173C  E109               	bnz	u3440
  6906   00173E  0E0B               	movlw	11
  6907   001740  5CDE               	subwf	postinc2,w,c
  6908   001742  A0D8               	btfss	status,0,c
  6909   001744  EFA6  F00B         	goto	u3441
  6910   001748  EFA8  F00B         	goto	u3440
  6911   00174C                     u3441:
  6912   00174C  EFBB  F00B         	goto	l3923
  6913   001750                     u3440:
  6914   001750  5001               	movf	colour_to_key@p1^0,w,c
  6915   001752  6ED9               	movwf	fsr2l,c
  6916   001754  6ADA               	clrf	fsr2h,c
  6917   001756  0E02               	movlw	2
  6918   001758  26D9               	addwf	fsr2l,f,c
  6919   00175A  0E01               	movlw	1
  6920   00175C  50DB               	movf	plusw2,w,c
  6921   00175E  E107               	bnz	u3451
  6922   001760  0E10               	movlw	16
  6923   001762  5CDE               	subwf	postinc2,w,c
  6924   001764  B0D8               	btfsc	status,0,c
  6925   001766  EFB7  F00B         	goto	u3451
  6926   00176A  EFB9  F00B         	goto	u3450
  6927   00176E                     u3451:
  6928   00176E  EFBB  F00B         	goto	l3923
  6929   001772                     u3450:
  6930   001772                     
  6931                           ;color.c: 345:          ((11 <= p1->S) && (p1->S <= 15))) {;color.c: 346:         key = 
      +                          5;
  6932   001772  0E05               	movlw	5
  6933   001774  6E05               	movwf	colour_to_key@key^0,c
  6934   001776                     l3923:
  6935                           
  6936                           ;color.c: 349:     if ( ((298 <= p1->H) && (p1->H <= 360)) &&
  6937   001776  5001               	movf	colour_to_key@p1^0,w,c
  6938   001778  6ED9               	movwf	fsr2l,c
  6939   00177A  6ADA               	clrf	fsr2h,c
  6940   00177C  0E2A               	movlw	42
  6941   00177E  5CDE               	subwf	postinc2,w,c
  6942   001780  0E01               	movlw	1
  6943   001782  58DE               	subwfb	postinc2,w,c
  6944   001784  A0D8               	btfss	status,0,c
  6945   001786  EFC7  F00B         	goto	u3461
  6946   00178A  EFC9  F00B         	goto	u3460
  6947   00178E                     u3461:
  6948   00178E  EFFB  F00B         	goto	l3933
  6949   001792                     u3460:
  6950   001792  5001               	movf	colour_to_key@p1^0,w,c
  6951   001794  6ED9               	movwf	fsr2l,c
  6952   001796  6ADA               	clrf	fsr2h,c
  6953   001798  0E69               	movlw	105
  6954   00179A  5CDE               	subwf	postinc2,w,c
  6955   00179C  0E01               	movlw	1
  6956   00179E  58DE               	subwfb	postinc2,w,c
  6957   0017A0  B0D8               	btfsc	status,0,c
  6958   0017A2  EFD5  F00B         	goto	u3471
  6959   0017A6  EFD7  F00B         	goto	u3470
  6960   0017AA                     u3471:
  6961   0017AA  EFFB  F00B         	goto	l3933
  6962   0017AE                     u3470:
  6963   0017AE  5001               	movf	colour_to_key@p1^0,w,c
  6964   0017B0  6ED9               	movwf	fsr2l,c
  6965   0017B2  6ADA               	clrf	fsr2h,c
  6966   0017B4  0E02               	movlw	2
  6967   0017B6  26D9               	addwf	fsr2l,f,c
  6968   0017B8  0E01               	movlw	1
  6969   0017BA  50DB               	movf	plusw2,w,c
  6970   0017BC  E109               	bnz	u3480
  6971   0017BE  0E14               	movlw	20
  6972   0017C0  5CDE               	subwf	postinc2,w,c
  6973   0017C2  A0D8               	btfss	status,0,c
  6974   0017C4  EFE6  F00B         	goto	u3481
  6975   0017C8  EFE8  F00B         	goto	u3480
  6976   0017CC                     u3481:
  6977   0017CC  EFFB  F00B         	goto	l3933
  6978   0017D0                     u3480:
  6979   0017D0  5001               	movf	colour_to_key@p1^0,w,c
  6980   0017D2  6ED9               	movwf	fsr2l,c
  6981   0017D4  6ADA               	clrf	fsr2h,c
  6982   0017D6  0E02               	movlw	2
  6983   0017D8  26D9               	addwf	fsr2l,f,c
  6984   0017DA  0E01               	movlw	1
  6985   0017DC  50DB               	movf	plusw2,w,c
  6986   0017DE  E107               	bnz	u3491
  6987   0017E0  0E2E               	movlw	46
  6988   0017E2  5CDE               	subwf	postinc2,w,c
  6989   0017E4  B0D8               	btfsc	status,0,c
  6990   0017E6  EFF7  F00B         	goto	u3491
  6991   0017EA  EFF9  F00B         	goto	u3490
  6992   0017EE                     u3491:
  6993   0017EE  EFFB  F00B         	goto	l3933
  6994   0017F2                     u3490:
  6995   0017F2                     
  6996                           ;color.c: 350:          ((20 <= p1->S) && (p1->S <= 45))) {;color.c: 351:         key = 
      +                          6;
  6997   0017F2  0E06               	movlw	6
  6998   0017F4  6E05               	movwf	colour_to_key@key^0,c
  6999   0017F6                     l3933:
  7000                           
  7001                           ;color.c: 354:     if ( ((154 <= p1->H) && (p1->H <= 207)) &&
  7002   0017F6  5001               	movf	colour_to_key@p1^0,w,c
  7003   0017F8  6ED9               	movwf	fsr2l,c
  7004   0017FA  6ADA               	clrf	fsr2h,c
  7005   0017FC  0E01               	movlw	1
  7006   0017FE  50DB               	movf	plusw2,w,c
  7007   001800  E109               	bnz	u3500
  7008   001802  0E9A               	movlw	154
  7009   001804  5CDE               	subwf	postinc2,w,c
  7010   001806  A0D8               	btfss	status,0,c
  7011   001808  EF08  F00C         	goto	u3501
  7012   00180C  EF0A  F00C         	goto	u3500
  7013   001810                     u3501:
  7014   001810  EF3D  F00C         	goto	l3943
  7015   001814                     u3500:
  7016   001814  5001               	movf	colour_to_key@p1^0,w,c
  7017   001816  6ED9               	movwf	fsr2l,c
  7018   001818  6ADA               	clrf	fsr2h,c
  7019   00181A  0E01               	movlw	1
  7020   00181C  50DB               	movf	plusw2,w,c
  7021   00181E  E107               	bnz	u3511
  7022   001820  0ED0               	movlw	208
  7023   001822  5CDE               	subwf	postinc2,w,c
  7024   001824  B0D8               	btfsc	status,0,c
  7025   001826  EF17  F00C         	goto	u3511
  7026   00182A  EF19  F00C         	goto	u3510
  7027   00182E                     u3511:
  7028   00182E  EF3D  F00C         	goto	l3943
  7029   001832                     u3510:
  7030   001832  5001               	movf	colour_to_key@p1^0,w,c
  7031   001834  6ED9               	movwf	fsr2l,c
  7032   001836  6ADA               	clrf	fsr2h,c
  7033   001838  0E02               	movlw	2
  7034   00183A  26D9               	addwf	fsr2l,f,c
  7035   00183C  0E01               	movlw	1
  7036   00183E  50DB               	movf	plusw2,w,c
  7037   001840  E109               	bnz	u3520
  7038   001842  0E0D               	movlw	13
  7039   001844  5CDE               	subwf	postinc2,w,c
  7040   001846  A0D8               	btfss	status,0,c
  7041   001848  EF28  F00C         	goto	u3521
  7042   00184C  EF2A  F00C         	goto	u3520
  7043   001850                     u3521:
  7044   001850  EF3D  F00C         	goto	l3943
  7045   001854                     u3520:
  7046   001854  5001               	movf	colour_to_key@p1^0,w,c
  7047   001856  6ED9               	movwf	fsr2l,c
  7048   001858  6ADA               	clrf	fsr2h,c
  7049   00185A  0E02               	movlw	2
  7050   00185C  26D9               	addwf	fsr2l,f,c
  7051   00185E  0E01               	movlw	1
  7052   001860  50DB               	movf	plusw2,w,c
  7053   001862  E107               	bnz	u3531
  7054   001864  0E2E               	movlw	46
  7055   001866  5CDE               	subwf	postinc2,w,c
  7056   001868  B0D8               	btfsc	status,0,c
  7057   00186A  EF39  F00C         	goto	u3531
  7058   00186E  EF3B  F00C         	goto	u3530
  7059   001872                     u3531:
  7060   001872  EF3D  F00C         	goto	l3943
  7061   001876                     u3530:
  7062   001876                     
  7063                           ;color.c: 355:          ((13 <= p1->S) && (p1->S <= 45))) {;color.c: 356:         key = 
      +                          7;
  7064   001876  0E07               	movlw	7
  7065   001878  6E05               	movwf	colour_to_key@key^0,c
  7066   00187A                     l3943:
  7067                           
  7068                           ;color.c: 359:     if ( ((3000 <= p2->C) && (p2->C <= 40000)) &&
  7069   00187A  5002               	movf	colour_to_key@p2^0,w,c
  7070   00187C  6ED9               	movwf	fsr2l,c
  7071   00187E  6ADA               	clrf	fsr2h,c
  7072   001880  0E06               	movlw	6
  7073   001882  26D9               	addwf	fsr2l,f,c
  7074   001884  0EB8               	movlw	184
  7075   001886  5CDE               	subwf	postinc2,w,c
  7076   001888  0E0B               	movlw	11
  7077   00188A  58DE               	subwfb	postinc2,w,c
  7078   00188C  A0D8               	btfss	status,0,c
  7079   00188E  EF4B  F00C         	goto	u3541
  7080   001892  EF4D  F00C         	goto	u3540
  7081   001896                     u3541:
  7082   001896  EF70  F00C         	goto	l3951
  7083   00189A                     u3540:
  7084   00189A  5002               	movf	colour_to_key@p2^0,w,c
  7085   00189C  6ED9               	movwf	fsr2l,c
  7086   00189E  6ADA               	clrf	fsr2h,c
  7087   0018A0  0E06               	movlw	6
  7088   0018A2  26D9               	addwf	fsr2l,f,c
  7089   0018A4  0E41               	movlw	65
  7090   0018A6  5CDE               	subwf	postinc2,w,c
  7091   0018A8  0E9C               	movlw	156
  7092   0018AA  58DE               	subwfb	postinc2,w,c
  7093   0018AC  B0D8               	btfsc	status,0,c
  7094   0018AE  EF5B  F00C         	goto	u3551
  7095   0018B2  EF5D  F00C         	goto	u3550
  7096   0018B6                     u3551:
  7097   0018B6  EF70  F00C         	goto	l3951
  7098   0018BA                     u3550:
  7099   0018BA  5001               	movf	colour_to_key@p1^0,w,c
  7100   0018BC  6ED9               	movwf	fsr2l,c
  7101   0018BE  6ADA               	clrf	fsr2h,c
  7102   0018C0  0E02               	movlw	2
  7103   0018C2  26D9               	addwf	fsr2l,f,c
  7104   0018C4  0E01               	movlw	1
  7105   0018C6  50DB               	movf	plusw2,w,c
  7106   0018C8  E107               	bnz	u3561
  7107   0018CA  0E0B               	movlw	11
  7108   0018CC  5CDE               	subwf	postinc2,w,c
  7109   0018CE  B0D8               	btfsc	status,0,c
  7110   0018D0  EF6C  F00C         	goto	u3561
  7111   0018D4  EF6E  F00C         	goto	u3560
  7112   0018D8                     u3561:
  7113   0018D8  EF70  F00C         	goto	l3951
  7114   0018DC                     u3560:
  7115   0018DC                     
  7116                           ;color.c: 360:          ((p1->S <= 10))) {;color.c: 361:         key = 8;
  7117   0018DC  0E08               	movlw	8
  7118   0018DE  6E05               	movwf	colour_to_key@key^0,c
  7119   0018E0                     l3951:
  7120                           
  7121                           ;color.c: 364:     if ( ((1000 <= p2->C) && (p2->C <= 2600)) &&
  7122   0018E0  5002               	movf	colour_to_key@p2^0,w,c
  7123   0018E2  6ED9               	movwf	fsr2l,c
  7124   0018E4  6ADA               	clrf	fsr2h,c
  7125   0018E6  0E06               	movlw	6
  7126   0018E8  26D9               	addwf	fsr2l,f,c
  7127   0018EA  0EE8               	movlw	232
  7128   0018EC  5CDE               	subwf	postinc2,w,c
  7129   0018EE  0E03               	movlw	3
  7130   0018F0  58DE               	subwfb	postinc2,w,c
  7131   0018F2  A0D8               	btfss	status,0,c
  7132   0018F4  EF7E  F00C         	goto	u3571
  7133   0018F8  EF80  F00C         	goto	u3570
  7134   0018FC                     u3571:
  7135   0018FC  EFA3  F00C         	goto	l136
  7136   001900                     u3570:
  7137   001900  5002               	movf	colour_to_key@p2^0,w,c
  7138   001902  6ED9               	movwf	fsr2l,c
  7139   001904  6ADA               	clrf	fsr2h,c
  7140   001906  0E06               	movlw	6
  7141   001908  26D9               	addwf	fsr2l,f,c
  7142   00190A  0E29               	movlw	41
  7143   00190C  5CDE               	subwf	postinc2,w,c
  7144   00190E  0E0A               	movlw	10
  7145   001910  58DE               	subwfb	postinc2,w,c
  7146   001912  B0D8               	btfsc	status,0,c
  7147   001914  EF8E  F00C         	goto	u3581
  7148   001918  EF90  F00C         	goto	u3580
  7149   00191C                     u3581:
  7150   00191C  EFA3  F00C         	goto	l136
  7151   001920                     u3580:
  7152   001920  5001               	movf	colour_to_key@p1^0,w,c
  7153   001922  6ED9               	movwf	fsr2l,c
  7154   001924  6ADA               	clrf	fsr2h,c
  7155   001926  0E02               	movlw	2
  7156   001928  26D9               	addwf	fsr2l,f,c
  7157   00192A  0E01               	movlw	1
  7158   00192C  50DB               	movf	plusw2,w,c
  7159   00192E  E107               	bnz	u3591
  7160   001930  0E0D               	movlw	13
  7161   001932  5CDE               	subwf	postinc2,w,c
  7162   001934  B0D8               	btfsc	status,0,c
  7163   001936  EF9F  F00C         	goto	u3591
  7164   00193A  EFA1  F00C         	goto	u3590
  7165   00193E                     u3591:
  7166   00193E  EFA3  F00C         	goto	l136
  7167   001942                     u3590:
  7168   001942                     
  7169                           ;color.c: 365:          ((p1->S <= 12))) {;color.c: 366:         key = 9;
  7170   001942  0E09               	movlw	9
  7171   001944  6E05               	movwf	colour_to_key@key^0,c
  7172   001946                     l136:
  7173                           
  7174                           ;color.c: 369:     return key;
  7175   001946  5005               	movf	colour_to_key@key^0,w,c
  7176   001948  0012               	return		;funcret
  7177   00194A                     __end_of_colour_to_key:
  7178                           	callstack 0
  7179                           
  7180 ;; *************** function _average_RGBC *****************
  7181 ;; Defined at:
  7182 ;;		line 124 in file "color.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  p               1   13[COMRAM] PTR struct RGBC_val
  7185 ;;		 -> main@RGBC_colour(8), 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  i               1   16[COMRAM] unsigned char 
  7188 ;;  temp_C          4   29[COMRAM] unsigned long 
  7189 ;;  temp_B          4   25[COMRAM] unsigned long 
  7190 ;;  temp_G          4   21[COMRAM] unsigned long 
  7191 ;;  temp_R          4   17[COMRAM] unsigned long 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7201 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;Total ram usage:       20 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 5
  7208 ;; This function calls:
  7209 ;;		___lldiv
  7210 ;;		_getRGBCval
  7211 ;; This function is called by:
  7212 ;;		_forward_navigation
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text36
  7217   002080                     __ptext36:
  7218                           	callstack 0
  7219   002080                     _average_RGBC:
  7220                           	callstack 24
  7221   002080                     
  7222                           ;color.c: 124: void average_RGBC(struct RGBC_val *p);color.c: 125: {;color.c: 127:     u
      +                          nsigned long temp_R = 0;
  7223   002080  0E00               	movlw	0
  7224   002082  6E12               	movwf	average_RGBC@temp_R^0,c
  7225   002084  0E00               	movlw	0
  7226   002086  6E13               	movwf	(average_RGBC@temp_R+1)^0,c
  7227   002088  0E00               	movlw	0
  7228   00208A  6E14               	movwf	(average_RGBC@temp_R+2)^0,c
  7229   00208C  0E00               	movlw	0
  7230   00208E  6E15               	movwf	(average_RGBC@temp_R+3)^0,c
  7231                           
  7232                           ;color.c: 128:     unsigned long temp_G = 0;
  7233   002090  0E00               	movlw	0
  7234   002092  6E16               	movwf	average_RGBC@temp_G^0,c
  7235   002094  0E00               	movlw	0
  7236   002096  6E17               	movwf	(average_RGBC@temp_G+1)^0,c
  7237   002098  0E00               	movlw	0
  7238   00209A  6E18               	movwf	(average_RGBC@temp_G+2)^0,c
  7239   00209C  0E00               	movlw	0
  7240   00209E  6E19               	movwf	(average_RGBC@temp_G+3)^0,c
  7241                           
  7242                           ;color.c: 129:     unsigned long temp_B = 0;
  7243   0020A0  0E00               	movlw	0
  7244   0020A2  6E1A               	movwf	average_RGBC@temp_B^0,c
  7245   0020A4  0E00               	movlw	0
  7246   0020A6  6E1B               	movwf	(average_RGBC@temp_B+1)^0,c
  7247   0020A8  0E00               	movlw	0
  7248   0020AA  6E1C               	movwf	(average_RGBC@temp_B+2)^0,c
  7249   0020AC  0E00               	movlw	0
  7250   0020AE  6E1D               	movwf	(average_RGBC@temp_B+3)^0,c
  7251                           
  7252                           ;color.c: 130:     unsigned long temp_C = 0;
  7253   0020B0  0E00               	movlw	0
  7254   0020B2  6E1E               	movwf	average_RGBC@temp_C^0,c
  7255   0020B4  0E00               	movlw	0
  7256   0020B6  6E1F               	movwf	(average_RGBC@temp_C+1)^0,c
  7257   0020B8  0E00               	movlw	0
  7258   0020BA  6E20               	movwf	(average_RGBC@temp_C+2)^0,c
  7259   0020BC  0E00               	movlw	0
  7260   0020BE  6E21               	movwf	(average_RGBC@temp_C+3)^0,c
  7261                           
  7262                           ;color.c: 136:     for (unsigned char i = 0; i < sample_count; i++) {
  7263   0020C0  0E00               	movlw	0
  7264   0020C2  6E11               	movwf	average_RGBC@i^0,c
  7265   0020C4  EFAB  F010         	goto	l3733
  7266   0020C8                     l3721:
  7267                           
  7268                           ;color.c: 138:         getRGBCval(p);
  7269   0020C8  C00E  F00C         	movff	average_RGBC@p,getRGBCval@p
  7270   0020CC  EC14  F019         	call	_getRGBCval	;wreg free
  7271   0020D0                     
  7272                           ;color.c: 140:         temp_R += (unsigned long)p->R;
  7273   0020D0  500E               	movf	average_RGBC@p^0,w,c
  7274   0020D2  6ED9               	movwf	fsr2l,c
  7275   0020D4  6ADA               	clrf	fsr2h,c
  7276   0020D6  CFDE F00F          	movff	postinc2,??_average_RGBC
  7277   0020DA  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7278   0020DE  500F               	movf	??_average_RGBC^0,w,c
  7279   0020E0  2612               	addwf	average_RGBC@temp_R^0,f,c
  7280   0020E2  5010               	movf	(??_average_RGBC+1)^0,w,c
  7281   0020E4  2213               	addwfc	(average_RGBC@temp_R+1)^0,f,c
  7282   0020E6  0E00               	movlw	0
  7283   0020E8  2214               	addwfc	(average_RGBC@temp_R+2)^0,f,c
  7284   0020EA  0E00               	movlw	0
  7285   0020EC  2215               	addwfc	(average_RGBC@temp_R+3)^0,f,c
  7286   0020EE                     
  7287                           ;color.c: 141:         temp_G += (unsigned long)p->G;
  7288   0020EE  500E               	movf	average_RGBC@p^0,w,c
  7289   0020F0  6ED9               	movwf	fsr2l,c
  7290   0020F2  6ADA               	clrf	fsr2h,c
  7291   0020F4  0E02               	movlw	2
  7292   0020F6  26D9               	addwf	fsr2l,f,c
  7293   0020F8  CFDE F00F          	movff	postinc2,??_average_RGBC
  7294   0020FC  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7295   002100  500F               	movf	??_average_RGBC^0,w,c
  7296   002102  2616               	addwf	average_RGBC@temp_G^0,f,c
  7297   002104  5010               	movf	(??_average_RGBC+1)^0,w,c
  7298   002106  2217               	addwfc	(average_RGBC@temp_G+1)^0,f,c
  7299   002108  0E00               	movlw	0
  7300   00210A  2218               	addwfc	(average_RGBC@temp_G+2)^0,f,c
  7301   00210C  0E00               	movlw	0
  7302   00210E  2219               	addwfc	(average_RGBC@temp_G+3)^0,f,c
  7303   002110                     
  7304                           ;color.c: 142:         temp_B += (unsigned long)p->B;
  7305   002110  500E               	movf	average_RGBC@p^0,w,c
  7306   002112  6ED9               	movwf	fsr2l,c
  7307   002114  6ADA               	clrf	fsr2h,c
  7308   002116  0E04               	movlw	4
  7309   002118  26D9               	addwf	fsr2l,f,c
  7310   00211A  CFDE F00F          	movff	postinc2,??_average_RGBC
  7311   00211E  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7312   002122  500F               	movf	??_average_RGBC^0,w,c
  7313   002124  261A               	addwf	average_RGBC@temp_B^0,f,c
  7314   002126  5010               	movf	(??_average_RGBC+1)^0,w,c
  7315   002128  221B               	addwfc	(average_RGBC@temp_B+1)^0,f,c
  7316   00212A  0E00               	movlw	0
  7317   00212C  221C               	addwfc	(average_RGBC@temp_B+2)^0,f,c
  7318   00212E  0E00               	movlw	0
  7319   002130  221D               	addwfc	(average_RGBC@temp_B+3)^0,f,c
  7320   002132                     
  7321                           ;color.c: 143:         temp_C += (unsigned long)p->C;
  7322   002132  500E               	movf	average_RGBC@p^0,w,c
  7323   002134  6ED9               	movwf	fsr2l,c
  7324   002136  6ADA               	clrf	fsr2h,c
  7325   002138  0E06               	movlw	6
  7326   00213A  26D9               	addwf	fsr2l,f,c
  7327   00213C  CFDE F00F          	movff	postinc2,??_average_RGBC
  7328   002140  CFDD F010          	movff	postdec2,??_average_RGBC+1
  7329   002144  500F               	movf	??_average_RGBC^0,w,c
  7330   002146  261E               	addwf	average_RGBC@temp_C^0,f,c
  7331   002148  5010               	movf	(??_average_RGBC+1)^0,w,c
  7332   00214A  221F               	addwfc	(average_RGBC@temp_C+1)^0,f,c
  7333   00214C  0E00               	movlw	0
  7334   00214E  2220               	addwfc	(average_RGBC@temp_C+2)^0,f,c
  7335   002150  0E00               	movlw	0
  7336   002152  2221               	addwfc	(average_RGBC@temp_C+3)^0,f,c
  7337   002154                     
  7338                           ;color.c: 144:     }
  7339   002154  2A11               	incf	average_RGBC@i^0,f,c
  7340   002156                     l3733:
  7341   002156  0E13               	movlw	19
  7342   002158  6411               	cpfsgt	average_RGBC@i^0,c
  7343   00215A  EFB1  F010         	goto	u3131
  7344   00215E  EFB3  F010         	goto	u3130
  7345   002162                     u3131:
  7346   002162  EF64  F010         	goto	l3721
  7347   002166                     u3130:
  7348   002166  C012  F001         	movff	average_RGBC@temp_R,___lldiv@dividend
  7349   00216A  C013  F002         	movff	average_RGBC@temp_R+1,___lldiv@dividend+1
  7350   00216E  C014  F003         	movff	average_RGBC@temp_R+2,___lldiv@dividend+2
  7351   002172  C015  F004         	movff	average_RGBC@temp_R+3,___lldiv@dividend+3
  7352   002176  0E14               	movlw	20
  7353   002178  6E05               	movwf	___lldiv@divisor^0,c
  7354   00217A  0E00               	movlw	0
  7355   00217C  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7356   00217E  0E00               	movlw	0
  7357   002180  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7358   002182  0E00               	movlw	0
  7359   002184  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7360   002186  EC50  F016         	call	___lldiv	;wreg free
  7361   00218A  C001  F012         	movff	?___lldiv,average_RGBC@temp_R
  7362   00218E  C002  F013         	movff	?___lldiv+1,average_RGBC@temp_R+1
  7363   002192  C003  F014         	movff	?___lldiv+2,average_RGBC@temp_R+2
  7364   002196  C004  F015         	movff	?___lldiv+3,average_RGBC@temp_R+3
  7365   00219A  C016  F001         	movff	average_RGBC@temp_G,___lldiv@dividend
  7366   00219E  C017  F002         	movff	average_RGBC@temp_G+1,___lldiv@dividend+1
  7367   0021A2  C018  F003         	movff	average_RGBC@temp_G+2,___lldiv@dividend+2
  7368   0021A6  C019  F004         	movff	average_RGBC@temp_G+3,___lldiv@dividend+3
  7369   0021AA  0E14               	movlw	20
  7370   0021AC  6E05               	movwf	___lldiv@divisor^0,c
  7371   0021AE  0E00               	movlw	0
  7372   0021B0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7373   0021B2  0E00               	movlw	0
  7374   0021B4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7375   0021B6  0E00               	movlw	0
  7376   0021B8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7377   0021BA  EC50  F016         	call	___lldiv	;wreg free
  7378   0021BE  C001  F016         	movff	?___lldiv,average_RGBC@temp_G
  7379   0021C2  C002  F017         	movff	?___lldiv+1,average_RGBC@temp_G+1
  7380   0021C6  C003  F018         	movff	?___lldiv+2,average_RGBC@temp_G+2
  7381   0021CA  C004  F019         	movff	?___lldiv+3,average_RGBC@temp_G+3
  7382   0021CE  C01A  F001         	movff	average_RGBC@temp_B,___lldiv@dividend
  7383   0021D2  C01B  F002         	movff	average_RGBC@temp_B+1,___lldiv@dividend+1
  7384   0021D6  C01C  F003         	movff	average_RGBC@temp_B+2,___lldiv@dividend+2
  7385   0021DA  C01D  F004         	movff	average_RGBC@temp_B+3,___lldiv@dividend+3
  7386   0021DE  0E14               	movlw	20
  7387   0021E0  6E05               	movwf	___lldiv@divisor^0,c
  7388   0021E2  0E00               	movlw	0
  7389   0021E4  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7390   0021E6  0E00               	movlw	0
  7391   0021E8  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7392   0021EA  0E00               	movlw	0
  7393   0021EC  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7394   0021EE  EC50  F016         	call	___lldiv	;wreg free
  7395   0021F2  C001  F01A         	movff	?___lldiv,average_RGBC@temp_B
  7396   0021F6  C002  F01B         	movff	?___lldiv+1,average_RGBC@temp_B+1
  7397   0021FA  C003  F01C         	movff	?___lldiv+2,average_RGBC@temp_B+2
  7398   0021FE  C004  F01D         	movff	?___lldiv+3,average_RGBC@temp_B+3
  7399   002202  C01E  F001         	movff	average_RGBC@temp_C,___lldiv@dividend
  7400   002206  C01F  F002         	movff	average_RGBC@temp_C+1,___lldiv@dividend+1
  7401   00220A  C020  F003         	movff	average_RGBC@temp_C+2,___lldiv@dividend+2
  7402   00220E  C021  F004         	movff	average_RGBC@temp_C+3,___lldiv@dividend+3
  7403   002212  0E14               	movlw	20
  7404   002214  6E05               	movwf	___lldiv@divisor^0,c
  7405   002216  0E00               	movlw	0
  7406   002218  6E06               	movwf	(___lldiv@divisor+1)^0,c
  7407   00221A  0E00               	movlw	0
  7408   00221C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  7409   00221E  0E00               	movlw	0
  7410   002220  6E08               	movwf	(___lldiv@divisor+3)^0,c
  7411   002222  EC50  F016         	call	___lldiv	;wreg free
  7412   002226  C001  F01E         	movff	?___lldiv,average_RGBC@temp_C
  7413   00222A  C002  F01F         	movff	?___lldiv+1,average_RGBC@temp_C+1
  7414   00222E  C003  F020         	movff	?___lldiv+2,average_RGBC@temp_C+2
  7415   002232  C004  F021         	movff	?___lldiv+3,average_RGBC@temp_C+3
  7416   002236                     
  7417                           ;color.c: 153:     p->R = (unsigned int)temp_R;
  7418   002236  500E               	movf	average_RGBC@p^0,w,c
  7419   002238  6ED9               	movwf	fsr2l,c
  7420   00223A  6ADA               	clrf	fsr2h,c
  7421   00223C  C012  FFDE         	movff	average_RGBC@temp_R,postinc2
  7422   002240  C013  FFDD         	movff	average_RGBC@temp_R+1,postdec2
  7423   002244                     
  7424                           ;color.c: 154:     p->G = (unsigned int)temp_G;
  7425   002244  500E               	movf	average_RGBC@p^0,w,c
  7426   002246  6ED9               	movwf	fsr2l,c
  7427   002248  6ADA               	clrf	fsr2h,c
  7428   00224A  0E02               	movlw	2
  7429   00224C  26D9               	addwf	fsr2l,f,c
  7430   00224E  C016  FFDE         	movff	average_RGBC@temp_G,postinc2
  7431   002252  C017  FFDD         	movff	average_RGBC@temp_G+1,postdec2
  7432   002256                     
  7433                           ;color.c: 155:     p->B = (unsigned int)temp_B;
  7434   002256  500E               	movf	average_RGBC@p^0,w,c
  7435   002258  6ED9               	movwf	fsr2l,c
  7436   00225A  6ADA               	clrf	fsr2h,c
  7437   00225C  0E04               	movlw	4
  7438   00225E  26D9               	addwf	fsr2l,f,c
  7439   002260  C01A  FFDE         	movff	average_RGBC@temp_B,postinc2
  7440   002264  C01B  FFDD         	movff	average_RGBC@temp_B+1,postdec2
  7441   002268                     
  7442                           ;color.c: 156:     p->C = (unsigned int)temp_C;
  7443   002268  500E               	movf	average_RGBC@p^0,w,c
  7444   00226A  6ED9               	movwf	fsr2l,c
  7445   00226C  6ADA               	clrf	fsr2h,c
  7446   00226E  0E06               	movlw	6
  7447   002270  26D9               	addwf	fsr2l,f,c
  7448   002272  C01E  FFDE         	movff	average_RGBC@temp_C,postinc2
  7449   002276  C01F  FFDD         	movff	average_RGBC@temp_C+1,postdec2
  7450   00227A  0012               	return		;funcret
  7451   00227C                     __end_of_average_RGBC:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function _getRGBCval *****************
  7455 ;; Defined at:
  7456 ;;		line 112 in file "color.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  p               1   11[COMRAM] PTR struct RGBC_val
  7459 ;;		 -> main@RGBC_colour(8), 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;Total ram usage:        1 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 4
  7478 ;; This function calls:
  7479 ;;		_color_read_Blue
  7480 ;;		_color_read_Clear
  7481 ;;		_color_read_Green
  7482 ;;		_color_read_Red
  7483 ;; This function is called by:
  7484 ;;		_average_RGBC
  7485 ;;		_wait_for_wall
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text37
  7490   003228                     __ptext37:
  7491                           	callstack 0
  7492   003228                     _getRGBCval:
  7493                           	callstack 24
  7494   003228                     
  7495                           ;color.c: 112: void getRGBCval(struct RGBC_val *p);color.c: 113: {;color.c: 114:     p->
      +                          R = color_read_Red();
  7496   003228  EC3F  F019         	call	_color_read_Red	;wreg free
  7497   00322C  500C               	movf	getRGBCval@p^0,w,c
  7498   00322E  6ED9               	movwf	fsr2l,c
  7499   003230  6ADA               	clrf	fsr2h,c
  7500   003232  C005  FFDE         	movff	?_color_read_Red,postinc2
  7501   003236  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7502                           
  7503                           ;color.c: 115:     p->G = color_read_Green();
  7504   00323A  EC67  F019         	call	_color_read_Green	;wreg free
  7505   00323E  500C               	movf	getRGBCval@p^0,w,c
  7506   003240  6ED9               	movwf	fsr2l,c
  7507   003242  6ADA               	clrf	fsr2h,c
  7508   003244  0E02               	movlw	2
  7509   003246  26D9               	addwf	fsr2l,f,c
  7510   003248  C005  FFDE         	movff	?_color_read_Green,postinc2
  7511   00324C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7512                           
  7513                           ;color.c: 116:     p->B = color_read_Blue();
  7514   003250  ECB7  F019         	call	_color_read_Blue	;wreg free
  7515   003254  500C               	movf	getRGBCval@p^0,w,c
  7516   003256  6ED9               	movwf	fsr2l,c
  7517   003258  6ADA               	clrf	fsr2h,c
  7518   00325A  0E04               	movlw	4
  7519   00325C  26D9               	addwf	fsr2l,f,c
  7520   00325E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7521   003262  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7522                           
  7523                           ;color.c: 117:     p->C = color_read_Clear();
  7524   003266  EC8F  F019         	call	_color_read_Clear	;wreg free
  7525   00326A  500C               	movf	getRGBCval@p^0,w,c
  7526   00326C  6ED9               	movwf	fsr2l,c
  7527   00326E  6ADA               	clrf	fsr2h,c
  7528   003270  0E06               	movlw	6
  7529   003272  26D9               	addwf	fsr2l,f,c
  7530   003274  C005  FFDE         	movff	?_color_read_Clear,postinc2
  7531   003278  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  7532   00327C  0012               	return		;funcret
  7533   00327E                     __end_of_getRGBCval:
  7534                           	callstack 0
  7535                           
  7536 ;; *************** function _color_read_Red *****************
  7537 ;; Defined at:
  7538 ;;		line 40 in file "color.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  tmp             2    9[COMRAM] unsigned int 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  2    4[COMRAM] unsigned int 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;Total ram usage:        7 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 3
  7559 ;; This function calls:
  7560 ;;		_I2C_2_Master_Read
  7561 ;;		_I2C_2_Master_RepStart
  7562 ;;		_I2C_2_Master_Start
  7563 ;;		_I2C_2_Master_Stop
  7564 ;;		_I2C_2_Master_Write
  7565 ;; This function is called by:
  7566 ;;		_getRGBCval
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text38
  7571   00327E                     __ptext38:
  7572                           	callstack 0
  7573   00327E                     _color_read_Red:
  7574                           	callstack 24
  7575   00327E                     
  7576                           ;color.c: 42:  unsigned int tmp;;color.c: 43:  I2C_2_Master_Start();
  7577   00327E  ECA7  F01B         	call	_I2C_2_Master_Start	;wreg free
  7578                           
  7579                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x00);
  7580   003282  0E52               	movlw	82
  7581   003284  EC8B  F01B         	call	_I2C_2_Master_Write
  7582                           
  7583                           ;color.c: 45:  I2C_2_Master_Write(0xA0 | 0x16);
  7584   003288  0EB6               	movlw	182
  7585   00328A  EC8B  F01B         	call	_I2C_2_Master_Write
  7586                           
  7587                           ;color.c: 46:  I2C_2_Master_RepStart();
  7588   00328E  EC9D  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7589                           
  7590                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x01);
  7591   003292  0E53               	movlw	83
  7592   003294  EC8B  F01B         	call	_I2C_2_Master_Write
  7593                           
  7594                           ;color.c: 48:  tmp=I2C_2_Master_Read(1);
  7595   003298  0E01               	movlw	1
  7596   00329A  EC6E  F01A         	call	_I2C_2_Master_Read
  7597   00329E  6E07               	movwf	??_color_read_Red^0,c
  7598   0032A0  5007               	movf	??_color_read_Red^0,w,c
  7599   0032A2  6E0A               	movwf	color_read_Red@tmp^0,c
  7600   0032A4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7601                           
  7602                           ;color.c: 49:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7603   0032A6  0E00               	movlw	0
  7604   0032A8  EC6E  F01A         	call	_I2C_2_Master_Read
  7605   0032AC  6E07               	movwf	??_color_read_Red^0,c
  7606   0032AE  5007               	movf	??_color_read_Red^0,w,c
  7607   0032B0  6E09               	movwf	(??_color_read_Red+2)^0,c
  7608   0032B2  6A08               	clrf	(??_color_read_Red+1)^0,c
  7609   0032B4  500A               	movf	color_read_Red@tmp^0,w,c
  7610   0032B6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7611   0032B8  6E0A               	movwf	color_read_Red@tmp^0,c
  7612   0032BA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7613   0032BC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7614   0032BE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7615                           
  7616                           ;color.c: 50:  I2C_2_Master_Stop();
  7617   0032C0  ECA2  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7618   0032C4                     
  7619                           ;color.c: 51:  return tmp;
  7620   0032C4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7621   0032C8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7622   0032CC  0012               	return		;funcret
  7623   0032CE                     __end_of_color_read_Red:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function _color_read_Green *****************
  7627 ;; Defined at:
  7628 ;;		line 58 in file "color.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;		None
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  tmp             2    9[COMRAM] unsigned int 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  2    4[COMRAM] unsigned int 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0, cstack
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;Total ram usage:        7 bytes
  7647 ;; Hardware stack levels used: 1
  7648 ;; Hardware stack levels required when called: 3
  7649 ;; This function calls:
  7650 ;;		_I2C_2_Master_Read
  7651 ;;		_I2C_2_Master_RepStart
  7652 ;;		_I2C_2_Master_Start
  7653 ;;		_I2C_2_Master_Stop
  7654 ;;		_I2C_2_Master_Write
  7655 ;; This function is called by:
  7656 ;;		_getRGBCval
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text39
  7661   0032CE                     __ptext39:
  7662                           	callstack 0
  7663   0032CE                     _color_read_Green:
  7664                           	callstack 24
  7665   0032CE                     
  7666                           ;color.c: 60:     unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7667   0032CE  ECA7  F01B         	call	_I2C_2_Master_Start	;wreg free
  7668                           
  7669                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7670   0032D2  0E52               	movlw	82
  7671   0032D4  EC8B  F01B         	call	_I2C_2_Master_Write
  7672                           
  7673                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x18);
  7674   0032D8  0EB8               	movlw	184
  7675   0032DA  EC8B  F01B         	call	_I2C_2_Master_Write
  7676                           
  7677                           ;color.c: 64:  I2C_2_Master_RepStart();
  7678   0032DE  EC9D  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7679                           
  7680                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7681   0032E2  0E53               	movlw	83
  7682   0032E4  EC8B  F01B         	call	_I2C_2_Master_Write
  7683                           
  7684                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7685   0032E8  0E01               	movlw	1
  7686   0032EA  EC6E  F01A         	call	_I2C_2_Master_Read
  7687   0032EE  6E07               	movwf	??_color_read_Green^0,c
  7688   0032F0  5007               	movf	??_color_read_Green^0,w,c
  7689   0032F2  6E0A               	movwf	color_read_Green@tmp^0,c
  7690   0032F4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7691                           
  7692                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7693   0032F6  0E00               	movlw	0
  7694   0032F8  EC6E  F01A         	call	_I2C_2_Master_Read
  7695   0032FC  6E07               	movwf	??_color_read_Green^0,c
  7696   0032FE  5007               	movf	??_color_read_Green^0,w,c
  7697   003300  6E09               	movwf	(??_color_read_Green+2)^0,c
  7698   003302  6A08               	clrf	(??_color_read_Green+1)^0,c
  7699   003304  500A               	movf	color_read_Green@tmp^0,w,c
  7700   003306  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7701   003308  6E0A               	movwf	color_read_Green@tmp^0,c
  7702   00330A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7703   00330C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7704   00330E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7705                           
  7706                           ;color.c: 68:  I2C_2_Master_Stop();
  7707   003310  ECA2  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7708   003314                     
  7709                           ;color.c: 69:  return tmp;
  7710   003314  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7711   003318  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7712   00331C  0012               	return		;funcret
  7713   00331E                     __end_of_color_read_Green:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function _color_read_Clear *****************
  7717 ;; Defined at:
  7718 ;;		line 94 in file "color.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  tmp             2    9[COMRAM] unsigned int 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  2    4[COMRAM] unsigned int 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;Total ram usage:        7 bytes
  7737 ;; Hardware stack levels used: 1
  7738 ;; Hardware stack levels required when called: 3
  7739 ;; This function calls:
  7740 ;;		_I2C_2_Master_Read
  7741 ;;		_I2C_2_Master_RepStart
  7742 ;;		_I2C_2_Master_Start
  7743 ;;		_I2C_2_Master_Stop
  7744 ;;		_I2C_2_Master_Write
  7745 ;; This function is called by:
  7746 ;;		_getRGBCval
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text40
  7751   00331E                     __ptext40:
  7752                           	callstack 0
  7753   00331E                     _color_read_Clear:
  7754                           	callstack 24
  7755   00331E                     
  7756                           ;color.c: 96:     unsigned int tmp;;color.c: 97:  I2C_2_Master_Start();
  7757   00331E  ECA7  F01B         	call	_I2C_2_Master_Start	;wreg free
  7758                           
  7759                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  7760   003322  0E52               	movlw	82
  7761   003324  EC8B  F01B         	call	_I2C_2_Master_Write
  7762                           
  7763                           ;color.c: 99:  I2C_2_Master_Write(0xA0 | 0x14);
  7764   003328  0EB4               	movlw	180
  7765   00332A  EC8B  F01B         	call	_I2C_2_Master_Write
  7766                           
  7767                           ;color.c: 100:  I2C_2_Master_RepStart();
  7768   00332E  EC9D  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7769                           
  7770                           ;color.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  7771   003332  0E53               	movlw	83
  7772   003334  EC8B  F01B         	call	_I2C_2_Master_Write
  7773                           
  7774                           ;color.c: 102:  tmp=I2C_2_Master_Read(1);
  7775   003338  0E01               	movlw	1
  7776   00333A  EC6E  F01A         	call	_I2C_2_Master_Read
  7777   00333E  6E07               	movwf	??_color_read_Clear^0,c
  7778   003340  5007               	movf	??_color_read_Clear^0,w,c
  7779   003342  6E0A               	movwf	color_read_Clear@tmp^0,c
  7780   003344  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7781                           
  7782                           ;color.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7783   003346  0E00               	movlw	0
  7784   003348  EC6E  F01A         	call	_I2C_2_Master_Read
  7785   00334C  6E07               	movwf	??_color_read_Clear^0,c
  7786   00334E  5007               	movf	??_color_read_Clear^0,w,c
  7787   003350  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7788   003352  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7789   003354  500A               	movf	color_read_Clear@tmp^0,w,c
  7790   003356  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7791   003358  6E0A               	movwf	color_read_Clear@tmp^0,c
  7792   00335A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7793   00335C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7794   00335E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7795                           
  7796                           ;color.c: 104:  I2C_2_Master_Stop();
  7797   003360  ECA2  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7798   003364                     
  7799                           ;color.c: 105:  return tmp;
  7800   003364  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7801   003368  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7802   00336C  0012               	return		;funcret
  7803   00336E                     __end_of_color_read_Clear:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _color_read_Blue *****************
  7807 ;; Defined at:
  7808 ;;		line 76 in file "color.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  tmp             2    9[COMRAM] unsigned int 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2    4[COMRAM] unsigned int 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7826 ;;Total ram usage:        7 bytes
  7827 ;; Hardware stack levels used: 1
  7828 ;; Hardware stack levels required when called: 3
  7829 ;; This function calls:
  7830 ;;		_I2C_2_Master_Read
  7831 ;;		_I2C_2_Master_RepStart
  7832 ;;		_I2C_2_Master_Start
  7833 ;;		_I2C_2_Master_Stop
  7834 ;;		_I2C_2_Master_Write
  7835 ;; This function is called by:
  7836 ;;		_getRGBCval
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text41
  7841   00336E                     __ptext41:
  7842                           	callstack 0
  7843   00336E                     _color_read_Blue:
  7844                           	callstack 24
  7845   00336E                     
  7846                           ;color.c: 78:     unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7847   00336E  ECA7  F01B         	call	_I2C_2_Master_Start	;wreg free
  7848                           
  7849                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7850   003372  0E52               	movlw	82
  7851   003374  EC8B  F01B         	call	_I2C_2_Master_Write
  7852                           
  7853                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x1A);
  7854   003378  0EBA               	movlw	186
  7855   00337A  EC8B  F01B         	call	_I2C_2_Master_Write
  7856                           
  7857                           ;color.c: 82:  I2C_2_Master_RepStart();
  7858   00337E  EC9D  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7859                           
  7860                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7861   003382  0E53               	movlw	83
  7862   003384  EC8B  F01B         	call	_I2C_2_Master_Write
  7863                           
  7864                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7865   003388  0E01               	movlw	1
  7866   00338A  EC6E  F01A         	call	_I2C_2_Master_Read
  7867   00338E  6E07               	movwf	??_color_read_Blue^0,c
  7868   003390  5007               	movf	??_color_read_Blue^0,w,c
  7869   003392  6E0A               	movwf	color_read_Blue@tmp^0,c
  7870   003394  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7871                           
  7872                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7873   003396  0E00               	movlw	0
  7874   003398  EC6E  F01A         	call	_I2C_2_Master_Read
  7875   00339C  6E07               	movwf	??_color_read_Blue^0,c
  7876   00339E  5007               	movf	??_color_read_Blue^0,w,c
  7877   0033A0  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7878   0033A2  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7879   0033A4  500A               	movf	color_read_Blue@tmp^0,w,c
  7880   0033A6  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7881   0033A8  6E0A               	movwf	color_read_Blue@tmp^0,c
  7882   0033AA  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7883   0033AC  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7884   0033AE  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7885                           
  7886                           ;color.c: 86:  I2C_2_Master_Stop();
  7887   0033B0  ECA2  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7888   0033B4                     
  7889                           ;color.c: 87:  return tmp;
  7890   0033B4  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7891   0033B8  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7892   0033BC  0012               	return		;funcret
  7893   0033BE                     __end_of_color_read_Blue:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function _I2C_2_Master_RepStart *****************
  7897 ;; Defined at:
  7898 ;;		line 33 in file "i2c.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;Total ram usage:        0 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 2
  7919 ;; This function calls:
  7920 ;;		_I2C_2_Master_Idle
  7921 ;; This function is called by:
  7922 ;;		_color_read_Red
  7923 ;;		_color_read_Green
  7924 ;;		_color_read_Blue
  7925 ;;		_color_read_Clear
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           	psect	text42
  7930   00373A                     __ptext42:
  7931                           	callstack 0
  7932   00373A                     _I2C_2_Master_RepStart:
  7933                           	callstack 24
  7934   00373A                     
  7935                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7936   00373A  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7937   00373E                     
  7938                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7939   00373E  010E               	movlb	14	; () banked
  7940   003740  83DA               	bsf	218,1,b	;volatile
  7941   003742                     
  7942                           ; BSR set to: 14
  7943   003742  0012               	return		;funcret
  7944   003744                     __end_of_I2C_2_Master_RepStart:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _I2C_2_Master_Read *****************
  7948 ;; Defined at:
  7949 ;;		line 51 in file "i2c.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  ack             1    wreg     unsigned char 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  ack             1    2[COMRAM] unsigned char 
  7954 ;;  tmp             1    3[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;Total ram usage:        3 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 2
  7971 ;; This function calls:
  7972 ;;		_I2C_2_Master_Idle
  7973 ;; This function is called by:
  7974 ;;		_color_read_Red
  7975 ;;		_color_read_Green
  7976 ;;		_color_read_Blue
  7977 ;;		_color_read_Clear
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text43
  7982   0034DC                     __ptext43:
  7983                           	callstack 0
  7984   0034DC                     _I2C_2_Master_Read:
  7985                           	callstack 24
  7986                           
  7987                           ; BSR set to: 14
  7988                           ;incstack = 0
  7989                           ;I2C_2_Master_Read@ack stored from wreg
  7990   0034DC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7991   0034DE                     
  7992                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7993   0034DE  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7994   0034E2                     
  7995                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7996   0034E2  010E               	movlb	14	; () banked
  7997   0034E4  87DA               	bsf	218,3,b	;volatile
  7998                           
  7999                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8000   0034E6  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8001   0034EA                     
  8002                           ;i2c.c: 57:   tmp = SSP2BUF;
  8003   0034EA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8004                           
  8005                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8006   0034EE  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8007   0034F2                     
  8008                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8009   0034F2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8010   0034F4  B4D8               	btfsc	status,2,c
  8011   0034F6  EF7F  F01A         	goto	u2211
  8012   0034FA  EF83  F01A         	goto	u2210
  8013   0034FE                     u2211:
  8014   0034FE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8015   003500  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8016   003502  EF84  F01A         	goto	u2228
  8017   003506                     u2210:
  8018   003506  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8019   003508                     u2228:
  8020   003508  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8021   00350A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8022   00350C  010E               	movlb	14	; () banked
  8023   00350E  51DA               	movf	218,w,b	;volatile
  8024   003510  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8025   003512  0BDF               	andlw	-33
  8026   003514  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8027   003516  6FDA               	movwf	218,b	;volatile
  8028   003518                     
  8029                           ; BSR set to: 14
  8030                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8031   003518  89DA               	bsf	218,4,b	;volatile
  8032   00351A                     
  8033                           ; BSR set to: 14
  8034                           ;i2c.c: 61:   return tmp;
  8035   00351A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8036   00351C                     
  8037                           ; BSR set to: 14
  8038   00351C  0012               	return		;funcret
  8039   00351E                     __end_of_I2C_2_Master_Read:
  8040                           	callstack 0
  8041                           
  8042 ;; *************** function ___lldiv *****************
  8043 ;; Defined at:
  8044 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  dividend        4    0[COMRAM] unsigned long 
  8047 ;;  divisor         4    4[COMRAM] unsigned long 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  quotient        4    8[COMRAM] unsigned long 
  8050 ;;  counter         1   12[COMRAM] unsigned char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  4    0[COMRAM] unsigned long 
  8053 ;; Registers used:
  8054 ;;		wreg, status,2, status,0
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8060 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;Total ram usage:       13 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; Hardware stack levels required when called: 1
  8067 ;; This function calls:
  8068 ;;		Nothing
  8069 ;; This function is called by:
  8070 ;;		_average_RGBC
  8071 ;;		_convert_HSV
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text44
  8076   002CA0                     __ptext44:
  8077                           	callstack 0
  8078   002CA0                     ___lldiv:
  8079                           	callstack 27
  8080   002CA0  0E00               	movlw	0
  8081   002CA2  6E09               	movwf	___lldiv@quotient^0,c
  8082   002CA4  0E00               	movlw	0
  8083   002CA6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8084   002CA8  0E00               	movlw	0
  8085   002CAA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8086   002CAC  0E00               	movlw	0
  8087   002CAE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8088   002CB0  5005               	movf	___lldiv@divisor^0,w,c
  8089   002CB2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8090   002CB4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8091   002CB6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8092   002CB8  B4D8               	btfsc	status,2,c
  8093   002CBA  EF61  F016         	goto	u2621
  8094   002CBE  EF63  F016         	goto	u2620
  8095   002CC2                     u2621:
  8096   002CC2  EF99  F016         	goto	l771
  8097   002CC6                     u2620:
  8098   002CC6  0E01               	movlw	1
  8099   002CC8  6E0D               	movwf	___lldiv@counter^0,c
  8100   002CCA  EF6D  F016         	goto	l3469
  8101   002CCE                     l3467:
  8102   002CCE  90D8               	bcf	status,0,c
  8103   002CD0  3605               	rlcf	___lldiv@divisor^0,f,c
  8104   002CD2  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8105   002CD4  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8106   002CD6  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8107   002CD8  2A0D               	incf	___lldiv@counter^0,f,c
  8108   002CDA                     l3469:
  8109   002CDA  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8110   002CDC  EF72  F016         	goto	u2631
  8111   002CE0  EF74  F016         	goto	u2630
  8112   002CE4                     u2631:
  8113   002CE4  EF67  F016         	goto	l3467
  8114   002CE8                     u2630:
  8115   002CE8                     l3471:
  8116   002CE8  90D8               	bcf	status,0,c
  8117   002CEA  3609               	rlcf	___lldiv@quotient^0,f,c
  8118   002CEC  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8119   002CEE  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8120   002CF0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8121   002CF2  5005               	movf	___lldiv@divisor^0,w,c
  8122   002CF4  5C01               	subwf	___lldiv@dividend^0,w,c
  8123   002CF6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8124   002CF8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8125   002CFA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8126   002CFC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8127   002CFE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8128   002D00  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8129   002D02  A0D8               	btfss	status,0,c
  8130   002D04  EF86  F016         	goto	u2641
  8131   002D08  EF88  F016         	goto	u2640
  8132   002D0C                     u2641:
  8133   002D0C  EF91  F016         	goto	l3479
  8134   002D10                     u2640:
  8135   002D10  5005               	movf	___lldiv@divisor^0,w,c
  8136   002D12  5E01               	subwf	___lldiv@dividend^0,f,c
  8137   002D14  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8138   002D16  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8139   002D18  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8140   002D1A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8141   002D1C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8142   002D1E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8143   002D20  8009               	bsf	___lldiv@quotient^0,0,c
  8144   002D22                     l3479:
  8145   002D22  90D8               	bcf	status,0,c
  8146   002D24  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8147   002D26  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8148   002D28  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8149   002D2A  3205               	rrcf	___lldiv@divisor^0,f,c
  8150   002D2C  2E0D               	decfsz	___lldiv@counter^0,f,c
  8151   002D2E  EF74  F016         	goto	l3471
  8152   002D32                     l771:
  8153   002D32  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8154   002D36  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8155   002D3A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8156   002D3E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8157   002D42  0012               	return		;funcret
  8158   002D44                     __end_of___lldiv:
  8159                           	callstack 0
  8160                           
  8161 ;; *************** function _color_click_init *****************
  8162 ;; Defined at:
  8163 ;;		line 7 in file "color.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;Total ram usage:        1 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 4
  8184 ;; This function calls:
  8185 ;;		_I2C_2_Master_Init
  8186 ;;		_color_writetoaddr
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text45
  8193   00358C                     __ptext45:
  8194                           	callstack 0
  8195   00358C                     _color_click_init:
  8196                           	callstack 26
  8197   00358C                     
  8198                           ;color.c: 10:     I2C_2_Master_Init();
  8199   00358C  ECF7  F01A         	call	_I2C_2_Master_Init	;wreg free
  8200   003590                     
  8201                           ;color.c: 13:  color_writetoaddr(0x00, 0x01);
  8202   003590  0E01               	movlw	1
  8203   003592  6E03               	movwf	color_writetoaddr@value^0,c
  8204   003594  0E00               	movlw	0
  8205   003596  EC47  F01B         	call	_color_writetoaddr
  8206   00359A                     
  8207                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8208   00359A  0E3F               	movlw	63
  8209   00359C  6E05               	movwf	??_color_click_init^0,c
  8210   00359E  0E55               	movlw	85
  8211   0035A0                     u3947:
  8212   0035A0  2EE8               	decfsz	wreg,f,c
  8213   0035A2  D7FE               	bra	u3947
  8214   0035A4  2E05               	decfsz	??_color_click_init^0,f,c
  8215   0035A6  D7FC               	bra	u3947
  8216   0035A8  0000               	nop	
  8217   0035AA                     
  8218                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  8219   0035AA  0E03               	movlw	3
  8220   0035AC  6E03               	movwf	color_writetoaddr@value^0,c
  8221   0035AE  0E00               	movlw	0
  8222   0035B0  EC47  F01B         	call	_color_writetoaddr
  8223   0035B4                     
  8224                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  8225   0035B4  0ED5               	movlw	213
  8226   0035B6  6E03               	movwf	color_writetoaddr@value^0,c
  8227   0035B8  0E01               	movlw	1
  8228   0035BA  EC47  F01B         	call	_color_writetoaddr
  8229   0035BE  0012               	return		;funcret
  8230   0035C0                     __end_of_color_click_init:
  8231                           	callstack 0
  8232                           
  8233 ;; *************** function _color_writetoaddr *****************
  8234 ;; Defined at:
  8235 ;;		line 28 in file "color.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  address         1    wreg     unsigned char 
  8238 ;;  value           1    2[COMRAM] unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  address         1    3[COMRAM] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:        2 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 3
  8257 ;; This function calls:
  8258 ;;		_I2C_2_Master_Start
  8259 ;;		_I2C_2_Master_Stop
  8260 ;;		_I2C_2_Master_Write
  8261 ;; This function is called by:
  8262 ;;		_color_click_init
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text46
  8267   00368E                     __ptext46:
  8268                           	callstack 0
  8269   00368E                     _color_writetoaddr:
  8270                           	callstack 26
  8271                           
  8272                           ;incstack = 0
  8273                           ;color_writetoaddr@address stored from wreg
  8274   00368E  6E04               	movwf	color_writetoaddr@address^0,c
  8275   003690                     
  8276                           ;color.c: 29:     I2C_2_Master_Start();
  8277   003690  ECA7  F01B         	call	_I2C_2_Master_Start	;wreg free
  8278                           
  8279                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8280   003694  0E52               	movlw	82
  8281   003696  EC8B  F01B         	call	_I2C_2_Master_Write
  8282                           
  8283                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8284   00369A  5004               	movf	color_writetoaddr@address^0,w,c
  8285   00369C  0980               	iorlw	128
  8286   00369E  EC8B  F01B         	call	_I2C_2_Master_Write
  8287                           
  8288                           ;color.c: 32:     I2C_2_Master_Write(value);
  8289   0036A2  5003               	movf	color_writetoaddr@value^0,w,c
  8290   0036A4  EC8B  F01B         	call	_I2C_2_Master_Write
  8291                           
  8292                           ;color.c: 33:     I2C_2_Master_Stop();
  8293   0036A8  ECA2  F01B         	call	_I2C_2_Master_Stop	;wreg free
  8294   0036AC  0012               	return		;funcret
  8295   0036AE                     __end_of_color_writetoaddr:
  8296                           	callstack 0
  8297                           
  8298 ;; *************** function _I2C_2_Master_Write *****************
  8299 ;; Defined at:
  8300 ;;		line 45 in file "i2c.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  data_byte       1    wreg     unsigned char 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  data_byte       1    1[COMRAM] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8318 ;;Total ram usage:        1 bytes
  8319 ;; Hardware stack levels used: 1
  8320 ;; Hardware stack levels required when called: 2
  8321 ;; This function calls:
  8322 ;;		_I2C_2_Master_Idle
  8323 ;; This function is called by:
  8324 ;;		_color_writetoaddr
  8325 ;;		_color_read_Red
  8326 ;;		_color_read_Green
  8327 ;;		_color_read_Blue
  8328 ;;		_color_read_Clear
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text47
  8333   003716                     __ptext47:
  8334                           	callstack 0
  8335   003716                     _I2C_2_Master_Write:
  8336                           	callstack 24
  8337                           
  8338                           ;incstack = 0
  8339                           ;I2C_2_Master_Write@data_byte stored from wreg
  8340   003716  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8341   003718                     
  8342                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8343   003718  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8344   00371C                     
  8345                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8346   00371C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8347   003720  0012               	return		;funcret
  8348   003722                     __end_of_I2C_2_Master_Write:
  8349                           	callstack 0
  8350                           
  8351 ;; *************** function _I2C_2_Master_Stop *****************
  8352 ;; Defined at:
  8353 ;;		line 39 in file "i2c.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;		None
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0, cstack
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;Total ram usage:        0 bytes
  8372 ;; Hardware stack levels used: 1
  8373 ;; Hardware stack levels required when called: 2
  8374 ;; This function calls:
  8375 ;;		_I2C_2_Master_Idle
  8376 ;; This function is called by:
  8377 ;;		_color_writetoaddr
  8378 ;;		_color_read_Red
  8379 ;;		_color_read_Green
  8380 ;;		_color_read_Blue
  8381 ;;		_color_read_Clear
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text48
  8386   003744                     __ptext48:
  8387                           	callstack 0
  8388   003744                     _I2C_2_Master_Stop:
  8389                           	callstack 24
  8390   003744                     
  8391                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8392   003744  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8393   003748                     
  8394                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8395   003748  010E               	movlb	14	; () banked
  8396   00374A  85DA               	bsf	218,2,b	;volatile
  8397   00374C                     
  8398                           ; BSR set to: 14
  8399   00374C  0012               	return		;funcret
  8400   00374E                     __end_of_I2C_2_Master_Stop:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _I2C_2_Master_Start *****************
  8404 ;; Defined at:
  8405 ;;		line 27 in file "i2c.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;Total ram usage:        0 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 2
  8426 ;; This function calls:
  8427 ;;		_I2C_2_Master_Idle
  8428 ;; This function is called by:
  8429 ;;		_color_writetoaddr
  8430 ;;		_color_read_Red
  8431 ;;		_color_read_Green
  8432 ;;		_color_read_Blue
  8433 ;;		_color_read_Clear
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text49
  8438   00374E                     __ptext49:
  8439                           	callstack 0
  8440   00374E                     _I2C_2_Master_Start:
  8441                           	callstack 24
  8442   00374E                     
  8443                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8444   00374E  EC0C  F01B         	call	_I2C_2_Master_Idle	;wreg free
  8445   003752                     
  8446                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8447   003752  010E               	movlb	14	; () banked
  8448   003754  81DA               	bsf	218,0,b	;volatile
  8449   003756                     
  8450                           ; BSR set to: 14
  8451   003756  0012               	return		;funcret
  8452   003758                     __end_of_I2C_2_Master_Start:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function _I2C_2_Master_Idle *****************
  8456 ;; Defined at:
  8457 ;;		line 22 in file "i2c.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg, status,2, status,0
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8475 ;;Total ram usage:        1 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; Hardware stack levels required when called: 1
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_I2C_2_Master_Start
  8482 ;;		_I2C_2_Master_RepStart
  8483 ;;		_I2C_2_Master_Stop
  8484 ;;		_I2C_2_Master_Write
  8485 ;;		_I2C_2_Master_Read
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text50
  8490   003618                     __ptext50:
  8491                           	callstack 0
  8492   003618                     _I2C_2_Master_Idle:
  8493                           	callstack 24
  8494   003618                     l308:
  8495   003618  010E               	movlb	14	; () banked
  8496   00361A  B5D8               	btfsc	216,2,b	;volatile
  8497   00361C  EF12  F01B         	goto	u1961
  8498   003620  EF14  F01B         	goto	u1960
  8499   003624                     u1961:
  8500   003624  EF0C  F01B         	goto	l308
  8501   003628                     u1960:
  8502   003628                     
  8503                           ; BSR set to: 14
  8504   003628  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8505   00362C  0E1F               	movlw	31
  8506   00362E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8507   003630  A4D8               	btfss	status,2,c
  8508   003632  EF1D  F01B         	goto	u1971
  8509   003636  EF1F  F01B         	goto	u1970
  8510   00363A                     u1971:
  8511   00363A  EF0C  F01B         	goto	l308
  8512   00363E                     u1970:
  8513   00363E                     
  8514                           ; BSR set to: 14
  8515   00363E  0012               	return		;funcret
  8516   003640                     __end_of_I2C_2_Master_Idle:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function _I2C_2_Master_Init *****************
  8520 ;; Defined at:
  8521 ;;		line 4 in file "i2c.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;		None
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;Total ram usage:        0 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 1
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_color_click_init
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text51
  8550   0035EE                     __ptext51:
  8551                           	callstack 0
  8552   0035EE                     _I2C_2_Master_Init:
  8553                           	callstack 28
  8554   0035EE                     
  8555                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8556   0035EE  010E               	movlb	14	; () banked
  8557   0035F0  51D9               	movf	217,w,b	;volatile
  8558   0035F2  0BF0               	andlw	-16
  8559   0035F4  0908               	iorlw	8
  8560   0035F6  6FD9               	movwf	217,b	;volatile
  8561   0035F8                     
  8562                           ; BSR set to: 14
  8563                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8564   0035F8  8BD9               	bsf	217,5,b	;volatile
  8565                           
  8566                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8567   0035FA  0E9F               	movlw	159
  8568   0035FC  6FD6               	movwf	214,b	;volatile
  8569   0035FE                     
  8570                           ; BSR set to: 14
  8571                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8572   0035FE  8A84               	bsf	132,5,c	;volatile
  8573   003600                     
  8574                           ; BSR set to: 14
  8575                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8576   003600  8C84               	bsf	132,6,c	;volatile
  8577   003602                     
  8578                           ; BSR set to: 14
  8579                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8580   003602  9BA7               	bcf	167,5,b	;volatile
  8581   003604                     
  8582                           ; BSR set to: 14
  8583                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8584   003604  9DA7               	bcf	167,6,b	;volatile
  8585                           
  8586                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8587   003606  0E1D               	movlw	29
  8588   003608  6F1D               	movwf	29,b	;volatile
  8589                           
  8590                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8591   00360A  0E1E               	movlw	30
  8592   00360C  6F1C               	movwf	28,b	;volatile
  8593                           
  8594                           ;i2c.c: 18:   RD5PPS=0x1C;
  8595   00360E  0E1C               	movlw	28
  8596   003610  6F6F               	movwf	111,b	;volatile
  8597                           
  8598                           ;i2c.c: 19:   RD6PPS=0x1B;
  8599   003612  0E1B               	movlw	27
  8600   003614  6F70               	movwf	112,b	;volatile
  8601   003616                     
  8602                           ; BSR set to: 14
  8603   003616  0012               	return		;funcret
  8604   003618                     __end_of_I2C_2_Master_Init:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function _buggy_lights_init *****************
  8608 ;; Defined at:
  8609 ;;		line 7 in file "buggy_lights.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;		None
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		None
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;Total ram usage:        0 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_main
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text52
  8638   0035C0                     __ptext52:
  8639                           	callstack 0
  8640   0035C0                     _buggy_lights_init:
  8641                           	callstack 29
  8642   0035C0                     
  8643                           ;buggy_lights.c: 11:         TRISDbits.TRISD4 = 0;
  8644   0035C0  9884               	bcf	132,4,c	;volatile
  8645                           
  8646                           ;buggy_lights.c: 12:         TRISHbits.TRISH1 = 0;
  8647   0035C2  9288               	bcf	136,1,c	;volatile
  8648                           
  8649                           ;buggy_lights.c: 13:         TRISDbits.TRISD3 = 0;
  8650   0035C4  9684               	bcf	132,3,c	;volatile
  8651                           
  8652                           ;buggy_lights.c: 14:         TRISFbits.TRISF0 = 0;
  8653   0035C6  9086               	bcf	134,0,c	;volatile
  8654                           
  8655                           ;buggy_lights.c: 15:         TRISHbits.TRISH0 = 0;
  8656   0035C8  9088               	bcf	136,0,c	;volatile
  8657                           
  8658                           ;buggy_lights.c: 17:         LATDbits.LATD4 = 0;
  8659   0035CA  987C               	bcf	124,4,c	;volatile
  8660                           
  8661                           ;buggy_lights.c: 18:         LATHbits.LATH1 = 0;
  8662   0035CC  9280               	bcf	128,1,c	;volatile
  8663                           
  8664                           ;buggy_lights.c: 19:         LATDbits.LATD3 = 0;
  8665   0035CE  967C               	bcf	124,3,c	;volatile
  8666                           
  8667                           ;buggy_lights.c: 20:         LATFbits.LATF0 = 0;
  8668   0035D0  907E               	bcf	126,0,c	;volatile
  8669                           
  8670                           ;buggy_lights.c: 21:         LATHbits.LATH0 = 0;
  8671   0035D2  9080               	bcf	128,0,c	;volatile
  8672                           
  8673                           ;buggy_lights.c: 26:             TRISGbits.TRISG1 = 0;
  8674   0035D4  9287               	bcf	135,1,c	;volatile
  8675                           
  8676                           ;buggy_lights.c: 27:             TRISAbits.TRISA4 = 0;
  8677   0035D6  9881               	bcf	129,4,c	;volatile
  8678                           
  8679                           ;buggy_lights.c: 28:             TRISFbits.TRISF7 = 0;
  8680   0035D8  9E86               	bcf	134,7,c	;volatile
  8681                           
  8682                           ;buggy_lights.c: 30:             LATGbits.LATG1 = 0;
  8683   0035DA  927F               	bcf	127,1,c	;volatile
  8684                           
  8685                           ;buggy_lights.c: 31:             LATAbits.LATA4 = 0;
  8686   0035DC  9879               	bcf	121,4,c	;volatile
  8687                           
  8688                           ;buggy_lights.c: 32:             LATFbits.LATF7 = 0;
  8689   0035DE  9E7E               	bcf	126,7,c	;volatile
  8690                           
  8691                           ;buggy_lights.c: 36:             TRISGbits.TRISG0 = 0;
  8692   0035E0  9087               	bcf	135,0,c	;volatile
  8693                           
  8694                           ;buggy_lights.c: 37:             TRISEbits.TRISE7 = 0;
  8695   0035E2  9E85               	bcf	133,7,c	;volatile
  8696                           
  8697                           ;buggy_lights.c: 38:             TRISAbits.TRISA3 = 0;
  8698   0035E4  9681               	bcf	129,3,c	;volatile
  8699                           
  8700                           ;buggy_lights.c: 40:             LATGbits.LATG0 = 0;
  8701   0035E6  907F               	bcf	127,0,c	;volatile
  8702                           
  8703                           ;buggy_lights.c: 41:             LATEbits.LATE7 = 0;
  8704   0035E8  9E7D               	bcf	125,7,c	;volatile
  8705                           
  8706                           ;buggy_lights.c: 42:             LATAbits.LATA3 = 0;
  8707   0035EA  9679               	bcf	121,3,c	;volatile
  8708   0035EC  0012               	return		;funcret
  8709   0035EE                     __end_of_buggy_lights_init:
  8710                           	callstack 0
  8711                           
  8712 ;; *************** function _Timer0_init *****************
  8713 ;; Defined at:
  8714 ;;		line 7 in file "timers.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used: 1
  8734 ;; Hardware stack levels required when called: 3
  8735 ;; This function calls:
  8736 ;;		_reset_timer
  8737 ;;		_start_timer
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text53
  8744   003640                     __ptext53:
  8745                           	callstack 0
  8746   003640                     _Timer0_init:
  8747                           	callstack 27
  8748   003640                     
  8749                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8750   003640  50D6               	movf	214,w,c	;volatile
  8751   003642  0B1F               	andlw	-225
  8752   003644  0940               	iorlw	64
  8753   003646  6ED6               	movwf	214,c	;volatile
  8754   003648                     
  8755                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8756   003648  88D6               	bsf	214,4,c	;volatile
  8757   00364A                     
  8758                           ;timers.c: 11:     T0CON0bits.T016BIT=1;
  8759   00364A  88D5               	bsf	213,4,c	;volatile
  8760                           
  8761                           ;timers.c: 13:     T0CON1bits.T0CKPS=0b1110;
  8762   00364C  50D6               	movf	214,w,c	;volatile
  8763   00364E  0BF0               	andlw	-16
  8764   003650  090E               	iorlw	14
  8765   003652  6ED6               	movwf	214,c	;volatile
  8766   003654                     
  8767                           ;timers.c: 18:     reset_timer();
  8768   003654  EC91  F01B         	call	_reset_timer	;wreg free
  8769   003658                     
  8770                           ;timers.c: 19:     T0CON0bits.T0EN=1;
  8771   003658  8ED5               	bsf	213,7,c	;volatile
  8772                           
  8773                           ;timers.c: 21:     start_timer();
  8774   00365A  ECAE  F01B         	call	_start_timer	;wreg free
  8775   00365E                     
  8776                           ;timers.c: 22:     PIE0bits.TMR0IE = 1;
  8777   00365E  010E               	movlb	14	; () banked
  8778   003660  8B29               	bsf	41,5,b	;volatile
  8779   003662                     
  8780                           ; BSR set to: 14
  8781                           ;timers.c: 23:     INTCONbits.PEIE = 1;
  8782   003662  8CF2               	bsf	242,6,c	;volatile
  8783   003664                     
  8784                           ; BSR set to: 14
  8785                           ;timers.c: 24:     INTCONbits.GIE = 1;
  8786   003664  8EF2               	bsf	242,7,c	;volatile
  8787   003666                     
  8788                           ; BSR set to: 14
  8789   003666  0012               	return		;funcret
  8790   003668                     __end_of_Timer0_init:
  8791                           	callstack 0
  8792                           
  8793 ;; *************** function _start_timer *****************
  8794 ;; Defined at:
  8795 ;;		line 30 in file "timers.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		None
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; Hardware stack levels required when called: 1
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_Timer0_init
  8820 ;;		_forward_navigation
  8821 ;;		_return_to_sender
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           	psect	text54
  8826   00375C                     __ptext54:
  8827                           	callstack 0
  8828   00375C                     _start_timer:
  8829                           	callstack 28
  8830   00375C                     
  8831                           ;timers.c: 32:     T0CON0bits.T0EN=1;
  8832   00375C  8ED5               	bsf	213,7,c	;volatile
  8833   00375E  0012               	return		;funcret
  8834   003760                     __end_of_start_timer:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _reset_timer *****************
  8838 ;; Defined at:
  8839 ;;		line 70 in file "timers.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 2
  8860 ;; This function calls:
  8861 ;;		_write_timer
  8862 ;; This function is called by:
  8863 ;;		_Timer0_init
  8864 ;;		_forward_navigation
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text55
  8869   003722                     __ptext55:
  8870                           	callstack 0
  8871   003722                     _reset_timer:
  8872                           	callstack 27
  8873   003722                     
  8874                           ;timers.c: 72:     write_timer(0, 0);
  8875   003722  0E00               	movlw	0
  8876   003724  6E01               	movwf	write_timer@tL^0,c
  8877   003726  0E00               	movlw	0
  8878   003728  EC97  F01B         	call	_write_timer
  8879   00372C  0012               	return		;funcret
  8880   00372E                     __end_of_reset_timer:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _write_timer *****************
  8884 ;; Defined at:
  8885 ;;		line 58 in file "timers.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  tH              1    wreg     unsigned char 
  8888 ;;  tL              1    0[COMRAM] unsigned char 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  tH              1    1[COMRAM] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;Total ram usage:        2 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 1
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_reset_timer
  8911 ;;		_return_to_sender
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text56
  8916   00372E                     __ptext56:
  8917                           	callstack 0
  8918   00372E                     _write_timer:
  8919                           	callstack 27
  8920                           
  8921                           ;incstack = 0
  8922                           ;write_timer@tH stored from wreg
  8923   00372E  6E02               	movwf	write_timer@tH^0,c
  8924   003730                     
  8925                           ;timers.c: 58: void write_timer(unsigned char tH, unsigned char tL);timers.c: 59: {;time
      +                          rs.c: 63:     TMR0H = tH;
  8926   003730  C002  FFD4         	movff	write_timer@tH,4052	;volatile
  8927   003734                     
  8928                           ;timers.c: 64:     TMR0L = tL;
  8929   003734  C001  FFD3         	movff	write_timer@tL,4051	;volatile
  8930   003738  0012               	return		;funcret
  8931   00373A                     __end_of_write_timer:
  8932                           	callstack 0
  8933                           
  8934 ;; *************** function _ISR *****************
  8935 ;; Defined at:
  8936 ;;		line 210 in file "timers.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used: 1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		Interrupt level 2
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           	psect	intcode
  8964   000008                     __pintcode:
  8965                           	callstack 0
  8966   000008                     _ISR:
  8967                           	callstack 23
  8968                           
  8969                           ;incstack = 0
  8970   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8971   00000A                     
  8972                           ;timers.c: 212:     if (PIR0bits.TMR0IF) {
  8973   00000A  010E               	movlb	14	; () banked
  8974   00000C  AB33               	btfss	51,5,b	;volatile
  8975   00000E  EF0B  F000         	goto	i2u380_41
  8976   000012  EF0D  F000         	goto	i2u380_40
  8977   000016                     i2u380_41:
  8978   000016  EF1F  F000         	goto	i2l714
  8979   00001A                     i2u380_40:
  8980   00001A                     
  8981                           ; BSR set to: 14
  8982                           ;timers.c: 213:         if (returning) {
  8983   00001A  0101               	movlb	1	; () banked
  8984   00001C  51A6               	movf	_returning& (0+255),w,b
  8985   00001E  B4D8               	btfsc	status,2,c
  8986   000020  EF14  F000         	goto	i2u381_41
  8987   000024  EF16  F000         	goto	i2u381_40
  8988   000028                     i2u381_41:
  8989   000028  EF1B  F000         	goto	i2l4383
  8990   00002C                     i2u381_40:
  8991   00002C                     
  8992                           ; BSR set to: 1
  8993                           ;timers.c: 214:             return_flag = 1;
  8994   00002C  0E01               	movlw	1
  8995   00002E  0100               	movlb	0	; () banked
  8996   000030  6F87               	movwf	_return_flag& (0+255),b
  8997                           
  8998                           ;timers.c: 215:         } else {
  8999   000032  EF1D  F000         	goto	i2l4385
  9000   000036                     i2l4383:
  9001                           
  9002                           ; BSR set to: 1
  9003                           ;timers.c: 216:             lost_flag = 1;
  9004   000036  0E01               	movlw	1
  9005   000038  6FA5               	movwf	_lost_flag& (0+255),b
  9006   00003A                     i2l4385:
  9007                           
  9008                           ;timers.c: 218:         PIR0bits.TMR0IF = 0;
  9009   00003A  010E               	movlb	14	; () banked
  9010   00003C  9B33               	bcf	51,5,b	;volatile
  9011   00003E                     i2l714:
  9012                           
  9013                           ; BSR set to: 14
  9014   00003E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9015   000040  0011               	retfie		f
  9016   000042                     __end_of_ISR:
  9017                           	callstack 0
  9018                           
  9019                           	psect	rparam
  9020   000000                     
  9021                           	psect	temp
  9022   00005F                     btemp:
  9023                           	callstack 0
  9024   00005F                     	ds	1
  9025   000000                     int$flags	set	btemp
  9026   000000                     wtemp8	set	btemp+1
  9027   000000                     ttemp5	set	btemp+1
  9028   000000                     ttemp6	set	btemp+4
  9029   000000                     ttemp7	set	btemp+8
  9030                           
  9031                           	psect	idloc
  9032                           
  9033                           ;Config register IDLOC0 @ 0x200000
  9034                           ;	unspecified, using default values
  9035   200000                     	org	2097152
  9036   200000  FFFF               	dw	65535
  9037                           
  9038                           ;Config register IDLOC1 @ 0x200002
  9039                           ;	unspecified, using default values
  9040   200002                     	org	2097154
  9041   200002  FFFF               	dw	65535
  9042                           
  9043                           ;Config register IDLOC2 @ 0x200004
  9044                           ;	unspecified, using default values
  9045   200004                     	org	2097156
  9046   200004  FFFF               	dw	65535
  9047                           
  9048                           ;Config register IDLOC3 @ 0x200006
  9049                           ;	unspecified, using default values
  9050   200006                     	org	2097158
  9051   200006  FFFF               	dw	65535
  9052                           
  9053                           ;Config register IDLOC4 @ 0x200008
  9054                           ;	unspecified, using default values
  9055   200008                     	org	2097160
  9056   200008  FFFF               	dw	65535
  9057                           
  9058                           ;Config register IDLOC5 @ 0x20000A
  9059                           ;	unspecified, using default values
  9060   20000A                     	org	2097162
  9061   20000A  FFFF               	dw	65535
  9062                           
  9063                           ;Config register IDLOC6 @ 0x20000C
  9064                           ;	unspecified, using default values
  9065   20000C                     	org	2097164
  9066   20000C  FFFF               	dw	65535
  9067                           
  9068                           ;Config register IDLOC7 @ 0x20000E
  9069                           ;	unspecified, using default values
  9070   20000E                     	org	2097166
  9071   20000E  FFFF               	dw	65535
  9072                           
  9073                           	psect	config
  9074                           
  9075                           ;Config register CONFIG1L @ 0x300000
  9076                           ;	External Oscillator mode Selection bits
  9077                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9078                           ;	Power-up default value for COSC bits
  9079                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9080   300000                     	org	3145728
  9081   300000  AA                 	db	170
  9082                           
  9083                           ;Config register CONFIG1H @ 0x300001
  9084                           ;	unspecified, using default values
  9085                           ;	Clock Out Enable bit
  9086                           ;	CLKOUTEN = 0x1, unprogrammed default
  9087                           ;	Clock Switch Enable bit
  9088                           ;	CSWEN = 0x1, unprogrammed default
  9089                           ;	Fail-Safe Clock Monitor Enable bit
  9090                           ;	FCMEN = 0x1, unprogrammed default
  9091   300001                     	org	3145729
  9092   300001  FF                 	db	255
  9093                           
  9094                           ;Config register CONFIG2L @ 0x300002
  9095                           ;	unspecified, using default values
  9096                           ;	Master Clear Enable bit
  9097                           ;	MCLRE = 0x1, unprogrammed default
  9098                           ;	Power-up Timer Enable bit
  9099                           ;	PWRTE = 0x1, unprogrammed default
  9100                           ;	Low-power BOR enable bit
  9101                           ;	LPBOREN = 0x1, unprogrammed default
  9102                           ;	Brown-out Reset Enable bits
  9103                           ;	BOREN = 0x3, unprogrammed default
  9104   300002                     	org	3145730
  9105   300002  FF                 	db	255
  9106                           
  9107                           ;Config register CONFIG2H @ 0x300003
  9108                           ;	unspecified, using default values
  9109                           ;	Brown Out Reset Voltage selection bits
  9110                           ;	BORV = 0x3, unprogrammed default
  9111                           ;	ZCD Disable bit
  9112                           ;	ZCD = 0x1, unprogrammed default
  9113                           ;	PPSLOCK bit One-Way Set Enable bit
  9114                           ;	PPS1WAY = 0x1, unprogrammed default
  9115                           ;	Stack Full/Underflow Reset Enable bit
  9116                           ;	STVREN = 0x1, unprogrammed default
  9117                           ;	Debugger Enable bit
  9118                           ;	DEBUG = 0x1, unprogrammed default
  9119                           ;	Extended Instruction Set Enable bit
  9120                           ;	XINST = 0x1, unprogrammed default
  9121   300003                     	org	3145731
  9122   300003  FF                 	db	255
  9123                           
  9124                           ;Config register CONFIG3L @ 0x300004
  9125                           ;	WDT Period Select bits
  9126                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9127                           ;	WDT operating mode
  9128                           ;	WDTE = OFF, WDT Disabled
  9129   300004                     	org	3145732
  9130   300004  9F                 	db	159
  9131                           
  9132                           ;Config register CONFIG3H @ 0x300005
  9133                           ;	unspecified, using default values
  9134                           ;	WDT Window Select bits
  9135                           ;	WDTCWS = 0x7, unprogrammed default
  9136                           ;	WDT input clock selector
  9137                           ;	WDTCCS = 0x7, unprogrammed default
  9138   300005                     	org	3145733
  9139   300005  FF                 	db	255
  9140                           
  9141                           ;Config register CONFIG4L @ 0x300006
  9142                           ;	unspecified, using default values
  9143                           ;	Write Protection Block 0
  9144                           ;	WRT0 = 0x1, unprogrammed default
  9145                           ;	Write Protection Block 1
  9146                           ;	WRT1 = 0x1, unprogrammed default
  9147                           ;	Write Protection Block 2
  9148                           ;	WRT2 = 0x1, unprogrammed default
  9149                           ;	Write Protection Block 3
  9150                           ;	WRT3 = 0x1, unprogrammed default
  9151                           ;	Write Protection Block 3
  9152                           ;	WRT4 = 0x1, unprogrammed default
  9153                           ;	Write Protection Block 3
  9154                           ;	WRT5 = 0x1, unprogrammed default
  9155                           ;	Write Protection Block 3
  9156                           ;	WRT6 = 0x1, unprogrammed default
  9157                           ;	Write Protection Block 3
  9158                           ;	WRT7 = 0x1, unprogrammed default
  9159   300006                     	org	3145734
  9160   300006  FF                 	db	255
  9161                           
  9162                           ;Config register CONFIG4H @ 0x300007
  9163                           ;	unspecified, using default values
  9164                           ;	Configuration Register Write Protection bit
  9165                           ;	WRTC = 0x1, unprogrammed default
  9166                           ;	Boot Block Write Protection bit
  9167                           ;	WRTB = 0x1, unprogrammed default
  9168                           ;	Data EEPROM Write Protection bit
  9169                           ;	WRTD = 0x1, unprogrammed default
  9170                           ;	Scanner Enable bit
  9171                           ;	SCANE = 0x1, unprogrammed default
  9172                           ;	Low Voltage Programming Enable bit
  9173                           ;	LVP = 0x1, unprogrammed default
  9174   300007                     	org	3145735
  9175   300007  FF                 	db	255
  9176                           
  9177                           ;Config register CONFIG5L @ 0x300008
  9178                           ;	unspecified, using default values
  9179                           ;	UserNVM Program Memory Code Protection bit
  9180                           ;	CP = 0x1, unprogrammed default
  9181                           ;	DataNVM Memory Code Protection bit
  9182                           ;	CPD = 0x1, unprogrammed default
  9183   300008                     	org	3145736
  9184   300008  FF                 	db	255
  9185                           
  9186                           ;Config register CONFIG5H @ 0x300009
  9187                           ;	unspecified, using default values
  9188   300009                     	org	3145737
  9189   300009  FF                 	db	255
  9190                           
  9191                           ;Config register CONFIG6L @ 0x30000A
  9192                           ;	unspecified, using default values
  9193                           ;	Table Read Protection Block 0
  9194                           ;	EBTR0 = 0x1, unprogrammed default
  9195                           ;	Table Read Protection Block 1
  9196                           ;	EBTR1 = 0x1, unprogrammed default
  9197                           ;	Table Read Protection Block 2
  9198                           ;	EBTR2 = 0x1, unprogrammed default
  9199                           ;	Table Read Protection Block 3
  9200                           ;	EBTR3 = 0x1, unprogrammed default
  9201                           ;	Table Read Protection Block 4
  9202                           ;	EBTR4 = 0x1, unprogrammed default
  9203                           ;	Table Read Protection Block 5
  9204                           ;	EBTR5 = 0x1, unprogrammed default
  9205                           ;	Table Read Protection Block 6
  9206                           ;	EBTR6 = 0x1, unprogrammed default
  9207                           ;	Table Read Protection Block 7
  9208                           ;	EBTR7 = 0x1, unprogrammed default
  9209   30000A                     	org	3145738
  9210   30000A  FF                 	db	255
  9211                           
  9212                           ;Config register CONFIG6H @ 0x30000B
  9213                           ;	unspecified, using default values
  9214                           ;	Boot Block Table Read Protection bit
  9215                           ;	EBTRB = 0x1, unprogrammed default
  9216   30000B                     	org	3145739
  9217   30000B  FF                 	db	255
  9218                           tosu	equ	0xFFF
  9219                           tosh	equ	0xFFE
  9220                           tosl	equ	0xFFD
  9221                           stkptr	equ	0xFFC
  9222                           pclatu	equ	0xFFB
  9223                           pclath	equ	0xFFA
  9224                           pcl	equ	0xFF9
  9225                           tblptru	equ	0xFF8
  9226                           tblptrh	equ	0xFF7
  9227                           tblptrl	equ	0xFF6
  9228                           tablat	equ	0xFF5
  9229                           prodh	equ	0xFF4
  9230                           prodl	equ	0xFF3
  9231                           indf0	equ	0xFEF
  9232                           postinc0	equ	0xFEE
  9233                           postdec0	equ	0xFED
  9234                           preinc0	equ	0xFEC
  9235                           plusw0	equ	0xFEB
  9236                           fsr0h	equ	0xFEA
  9237                           fsr0l	equ	0xFE9
  9238                           wreg	equ	0xFE8
  9239                           indf1	equ	0xFE7
  9240                           postinc1	equ	0xFE6
  9241                           postdec1	equ	0xFE5
  9242                           preinc1	equ	0xFE4
  9243                           plusw1	equ	0xFE3
  9244                           fsr1h	equ	0xFE2
  9245                           fsr1l	equ	0xFE1
  9246                           bsr	equ	0xFE0
  9247                           indf2	equ	0xFDF
  9248                           postinc2	equ	0xFDE
  9249                           postdec2	equ	0xFDD
  9250                           preinc2	equ	0xFDC
  9251                           plusw2	equ	0xFDB
  9252                           fsr2h	equ	0xFDA
  9253                           fsr2l	equ	0xFD9
  9254                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        27
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     32      99
    BANK1           256    164     227
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    average_RGBC@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    colour_to_key@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    colour_to_key@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    convert_HSV@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    convert_HSV@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward_navigation@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward_navigation@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward_navigation@p1	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    forward_navigation@p2	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    fullSpeedReverse@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    getRGBCval@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    manoeuvre_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), 

    max_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    min_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    read_timer@tH	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerH(COMRAM[1]), 

    read_timer@tL	PTR unsigned char  size(1) Largest target is 1
		 -> forward_navigation@timerL(COMRAM[1]), 

    S1143DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    S1143DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    S2744$buffer	PTR unsigned char  size(2) Largest target is 0

    S2744$source	PTR const unsigned char  size(2) Largest target is 0

    scale_RGB@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendArrayCharSerial4@arr	PTR unsigned char  size(2) Largest target is 20
		 -> trail_manoeuvre(BANK1[20]), trail_timer_high(BANK1[20]), trail_timer_low(BANK1[20]), 

    sendHSVvalSerial4@col_val	PTR struct HSV_val size(1) Largest target is 6
		 -> main@HSV_colour(BANK0[6]), 

    sendRGBCvalSerial4@col_val	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 
		 -> STR_4(CODE[3]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), main@motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 161
		 -> sendArrayCharSerial4@tempStr(BANK1[161]), sendHSVvalSerial4@tempStr(COMRAM[21]), sendIntSerial4@string(COMRAM[17]), sendRGBCvalSerial4@tempStr(COMRAM[26]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    timer_high_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_high(BANK1[20]), 

    timer_low_pointer	PTR unsigned char  size(2) Largest target is 20
		 -> trail_timer_low(BANK1[20]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRlllhhhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRlllhhhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[5]), STR_3(CODE[4]), STR_5(CODE[14]), STR_6(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    wait_for_wall@p	PTR struct RGBC_val size(1) Largest target is 8
		 -> main@RGBC_colour(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_forward_navigation
    _forward_navigation->_sendRGBCvalSerial4
    _wait_for_wall->_getRGBCval
    _stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    _sendRGBCvalSerial4->_sprintf
    _sendHSVvalSerial4->_sprintf
    _sendArrayCharSerial4->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _abs->___awmod
    ___lwdiv->___wmul
    _sendStringSerial4->_sendCharSerial4
    _scale_RGB->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _convert_HSV->___lldiv
    _average_RGBC->___lldiv
    _getRGBCval->_color_read_Blue
    _getRGBCval->_color_read_Clear
    _getRGBCval->_color_read_Green
    _getRGBCval->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _reset_timer->_write_timer

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _forward_navigation->_sendArrayCharSerial4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   40864
                                             93 COMRAM     1     1      0
                                              0 BANK0     32    32      0
                        _Timer0_init
                  _buggy_lights_init
                   _color_click_init
                 _forward_navigation
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward_navigation                                   9     5      4   39078
                                             84 COMRAM     9     5      4
                       _average_RGBC
                      _colour_to_key
                        _convert_HSV
                         _read_timer
                        _reset_timer
                          _scale_RGB
               _sendArrayCharSerial4
                  _sendHSVvalSerial4
                 _sendRGBCvalSerial4
                        _start_timer
                               _stop
                         _stop_timer
               _toggle_tricolour_LED
                      _wait_for_wall
                        _write_trail
 ---------------------------------------------------------------------------------
 (2) _write_trail                                          3     1      2     218
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _wait_for_wall                                        4     2      2     910
                                             12 COMRAM     4     2      2
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (2) _toggle_tricolour_LED                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _stop_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stop                                                 3     1      2    3525
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    1981
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _sendRGBCvalSerial4                                  27    26      1    5735
                                             57 COMRAM    27    26      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendHSVvalSerial4                                   22    21      1    5713
                                             57 COMRAM    22    21      1
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendArrayCharSerial4                               167   165      2    6038
                                             57 COMRAM     3     1      2
                                              0 BANK1    164   164      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             26    15     11    5074
                                             31 COMRAM    26    15     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    4249
                                             27 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           14    11      3    3897
                                             13 COMRAM    14    11      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _scale_RGB                                            3     2      1    5963
                                             49 COMRAM     3     2      1
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1236
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1143
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3420
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _read_timer                                           2     0      2     196
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _convert_HSV                                         52    50      2    5717
                                             13 COMRAM    52    50      2
                            ___lldiv
                             ___lmul
                            _max_RGB
                            _min_RGB
 ---------------------------------------------------------------------------------
 (3) _min_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _max_RGB                                              6     4      2     255
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1434
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _colour_to_key                                        5     3      2     932
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _average_RGBC                                        20    19      1    3012
                                             13 COMRAM    20    19      1
                            ___lldiv
                         _getRGBCval
 ---------------------------------------------------------------------------------
 (3) _getRGBCval                                           1     0      1     692
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1834
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggy_lights_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0     196
                        _reset_timer
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0     196
                        _write_timer
 ---------------------------------------------------------------------------------
 (3) _write_timer                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_init
     _reset_timer
       _write_timer
     _start_timer
   _buggy_lights_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _forward_navigation
     _average_RGBC
       ___lldiv
       _getRGBCval
         _color_read_Blue
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     _colour_to_key
     _convert_HSV
       ___lldiv
       ___lmul
       _max_RGB
       _min_RGB
     _read_timer
     _reset_timer
     _scale_RGB
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _sendArrayCharSerial4
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _sendHSVvalSerial4
       _sendStringSerial4
       _sprintf
     _sendRGBCvalSerial4
       _sendStringSerial4
       _sprintf
     _start_timer
     _stop
       _setMotorPWM
         ___lwdiv
         ___wmul
     _stop_timer
     _toggle_tricolour_LED
     _wait_for_wall
       _getRGBCval
     _write_trail
   _initDCmotorsPWM
   _initUSART4

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      E3       7       88.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRlllhhh     20      0       0      46        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhlll      1D      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhhll      13      0       0      34        0.0%
BITBIGSFRlllhhl     11      0       0      49        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      57        0.0%
BITBIGSFRlllllh      9      0       0      56        0.0%
BITBIGSFRlllhhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRllllhl      5      0       0      52        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRllllhh      3      0       0      51        0.0%
BITBIGSFRlllhhh      2      0       0      42        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllhhh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllhl       1      0       0      50        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A4      60        0.0%
DATA                 0      0     1A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 12:43:43 2024

                 _turn180Delay 00B2                ??_wait_for_wall 000F                 _color_read_Red 327E  
              _color_read_Blue 336E                _trail_timer_low 01BB         ??_sendArrayCharSerial4 003C  
                           l42 2A70                             l27 35EC                             l71 32CC  
                           l80 336C                             l65 35BE                             l74 331C  
                           l83 327C                             l68 36AC                             l77 33BC  
                           l96 3498                             l89 227A                             l99 2F1E  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _trail_timer_high 01CF  
             _color_read_Clear 331E               _color_read_Green 32CE                            l101 2F58  
                          l104 2EA2                            l106 2EDC                            l210 2DD2  
                          l125 14E4                            l109 29A8                            l311 363E  
                          l320 374C                            l136 1946                            l305 3616  
                          l137 1948                            l217 2582                            l225 2E60  
                          l314 3756                            l323 3720                            l308 3618  
                          l317 3742                            l326 351C                            l409 27CA  
                          l450 36FE                            l470 3408                            l438 36CA  
                          l447 36EA                            l456 3172                            l464 2FCE  
                          l467 31D0                            l744 368C                            l672 375A  
                          l681 372C                            l666 3666                            l771 2D32  
                          l755 309C                            l675 3714                            l756 30AC  
                          l669 375E                            l678 3738                            l687 3556  
                          l696 26BE                            l778 2D42                            l975 2B34  
                          l988 2C9E                            _ISR 0008         ??_toggle_tricolour_LED 0001  
                          _abs 3558                    _start_timer 375C                   ___awmod@sign 0006  
                          wreg 0FE8                   ___flmul@aexp 0020                   ___flmul@bexp 0021  
                 ?_convert_HSV 000E                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                 min_RGB@min_val 0005                    _squareDelay 00AE  
                         ?_ISR 0001                   ___fltol@exp1 0031                           l1041 28D2  
                         ?_abs 0007                           l3001 2AFE                           l1402 242E  
                         l1242 3042                           l3011 2B24                           l3003 2B06  
                         l1235 303A                           l1252 3110                           l1413 23C6  
                         l3013 2B2C                           l3005 2B08                           l3021 2C02  
                         l1245 3108                           l3101 2BAE                           l1406 236A  
                         l1502 2BEE                           l1422 3454                           l3111 3752  
                         l3007 2B0E                           l3031 2C36                           l3023 2C0A  
                         l3113 3718                           l3121 373A                           l3009 2B14  
                         l3041 2C72                           l3033 2C3E                           l3025 2C0E  
                         l3017 2BF0                           l3105 3558                           l1513 3760  
                         l3201 1FC2                           l4001 33FE                           l1362 1D72  
                         l3115 371C                           l3131 34F2                           l3123 373E  
                         l3043 2C78                           l3035 2C46                           l3027 2C1C  
                         l3019 2BF4                           l3107 3566                           l3203 1FD6  
                         l3211 2008                           l3109 374E                           l3117 3744  
                         l3133 3518                           l3125 34DE                           l1365 1C04  
                         l3037 2C54                           l3045 2C7E                           l3029 2C24  
                         l3061 2FFA                           l3053 2FD0                           l3221 206E  
                         l3205 1FF0                           l3213 2038                           l3141 1D7C  
                         l1358 1A0E                           l4103 3722                           l3119 3748  
                         l3135 351A                           l3127 34E2                           l1375 1D34  
                         l1367 1C7C                           l3047 2C8E                           l3039 2C6A  
                         l3071 302E                           l3063 3008                           l3055 2FD8  
                         l3223 2076                           l3215 2040                           l3207 1FF2  
                         l1463 1F16                           l3151 1DC6                           l3143 1DA2  
                         l4111 3520                           l1368 1C6A                           l1464 207E  
                         l4105 375C                           l4201 3654                           l3129 34EA  
                         l3241 3314                           l3233 327E                           l3049 2C96  
                         l3073 3034                           l3065 300E                           l3057 2FEA  
                         l3081 30D0                           l3161 1E40                           l3153 1DE6  
                         l3145 1DAA                           l4121 354E                           l4113 352C  
                         l1490 358A                           l1482 321E                           l4203 3658  
                         l4131 359A                           l3251 331E                           l3235 32C4  
                         l3323 36EA                           l3067 3024                           l3059 2FF2  
                         l3083 30DE                           l3075 30AE                           l3091 2B36  
                         l3171 1EB2                           l3163 1E70                           l3155 1E06  
                         l3147 1DB8                           l3219 204C                           l3139 1D74  
                         l1483 3226                           l4107 3758                           l4123 3552  
                         l4115 3538                           l4205 365E                           l4125 35C0  
                         l4133 35AA                           l3245 336E                           l3253 3364  
                         l3341 3228                           l4109 3700                           l3501 19B2  
                         l3325 36FA                           l3069 302C                           l3085 30F4  
                         l3077 30C0                           l3093 2B46                           l3181 1F02  
                         l3173 1EC2                           l3165 1E8C                           l3157 1E1E  
                         l3149 1DBC                           l3333 31D2                           l4117 3544  
                         l4141 2D7A                           l4207 3662                           l4135 35B4  
                         l4127 358C                           l3247 33B4                           l3239 32CE  
                         l3351 2F50                           l3343 2EDE                           l3511 19E8  
                         l3503 19B8                           l1399 22D2                           l3431 3140  
                         l3087 30FC                           l3079 30C8                           l1487 3572  
                         l3095 2B56                           l3191 1F68                           l3175 1ED2  
                         l3183 1F04                           l3167 1E90                           l3159 1E28  
                         l3335 31D6                           l3327 3668                           l4119 354A  
                         l4151 2DB8                           l4143 2D7E                           l4209 3664  
                         l4129 3590                           l3345 2EEC                           l3361 2EC2  
                         l3601 1D48                           l3513 19F8                           l3505 19C6  
                         l3425 3112                           l3089 3102                           l3097 2B60  
                         l3193 1F6C                           l3177 1EE0                           l3169 1EA2  
                         l3185 1F22                           l3337 31E4                           l3441 343E  
                         l3433 340A                           l3329 3684                           l4153 2DBA  
                         l4145 2DA2                           l4137 2D44                           l3451 3044  
                         l3347 2F0C                           l3363 2ED4                           l3355 2E62  
                         l3603 1D56                           l3531 1A7A                           l3523 1A42  
                         l3515 19FE                           l3507 19C8                           l3427 3116  
                         l3099 2B7C                           l3195 1F90                           l3187 1F42  
                         l3179 1EE8                           l3339 31FE                           l3443 344C  
                         l3435 3416                           l3371 2498                           l4155 2DC4  
                         l4147 2DAC                           l4139 2D54                           l3461 2CA0  
                         l3453 3054                           l3349 2F3E                           l3357 2E70  
                         l3605 1D58                           l3541 1AC4                           l3533 1A92  
                         l3525 1A4E                           l3517 1A1E                           l3509 19D8  
                         l3621 2822                           l3613 27CE                           l3429 313C  
                         l3197 1FAC                           l3189 1F5A                           l3437 341E  
                         l3381 2546                           l3373 24AA                           l4157 2DC6  
                         l4149 2DAE                           l4501 273A                           l3447 3730  
                         l3711 3600                           l3471 2CE8                           l3463 2CB0  
                         l3455 3062                           l3359 2E90                           l3607 1D5E  
                         l3551 1B1A                           l3543 1AD4                           l3535 1A9E  
                         l3527 1A58                           l3519 1A2E                           l3623 2824  
                         l3615 27E4                           l3199 1FB0                           l3439 3426  
                         l4431 2FB2                           l3375 24AE                           l3367 2430  
                         l3703 29AA                           l4159 2DD0                           l4191 36C6  
                         l4183 36AE                           l4511 275E                           l4503 2742  
                         l3449 3734                           l3713 3602                           l3705 35EE  
                         l3481 2D2C                           l3473 2CF2                           l3465 2CC6  
                         l3721 20C8                           l3457 3072                           l3801 10BC  
                         l3609 1D62                           l3561 1BBE                           l3553 1B36  
                         l3545 1AE0                           l3537 1AAA                           l3529 1A6E  
                         l3625 2834                           l4425 2F68                           l3377 24EC  
                         l3369 244A                           l4441 25A4                           l4433 2584  
                         l4193 36C8                           l4185 36B8                           l4521 2768  
                         l4513 2760                           l4505 2752                           l4195 3640  
                         l3715 3604                           l3707 35F8                           l3475 2D10  
                         l3467 2CCE                           l3731 2154                           l3723 20D0  
                         l3459 307C                           l3811 1172                           l3803 10C8  
                         l3571 1C14                           l3563 1BCC                           l3555 1B42  
                         l3547 1AF0                           l3539 1AB8                           l3491 1976  
                         l3483 194A                           l3651 28B2                           l3635 285E  
                         l3627 2838                           l3619 27F8                           l4427 2F98  
                         l4419 2F5A                           l3379 2506                           l4451 25E4  
                         l4443 25B4                           l4435 2588                           l4187 36BA  
                         l4523 276A                           l4515 2762                           l4507 2756  
                         l4197 3648                           l3709 35FE                           l3717 3690  
                         l3477 2D20                           l3469 2CDA                           l3741 2256  
                         l3725 20EE                           l3733 2156                           l3901 166E  
                         l3821 1208                           l3805 10D2                           l3813 117E  
                         l3573 1C22                           l3565 1BEA                           l3557 1B5E  
                         l3549 1B0A                           l3493 1986                           l3485 1956  
                         l3653 28C2                           l3645 2886                           l3637 2868  
                         l3629 2846                           l3661 229C                           l4429 2F9C  
                         l4461 2622                           l4453 25EC                           l4445 25C0  
                         l4437 2590                           l4189 36C4                           l4525 276E  
                         l4517 2764                           l4509 275A                           l4199 364A  
                         l3479 2D22                           l3743 2268                           l3735 2166  
                         l3727 2110                           l3719 2080                           l3911 16F2  
                         l3903 1672                           l3831 1294                           l3823 1238  
                         l3815 118A                           l3807 110E                           l3583 1C8C  
                         l3591 1CD4                           l3575 1C26                           l3567 1BF4  
                         l3559 1B88                           l3495 1996                           l3487 1964  
                         l3647 2892                           l3639 2872                           l3671 2314  
                         l3663 22E2                           l4471 2652                           l4463 2634  
                         l4455 25F8                           l4447 25C4                           l4439 2598  
                         l4527 27B6                           l4519 2766                           l3737 2236  
                         l3729 2132                           l3921 1772                           l3905 1690  
                         l3913 16F6                           l3833 12A6                           l3841 1352  
                         l3817 1194                           l3809 1142                           l3825 1240  
                         l3761 0E42                           l3593 1CEE                           l3585 1C98  
                         l3577 1C34                           l3569 1C02                           l3497 199C  
                         l3489 1966                           l3649 28A2                           l3681 239C  
                         l3673 2320                           l3665 22F8                           l3657 227E  
                         l3753 3488                           l3745 3456                           l4481 2688  
                         l4473 2660                           l4465 2638                           l4457 2606  
                         l4449 25DC                           l2971 3628                           l3739 2244  
                         l3931 17F2                           l3915 1712                           l3923 1776  
                         l3907 16AE                           l3851 1414                           l3843 135E  
                         l3835 12E2                           l3827 1262                           l3819 11D4  
                         l3771 0E9A                           l3763 0E52                           l3595 1D02  
                         l3587 1CA6                           l3579 1C62                           l3499 19AC  
                         l3691 23DA                           l3683 23A8                           l3675 2352  
                         l3659 228E                           l3755 28D4                           l3747 345A  
                         l4483 2694                           l4475 2672                           l4467 263C  
                         l4459 260A                           l4491 2706                           l3941 1876  
                         l3925 1792                           l3933 17F6                           l3917 172E  
                         l3909 16D0                           l3861 147A                           l3845 1370  
                         l3837 1316                           l3829 1288                           l3781 0F48  
                         l3773 0EC4                           l3853 141C                           l3765 0E5E  
                         l3757 0E1A                           l3597 1D1C                           l3589 1CD0  
                         l3693 23FE                           l3685 23B6                           l3677 2354  
                         l3669 230C                           l2981 2A90                           l2973 2A72  
                         l3749 3462                           l4485 26A0                           l4477 2678  
                         l4469 264E                           l4493 270E                           l3951 18E0  
                         l3935 1814                           l3943 187A                           l3927 17AE  
                         l3919 1750                           l3871 14E6                           l3863 14AA  
                         l3855 142E                           l3847 13B0                           l3839 1346  
                         l3791 1008                           l3783 0F78                           l3775 0EC4  
                         l3767 0E70                           l3759 0E32                           l3599 1D38  
                         l3695 240E                           l3687 23D4                           l3679 2360  
                         l2991 2AC4                           l2983 2A9E                           l2975 2A76  
                         l4559 202A                           l4479 2680                           l4487 26AC  
                         l4495 2716                           l2969 3618                           l3953 1900  
                         l3945 189A                           l3937 1832                           l3929 17D0  
                         l3881 1566                           l3873 14EA                           l3865 14B2  
                         l3857 143A                           l3849 13E4                           l3793 103C  
                         l3777 0ED4                           l3785 0F84                           l3769 0E7C  
                         l3697 241C                           l3689 23D6                           l2993 2ACC  
                         l2985 2AA6                           l2977 2A84                           l3961 2DD4  
                         l4497 272A                           l4489 26C0                           l3955 1920  
                         l3947 18BA                           l3939 1854                           l3891 15EA  
                         l3875 1506                           l3883 156A                           l3867 14C0  
                         l3859 1446                           l3795 106C                           l3787 0F90  
                         l3779 0F14                           l3699 241E                           l2995 2AD4  
                         l2987 2AAA                           l2979 2A8C                           l3971 2E14  
                         l3963 2DD8                           l4499 2732                           l3957 1942  
                         l3949 18DC                           l3885 1588                           l3893 15EE  
                         l3877 1522                           l3869 14D2                           l3789 0FC4  
                         l3797 1074                           l2997 2AE2                           l2989 2AB2  
                         l3973 2E1C                           l3965 2DEE                           l3895 160C  
                         l3887 15A6                           l3879 1544                           l3799 1096  
                         l2999 2AE8                           l3975 2E24                           l3967 2DF6  
                         l3897 162A                           l3889 15C8                           l3969 2E0C  
                         l3977 2E34                           l3899 164C                           l3995 3174  
                         l3979 2E4A                           l3997 31C6                           l3999 33BE  
                         STR_1 0E0F                           STR_2 0E14                           STR_3 0E14  
                         STR_4 0E11                           STR_5 0E01                           STR_6 0E04  
                         u2000 2AC4                           u2001 2AC0                           u2010 2AE2  
                         u2011 2ADE                           u2020 2AFE                           u2100 2FEA  
                         u2021 2AFA                           u2101 2FE6                           u2030 2B24  
                         u2110 3008                           u2031 2B20                           u2111 3004  
                         u3000 241C                           u2040 2C02                           u2120 3024  
                         u2200 3566                           u3001 2418                           u2041 2BFE  
                         u2121 3020                           u2201 3562                           u2210 3506  
                         u2050 2C1C                           u2130 30C0                           u3010 29BC  
                         u2211 34FE                           u2051 2C18                           u2131 30BC  
                         u3011 29B4                           u2060 2C36                           u2140 30DE  
                         u2300 1EC2                           u2061 2C32                           u2141 30DA  
                         u2301 1EBE                           u2070 2C54                           u2150 30F4  
                         u2310 1ED2                           u2230 1DA2                           u3110 2A5E  
                         u3030 29DC                           u2071 2C50                           u2151 30F0  
                         u2311 1ECE                           u2231 1D9E                           u3111 2A56  
                         u3031 29D4                           u3200 10BC                           u2080 2C6A  
                         u2160 2B46                           u2320 1F16                           u2240 1DE6  
                 _BAUD4CONbits 0EE9                           u3201 10B8                           u2081 2C66  
                         u2161 2B42                           u2321 1F12                           u2241 1DE2  
                         u3130 2166                           u3210 1262                           u2090 2C8E  
                         u2170 2B56                           u2330 1F42                           u2250 1E06  
                         u3050 29FC                           u3131 2162                           u3211 125E  
                         u2091 2C8A                           u2171 2B52                           u2331 1F3E  
                         u2251 1E02                           u3051 29F4                           u2228 3508  
                         u3300 1588                           u3220 1288                           u2180 2B7C  
                         u2340 1FC2                           u2260 1E3C                           u2500 321E  
                         u3108 2A3E                           u3028 29BE                           u3140 3484  
                         u3301 1584                           u3221 1284                           u2181 2B78  
                         u2341 1FBE                           u2261 1E36                           u2501 321A  
                         u3141 3480                           u3310 15A6                           u2510 2F0C  
                         u2190 2BAE                           u2350 1FD2                           u2270 1E3E  
                         u3070 2A1E                           u3150 3498                           u3311 15A2  
                         u2511 2F08                           u2191 2BAA                           u2351 1FCE  
                         u3071 2A16                           u3151 3494                           u3400 16D0  
                         u3320 15C8                           u2600 3062                           u2520 2F3E  
                         u3160 0E70                           u2360 2004                           u2280 1EA2  
                         u3128 2A60                           u3048 29DE                           u3401 16CC  
                         u3321 15C4                           u2601 305E                           u2521 2F3A  
                         u3161 0E6C                           u2361 2000                           u2281 1E9E  
                         u3410 16F2                           u3330 15EA                           u2610 309C  
                         u2530 2E90                           u3250 142E                           u3170 0E9A  
                         u2290 1EB2                           u3090 2A3C                           _T2PR 0FBC  
                         u3411 16EE                           u3331 15E6                           u2611 3098  
                         u2531 2E8C                           u3251 142A                           u3235 1296  
                         u3171 0E96                           u2291 1EAE                           u3091 2A34  
                         u2620 2CC6                           u3500 1814                           u3420 1712  
                         u3340 160C                           u3260 1506                           u2540 2EC2  
                         u3180 0EC4                           u2700 19E8                           u3068 29FE  
                         u2621 2CC2                           u3501 1810                           u3421 170E  
                         u3341 1608                           u3261 1502                           u2541 2EBE  
                         u3245 1360                           u3181 0EC0                           u2701 19E4  
                         u2630 2CE8                           u3510 1832                           u3430 172E  
                         u3350 162A                           u3270 1522                           u3190 1096  
                         u2710 1A1E                           u2550 244A                           u2631 2CE4  
                         u3511 182E                           u3431 172A                           u3351 1626  
                         u3271 151E                           u3191 1092                           u2711 1A1A  
                         u2551 2446                           u2640 2D10                           u3520 1854  
                         u3440 1750                           u3360 164C                           u3280 1544  
                         u2800 1CA6                           u2720 1A2E                           u2560 2506  
                         u3600 2DEE                           u3088 2A20                           u2641 2D0C  
                         u3521 1850                           u3441 174C                           u3361 1648  
                         u3281 1540                           u2801 1CA2                           u2721 1A2A  
                         u2561 2502                           u3601 2DEA                           u3530 1876  
                         u3450 1772                           u3370 166E                           u3290 1566  
                         u2810 1CEE                           u2730 1BA8                           u2650 1964  
                         u2490 36FA                           u2570 3138                           u3610 2E0C  
                         u3531 1872                           u3451 176E                           u3371 166A  
                         u3291 1562                           u2811 1CEA                           u2651 1960  
                         u2491 36F6                           u3611 2E08                           u3540 189A  
                         u3460 1792                           u3380 1690                           u2820 1D1C  
                         u2740 1C02                           u2660 1976                           u2900 28B2  
                         u2580 3162                           u3620 2E4A                           u3541 1896  
                         u3461 178E                           u3381 168C                           u2821 1D18  
                         u2741 1BFE                           u2661 1972                           u2901 28AE  
                         u3621 2E46                           u3550 18BA                           u3470 17AE  
                         u3390 16AE                           u2830 1D56                           u2750 1C22  
                         u2670 1986                           u2910 228E                           u2590 3172  
                         u3630 2E60                           u3551 18B6                           u3471 17AA  
                         u3391 16AA                           u2831 1D52                           u2751 1C1E  
                         u2735 1B9E                           u2671 1982                           u2911 228A  
                         u2591 316E                           u3631 2E5C                           u1960 3628  
                         u3560 18DC                           u3480 17D0                           u2760 1C34  
                         u2680 19C6                           u2840 27E4                           u2920 229C  
                         u1961 3624                           u3561 18D8                           u3481 17CC  
                         u2761 1C30                           u2681 19C2                           u2841 27E0  
                         u2921 2298                           u2577 312E                           u1970 363E  
                         u3570 1900                           u3490 17F2                           u2770 1C62  
                         u2690 19D8                           u2850 2818                           u2930 22F8  
                         u1971 363A                           u3571 18FC                           u3491 17EE  
                         u2771 1C5E                           u2691 19D4                           u2931 22F4  
                         u2587 3158                           u3580 1920                           u2780 1C78  
                         u2860 2846                           u2940 234E                           u1980 2A84  
                         u3820 2FB2                           u3581 191C                           u2781 1C74  
                         u2861 2842                           u2941 234A                           u1981 2A80  
                         u3821 2FAE                           u3590 1942                           u2790 1C8C  
                         u2870 285A                           u2950 2398                           u1990 2A9E  
                         u3830 2634                           u3591 193E                           u2791 1C88  
                         u2871 2856                           u2855 280E                           u2951 2394  
                         u1991 2A9A                           u3831 2630                           u2880 2882  
                         u2960 23B6                           u3840 264E                           u2881 287E  
                         u2961 23B2                           u3841 264A                           u2890 28A2  
                         u2970 23C6                           u3850 2672                           u2891 289E  
                         u2971 23C2                           u3851 266E                           u2980 23D4  
                         u3860 26BE                           u3908 27A6                           u2981 23D0  
                         u3861 26BA                           u3917 25CE                           u2990 240E  
                         u3870 2782                           u2991 240A                           u3927 2614  
                         u3871 277A                           u3937 2E2A                           u3890 27A4  
                         u3947 35A0                           u3891 279C                           u3888 2784  
                _colour_to_key 14E6                           abs@a 0007                           _dbuf 0060  
                         _main 26C0                           _prec 0084                           _nout 0080  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005F  
                         _stop 2DD4             _sendRGBCvalSerial4 3174                           prodh 0FF4  
                         prodl 0FF3                 ??_average_RGBC 000F                           start 0042  
           average_RGBC@temp_B 001A             average_RGBC@temp_C 001E             average_RGBC@temp_G 0016  
           average_RGBC@temp_R 0012         __end_of_color_read_Red 32CE                   ___param_bank 0000  
                        ??_ISR 0001            ?_sendRGBCvalSerial4 003A                          ??_abs 0009  
                write_timer@tH 0002                  write_timer@tL 0001                  write_trail@tH 0003  
                write_trail@tL 0001                  ___fltol@sign1 0030                          ?_main 0001  
           _timer_high_pointer 00AC                __end_of___awdiv 2B36                __end_of___awmod 2CA0  
              __end_of___flmul 1D74                __end_of___fltol 28D4                __end_of___lldiv 2D44  
                        ?_stop 0013                ___awdiv@divisor 0003                __end_of___lwdiv 3044  
              __end_of___lwmod 3112                          i2l714 003E                ___awdiv@counter 0005  
                 vfpfcnvrt@cnt 0014                   vfpfcnvrt@fmt 000F                          _TMR0H 0FD4  
                        _TMR0L 0FD3            ___lmul@multiplicand 0005        __end_of_sendCharSerial4 3700  
   __end_of_I2C_2_Master_Start 3758                    _write_timer 372E     __end_of_I2C_2_Master_Write 3722  
                  _write_trail 351E                __end_of_max_RGB 2F5A                __end_of_min_RGB 2EDE  
                  _turningGear 00BE                          _flags 0086           ??_sendRGBCvalSerial4 003B  
                        _fputc 2B36                          _width 0082                          _putch 3760  
               ?_colour_to_key 0001              _turnRight135Delay 00B4                          tablat 0FF5  
              _turnLeft90Delay 00BA                          plusw2 0FDB                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 0FD8  
                        wtemp8 0060                __end_of_sprintf 3456        __end_of_color_read_Blue 33BE  
                average_RGBC@i 0011                  average_RGBC@p 000E          _I2C_2_Master_RepStart 373A  
              ?_color_read_Red 0005                __initialization 349A                   __end_of_main 27CE  
                 __end_of_stop 2E62                         ??_main 005E                         ??_stop 0015  
                __activetblptr 0003                 write_trail@man 0002                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         i2l4381 002C  
                       i2l4383 0036                         i2l4385 003A                         i2l4377 000A  
                       i2l4379 001A                         _RG6PPS 0E88                  vfpfcnvrt@done 0013  
     __end_of_color_click_init 35C0                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 2430               _turnLeft135Delay 00B6                  ??_Timer0_init 0003  
                 ?_reset_timer 0001                   _CCPTMRS0bits 0FAD      sendArrayCharSerial4@index 01A1  
                 vfprintf@cfmt 001F                   convert_HSV@C 0040                   convert_HSV@M 003E  
                       ___lmul 3044                   convert_HSV@m 001A                         ___wmul 3668  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___flmul 0017  
                    ??___fltol 002C                      ??___lldiv 0009                      ??___lwdiv 000B  
                    ??___lwmod 0005           forward_navigation@p1 0057           forward_navigation@p2 0058  
                       clear_0 34C0                         clear_1 34CC           forward_navigation@mL 0055  
         forward_navigation@mR 0056               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                      ??_max_RGB 0003  
                    ??_min_RGB 0003                         fputc@c 0001              _timer_low_pointer 00AA  
         __end_of_average_RGBC 227C                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001                ??_colour_to_key 0003               __end_of_vfprintf 3228  
                       stop@mL 0013                         stop@mR 0014              ??_initDCmotorsPWM 0003  
                    ??_sprintf 002B            convert_HSV@temp_610 0028            convert_HSV@temp_611 002C  
          convert_HSV@temp_612 0030            convert_HSV@temp_613 0034            convert_HSV@temp_614 0020  
          convert_HSV@temp_609 0038                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001              _buggy_lights_init 35C0                     __accesstop 0060  
      __end_of__initialization 34D2       __end_of_color_read_Clear 336E       __end_of_color_read_Green 331E  
       ?_I2C_2_Master_RepStart 0001             ?_buggy_lights_init 0001                  ___rparam_used 0001  
                   ___fltol@f1 0028               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 36CC            ??_buggy_lights_init 0001                  __end_of_fputc 2BF0  
                __end_of_putch 3762            __end_of_Timer0_init 3668     __end_of_forward_navigation 26C0  
                 ?_start_timer 0001                        ??_fputc 0004      __end_of_buggy_lights_init 35EE  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 01A4  
                   _getRGBCval 3228              _color_writetoaddr 368E                   _T2CLKCONbits 0FBF  
           ?_color_writetoaddr 0003                        ?___lmul 0001                        ?___wmul 0001  
        __end_of_wait_for_wall 349A                 ___lmul@product 0009            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                 ?_write_timer 0001                   ?_write_trail 0001                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 36AE             _I2C_2_Master_Start 374E                     _initUSART4 36AE  
           _I2C_2_Master_Write 3716                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 3640        sendStringSerial4@string 0002  
                      ___awdiv 2A72                        ___awmod 2BF0                        ___flmul 194A  
                      ___fltol 27CE                        ___lldiv 2CA0                  convert_HSV@p1 000E  
          ?_I2C_2_Master_Start 0001                  convert_HSV@p2 000F                        ___lwdiv 2FD0  
          ?_I2C_2_Master_Write 0001                        ___lwmod 30AE                      ?_vfprintf 001C  
            wait_for_wall@loss 000E                   __psmallconst 0E00          sendArrayCharSerial4@i 01A2  
                      __pcinit 349A                        __ramtop 0E00                        __ptext0 26C0  
                      __ptext1 36AE                        __ptext2 2D44                        __ptext3 2584  
                      __ptext4 351E                        __ptext5 3456                        __ptext6 29AA  
                      __ptext7 3758                        __ptext8 2DD4                        __ptext9 2430  
                   _read_timer 3700                        _max_RGB 2EDE                        _min_RGB 2E62  
                    _T2CONbits 0FBD                     ??___xxtofl 0005               ___awmod@dividend 0001  
            __end_of_scale_RGB 29AA                      _T2HLTbits 0FBE                        _sprintf 340A  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 34D2  
            _sendHSVvalSerial4 33BE       forward_navigation@timerH 005B       forward_navigation@timerL 005C  
                  ?_getRGBCval 000C                        fputc@fp 0003              ?_color_click_init 0001  
           ?_sendHSVvalSerial4 003A                ___lldiv@divisor 0005                colour_to_key@p1 0001  
              colour_to_key@p2 0002             ??_color_click_init 0005                ___lldiv@counter 000D  
                 _average_RGBC 2080              __end_of_vfpfcnvrt 2080            ??_sendHSVvalSerial4 003B  
         convert_HSV@hue_scale 003C                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0017                     ??_vfprintf 001F                _initDCmotorsPWM 2D44  
           setMotorPWM@negDuty 0012           convert_HSV@sat_scale 0018                   read_timer@tH 0001  
                 read_timer@tL 0002                  ___xxtofl@sign 0009                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0011                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88      __end_of_sendHSVvalSerial4 340A       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 001C                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001                     main@motorL 008E                     main@motorR 0097  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                     _stop_timer 3758  
               __end_of___lmul 30AE                    vfpfcnvrt@ap 0010                    vfpfcnvrt@cp 0016  
                  vfpfcnvrt@fp 000E                 __end_of___wmul 368E                    ?_read_timer 0001  
    sendRGBCvalSerial4@col_val 003A       sendHSVvalSerial4@col_val 003A            color_read_Clear@tmp 000A  
          start_initialization 349A                  ??_convert_HSV 0010                    __end_of_ISR 0042  
                  __end_of_abs 358C               _turnRight90Delay 00B8      sendRGBCvalSerial4@tempStr 003B  
     sendHSVvalSerial4@tempStr 003B          __end_of_colour_to_key 194A             _forward_navigation 2584  
          color_read_Green@tmp 000A            ?_forward_navigation 0055        __end_of_initDCmotorsPWM 2DD4  
                  vfprintf@fmt 001D                       ??___lmul 0009                       ??___wmul 0005  
                  __pdataBANK0 00A8                     scale_RGB@p 0032                 max_RGB@max_val 0005  
         ??_forward_navigation 0059                      ___flmul@a 0013                      ___flmul@b 000F  
                __pcstackBANK0 0088                  __pcstackBANK1 0100            _wall_threshold_blue 00BC  
              convert_HSV@temp 0024   __end_of_sendArrayCharSerial4 2FD0            __end_of_convert_HSV 14E6  
      sendArrayCharSerial4@arr 003A   __end_of_toggle_tricolour_LED 2A72               ___lwdiv@dividend 0007  
                 ?_Timer0_init 0001                    ?_stop_timer 0001                      __pintcode 0008  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___flmul 000F  
                     ?___fltol 0028                       ?___lldiv 0001                       ?___lwdiv 0007  
                     ?___lwmod 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                     ?_max_RGB 0001                       ?_min_RGB 0001                    __smallconst 0E00  
            _I2C_2_Master_Idle 3618              _I2C_2_Master_Init 35EE              _I2C_2_Master_Read 34DC  
            _I2C_2_Master_Stop 3744             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 000F             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B                  _headbuttDelay 00B0       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0020                      _scale_RGB 28D4                      _rampDelay 00C1  
                 ??_getRGBCval 000D              _sendStringSerial4 3112            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
           ?_sendStringSerial4 0002                  ??_reset_timer 0003                      _lost_flag 01A5  
                     _PIR0bits 0E33                       i2u380_40 001A                       i2u380_41 0016  
                     i2u381_40 002C                       i2u381_41 0028                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _returning 01A6  
                    _vfpfcnvrt 1D74      __end_of_I2C_2_Master_Idle 3640      __end_of_I2C_2_Master_Init 3618  
    __end_of_I2C_2_Master_Read 351E              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 374E  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002             __end_of_getRGBCval 327E  
   __end_of_sendRGBCvalSerial4 31D2              ??_color_read_Blue 0007                    _convert_HSV 0E1A  
              main@RGBC_colour 00A0                     vfpfcnvrt@c 001B              ___lmul@multiplier 0001  
                    copy_data0 34AE      __end_of_sendStringSerial4 3174                     ?_scale_RGB 0032  
__end_of_I2C_2_Master_RepStart 3744             color_read_Blue@tmp 000A            __end_of_setMotorPWM 2584  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 001E  
                     __Lrparam 0000                     vfprintf@fp 001C                 wait_for_wall@p 000D  
                 _sample_count 00C2                     ?_vfpfcnvrt 000E            __end_of_reset_timer 372E  
                _wait_for_wall 3456           _sendArrayCharSerial4 2F5A                   ??_read_timer 0003  
               convert_HSV@hue 001E                 convert_HSV@sat 001C                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                  ??_start_timer 0001                     sprintf@fmt 0022  
                   sprintf@ret 002B                       ___xxtofl 227C                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6           _toggle_tricolour_LED 29AA                ___lwdiv@divisor 0009  
           __end_of_initUSART4 36CC                ___lwdiv@counter 000D                       __ptext10 3668  
                     __ptext11 3174                       __ptext20 30AE                       __ptext12 33BE  
                     __ptext21 2FD0                       __ptext13 2F5A                       __ptext30 3700  
                     __ptext22 2BF0                       __ptext14 340A                       __ptext31 0E1A  
                     __ptext23 2A72                       __ptext15 31D2                       __ptext40 331E  
                     __ptext32 2E62                       __ptext24 3112                       __ptext16 1D74  
                     __ptext41 336E                       __ptext33 2EDE                       __ptext25 36E8  
                     __ptext17 2B36                       __ptext50 3618                       __ptext42 373A  
                     __ptext34 3044                       __ptext26 28D4                       __ptext18 3760  
                     __ptext51 35EE                       __ptext43 34DC                       __ptext35 14E6  
                     __ptext27 227C                       __ptext19 3558                       __ptext52 35C0  
                     __ptext44 2CA0                       __ptext36 2080                       __ptext28 27CE  
                     __ptext53 3640                       __ptext45 358C                       __ptext37 3228  
                     __ptext29 194A                       __ptext54 375C                       __ptext46 368E  
                     __ptext38 327E                       __ptext55 3722                       __ptext47 3716  
                     __ptext39 32CE                       __ptext56 372E                       __ptext48 3744  
                     __ptext49 374E                    getRGBCval@p 000C                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA         forward_navigation@mann 005D             __end_of_read_timer 3716  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005F  
                     _vfprintf 31D2                 ?_wait_for_wall 000D          ?_sendArrayCharSerial4 003A  
                     max_RGB@p 0001                       min_RGB@p 0001                     _INTCONbits 0FF2  
        ?_toggle_tricolour_LED 0001                  ??_write_timer 0002                  ??_write_trail 0003  
                  _setMotorPWM 2430                    ??_scale_RGB 0033            __end_of_start_timer 3760  
                     intlevel2 0000                      sprintf@ap 002D                   _topGearRight 00BF  
            _manoeuvre_pointer 00A8               ___lwmod@dividend 0001               ___lldiv@dividend 0001  
             colour_to_key@key 0005                 main@HSV_colour 0088                    _reset_timer 3722  
                 ??_stop_timer 0001                    ??_vfpfcnvrt 0011               _color_click_init 358C  
                  _topGearLeft 00C0                       sprintf@f 002E                       sprintf@s 0020  
                   _SSP2DATPPS 0E1D               ___lldiv@quotient 0009                     _SSP2CLKPPS 0E1C  
              ___lwmod@divisor 0003                ___lwmod@counter 0005                _trail_manoeuvre 01A7  
                  _return_flag 0087             __end_of_stop_timer 375C                _manoeuvre_count 01A4  
                   _TX4STAbits 0EE8                _sendCharSerial4 36E8            __end_of_write_timer 373A  
          __end_of_write_trail 3558    sendArrayCharSerial4@tempStr 0100                  ?_average_RGBC 000E  
